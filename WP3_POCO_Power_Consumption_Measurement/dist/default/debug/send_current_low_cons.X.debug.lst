

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jul 23 09:56:05 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	text0,local,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x620,48
    39                           	dabs	1,0x5BC,52
    40                           	dabs	1,0x238C,0,_buffer
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 1.41
    44                           ; Generated 25/01/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16LF1459 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  039A                     	;# 
   176  039B                     	;# 
   177  0611                     	;# 
   178  0612                     	;# 
   179  0613                     	;# 
   180  0613                     	;# 
   181  0614                     	;# 
   182  0615                     	;# 
   183  0616                     	;# 
   184  0616                     	;# 
   185  0691                     	;# 
   186  0692                     	;# 
   187  0693                     	;# 
   188  0694                     	;# 
   189  0695                     	;# 
   190  0E8E                     	;# 
   191  0E8F                     	;# 
   192  0E90                     	;# 
   193  0E91                     	;# 
   194  0E92                     	;# 
   195  0E93                     	;# 
   196  0E94                     	;# 
   197  0E94                     	;# 
   198  0E95                     	;# 
   199  0E96                     	;# 
   200  0E97                     	;# 
   201  0E98                     	;# 
   202  0E99                     	;# 
   203  0E9A                     	;# 
   204  0E9B                     	;# 
   205  0E9C                     	;# 
   206  0E9D                     	;# 
   207  0E9E                     	;# 
   208  0E9F                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  0111                     	;# 
   267  0112                     	;# 
   268  0113                     	;# 
   269  0114                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0117                     	;# 
   273  0118                     	;# 
   274  0119                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  018E                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  0211                     	;# 
   298  0211                     	;# 
   299  0212                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0391                     	;# 
   313  0392                     	;# 
   314  0393                     	;# 
   315  0394                     	;# 
   316  0395                     	;# 
   317  0396                     	;# 
   318  039A                     	;# 
   319  039B                     	;# 
   320  0611                     	;# 
   321  0612                     	;# 
   322  0613                     	;# 
   323  0613                     	;# 
   324  0614                     	;# 
   325  0615                     	;# 
   326  0616                     	;# 
   327  0616                     	;# 
   328  0691                     	;# 
   329  0692                     	;# 
   330  0693                     	;# 
   331  0694                     	;# 
   332  0695                     	;# 
   333  0E8E                     	;# 
   334  0E8F                     	;# 
   335  0E90                     	;# 
   336  0E91                     	;# 
   337  0E92                     	;# 
   338  0E93                     	;# 
   339  0E94                     	;# 
   340  0E94                     	;# 
   341  0E95                     	;# 
   342  0E96                     	;# 
   343  0E97                     	;# 
   344  0E98                     	;# 
   345  0E99                     	;# 
   346  0E9A                     	;# 
   347  0E9B                     	;# 
   348  0E9C                     	;# 
   349  0E9D                     	;# 
   350  0E9E                     	;# 
   351  0E9F                     	;# 
   352  0FE4                     	;# 
   353  0FE5                     	;# 
   354  0FE6                     	;# 
   355  0FE7                     	;# 
   356  0FE8                     	;# 
   357  0FE9                     	;# 
   358  0FEA                     	;# 
   359  0FEB                     	;# 
   360  0FED                     	;# 
   361  0FEE                     	;# 
   362  0FEF                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0016                     	;# 
   383  0017                     	;# 
   384  0018                     	;# 
   385  0019                     	;# 
   386  001A                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  008C                     	;# 
   390  008D                     	;# 
   391  008E                     	;# 
   392  0091                     	;# 
   393  0092                     	;# 
   394  0095                     	;# 
   395  0096                     	;# 
   396  0097                     	;# 
   397  0098                     	;# 
   398  0099                     	;# 
   399  009A                     	;# 
   400  009B                     	;# 
   401  009B                     	;# 
   402  009C                     	;# 
   403  009D                     	;# 
   404  009E                     	;# 
   405  009F                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010E                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011D                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  018E                     	;# 
   422  0191                     	;# 
   423  0191                     	;# 
   424  0192                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0194                     	;# 
   428  0195                     	;# 
   429  0196                     	;# 
   430  0199                     	;# 
   431  019A                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019C                     	;# 
   435  019D                     	;# 
   436  019E                     	;# 
   437  019F                     	;# 
   438  020C                     	;# 
   439  020D                     	;# 
   440  0211                     	;# 
   441  0211                     	;# 
   442  0212                     	;# 
   443  0212                     	;# 
   444  0213                     	;# 
   445  0213                     	;# 
   446  0214                     	;# 
   447  0214                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0215                     	;# 
   451  0216                     	;# 
   452  0216                     	;# 
   453  0217                     	;# 
   454  0217                     	;# 
   455  0391                     	;# 
   456  0392                     	;# 
   457  0393                     	;# 
   458  0394                     	;# 
   459  0395                     	;# 
   460  0396                     	;# 
   461  039A                     	;# 
   462  039B                     	;# 
   463  0611                     	;# 
   464  0612                     	;# 
   465  0613                     	;# 
   466  0613                     	;# 
   467  0614                     	;# 
   468  0615                     	;# 
   469  0616                     	;# 
   470  0616                     	;# 
   471  0691                     	;# 
   472  0692                     	;# 
   473  0693                     	;# 
   474  0694                     	;# 
   475  0695                     	;# 
   476  0E8E                     	;# 
   477  0E8F                     	;# 
   478  0E90                     	;# 
   479  0E91                     	;# 
   480  0E92                     	;# 
   481  0E93                     	;# 
   482  0E94                     	;# 
   483  0E94                     	;# 
   484  0E95                     	;# 
   485  0E96                     	;# 
   486  0E97                     	;# 
   487  0E98                     	;# 
   488  0E99                     	;# 
   489  0E9A                     	;# 
   490  0E9B                     	;# 
   491  0E9C                     	;# 
   492  0E9D                     	;# 
   493  0E9E                     	;# 
   494  0E9F                     	;# 
   495  0FE4                     	;# 
   496  0FE5                     	;# 
   497  0FE6                     	;# 
   498  0FE7                     	;# 
   499  0FE8                     	;# 
   500  0FE9                     	;# 
   501  0FEA                     	;# 
   502  0FEB                     	;# 
   503  0FED                     	;# 
   504  0FEE                     	;# 
   505  0FEF                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0095                     	;# 
   538  0096                     	;# 
   539  0097                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  009F                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  0111                     	;# 
   553  0112                     	;# 
   554  0113                     	;# 
   555  0114                     	;# 
   556  0115                     	;# 
   557  0116                     	;# 
   558  0117                     	;# 
   559  0118                     	;# 
   560  0119                     	;# 
   561  011D                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564  018E                     	;# 
   565  0191                     	;# 
   566  0191                     	;# 
   567  0192                     	;# 
   568  0193                     	;# 
   569  0193                     	;# 
   570  0194                     	;# 
   571  0195                     	;# 
   572  0196                     	;# 
   573  0199                     	;# 
   574  019A                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019C                     	;# 
   578  019D                     	;# 
   579  019E                     	;# 
   580  019F                     	;# 
   581  020C                     	;# 
   582  020D                     	;# 
   583  0211                     	;# 
   584  0211                     	;# 
   585  0212                     	;# 
   586  0212                     	;# 
   587  0213                     	;# 
   588  0213                     	;# 
   589  0214                     	;# 
   590  0214                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0215                     	;# 
   594  0216                     	;# 
   595  0216                     	;# 
   596  0217                     	;# 
   597  0217                     	;# 
   598  0391                     	;# 
   599  0392                     	;# 
   600  0393                     	;# 
   601  0394                     	;# 
   602  0395                     	;# 
   603  0396                     	;# 
   604  039A                     	;# 
   605  039B                     	;# 
   606  0611                     	;# 
   607  0612                     	;# 
   608  0613                     	;# 
   609  0613                     	;# 
   610  0614                     	;# 
   611  0615                     	;# 
   612  0616                     	;# 
   613  0616                     	;# 
   614  0691                     	;# 
   615  0692                     	;# 
   616  0693                     	;# 
   617  0694                     	;# 
   618  0695                     	;# 
   619  0E8E                     	;# 
   620  0E8F                     	;# 
   621  0E90                     	;# 
   622  0E91                     	;# 
   623  0E92                     	;# 
   624  0E93                     	;# 
   625  0E94                     	;# 
   626  0E94                     	;# 
   627  0E95                     	;# 
   628  0E96                     	;# 
   629  0E97                     	;# 
   630  0E98                     	;# 
   631  0E99                     	;# 
   632  0E9A                     	;# 
   633  0E9B                     	;# 
   634  0E9C                     	;# 
   635  0E9D                     	;# 
   636  0E9E                     	;# 
   637  0E9F                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  000E                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  009F                     	;# 
   692  010C                     	;# 
   693  010D                     	;# 
   694  010E                     	;# 
   695  0111                     	;# 
   696  0112                     	;# 
   697  0113                     	;# 
   698  0114                     	;# 
   699  0115                     	;# 
   700  0116                     	;# 
   701  0117                     	;# 
   702  0118                     	;# 
   703  0119                     	;# 
   704  011D                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0194                     	;# 
   714  0195                     	;# 
   715  0196                     	;# 
   716  0199                     	;# 
   717  019A                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019D                     	;# 
   722  019E                     	;# 
   723  019F                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0391                     	;# 
   742  0392                     	;# 
   743  0393                     	;# 
   744  0394                     	;# 
   745  0395                     	;# 
   746  0396                     	;# 
   747  039A                     	;# 
   748  039B                     	;# 
   749  0611                     	;# 
   750  0612                     	;# 
   751  0613                     	;# 
   752  0613                     	;# 
   753  0614                     	;# 
   754  0615                     	;# 
   755  0616                     	;# 
   756  0616                     	;# 
   757  0691                     	;# 
   758  0692                     	;# 
   759  0693                     	;# 
   760  0694                     	;# 
   761  0695                     	;# 
   762  0E8E                     	;# 
   763  0E8F                     	;# 
   764  0E90                     	;# 
   765  0E91                     	;# 
   766  0E92                     	;# 
   767  0E93                     	;# 
   768  0E94                     	;# 
   769  0E94                     	;# 
   770  0E95                     	;# 
   771  0E96                     	;# 
   772  0E97                     	;# 
   773  0E98                     	;# 
   774  0E99                     	;# 
   775  0E9A                     	;# 
   776  0E9B                     	;# 
   777  0E9C                     	;# 
   778  0E9D                     	;# 
   779  0E9E                     	;# 
   780  0E9F                     	;# 
   781  0FE4                     	;# 
   782  0FE5                     	;# 
   783  0FE6                     	;# 
   784  0FE7                     	;# 
   785  0FE8                     	;# 
   786  0FE9                     	;# 
   787  0FEA                     	;# 
   788  0FEB                     	;# 
   789  0FED                     	;# 
   790  0FEE                     	;# 
   791  0FEF                     	;# 
   792  0000                     	;# 
   793  0001                     	;# 
   794  0002                     	;# 
   795  0003                     	;# 
   796  0004                     	;# 
   797  0005                     	;# 
   798  0006                     	;# 
   799  0007                     	;# 
   800  0008                     	;# 
   801  0009                     	;# 
   802  000A                     	;# 
   803  000B                     	;# 
   804  000C                     	;# 
   805  000D                     	;# 
   806  000E                     	;# 
   807  0011                     	;# 
   808  0012                     	;# 
   809  0015                     	;# 
   810  0016                     	;# 
   811  0016                     	;# 
   812  0017                     	;# 
   813  0018                     	;# 
   814  0019                     	;# 
   815  001A                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  008C                     	;# 
   819  008D                     	;# 
   820  008E                     	;# 
   821  0091                     	;# 
   822  0092                     	;# 
   823  0095                     	;# 
   824  0096                     	;# 
   825  0097                     	;# 
   826  0098                     	;# 
   827  0099                     	;# 
   828  009A                     	;# 
   829  009B                     	;# 
   830  009B                     	;# 
   831  009C                     	;# 
   832  009D                     	;# 
   833  009E                     	;# 
   834  009F                     	;# 
   835  010C                     	;# 
   836  010D                     	;# 
   837  010E                     	;# 
   838  0111                     	;# 
   839  0112                     	;# 
   840  0113                     	;# 
   841  0114                     	;# 
   842  0115                     	;# 
   843  0116                     	;# 
   844  0117                     	;# 
   845  0118                     	;# 
   846  0119                     	;# 
   847  011D                     	;# 
   848  018C                     	;# 
   849  018D                     	;# 
   850  018E                     	;# 
   851  0191                     	;# 
   852  0191                     	;# 
   853  0192                     	;# 
   854  0193                     	;# 
   855  0193                     	;# 
   856  0194                     	;# 
   857  0195                     	;# 
   858  0196                     	;# 
   859  0199                     	;# 
   860  019A                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019C                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019F                     	;# 
   867  020C                     	;# 
   868  020D                     	;# 
   869  0211                     	;# 
   870  0211                     	;# 
   871  0212                     	;# 
   872  0212                     	;# 
   873  0213                     	;# 
   874  0213                     	;# 
   875  0214                     	;# 
   876  0214                     	;# 
   877  0215                     	;# 
   878  0215                     	;# 
   879  0215                     	;# 
   880  0216                     	;# 
   881  0216                     	;# 
   882  0217                     	;# 
   883  0217                     	;# 
   884  0391                     	;# 
   885  0392                     	;# 
   886  0393                     	;# 
   887  0394                     	;# 
   888  0395                     	;# 
   889  0396                     	;# 
   890  039A                     	;# 
   891  039B                     	;# 
   892  0611                     	;# 
   893  0612                     	;# 
   894  0613                     	;# 
   895  0613                     	;# 
   896  0614                     	;# 
   897  0615                     	;# 
   898  0616                     	;# 
   899  0616                     	;# 
   900  0691                     	;# 
   901  0692                     	;# 
   902  0693                     	;# 
   903  0694                     	;# 
   904  0695                     	;# 
   905  0E8E                     	;# 
   906  0E8F                     	;# 
   907  0E90                     	;# 
   908  0E91                     	;# 
   909  0E92                     	;# 
   910  0E93                     	;# 
   911  0E94                     	;# 
   912  0E94                     	;# 
   913  0E95                     	;# 
   914  0E96                     	;# 
   915  0E97                     	;# 
   916  0E98                     	;# 
   917  0E99                     	;# 
   918  0E9A                     	;# 
   919  0E9B                     	;# 
   920  0E9C                     	;# 
   921  0E9D                     	;# 
   922  0E9E                     	;# 
   923  0E9F                     	;# 
   924  0FE4                     	;# 
   925  0FE5                     	;# 
   926  0FE6                     	;# 
   927  0FE7                     	;# 
   928  0FE8                     	;# 
   929  0FE9                     	;# 
   930  0FEA                     	;# 
   931  0FEB                     	;# 
   932  0FED                     	;# 
   933  0FEE                     	;# 
   934  0FEF                     	;_buffer
   935  000B                     _INTCON	set	11
   936  0016                     _TMR1L	set	22
   937  0017                     _TMR1H	set	23
   938  0015                     _TMR0	set	21
   939  000B                     _INTCONbits	set	11
   940  0018                     _T1CONbits	set	24
   941  0011                     _PIR1bits	set	17
   942  008D                     _RCIF	set	141
   943  005A                     _TMR0IF	set	90
   944  0095                     _OPTION_REGbits	set	149
   945  0099                     _OSCCONbits	set	153
   946  008D                     _TRISBbits	set	141
   947  008C                     _TRISAbits	set	140
   948  009E                     _ADCON1bits	set	158
   949  009C                     _ADRESH	set	156
   950  009B                     _ADRESL	set	155
   951  009D                     _ADCON0bits	set	157
   952  0091                     _PIE1bits	set	145
   953  008E                     _TRISCbits	set	142
   954  010D                     _LATBbits	set	269
   955  010C                     _LATAbits	set	268
   956  010E                     _LATCbits	set	270
   957  019B                     _SPBRG	set	411
   958  0199                     _RCREG	set	409
   959  019A                     _TXREG	set	410
   960  019D                     _RCSTAbits	set	413
   961  019F                     _BAUDCONbits	set	415
   962  019E                     _TXSTAbits	set	414
   963  018E                     _ANSELC	set	398
   964  018D                     _ANSELB	set	397
   965  018C                     _ANSELA	set	396
   966  018E                     _ANSELCbits	set	398
   967  0CEC                     _CREN	set	3308
   968  0CE9                     _OERR	set	3305
   969  0CF1                     _TRMT	set	3313
   970  0214                     _SSPSTATbits	set	532
   971  0211                     _SSPBUF	set	529
   972  0215                     _SSPCON1bits	set	533
   973                           
   974                           ; #config settings
   975  0000                     
   976                           	psect	cinit
   977  01E3                     start_initialization:	
   978  01E3                     __initialization:	
   979                           
   980                           ; Clear objects allocated to BIGRAM
   981  01E3  308C               	movlw	low (0+9100)
   982  01E4  0084               	movwf	4
   983  01E5  3023               	movlw	high (0+9100)
   984  01E6  0085               	movwf	5
   985  01E7  3064               	movlw	100
   986  01E8  00FE               	movwf	btemp
   987  01E9  3000               	movlw	0
   988  01EA  00FF               	movwf	btemp+1
   989  01EB  318F  27C5  3181   	fcall	clear_ram0
   990                           
   991                           ; Clear objects allocated to BANK0
   992  01EE  0020               	movlb	0	; select bank0
   993  01EF  01E7               	clrf	__pbssBANK0& (0+127)
   994  01F0  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   995  01F1  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   996  01F2  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   997  01F3  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   998  01F4  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   999  01F5  01ED               	clrf	(__pbssBANK0+6)& (0+127)
  1000  01F6  01EE               	clrf	(__pbssBANK0+7)& (0+127)
  1001                           
  1002                           ; Clear objects allocated to BANK1
  1003  01F7  30A0               	movlw	low __pbssBANK1
  1004  01F8  0084               	movwf	4
  1005  01F9  3000               	movlw	high __pbssBANK1
  1006  01FA  0085               	movwf	5
  1007  01FB  300F               	movlw	15
  1008  01FC  00FE               	movwf	btemp
  1009  01FD  3000               	movlw	0
  1010  01FE  00FF               	movwf	btemp+1
  1011  01FF  318F  27C5  3181   	fcall	clear_ram0
  1012                           
  1013                           ; Clear objects allocated to BANK2
  1014  0202  3020               	movlw	low __pbssBANK2
  1015  0203  0084               	movwf	4
  1016  0204  3001               	movlw	high __pbssBANK2
  1017  0205  0085               	movwf	5
  1018  0206  3050               	movlw	80
  1019  0207  00FE               	movwf	btemp
  1020  0208  3000               	movlw	0
  1021  0209  00FF               	movwf	btemp+1
  1022  020A  318F  27C5         	fcall	clear_ram0
  1023  020C                     end_of_initialization:	
  1024                           ;End of C runtime variable initialization code
  1025                           
  1026  020C                     __end_of__initialization:	
  1027  020C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1028  020D  0020               	movlb	0
  1029  020E  3186  2E60         	ljmp	_main	;jump to C main() function
  1030                           
  1031                           	psect	text0
  1032  0000                     __ptext0:		;BIGRAM
  1033                           
  1034                           	psect	bssBANK0
  1035  0067                     __pbssBANK0:	
  1036  0067                     _ac_value:	
  1037  0067                     	ds	2
  1038  0069                     _cc:	
  1039  0069                     	ds	1
  1040  006A                     _tmrcmpt:	
  1041  006A                     	ds	1
  1042  006B                     _adc_data_index:	
  1043  006B                     	ds	1
  1044  006C                     _TMR_CNT:	
  1045  006C                     	ds	1
  1046  006D                     _MUSHROOM_ON:	
  1047  006D                     	ds	1
  1048  006E                     _SW:	
  1049  006E                     	ds	1
  1050                           
  1051                           	psect	bssBANK1
  1052  00A0                     __pbssBANK1:	
  1053  00A0                     ISR_ROUTINE@F2923:	
  1054  00A0                     	ds	5
  1055  00A5                     _adcUpdate_timestamp:	
  1056  00A5                     	ds	4
  1057  00A9                     _millisecond:	
  1058  00A9                     	ds	4
  1059  00AD                     _errno:	
  1060  00AD                     	ds	2
  1061                           
  1062                           	psect	bssBANK2
  1063  0120                     __pbssBANK2:	
  1064  0120                     _adc_data:	
  1065  0120                     	ds	80
  1066                           
  1067                           	psect	clrtext
  1068  0FC5                     clear_ram0:	
  1069                           ;	Called with FSR0 containing the base address, and
  1070                           ;	btemp/btemp+1 has the size to clear
  1071                           
  1072  0FC5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1073  0FC6                     clrloop0:	
  1074  0FC6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1075  0FC7  3101               	addfsr 0,1
  1076  0FC8  3001               	movlw	1
  1077  0FC9  02FE               	subwf	126,f
  1078  0FCA  3000               	movlw	0
  1079  0FCB  3BFF               	subwfb	127,f
  1080  0FCC  087F               	movf	127,w
  1081  0FCD  047E               	iorwf	126,w
  1082  0FCE  1903               	btfsc	3,2
  1083  0FCF  3400               	retlw	0	;all done for this memory range, return
  1084  0FD0  2FC6               	goto	clrloop0	;have we reached the end yet?
  1085                           
  1086                           	psect	cstackBANK1
  1087  0000                     __pcstackBANK1:	
  1088  0000                     ??_InitApp:	
  1089  0000                     ??_ConfigureOscillator:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0000                     ??_timer_setup_and_start_IE:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0000                     ??_init_adc:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0000                     ??_main:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101                           
  1102                           	psect	cstackCOMMON
  1103  0070                     __pcstackCOMMON:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ?___ftge:	
  1107  0070                     ?_InitApp:	
  1108                           ; 1 bit 
  1109                           
  1110  0070                     ?_SPI_init:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ??_SPI_init:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_nRF_Setup:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_FlushTXRX:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_ConfigureOscillator:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_timer_setup_and_start_IE:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_WriteCommand:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_SPI_transfer:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ??_SPI_transfer:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_ISR_ROUTINE:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_init_adc:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_main:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?i1_InitApp:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??i1_InitApp:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?___ftpack:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?___lmul:	
  1156                           ; 3 bytes @ 0x0
  1157                           
  1158  0070                     ?___lldiv:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161  0070                     SPI_transfer@data:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164  0070                     ___ftpack@arg:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ___ftge@ff1:	
  1168                           ; 3 bytes @ 0x0
  1169                           
  1170  0070                     ___lmul@multiplier:	
  1171                           ; 3 bytes @ 0x0
  1172                           
  1173  0070                     ___lldiv@divisor:	
  1174                           ; 4 bytes @ 0x0
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0x0
  1178  0070                     	ds	1
  1179  0071                     ?_WriteRegister:	
  1180  0071                     ?_WritePayload:	
  1181                           ; 1 bytes @ 0x1
  1182                           
  1183  0071                     ?_WriteAddress:	
  1184                           ; 1 bytes @ 0x1
  1185                           
  1186  0071                     ??_WriteCommand:	
  1187                           ; 1 bytes @ 0x1
  1188                           
  1189  0071                     WriteRegister@val:	
  1190                           ; 1 bytes @ 0x1
  1191                           
  1192  0071                     WriteAddress@num:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195  0071                     WriteCommand@command:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198  0071                     WritePayload@data:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0x1
  1203  0071                     	ds	1
  1204  0072                     ??_WriteRegister:	
  1205  0072                     ??_WritePayload:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0072                     WriteRegister@reg:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     WriteAddress@addr:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0x2
  1216  0072                     	ds	1
  1217  0073                     ??_FlushTXRX:	
  1218  0073                     ??_WriteAddress:	
  1219                           ; 1 bytes @ 0x3
  1220                           
  1221  0073                     WritePayload@num:	
  1222                           ; 1 bytes @ 0x3
  1223                           
  1224  0073                     ___ftpack@exp:	
  1225                           ; 1 bytes @ 0x3
  1226                           
  1227  0073                     ___ftge@ff2:	
  1228                           ; 1 bytes @ 0x3
  1229                           
  1230                           
  1231                           ; 3 bytes @ 0x3
  1232  0073                     	ds	1
  1233  0074                     WriteAddress@reg:	
  1234  0074                     WritePayload@i:	
  1235                           ; 1 bytes @ 0x4
  1236                           
  1237  0074                     ___ftpack@sign:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240  0074                     ___lmul@multiplicand:	
  1241                           ; 1 bytes @ 0x4
  1242                           
  1243  0074                     ___lldiv@dividend:	
  1244                           ; 4 bytes @ 0x4
  1245                           
  1246                           
  1247                           ; 4 bytes @ 0x4
  1248  0074                     	ds	1
  1249  0075                     ??___ftpack:	
  1250  0075                     WriteAddress@i:	
  1251                           ; 1 bytes @ 0x5
  1252                           
  1253                           
  1254                           ; 2 bytes @ 0x5
  1255  0075                     	ds	1
  1256  0076                     ??___ftge:	
  1257                           
  1258                           ; 1 bytes @ 0x6
  1259  0076                     	ds	1
  1260  0077                     ??_nRF_Setup:	
  1261                           
  1262                           ; 1 bytes @ 0x7
  1263  0077                     	ds	1
  1264  0078                     ??___lmul:	
  1265  0078                     ??___lldiv:	
  1266                           ; 1 bytes @ 0x8
  1267                           
  1268  0078                     ?___ftadd:	
  1269                           ; 1 bytes @ 0x8
  1270                           
  1271  0078                     ?___ftmul:	
  1272                           ; 3 bytes @ 0x8
  1273                           
  1274  0078                     ?___lltoft:	
  1275                           ; 3 bytes @ 0x8
  1276                           
  1277  0078                     ___ftadd@f1:	
  1278                           ; 3 bytes @ 0x8
  1279                           
  1280  0078                     ___ftmul@f1:	
  1281                           ; 3 bytes @ 0x8
  1282                           
  1283  0078                     ___lmul@product:	
  1284                           ; 3 bytes @ 0x8
  1285                           
  1286  0078                     ___lltoft@c:	
  1287                           ; 4 bytes @ 0x8
  1288                           
  1289                           
  1290                           ; 4 bytes @ 0x8
  1291  0078                     	ds	1
  1292  0079                     ___lldiv@quotient:	
  1293  0079                     nRF_Setup@RXTX_ADDR:	
  1294                           ; 4 bytes @ 0x9
  1295                           
  1296                           
  1297                           ; 5 bytes @ 0x9
  1298  0079                     	ds	2
  1299  007B                     ___ftadd@f2:	
  1300  007B                     ___ftmul@f2:	
  1301                           ; 3 bytes @ 0xB
  1302                           
  1303                           
  1304                           ; 3 bytes @ 0xB
  1305  007B                     	ds	1
  1306  007C                     ??___lltoft:	
  1307                           
  1308                           ; 1 bytes @ 0xC
  1309  007C                     	ds	1
  1310  007D                     ___lldiv@counter:	
  1311  007D                     ___lltoft@exp:	
  1312                           ; 1 bytes @ 0xD
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0xD
  1316  007D                     	ds	1
  1317  007E                     ??___ftsub:	
  1318                           
  1319                           	psect	cstackBANK0
  1320  0020                     __pcstackBANK0:	
  1321                           ; 1 bytes @ 0xE
  1322                           
  1323  0020                     ??___ftadd:	
  1324  0020                     ??___ftmul:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327                           
  1328                           ; 1 bytes @ 0x0
  1329  0020                     	ds	4
  1330  0024                     ___ftadd@sign:	
  1331  0024                     ___ftmul@exp:	
  1332                           ; 1 bytes @ 0x4
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0x4
  1336  0024                     	ds	1
  1337  0025                     ___ftadd@exp2:	
  1338  0025                     ___ftmul@f3_as_product:	
  1339                           ; 1 bytes @ 0x5
  1340                           
  1341                           
  1342                           ; 3 bytes @ 0x5
  1343  0025                     	ds	1
  1344  0026                     ___ftadd@exp1:	
  1345                           
  1346                           ; 1 bytes @ 0x6
  1347  0026                     	ds	1
  1348  0027                     ?___ftsub:	
  1349  0027                     ___ftsub@f2:	
  1350                           ; 3 bytes @ 0x7
  1351                           
  1352                           
  1353                           ; 3 bytes @ 0x7
  1354  0027                     	ds	1
  1355  0028                     ___ftmul@cntr:	
  1356                           
  1357                           ; 1 bytes @ 0x8
  1358  0028                     	ds	1
  1359  0029                     ___ftmul@sign:	
  1360                           
  1361                           ; 1 bytes @ 0x9
  1362  0029                     	ds	1
  1363  002A                     ___ftsub@f1:	
  1364                           
  1365                           ; 3 bytes @ 0xA
  1366  002A                     	ds	3
  1367  002D                     ?_sqrt:	
  1368  002D                     sqrt@a:	
  1369                           ; 3 bytes @ 0xD
  1370                           
  1371                           
  1372                           ; 3 bytes @ 0xD
  1373  002D                     	ds	3
  1374  0030                     ??_sqrt:	
  1375                           
  1376                           ; 1 bytes @ 0x10
  1377  0030                     	ds	3
  1378  0033                     sqrt@og:	
  1379                           
  1380                           ; 3 bytes @ 0x13
  1381  0033                     	ds	3
  1382  0036                     sqrt@z:	
  1383                           
  1384                           ; 3 bytes @ 0x16
  1385  0036                     	ds	3
  1386  0039                     sqrt@i:	
  1387                           
  1388                           ; 1 bytes @ 0x19
  1389  0039                     	ds	1
  1390  003A                     sqrt@q:	
  1391                           
  1392                           ; 3 bytes @ 0x1A
  1393  003A                     	ds	3
  1394  003D                     sqrt@x:	
  1395                           
  1396                           ; 3 bytes @ 0x1D
  1397  003D                     	ds	3
  1398  0040                     ?___fttol:	
  1399  0040                     ___fttol@f1:	
  1400                           ; 4 bytes @ 0x20
  1401                           
  1402                           
  1403                           ; 3 bytes @ 0x20
  1404  0040                     	ds	4
  1405  0044                     ??___fttol:	
  1406                           
  1407                           ; 1 bytes @ 0x24
  1408  0044                     	ds	4
  1409  0048                     ___fttol@sign1:	
  1410                           
  1411                           ; 1 bytes @ 0x28
  1412  0048                     	ds	1
  1413  0049                     ___fttol@lval:	
  1414                           
  1415                           ; 4 bytes @ 0x29
  1416  0049                     	ds	4
  1417  004D                     ___fttol@exp1:	
  1418                           
  1419                           ; 1 bytes @ 0x2D
  1420  004D                     	ds	1
  1421  004E                     ??_ISR_ROUTINE:	
  1422                           
  1423                           ; 1 bytes @ 0x2E
  1424  004E                     	ds	9
  1425  0057                     ISR_ROUTINE@data:	
  1426                           
  1427                           ; 5 bytes @ 0x37
  1428  0057                     	ds	5
  1429  005C                     ISR_ROUTINE@adc_lo:	
  1430                           
  1431                           ; 1 bytes @ 0x3C
  1432  005C                     	ds	1
  1433  005D                     ISR_ROUTINE@adc_hi:	
  1434                           
  1435                           ; 1 bytes @ 0x3D
  1436  005D                     	ds	1
  1437  005E                     ISR_ROUTINE@adc_filter_val:	
  1438                           
  1439                           ; 4 bytes @ 0x3E
  1440  005E                     	ds	4
  1441  0062                     ISR_ROUTINE@dc_filter_val:	
  1442                           
  1443                           ; 4 bytes @ 0x42
  1444  0062                     	ds	4
  1445  0066                     ISR_ROUTINE@i:	
  1446                           
  1447                           ; 1 bytes @ 0x46
  1448  0066                     	ds	1
  1449                           
  1450                           	psect	maintext
  1451  0660                     __pmaintext:	
  1452 ;;
  1453 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1454 ;;
  1455 ;; *************** function _main *****************
  1456 ;; Defined at:
  1457 ;;		line 222 in file "send_current_low_cons.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : B1F/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels required when called:    6
  1477 ;; This function calls:
  1478 ;;		_ConfigureOscillator
  1479 ;;		_InitApp
  1480 ;;		_init_adc
  1481 ;;		_timer_setup_and_start_IE
  1482 ;; This function is called by:
  1483 ;;		Startup code after reset
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _main
  1489  0660                     _main:	
  1490                           
  1491                           ;send_current_low_cons.c: 224: ConfigureOscillator();
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1495  0660  318F  27BB  3186   	fcall	_ConfigureOscillator
  1496                           
  1497                           ;send_current_low_cons.c: 225: InitApp();
  1498  0663  3187  27D4  3186   	fcall	_InitApp
  1499                           
  1500                           ;send_current_low_cons.c: 226: timer_setup_and_start_IE();
  1501  0666  3187  277E  3186   	fcall	_timer_setup_and_start_IE
  1502                           
  1503                           ;send_current_low_cons.c: 227: init_adc();
  1504  0669  318F  27EF  3186   	fcall	_init_adc
  1505  066C                     l2205:	
  1506                           ;send_current_low_cons.c: 230: while(1)
  1507                           
  1508                           
  1509                           ;send_current_low_cons.c: 231: {
  1510                           ;send_current_low_cons.c: 232: TRISCbits.TRISC0 = 0;
  1511  066C  0021               	movlb	1	; select bank1
  1512  066D  100E               	bcf	14,0	;volatile
  1513                           
  1514                           ;send_current_low_cons.c: 233: LATCbits.LATC0 = 0;
  1515  066E  0022               	movlb	2	; select bank2
  1516  066F  100E               	bcf	14,0	;volatile
  1517                           
  1518                           ;send_current_low_cons.c: 234: TRISCbits.TRISC1 = 0;
  1519  0670  0021               	movlb	1	; select bank1
  1520  0671  108E               	bcf	14,1	;volatile
  1521                           
  1522                           ;send_current_low_cons.c: 235: LATCbits.LATC1 = 0;
  1523  0672  0022               	movlb	2	; select bank2
  1524  0673  108E               	bcf	14,1	;volatile
  1525                           
  1526                           ;send_current_low_cons.c: 236: TRISCbits.TRISC2 = 0;
  1527  0674  0021               	movlb	1	; select bank1
  1528  0675  110E               	bcf	14,2	;volatile
  1529                           
  1530                           ;send_current_low_cons.c: 237: LATCbits.LATC2 = 0;
  1531  0676  0022               	movlb	2	; select bank2
  1532  0677  110E               	bcf	14,2	;volatile
  1533                           
  1534                           ;send_current_low_cons.c: 238: TRISCbits.TRISC3 = 0;
  1535  0678  0021               	movlb	1	; select bank1
  1536  0679  118E               	bcf	14,3	;volatile
  1537                           
  1538                           ;send_current_low_cons.c: 239: LATCbits.LATC3 = 0;
  1539  067A  0022               	movlb	2	; select bank2
  1540  067B  118E               	bcf	14,3	;volatile
  1541                           
  1542                           ;send_current_low_cons.c: 240: TRISCbits.TRISC4 = 0;
  1543  067C  0021               	movlb	1	; select bank1
  1544  067D  120E               	bcf	14,4	;volatile
  1545                           
  1546                           ;send_current_low_cons.c: 241: LATCbits.LATC4 = 0;
  1547  067E  0022               	movlb	2	; select bank2
  1548  067F  120E               	bcf	14,4	;volatile
  1549                           
  1550                           ;send_current_low_cons.c: 242: TRISCbits.TRISC5 = 0;
  1551  0680  0021               	movlb	1	; select bank1
  1552  0681  128E               	bcf	14,5	;volatile
  1553                           
  1554                           ;send_current_low_cons.c: 243: LATCbits.LATC5 = 0;
  1555  0682  0022               	movlb	2	; select bank2
  1556  0683  128E               	bcf	14,5	;volatile
  1557                           
  1558                           ;send_current_low_cons.c: 244: TRISCbits.TRISC6 = 0;
  1559  0684  0021               	movlb	1	; select bank1
  1560  0685  130E               	bcf	14,6	;volatile
  1561                           
  1562                           ;send_current_low_cons.c: 245: LATCbits.LATC6 = 0;
  1563  0686  0022               	movlb	2	; select bank2
  1564  0687  130E               	bcf	14,6	;volatile
  1565                           
  1566                           ;send_current_low_cons.c: 246: TRISCbits.TRISC7 = 0;
  1567  0688  0021               	movlb	1	; select bank1
  1568  0689  138E               	bcf	14,7	;volatile
  1569                           
  1570                           ;send_current_low_cons.c: 247: LATCbits.LATC7 = 0;
  1571  068A  0022               	movlb	2	; select bank2
  1572  068B  138E               	bcf	14,7	;volatile
  1573                           
  1574                           ;send_current_low_cons.c: 249: TRISAbits.TRISA5 = 0;
  1575  068C  0021               	movlb	1	; select bank1
  1576  068D  128C               	bcf	12,5	;volatile
  1577                           
  1578                           ;send_current_low_cons.c: 250: LATAbits.LATA5 = 0;
  1579  068E  0022               	movlb	2	; select bank2
  1580  068F  128C               	bcf	12,5	;volatile
  1581                           
  1582                           ;send_current_low_cons.c: 251: TRISAbits.TRISA4 = 0;
  1583  0690  0021               	movlb	1	; select bank1
  1584  0691  120C               	bcf	12,4	;volatile
  1585                           
  1586                           ;send_current_low_cons.c: 252: LATAbits.LATA4 = 0;
  1587  0692  0022               	movlb	2	; select bank2
  1588  0693  120C               	bcf	12,4	;volatile
  1589                           
  1590                           ;send_current_low_cons.c: 254: TRISBbits.TRISB4 = 0;
  1591  0694  0021               	movlb	1	; select bank1
  1592  0695  120D               	bcf	13,4	;volatile
  1593                           
  1594                           ;send_current_low_cons.c: 255: LATBbits.LATB4 = 0;
  1595  0696  0022               	movlb	2	; select bank2
  1596  0697  120D               	bcf	13,4	;volatile
  1597                           
  1598                           ;send_current_low_cons.c: 256: TRISBbits.TRISB5 = 1;
  1599  0698  0021               	movlb	1	; select bank1
  1600  0699  168D               	bsf	13,5	;volatile
  1601                           
  1602                           ;send_current_low_cons.c: 257: TRISBbits.TRISB6 = 0;
  1603  069A  130D               	bcf	13,6	;volatile
  1604                           
  1605                           ;send_current_low_cons.c: 258: LATBbits.LATB6 = 0;
  1606  069B  0022               	movlb	2	; select bank2
  1607  069C  130D               	bcf	13,6	;volatile
  1608                           
  1609                           ;send_current_low_cons.c: 259: TRISBbits.TRISB7 = 1;
  1610  069D  0021               	movlb	1	; select bank1
  1611  069E  178D               	bsf	13,7	;volatile
  1612  069F  0063               	sleep	;# 
  1613  06A0  2E6C               	goto	l2205
  1614  06A1                     __end_of_main:	
  1615                           
  1616                           	psect	text1
  1617  077E                     __ptext1:	
  1618 ;; *************** function _timer_setup_and_start_IE *****************
  1619 ;; Defined at:
  1620 ;;		line 46 in file "user.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    5
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _timer_setup_and_start_IE
  1650  077E                     _timer_setup_and_start_IE:	
  1651                           
  1652                           ;user.c: 49: T1CONbits.TMR1ON = 0;
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _timer_setup_and_start_IE: [wreg+status,2+status,0]
  1656  077E  0020               	movlb	0	; select bank0
  1657  077F  1018               	bcf	24,0	;volatile
  1658                           
  1659                           ;user.c: 50: T1CONbits.nT1SYNC = 1;
  1660  0780  1518               	bsf	24,2	;volatile
  1661                           
  1662                           ;user.c: 51: T1CONbits.T1OSCEN = 0;
  1663  0781  1198               	bcf	24,3	;volatile
  1664                           
  1665                           ;user.c: 52: T1CONbits.T1CKPS = 0b11;
  1666  0782  3030               	movlw	48
  1667  0783  0498               	iorwf	24,f	;volatile
  1668                           
  1669                           ;user.c: 53: T1CONbits.TMR1CS = 0b11;
  1670  0784  30C0               	movlw	192
  1671  0785  0498               	iorwf	24,f	;volatile
  1672                           
  1673                           ;user.c: 54: TMR1H = 0x69;
  1674  0786  3069               	movlw	105
  1675  0787  0097               	movwf	23	;volatile
  1676                           
  1677                           ;user.c: 55: TMR1L = 0x00;
  1678  0788  0196               	clrf	22	;volatile
  1679                           
  1680                           ;user.c: 56: TMR_CNT = 0;
  1681  0789  01EC               	clrf	_TMR_CNT
  1682                           
  1683                           ;user.c: 58: T1CONbits.TMR1ON = 1;
  1684  078A  1418               	bsf	24,0	;volatile
  1685                           
  1686                           ;user.c: 60: PIR1bits.TMR1IF = 0;
  1687  078B  1011               	bcf	17,0	;volatile
  1688                           
  1689                           ;user.c: 62: INTCON = 0x00;
  1690  078C  018B               	clrf	11	;volatile
  1691                           
  1692                           ;user.c: 63: INTCONbits.PEIE = 1;
  1693  078D  170B               	bsf	11,6	;volatile
  1694                           
  1695                           ;user.c: 64: INTCONbits.GIE = 1;
  1696  078E  178B               	bsf	11,7	;volatile
  1697                           
  1698                           ;user.c: 65: PIE1bits.TMR1IE = 1;
  1699  078F  0021               	movlb	1	; select bank1
  1700  0790  1411               	bsf	17,0	;volatile
  1701                           
  1702                           ;user.c: 71: OPTION_REGbits.INTEDG = 1;
  1703  0791  1715               	bsf	21,6	;volatile
  1704                           
  1705                           ;user.c: 72: OPTION_REGbits.nWPUEN=1;
  1706  0792  1795               	bsf	21,7	;volatile
  1707                           
  1708                           ;user.c: 73: OPTION_REGbits.TMR0CS=0;
  1709  0793  1295               	bcf	21,5	;volatile
  1710                           
  1711                           ;user.c: 74: OPTION_REGbits.TMR0SE=0;
  1712  0794  1215               	bcf	21,4	;volatile
  1713                           
  1714                           ;user.c: 75: OPTION_REGbits.PSA=0;
  1715  0795  1195               	bcf	21,3	;volatile
  1716                           
  1717                           ;user.c: 76: OPTION_REGbits.PS0=0;
  1718  0796  1015               	bcf	21,0	;volatile
  1719                           
  1720                           ;user.c: 77: OPTION_REGbits.PS1=1;
  1721  0797  1495               	bsf	21,1	;volatile
  1722                           
  1723                           ;user.c: 78: OPTION_REGbits.PS2=0;
  1724  0798  1115               	bcf	21,2	;volatile
  1725                           
  1726                           ;user.c: 81: TMR0 = 0x83;
  1727  0799  3083               	movlw	131
  1728  079A  0020               	movlb	0	; select bank0
  1729  079B  0095               	movwf	21	;volatile
  1730                           
  1731                           ;user.c: 83: INTCONbits.GIE = 1;
  1732  079C  178B               	bsf	11,7	;volatile
  1733                           
  1734                           ;user.c: 84: INTCONbits.TMR0IE = 0;
  1735  079D  128B               	bcf	11,5	;volatile
  1736  079E  0008               	return
  1737  079F                     __end_of_timer_setup_and_start_IE:	
  1738                           
  1739                           	psect	text2
  1740  0FEF                     __ptext2:	
  1741 ;; *************** function _init_adc *****************
  1742 ;; Defined at:
  1743 ;;		line 180 in file "send_current_low_cons.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		status,2
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    5
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _init_adc
  1773  0FEF                     _init_adc:	
  1774                           
  1775                           ;send_current_low_cons.c: 184: ADRESH=0x00;
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _init_adc: [status,2]
  1779  0FEF  0021               	movlb	1	; select bank1
  1780  0FF0  019C               	clrf	28	;volatile
  1781                           
  1782                           ;send_current_low_cons.c: 185: ADRESL=0x00;
  1783  0FF1  019B               	clrf	27	;volatile
  1784                           
  1785                           ;send_current_low_cons.c: 189: ADCON1bits.ADCS0=1;
  1786  0FF2  161E               	bsf	30,4	;volatile
  1787                           
  1788                           ;send_current_low_cons.c: 190: ADCON1bits.ADCS1=0;
  1789  0FF3  129E               	bcf	30,5	;volatile
  1790                           
  1791                           ;send_current_low_cons.c: 191: ADCON1bits.ADCS2=1;
  1792  0FF4  171E               	bsf	30,6	;volatile
  1793                           
  1794                           ;send_current_low_cons.c: 195: ADCON0bits.CHS0=1;
  1795  0FF5  151D               	bsf	29,2	;volatile
  1796                           
  1797                           ;send_current_low_cons.c: 196: ADCON0bits.CHS1=1;
  1798  0FF6  159D               	bsf	29,3	;volatile
  1799                           
  1800                           ;send_current_low_cons.c: 197: ADCON0bits.CHS2=1;
  1801  0FF7  161D               	bsf	29,4	;volatile
  1802                           
  1803                           ;send_current_low_cons.c: 198: ADCON0bits.CHS3=0;
  1804  0FF8  129D               	bcf	29,5	;volatile
  1805                           
  1806                           ;send_current_low_cons.c: 199: ADCON0bits.CHS4=0;
  1807  0FF9  131D               	bcf	29,6	;volatile
  1808                           
  1809                           ;send_current_low_cons.c: 203: ADCON1bits.ADFM=1;
  1810  0FFA  179E               	bsf	30,7	;volatile
  1811                           
  1812                           ;send_current_low_cons.c: 207: ADCON1bits.ADPREF0=0;
  1813  0FFB  101E               	bcf	30,0	;volatile
  1814                           
  1815                           ;send_current_low_cons.c: 208: ADCON1bits.ADPREF1=0;
  1816  0FFC  109E               	bcf	30,1	;volatile
  1817                           
  1818                           ;send_current_low_cons.c: 212: ADCON0bits.GO_nDONE=1;
  1819  0FFD  149D               	bsf	29,1	;volatile
  1820                           
  1821                           ;send_current_low_cons.c: 216: ADCON0bits.ADON=1;
  1822  0FFE  141D               	bsf	29,0	;volatile
  1823  0FFF  0008               	return
  1824  1000                     __end_of_init_adc:	
  1825                           
  1826                           	psect	text3
  1827  07D4                     __ptext3:	
  1828 ;; *************** function _InitApp *****************
  1829 ;; Defined at:
  1830 ;;		line 21 in file "user.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		status,2
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    5
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _InitApp
  1860  07D4                     _InitApp:	
  1861                           
  1862                           ;user.c: 24: ANSELA = 0x00;
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _InitApp: [status,2]
  1866  07D4  0023               	movlb	3	; select bank3
  1867  07D5  018C               	clrf	12	;volatile
  1868                           
  1869                           ;user.c: 25: ANSELB = 0x00;
  1870  07D6  018D               	clrf	13	;volatile
  1871                           
  1872                           ;user.c: 26: ANSELC = 0x00;
  1873  07D7  018E               	clrf	14	;volatile
  1874                           
  1875                           ;user.c: 28: TRISCbits.TRISC0 = 0;
  1876  07D8  0021               	movlb	1	; select bank1
  1877  07D9  100E               	bcf	14,0	;volatile
  1878                           
  1879                           ;user.c: 29: TRISCbits.TRISC1 = 0;
  1880  07DA  108E               	bcf	14,1	;volatile
  1881                           
  1882                           ;user.c: 30: TRISCbits.TRISC2 = 0;
  1883  07DB  110E               	bcf	14,2	;volatile
  1884                           
  1885                           ;user.c: 31: TRISCbits.TRISC3= 0;
  1886  07DC  118E               	bcf	14,3	;volatile
  1887                           
  1888                           ;user.c: 32: TRISCbits.TRISC4 = 0;
  1889  07DD  120E               	bcf	14,4	;volatile
  1890                           
  1891                           ;user.c: 33: TRISCbits.TRISC5 = 0;
  1892  07DE  128E               	bcf	14,5	;volatile
  1893                           
  1894                           ;user.c: 34: TRISCbits.TRISC6 = 0;
  1895  07DF  130E               	bcf	14,6	;volatile
  1896                           
  1897                           ;user.c: 35: TRISCbits.TRISC7 = 0;
  1898  07E0  138E               	bcf	14,7	;volatile
  1899                           
  1900                           ;user.c: 37: TRISAbits.TRISA5 = 0;
  1901  07E1  128C               	bcf	12,5	;volatile
  1902                           
  1903                           ;user.c: 38: TRISAbits.TRISA4 = 0;
  1904  07E2  120C               	bcf	12,4	;volatile
  1905                           
  1906                           ;user.c: 40: TRISBbits.TRISB4 = 0;
  1907  07E3  120D               	bcf	13,4	;volatile
  1908                           
  1909                           ;user.c: 41: TRISBbits.TRISB5 = 0;
  1910  07E4  128D               	bcf	13,5	;volatile
  1911                           
  1912                           ;user.c: 42: TRISBbits.TRISB6 = 0;
  1913  07E5  130D               	bcf	13,6	;volatile
  1914                           
  1915                           ;user.c: 43: TRISBbits.TRISB7 = 0;
  1916  07E6  138D               	bcf	13,7	;volatile
  1917  07E7  0008               	return
  1918  07E8                     __end_of_InitApp:	
  1919                           
  1920                           	psect	text4
  1921  0FBB                     __ptext4:	
  1922 ;; *************** function _ConfigureOscillator *****************
  1923 ;; Defined at:
  1924 ;;		line 18 in file "system.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    5
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           
  1953                           ;psect for function _ConfigureOscillator
  1954  0FBB                     _ConfigureOscillator:	
  1955                           
  1956                           ;system.c: 20: OSCCONbits.IRCF = 0b1110;
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  1960  0FBB  0021               	movlb	1	; select bank1
  1961  0FBC  0819               	movf	25,w	;volatile
  1962  0FBD  39C3               	andlw	-61
  1963  0FBE  3838               	iorlw	56
  1964  0FBF  0099               	movwf	25	;volatile
  1965                           
  1966                           ;system.c: 36: OSCCONbits.SCS = 0b00;
  1967  0FC0  30FC               	movlw	-4
  1968  0FC1  0599               	andwf	25,f	;volatile
  1969                           
  1970                           ;system.c: 41: OSCCONbits.SPLLMULT = 0b1;
  1971  0FC2  1719               	bsf	25,6	;volatile
  1972                           
  1973                           ;system.c: 45: OSCCONbits.SPLLEN = 0b0;
  1974  0FC3  1399               	bcf	25,7	;volatile
  1975  0FC4  0008               	return
  1976  0FC5                     __end_of_ConfigureOscillator:	
  1977                           
  1978                           	psect	intentry
  1979  0004                     __pintentry:	
  1980 ;; *************** function _ISR_ROUTINE *****************
  1981 ;; Defined at:
  1982 ;;		line 70 in file "send_current_low_cons.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  adc_hi          1   61[BANK0 ] unsigned char 
  1987 ;;  adc_lo          1   60[BANK0 ] unsigned char 
  1988 ;;  data            5   55[BANK0 ] unsigned char [5]
  1989 ;;  dc_filter_va    4   66[BANK0 ] unsigned long 
  1990 ;;  adc_filter_v    4   62[BANK0 ] unsigned long 
  1991 ;;  i               1   70[BANK0 ] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;Total ram usage:       25 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    4
  2008 ;; This function calls:
  2009 ;;		_FlushTXRX
  2010 ;;		_SPI_init
  2011 ;;		_WritePayload
  2012 ;;		_WriteRegister
  2013 ;;		___fttol
  2014 ;;		___lldiv
  2015 ;;		___lltoft
  2016 ;;		___lmul
  2017 ;;		_nRF_Setup
  2018 ;;		_sqrt
  2019 ;;		i1_InitApp
  2020 ;; This function is called by:
  2021 ;;		Interrupt level 1
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025  0004                     _ISR_ROUTINE:	
  2026                           
  2027                           ;incstack = 0
  2028  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2029                           
  2030                           ; Regs used in _ISR_ROUTINE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2031  0005  3180               	pagesel	$
  2032  0006  0020               	movlb	0	; select bank0
  2033  0007  087F               	movf	127,w
  2034  0008  00D6               	movwf	??_ISR_ROUTINE+8
  2035                           
  2036                           ;send_current_low_cons.c: 73: InitApp();
  2037  0009  3187  27E8  3180   	fcall	i1_InitApp
  2038                           
  2039                           ;send_current_low_cons.c: 74: TRISCbits.TRISC3=1;
  2040  000C  0021               	movlb	1	; select bank1
  2041  000D  158E               	bsf	14,3	;volatile
  2042                           
  2043                           ;send_current_low_cons.c: 75: ANSELCbits.ANSC3=1;
  2044  000E  0023               	movlb	3	; select bank3
  2045  000F  158E               	bsf	14,3	;volatile
  2046                           
  2047                           ;send_current_low_cons.c: 79: if(PIR1bits.TMR1IF)
  2048  0010  0020               	movlb	0	; select bank0
  2049  0011  1C11               	btfss	17,0	;volatile
  2050  0012  29DD               	goto	i1l94
  2051                           
  2052                           ;send_current_low_cons.c: 80: {
  2053                           ;send_current_low_cons.c: 81: PIR1bits.TMR1IF = 0;
  2054  0013  1011               	bcf	17,0	;volatile
  2055                           
  2056                           ;send_current_low_cons.c: 82: T1CONbits.TMR1ON = 0;
  2057  0014  1018               	bcf	24,0	;volatile
  2058                           
  2059                           ;send_current_low_cons.c: 85: PIE1bits.TMR1IE = 0;
  2060  0015  0021               	movlb	1	; select bank1
  2061  0016  1011               	bcf	17,0	;volatile
  2062                           
  2063                           ;send_current_low_cons.c: 87: tmrcmpt++;
  2064  0017  3001               	movlw	1
  2065  0018  0020               	movlb	0	; select bank0
  2066  0019  00CE               	movwf	??_ISR_ROUTINE
  2067  001A  084E               	movf	??_ISR_ROUTINE,w
  2068  001B  07EA               	addwf	_tmrcmpt,f
  2069                           
  2070                           ;send_current_low_cons.c: 88: if (tmrcmpt==6)
  2071  001C  3006               	movlw	6
  2072  001D  066A               	xorwf	_tmrcmpt,w
  2073  001E  1D03               	btfss	3,2
  2074  001F  29D1               	goto	i1l2187
  2075                           
  2076                           ;send_current_low_cons.c: 89: {
  2077                           ;send_current_low_cons.c: 90: LATCbits.LATC0=1;
  2078  0020  0022               	movlb	2	; select bank2
  2079  0021  140E               	bsf	14,0	;volatile
  2080                           
  2081                           ;send_current_low_cons.c: 91: INTCONbits.TMR0IE=1;
  2082  0022  168B               	bsf	11,5	;volatile
  2083                           
  2084                           ;send_current_low_cons.c: 95: _delay((unsigned long)((5)*(8000000L/4000.0)));
  2085  0023  300D               	movlw	13
  2086  0024  0020               	movlb	0	; select bank0
  2087  0025  00CE               	movwf	??_ISR_ROUTINE
  2088  0026  30FB               	movlw	251
  2089  0027                     u195_27:	
  2090  0027  0B89               	decfsz	9,f
  2091  0028  2827               	goto	u195_27
  2092  0029  0BCE               	decfsz	??_ISR_ROUTINE,f
  2093  002A  2827               	goto	u195_27
  2094  002B  3200               	nop2
  2095  002C                     i1l2107:	
  2096                           ;send_current_low_cons.c: 97: while (adc_data_index<40)
  2097                           
  2098  002C  3028               	movlw	40
  2099  002D  0020               	movlb	0	; select bank0
  2100  002E  026B               	subwf	_adc_data_index,w
  2101  002F  1803               	btfsc	3,0
  2102  0030  2853               	goto	i1l87
  2103                           
  2104                           ;send_current_low_cons.c: 98: {
  2105                           ;send_current_low_cons.c: 99: if( TMR0IF )
  2106  0031  1D0B               	btfss	11,2	;volatile
  2107  0032  282C               	goto	i1l2107
  2108                           
  2109                           ;send_current_low_cons.c: 100: {
  2110                           ;send_current_low_cons.c: 102: TMR0 = 0x83;
  2111  0033  3083               	movlw	131
  2112  0034  0095               	movwf	21	;volatile
  2113                           
  2114                           ;send_current_low_cons.c: 104: INTCONbits.TMR0IF = 0;
  2115  0035  110B               	bcf	11,2	;volatile
  2116                           
  2117                           ;send_current_low_cons.c: 107: ADCON0bits.GO_nDONE=1;
  2118  0036  0021               	movlb	1	; select bank1
  2119  0037  149D               	bsf	29,1	;volatile
  2120  0038                     i1l84:	
  2121                           ;send_current_low_cons.c: 108: while (ADCON0bits.GO_nDONE==1);
  2122                           
  2123  0038  189D               	btfsc	29,1	;volatile
  2124  0039  2838               	goto	i1l84
  2125                           
  2126                           ;send_current_low_cons.c: 109: uint8_t adc_lo = ADRESL;
  2127  003A  081B               	movf	27,w	;volatile
  2128  003B  0020               	movlb	0	; select bank0
  2129  003C  00CE               	movwf	??_ISR_ROUTINE
  2130  003D  084E               	movf	??_ISR_ROUTINE,w
  2131  003E  00DC               	movwf	ISR_ROUTINE@adc_lo
  2132                           
  2133                           ;send_current_low_cons.c: 110: uint8_t adc_hi = ADRESH;
  2134  003F  0021               	movlb	1	; select bank1
  2135  0040  081C               	movf	28,w	;volatile
  2136  0041  0020               	movlb	0	; select bank0
  2137  0042  00CE               	movwf	??_ISR_ROUTINE
  2138  0043  084E               	movf	??_ISR_ROUTINE,w
  2139  0044  00DD               	movwf	ISR_ROUTINE@adc_hi
  2140                           
  2141                           ;send_current_low_cons.c: 111: adc_data[adc_data_index] = ((uint16_t)(adc_hi << 8) | (ui
      +                          nt16_t)adc_lo);
  2142  0045  356B               	lslf	_adc_data_index,w
  2143  0046  3E20               	addlw	(low (_adc_data| (0+256)))& (0+255)
  2144  0047  0086               	movwf	6
  2145  0048  3001               	movlw	1	; select bank2/3
  2146  0049  0087               	movwf	7
  2147  004A  085C               	movf	ISR_ROUTINE@adc_lo,w
  2148  004B  3FC0               	movwi [0]fsr1
  2149  004C  085D               	movf	ISR_ROUTINE@adc_hi,w
  2150  004D  3FC1               	movwi [1]fsr1
  2151                           
  2152                           ;send_current_low_cons.c: 112: adc_data_index++;
  2153  004E  3001               	movlw	1
  2154  004F  00CE               	movwf	??_ISR_ROUTINE
  2155  0050  084E               	movf	??_ISR_ROUTINE,w
  2156  0051  07EB               	addwf	_adc_data_index,f
  2157  0052  282C               	goto	i1l2107
  2158  0053                     i1l87:	
  2159                           
  2160                           ;send_current_low_cons.c: 113: }
  2161                           ;send_current_low_cons.c: 114: }
  2162                           ;send_current_low_cons.c: 115: INTCONbits.TMR0IE=0;
  2163  0053  128B               	bcf	11,5	;volatile
  2164                           
  2165                           ;send_current_low_cons.c: 116: INTCONbits.GIE = 0;
  2166  0054  138B               	bcf	11,7	;volatile
  2167                           
  2168                           ;send_current_low_cons.c: 117: adc_data_index = 0;
  2169  0055  01EB               	clrf	_adc_data_index
  2170                           
  2171                           ;send_current_low_cons.c: 119: uint32_t adc_filter_val = 0;
  2172  0056  3000               	movlw	0
  2173  0057  00E1               	movwf	ISR_ROUTINE@adc_filter_val+3
  2174  0058  3000               	movlw	0
  2175  0059  00E0               	movwf	ISR_ROUTINE@adc_filter_val+2
  2176  005A  3000               	movlw	0
  2177  005B  00DF               	movwf	ISR_ROUTINE@adc_filter_val+1
  2178  005C  3000               	movlw	0
  2179  005D  00DE               	movwf	ISR_ROUTINE@adc_filter_val
  2180                           
  2181                           ;send_current_low_cons.c: 120: uint32_t dc_filter_val = 0;
  2182  005E  3000               	movlw	0
  2183  005F  00E5               	movwf	ISR_ROUTINE@dc_filter_val+3
  2184  0060  3000               	movlw	0
  2185  0061  00E4               	movwf	ISR_ROUTINE@dc_filter_val+2
  2186  0062  3000               	movlw	0
  2187  0063  00E3               	movwf	ISR_ROUTINE@dc_filter_val+1
  2188  0064  3000               	movlw	0
  2189  0065  00E2               	movwf	ISR_ROUTINE@dc_filter_val
  2190                           
  2191                           ;send_current_low_cons.c: 121: ac_value = 0;
  2192  0066  01E7               	clrf	_ac_value
  2193  0067  01E8               	clrf	_ac_value+1
  2194                           
  2195                           ;send_current_low_cons.c: 122: uint8_t i = 0;
  2196  0068  01E6               	clrf	ISR_ROUTINE@i
  2197                           
  2198                           ;send_current_low_cons.c: 123: for(i=0; i < 40; i++ )
  2199  0069  01E6               	clrf	ISR_ROUTINE@i
  2200  006A  3028               	movlw	40
  2201  006B  0266               	subwf	ISR_ROUTINE@i,w
  2202  006C  1803               	btfsc	3,0
  2203  006D  2890               	goto	i1l2125
  2204  006E                     i1l2119:	
  2205                           
  2206                           ;send_current_low_cons.c: 124: {
  2207                           ;send_current_low_cons.c: 125: dc_filter_val += (uint32_t)(adc_data[i]);
  2208  006E  3566               	lslf	ISR_ROUTINE@i,w
  2209  006F  3E20               	addlw	(low (_adc_data| (0+256)))& (0+255)
  2210  0070  0086               	movwf	6
  2211  0071  3001               	movlw	1	; select bank2/3
  2212  0072  0087               	movwf	7
  2213  0073  3F40               	moviw [0]fsr1
  2214  0074  00CE               	movwf	??_ISR_ROUTINE
  2215  0075  3F41               	moviw [1]fsr1
  2216  0076  00CF               	movwf	??_ISR_ROUTINE+1
  2217  0077  084E               	movf	??_ISR_ROUTINE,w
  2218  0078  00D0               	movwf	??_ISR_ROUTINE+2
  2219  0079  084F               	movf	??_ISR_ROUTINE+1,w
  2220  007A  00D1               	movwf	??_ISR_ROUTINE+3
  2221  007B  3000               	movlw	0
  2222  007C  1BD1               	btfsc	??_ISR_ROUTINE+3,7
  2223  007D  30FF               	movlw	255
  2224  007E  00D2               	movwf	??_ISR_ROUTINE+4
  2225  007F  00D3               	movwf	??_ISR_ROUTINE+5
  2226  0080  0850               	movf	??_ISR_ROUTINE+2,w
  2227  0081  07E2               	addwf	ISR_ROUTINE@dc_filter_val,f
  2228  0082  0851               	movf	??_ISR_ROUTINE+3,w
  2229  0083  3DE3               	addwfc	ISR_ROUTINE@dc_filter_val+1,f
  2230  0084  0852               	movf	??_ISR_ROUTINE+4,w
  2231  0085  3DE4               	addwfc	ISR_ROUTINE@dc_filter_val+2,f
  2232  0086  0853               	movf	??_ISR_ROUTINE+5,w
  2233  0087  3DE5               	addwfc	ISR_ROUTINE@dc_filter_val+3,f
  2234  0088  3001               	movlw	1
  2235  0089  00CE               	movwf	??_ISR_ROUTINE
  2236  008A  084E               	movf	??_ISR_ROUTINE,w
  2237  008B  07E6               	addwf	ISR_ROUTINE@i,f
  2238  008C  3028               	movlw	40
  2239  008D  0266               	subwf	ISR_ROUTINE@i,w
  2240  008E  1C03               	skipc
  2241  008F  286E               	goto	i1l2119
  2242  0090                     i1l2125:	
  2243                           
  2244                           ;send_current_low_cons.c: 126: }
  2245                           ;send_current_low_cons.c: 127: dc_filter_val = dc_filter_val / (40);
  2246  0090  3000               	movlw	0
  2247  0091  00F3               	movwf	___lldiv@divisor+3
  2248  0092  3000               	movlw	0
  2249  0093  00F2               	movwf	___lldiv@divisor+2
  2250  0094  3000               	movlw	0
  2251  0095  00F1               	movwf	___lldiv@divisor+1
  2252  0096  3028               	movlw	40
  2253  0097  00F0               	movwf	___lldiv@divisor
  2254  0098  0865               	movf	ISR_ROUTINE@dc_filter_val+3,w
  2255  0099  00F7               	movwf	___lldiv@dividend+3
  2256  009A  0864               	movf	ISR_ROUTINE@dc_filter_val+2,w
  2257  009B  00F6               	movwf	___lldiv@dividend+2
  2258  009C  0863               	movf	ISR_ROUTINE@dc_filter_val+1,w
  2259  009D  00F5               	movwf	___lldiv@dividend+1
  2260  009E  0862               	movf	ISR_ROUTINE@dc_filter_val,w
  2261  009F  00F4               	movwf	___lldiv@dividend
  2262  00A0  3186  260E  3180   	fcall	___lldiv
  2263  00A3  0873               	movf	?___lldiv+3,w
  2264  00A4  0020               	movlb	0	; select bank0
  2265  00A5  00E5               	movwf	ISR_ROUTINE@dc_filter_val+3
  2266  00A6  0872               	movf	?___lldiv+2,w
  2267  00A7  00E4               	movwf	ISR_ROUTINE@dc_filter_val+2
  2268  00A8  0871               	movf	?___lldiv+1,w
  2269  00A9  00E3               	movwf	ISR_ROUTINE@dc_filter_val+1
  2270  00AA  0870               	movf	?___lldiv,w
  2271  00AB  00E2               	movwf	ISR_ROUTINE@dc_filter_val
  2272                           
  2273                           ;send_current_low_cons.c: 128: dc_filter_val = 512 - dc_filter_val;
  2274  00AC  3000               	movlw	0
  2275  00AD  00CE               	movwf	??_ISR_ROUTINE
  2276  00AE  3002               	movlw	2
  2277  00AF  00CF               	movwf	??_ISR_ROUTINE+1
  2278  00B0  3000               	movlw	0
  2279  00B1  00D0               	movwf	??_ISR_ROUTINE+2
  2280  00B2  3000               	movlw	0
  2281  00B3  00D1               	movwf	??_ISR_ROUTINE+3
  2282  00B4  0962               	comf	ISR_ROUTINE@dc_filter_val,w
  2283  00B5  00D2               	movwf	??_ISR_ROUTINE+4
  2284  00B6  0963               	comf	ISR_ROUTINE@dc_filter_val+1,w
  2285  00B7  00D3               	movwf	??_ISR_ROUTINE+5
  2286  00B8  0964               	comf	ISR_ROUTINE@dc_filter_val+2,w
  2287  00B9  00D4               	movwf	??_ISR_ROUTINE+6
  2288  00BA  0965               	comf	ISR_ROUTINE@dc_filter_val+3,w
  2289  00BB  00D5               	movwf	??_ISR_ROUTINE+7
  2290  00BC  0AD2               	incf	??_ISR_ROUTINE+4,f
  2291  00BD  1903               	skipnz
  2292  00BE  0AD3               	incf	??_ISR_ROUTINE+5,f
  2293  00BF  1903               	skipnz
  2294  00C0  0AD4               	incf	??_ISR_ROUTINE+6,f
  2295  00C1  1903               	skipnz
  2296  00C2  0AD5               	incf	??_ISR_ROUTINE+7,f
  2297  00C3  0852               	movf	??_ISR_ROUTINE+4,w
  2298  00C4  07CE               	addwf	??_ISR_ROUTINE,f
  2299  00C5  0853               	movf	??_ISR_ROUTINE+5,w
  2300  00C6  3DCF               	addwfc	??_ISR_ROUTINE+1,f
  2301  00C7  0854               	movf	??_ISR_ROUTINE+6,w
  2302  00C8  3DD0               	addwfc	??_ISR_ROUTINE+2,f
  2303  00C9  0855               	movf	??_ISR_ROUTINE+7,w
  2304  00CA  3DD1               	addwfc	??_ISR_ROUTINE+3,f
  2305  00CB  0851               	movf	??_ISR_ROUTINE+3,w
  2306  00CC  00E5               	movwf	ISR_ROUTINE@dc_filter_val+3
  2307  00CD  0850               	movf	??_ISR_ROUTINE+2,w
  2308  00CE  00E4               	movwf	ISR_ROUTINE@dc_filter_val+2
  2309  00CF  084F               	movf	??_ISR_ROUTINE+1,w
  2310  00D0  00E3               	movwf	ISR_ROUTINE@dc_filter_val+1
  2311  00D1  084E               	movf	??_ISR_ROUTINE,w
  2312  00D2  00E2               	movwf	ISR_ROUTINE@dc_filter_val
  2313                           
  2314                           ;send_current_low_cons.c: 129: for(i=0; i < 40; i++ )
  2315  00D3  01E6               	clrf	ISR_ROUTINE@i
  2316  00D4  3028               	movlw	40
  2317  00D5  0266               	subwf	ISR_ROUTINE@i,w
  2318  00D6  1803               	btfsc	3,0
  2319  00D7  292C               	goto	i1l2143
  2320  00D8                     i1l2135:	
  2321                           
  2322                           ;send_current_low_cons.c: 130: {
  2323                           ;send_current_low_cons.c: 131: adc_data[i] = (adc_data[i] + (dc_filter_val)) ;
  2324  00D8  3566               	lslf	ISR_ROUTINE@i,w
  2325  00D9  3E20               	addlw	(low (_adc_data| (0+256)))& (0+255)
  2326  00DA  0086               	movwf	6
  2327  00DB  3001               	movlw	1	; select bank2/3
  2328  00DC  0087               	movwf	7
  2329  00DD  3F40               	moviw [0]fsr1
  2330  00DE  00CE               	movwf	??_ISR_ROUTINE
  2331  00DF  3F41               	moviw [1]fsr1
  2332  00E0  00CF               	movwf	??_ISR_ROUTINE+1
  2333  00E1  0862               	movf	ISR_ROUTINE@dc_filter_val,w
  2334  00E2  074E               	addwf	??_ISR_ROUTINE,w
  2335  00E3  00D0               	movwf	??_ISR_ROUTINE+2
  2336  00E4  0863               	movf	ISR_ROUTINE@dc_filter_val+1,w
  2337  00E5  3D4F               	addwfc	??_ISR_ROUTINE+1,w
  2338  00E6  00D1               	movwf	??_ISR_ROUTINE+3
  2339  00E7  3566               	lslf	ISR_ROUTINE@i,w
  2340  00E8  3E20               	addlw	(low (_adc_data| (0+256)))& (0+255)
  2341  00E9  0086               	movwf	6
  2342  00EA  3001               	movlw	1	; select bank2/3
  2343  00EB  0087               	movwf	7
  2344  00EC  0850               	movf	??_ISR_ROUTINE+2,w
  2345  00ED  3FC0               	movwi [0]fsr1
  2346  00EE  0851               	movf	??_ISR_ROUTINE+3,w
  2347  00EF  3FC1               	movwi [1]fsr1
  2348                           
  2349                           ;send_current_low_cons.c: 132: adc_filter_val += ((uint32_t)((adc_data[i]-512)*(uint32_t
      +                          )(adc_data[i]-512) ));
  2350  00F0  3566               	lslf	ISR_ROUTINE@i,w
  2351  00F1  3E20               	addlw	(low (_adc_data| (0+256)))& (0+255)
  2352  00F2  0086               	movwf	6
  2353  00F3  3001               	movlw	1	; select bank2/3
  2354  00F4  0087               	movwf	7
  2355  00F5  3F40               	moviw [0]fsr1
  2356  00F6  00CE               	movwf	??_ISR_ROUTINE
  2357  00F7  3F41               	moviw [1]fsr1
  2358  00F8  00CF               	movwf	??_ISR_ROUTINE+1
  2359  00F9  084E               	movf	??_ISR_ROUTINE,w
  2360  00FA  3E00               	addlw	0
  2361  00FB  00F0               	movwf	___lmul@multiplier
  2362  00FC  30FE               	movlw	254
  2363  00FD  3D4F               	addwfc	??_ISR_ROUTINE+1,w
  2364  00FE  00F1               	movwf	___lmul@multiplier+1
  2365  00FF  01F2               	clrf	___lmul@multiplier+2
  2366  0100  1BF1               	btfsc	___lmul@multiplier+1,7
  2367  0101  03F2               	decf	___lmul@multiplier+2,f
  2368  0102  0872               	movf	___lmul@multiplier+2,w
  2369  0103  00F3               	movwf	___lmul@multiplier+3
  2370  0104  3566               	lslf	ISR_ROUTINE@i,w
  2371  0105  3E20               	addlw	(low (_adc_data| (0+256)))& (0+255)
  2372  0106  0086               	movwf	6
  2373  0107  3001               	movlw	1	; select bank2/3
  2374  0108  0087               	movwf	7
  2375  0109  3F40               	moviw [0]fsr1
  2376  010A  00D0               	movwf	??_ISR_ROUTINE+2
  2377  010B  3F41               	moviw [1]fsr1
  2378  010C  00D1               	movwf	??_ISR_ROUTINE+3
  2379  010D  0850               	movf	??_ISR_ROUTINE+2,w
  2380  010E  3E00               	addlw	0
  2381  010F  00F4               	movwf	___lmul@multiplicand
  2382  0110  30FE               	movlw	254
  2383  0111  3D51               	addwfc	??_ISR_ROUTINE+3,w
  2384  0112  00F5               	movwf	___lmul@multiplicand+1
  2385  0113  01F6               	clrf	___lmul@multiplicand+2
  2386  0114  1BF5               	btfsc	___lmul@multiplicand+1,7
  2387  0115  03F6               	decf	___lmul@multiplicand+2,f
  2388  0116  0876               	movf	___lmul@multiplicand+2,w
  2389  0117  00F7               	movwf	___lmul@multiplicand+3
  2390  0118  3186  26DC  3180   	fcall	___lmul
  2391  011B  0870               	movf	?___lmul,w
  2392  011C  0020               	movlb	0	; select bank0
  2393  011D  07DE               	addwf	ISR_ROUTINE@adc_filter_val,f
  2394  011E  0871               	movf	?___lmul+1,w
  2395  011F  3DDF               	addwfc	ISR_ROUTINE@adc_filter_val+1,f
  2396  0120  0872               	movf	?___lmul+2,w
  2397  0121  3DE0               	addwfc	ISR_ROUTINE@adc_filter_val+2,f
  2398  0122  0873               	movf	?___lmul+3,w
  2399  0123  3DE1               	addwfc	ISR_ROUTINE@adc_filter_val+3,f
  2400  0124  3001               	movlw	1
  2401  0125  00CE               	movwf	??_ISR_ROUTINE
  2402  0126  084E               	movf	??_ISR_ROUTINE,w
  2403  0127  07E6               	addwf	ISR_ROUTINE@i,f
  2404  0128  3028               	movlw	40
  2405  0129  0266               	subwf	ISR_ROUTINE@i,w
  2406  012A  1C03               	skipc
  2407  012B  28D8               	goto	i1l2135
  2408  012C                     i1l2143:	
  2409                           
  2410                           ;send_current_low_cons.c: 133: }
  2411                           ;send_current_low_cons.c: 135: adc_filter_val /= (40);
  2412  012C  3000               	movlw	0
  2413  012D  00F3               	movwf	___lldiv@divisor+3
  2414  012E  3000               	movlw	0
  2415  012F  00F2               	movwf	___lldiv@divisor+2
  2416  0130  3000               	movlw	0
  2417  0131  00F1               	movwf	___lldiv@divisor+1
  2418  0132  3028               	movlw	40
  2419  0133  00F0               	movwf	___lldiv@divisor
  2420  0134  0861               	movf	ISR_ROUTINE@adc_filter_val+3,w
  2421  0135  00F7               	movwf	___lldiv@dividend+3
  2422  0136  0860               	movf	ISR_ROUTINE@adc_filter_val+2,w
  2423  0137  00F6               	movwf	___lldiv@dividend+2
  2424  0138  085F               	movf	ISR_ROUTINE@adc_filter_val+1,w
  2425  0139  00F5               	movwf	___lldiv@dividend+1
  2426  013A  085E               	movf	ISR_ROUTINE@adc_filter_val,w
  2427  013B  00F4               	movwf	___lldiv@dividend
  2428  013C  3186  260E  3180   	fcall	___lldiv
  2429  013F  0873               	movf	?___lldiv+3,w
  2430  0140  0020               	movlb	0	; select bank0
  2431  0141  00E1               	movwf	ISR_ROUTINE@adc_filter_val+3
  2432  0142  0872               	movf	?___lldiv+2,w
  2433  0143  00E0               	movwf	ISR_ROUTINE@adc_filter_val+2
  2434  0144  0871               	movf	?___lldiv+1,w
  2435  0145  00DF               	movwf	ISR_ROUTINE@adc_filter_val+1
  2436  0146  0870               	movf	?___lldiv,w
  2437  0147  00DE               	movwf	ISR_ROUTINE@adc_filter_val
  2438                           
  2439                           ;send_current_low_cons.c: 136: ac_value = (uint16_t)sqrt(adc_filter_val);
  2440  0148  0861               	movf	ISR_ROUTINE@adc_filter_val+3,w
  2441  0149  00FB               	movwf	___lltoft@c+3
  2442  014A  0860               	movf	ISR_ROUTINE@adc_filter_val+2,w
  2443  014B  00FA               	movwf	___lltoft@c+2
  2444  014C  085F               	movf	ISR_ROUTINE@adc_filter_val+1,w
  2445  014D  00F9               	movwf	___lltoft@c+1
  2446  014E  085E               	movf	ISR_ROUTINE@adc_filter_val,w
  2447  014F  00F8               	movwf	___lltoft@c
  2448  0150  3187  270B  3180   	fcall	___lltoft
  2449  0153  0878               	movf	?___lltoft,w
  2450  0154  0020               	movlb	0	; select bank0
  2451  0155  00AD               	movwf	sqrt@a
  2452  0156  0879               	movf	?___lltoft+1,w
  2453  0157  00AE               	movwf	sqrt@a+1
  2454  0158  087A               	movf	?___lltoft+2,w
  2455  0159  00AF               	movwf	sqrt@a+2
  2456  015A  3183  2305  3180   	fcall	_sqrt
  2457  015D  0020               	movlb	0	; select bank0
  2458  015E  082D               	movf	?_sqrt,w
  2459  015F  00C0               	movwf	___fttol@f1
  2460  0160  082E               	movf	?_sqrt+1,w
  2461  0161  00C1               	movwf	___fttol@f1+1
  2462  0162  082F               	movf	?_sqrt+2,w
  2463  0163  00C2               	movwf	___fttol@f1+2
  2464  0164  3184  24A8  3180   	fcall	___fttol
  2465  0167  0020               	movlb	0	; select bank0
  2466  0168  0841               	movf	?___fttol+1,w
  2467  0169  00E8               	movwf	_ac_value+1
  2468  016A  0840               	movf	?___fttol,w
  2469  016B  00E7               	movwf	_ac_value
  2470                           
  2471                           ;send_current_low_cons.c: 137: TMR0 = 0x83;
  2472  016C  3083               	movlw	131
  2473  016D  0095               	movwf	21	;volatile
  2474                           
  2475                           ;send_current_low_cons.c: 139: SPI_init();
  2476  016E  3187  27BD  3180   	fcall	_SPI_init
  2477                           
  2478                           ;send_current_low_cons.c: 140: WriteRegister(0x00, 0x00);
  2479  0171  01F1               	clrf	WriteRegister@val
  2480  0172  3000               	movlw	0
  2481  0173  318F  27D1  3180   	fcall	_WriteRegister
  2482                           
  2483                           ;send_current_low_cons.c: 144: LATAbits.LATA4 = 0;
  2484  0176  0022               	movlb	2	; select bank2
  2485  0177  120C               	bcf	12,4	;volatile
  2486                           
  2487                           ;send_current_low_cons.c: 145: nRF_Setup();
  2488  0178  3185  252F  3180   	fcall	_nRF_Setup
  2489                           
  2490                           ;send_current_low_cons.c: 146: FlushTXRX();
  2491  017B  318F  27DF  3180   	fcall	_FlushTXRX
  2492                           
  2493                           ;send_current_low_cons.c: 147: WriteRegister(0x07,0x70);
  2494  017E  3070               	movlw	112
  2495  017F  0020               	movlb	0	; select bank0
  2496  0180  00CE               	movwf	??_ISR_ROUTINE
  2497  0181  084E               	movf	??_ISR_ROUTINE,w
  2498  0182  00F1               	movwf	WriteRegister@val
  2499  0183  3007               	movlw	7
  2500  0184  318F  27D1  3180   	fcall	_WriteRegister
  2501                           
  2502                           ;send_current_low_cons.c: 148: _delay((unsigned long)((2)*(8000000L/4000.0)));
  2503  0187  3006               	movlw	6
  2504  0188  0020               	movlb	0	; select bank0
  2505  0189  00CE               	movwf	??_ISR_ROUTINE
  2506  018A  3030               	movlw	48
  2507  018B                     u196_27:	
  2508  018B  0B89               	decfsz	9,f
  2509  018C  298B               	goto	u196_27
  2510  018D  0BCE               	decfsz	??_ISR_ROUTINE,f
  2511  018E  298B               	goto	u196_27
  2512  018F  0000               	nop
  2513                           
  2514                           ;send_current_low_cons.c: 149: LATAbits.LATA4 = 1;
  2515  0190  0022               	movlb	2	; select bank2
  2516  0191  160C               	bsf	12,4	;volatile
  2517                           
  2518                           ;send_current_low_cons.c: 150: _delay((unsigned long)((150)*(8000000L/4000000.0)));
  2519  0192  3064               	movlw	100
  2520  0193                     u197_27:	
  2521  0193  0B89               	decfsz	9,f
  2522  0194  2993               	goto	u197_27
  2523                           
  2524                           ;send_current_low_cons.c: 152: uint8_t data[5] = {0,0,0,0,0};
  2525  0195  30A0               	movlw	low ISR_ROUTINE@F2923
  2526  0196  0086               	movwf	6
  2527  0197  3000               	movlw	high ISR_ROUTINE@F2923
  2528  0198  0087               	movwf	7
  2529  0199  3057               	movlw	low ISR_ROUTINE@data
  2530  019A  0084               	movwf	4
  2531  019B  3000               	movlw	high ISR_ROUTINE@data
  2532  019C  0085               	movwf	5
  2533  019D  3005               	movlw	5
  2534  019E  0020               	movlb	0	; select bank0
  2535  019F  00CE               	movwf	??_ISR_ROUTINE
  2536  01A0                     u194_20:	
  2537  01A0  0016               	moviw fsr1++
  2538  01A1  001A               	movwi fsr0++
  2539  01A2  0BCE               	decfsz	??_ISR_ROUTINE,f
  2540  01A3  29A0               	goto	u194_20
  2541                           
  2542                           ;send_current_low_cons.c: 153: data[0] = 2;
  2543  01A4  3002               	movlw	2
  2544  01A5  00CE               	movwf	??_ISR_ROUTINE
  2545  01A6  084E               	movf	??_ISR_ROUTINE,w
  2546  01A7  00D7               	movwf	ISR_ROUTINE@data
  2547                           
  2548                           ;send_current_low_cons.c: 154: data[1] = 8;
  2549  01A8  3008               	movlw	8
  2550  01A9  00CE               	movwf	??_ISR_ROUTINE
  2551  01AA  084E               	movf	??_ISR_ROUTINE,w
  2552  01AB  00D8               	movwf	ISR_ROUTINE@data+1
  2553                           
  2554                           ;send_current_low_cons.c: 155: data[2] = ac_value;
  2555  01AC  0867               	movf	_ac_value,w
  2556  01AD  00CE               	movwf	??_ISR_ROUTINE
  2557  01AE  084E               	movf	??_ISR_ROUTINE,w
  2558  01AF  00D9               	movwf	ISR_ROUTINE@data+2
  2559                           
  2560                           ;send_current_low_cons.c: 156: data[3] = (ac_value >> 8);
  2561  01B0  0868               	movf	_ac_value+1,w
  2562  01B1  00CE               	movwf	??_ISR_ROUTINE
  2563  01B2  084E               	movf	??_ISR_ROUTINE,w
  2564  01B3  00DA               	movwf	ISR_ROUTINE@data+3
  2565                           
  2566                           ;send_current_low_cons.c: 158: WritePayload(5, data);
  2567  01B4  3057               	movlw	(low (ISR_ROUTINE@data| 0))& (0+255)
  2568  01B5  00CE               	movwf	??_ISR_ROUTINE
  2569  01B6  084E               	movf	??_ISR_ROUTINE,w
  2570  01B7  00F1               	movwf	WritePayload@data
  2571  01B8  3005               	movlw	5
  2572  01B9  3187  275A  3180   	fcall	_WritePayload
  2573                           
  2574                           ;send_current_low_cons.c: 159: _delay((unsigned long)((5)*(8000000L/4000.0)));
  2575  01BC  300D               	movlw	13
  2576  01BD  0020               	movlb	0	; select bank0
  2577  01BE  00CE               	movwf	??_ISR_ROUTINE
  2578  01BF  30FB               	movlw	251
  2579  01C0                     u198_27:	
  2580  01C0  0B89               	decfsz	9,f
  2581  01C1  29C0               	goto	u198_27
  2582  01C2  0BCE               	decfsz	??_ISR_ROUTINE,f
  2583  01C3  29C0               	goto	u198_27
  2584  01C4  3200               	nop2
  2585                           
  2586                           ;send_current_low_cons.c: 161: FlushTXRX();
  2587  01C5  318F  27DF  3180   	fcall	_FlushTXRX
  2588                           
  2589                           ;send_current_low_cons.c: 162: WriteRegister(0x00, 0x00);
  2590  01C8  01F1               	clrf	WriteRegister@val
  2591  01C9  3000               	movlw	0
  2592  01CA  318F  27D1  3180   	fcall	_WriteRegister
  2593                           
  2594                           ;send_current_low_cons.c: 163: tmrcmpt=0;
  2595  01CD  0020               	movlb	0	; select bank0
  2596  01CE  01EA               	clrf	_tmrcmpt
  2597                           
  2598                           ;send_current_low_cons.c: 164: LATCbits.LATC0=0;
  2599  01CF  0022               	movlb	2	; select bank2
  2600  01D0  100E               	bcf	14,0	;volatile
  2601  01D1                     i1l2187:	
  2602                           
  2603                           ;send_current_low_cons.c: 165: }
  2604                           ;send_current_low_cons.c: 166: PIE1bits.TMR1IE = 1;
  2605  01D1  0021               	movlb	1	; select bank1
  2606  01D2  1411               	bsf	17,0	;volatile
  2607                           
  2608                           ;send_current_low_cons.c: 167: T1CONbits.TMR1ON = 1;
  2609  01D3  0020               	movlb	0	; select bank0
  2610  01D4  1418               	bsf	24,0	;volatile
  2611                           
  2612                           ;send_current_low_cons.c: 169: INTCONbits.GIE = 1;
  2613  01D5  178B               	bsf	11,7	;volatile
  2614                           
  2615                           ;send_current_low_cons.c: 170: InitApp();
  2616  01D6  3187  27E8         	fcall	i1_InitApp
  2617                           
  2618                           ;send_current_low_cons.c: 171: TMR1H = 0x68;
  2619  01D8  3068               	movlw	104
  2620  01D9  0020               	movlb	0	; select bank0
  2621  01DA  0097               	movwf	23	;volatile
  2622                           
  2623                           ;send_current_low_cons.c: 172: TMR1L = 0x68;
  2624  01DB  3068               	movlw	104
  2625  01DC  0096               	movwf	22	;volatile
  2626  01DD                     i1l94:	
  2627  01DD  0856               	movf	??_ISR_ROUTINE+8,w
  2628  01DE  00FF               	movwf	127
  2629  01DF  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2630  01E0  0009               	retfie
  2631  01E1                     __end_of_ISR_ROUTINE:	
  2632                           
  2633                           	psect	text6
  2634  07E8                     __ptext6:	
  2635 ;; *************** function i1_InitApp *****************
  2636 ;; Defined at:
  2637 ;;		line 21 in file "user.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		status,2
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_ISR_ROUTINE
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function i1_InitApp
  2666  07E8                     i1_InitApp:	
  2667                           
  2668                           ;user.c: 24: ANSELA = 0x00;
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in i1_InitApp: [status,2]
  2672  07E8  0023               	movlb	3	; select bank3
  2673  07E9  018C               	clrf	12	;volatile
  2674                           
  2675                           ;user.c: 25: ANSELB = 0x00;
  2676  07EA  018D               	clrf	13	;volatile
  2677                           
  2678                           ;user.c: 26: ANSELC = 0x00;
  2679  07EB  018E               	clrf	14	;volatile
  2680                           
  2681                           ;user.c: 28: TRISCbits.TRISC0 = 0;
  2682  07EC  0021               	movlb	1	; select bank1
  2683  07ED  100E               	bcf	14,0	;volatile
  2684                           
  2685                           ;user.c: 29: TRISCbits.TRISC1 = 0;
  2686  07EE  108E               	bcf	14,1	;volatile
  2687                           
  2688                           ;user.c: 30: TRISCbits.TRISC2 = 0;
  2689  07EF  110E               	bcf	14,2	;volatile
  2690                           
  2691                           ;user.c: 31: TRISCbits.TRISC3= 0;
  2692  07F0  118E               	bcf	14,3	;volatile
  2693                           
  2694                           ;user.c: 32: TRISCbits.TRISC4 = 0;
  2695  07F1  120E               	bcf	14,4	;volatile
  2696                           
  2697                           ;user.c: 33: TRISCbits.TRISC5 = 0;
  2698  07F2  128E               	bcf	14,5	;volatile
  2699                           
  2700                           ;user.c: 34: TRISCbits.TRISC6 = 0;
  2701  07F3  130E               	bcf	14,6	;volatile
  2702                           
  2703                           ;user.c: 35: TRISCbits.TRISC7 = 0;
  2704  07F4  138E               	bcf	14,7	;volatile
  2705                           
  2706                           ;user.c: 37: TRISAbits.TRISA5 = 0;
  2707  07F5  128C               	bcf	12,5	;volatile
  2708                           
  2709                           ;user.c: 38: TRISAbits.TRISA4 = 0;
  2710  07F6  120C               	bcf	12,4	;volatile
  2711                           
  2712                           ;user.c: 40: TRISBbits.TRISB4 = 0;
  2713  07F7  120D               	bcf	13,4	;volatile
  2714                           
  2715                           ;user.c: 41: TRISBbits.TRISB5 = 0;
  2716  07F8  128D               	bcf	13,5	;volatile
  2717                           
  2718                           ;user.c: 42: TRISBbits.TRISB6 = 0;
  2719  07F9  130D               	bcf	13,6	;volatile
  2720                           
  2721                           ;user.c: 43: TRISBbits.TRISB7 = 0;
  2722  07FA  138D               	bcf	13,7	;volatile
  2723  07FB  0008               	return
  2724  07FC                     __end_ofi1_InitApp:	
  2725                           
  2726                           	psect	text7
  2727  0305                     __ptext7:	
  2728 ;; *************** function _sqrt *****************
  2729 ;; Defined at:
  2730 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcsqrt.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  a               3   13[BANK0 ] void 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  x               3   29[BANK0 ] void 
  2735 ;;  q               3   26[BANK0 ] void 
  2736 ;;  z               3   22[BANK0 ] void 
  2737 ;;  og              3   19[BANK0 ] void 
  2738 ;;  i               1   25[BANK0 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  3   13[BANK0 ] unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, pclath, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2748 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;Total ram usage:       19 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    3
  2755 ;; This function calls:
  2756 ;;		___ftge
  2757 ;;		___ftmul
  2758 ;;		___ftsub
  2759 ;; This function is called by:
  2760 ;;		_ISR_ROUTINE
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function _sqrt
  2766  0305                     _sqrt:	
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in _sqrt: [wreg+status,2+status,0+pclath+cstack]
  2770  0305  3000               	movlw	0
  2771  0306  00F0               	movwf	___ftge@ff1
  2772  0307  3000               	movlw	0
  2773  0308  00F1               	movwf	___ftge@ff1+1
  2774  0309  3000               	movlw	0
  2775  030A  00F2               	movwf	___ftge@ff1+2
  2776  030B  0020               	movlb	0	; select bank0
  2777  030C  082D               	movf	sqrt@a,w
  2778  030D  00F3               	movwf	___ftge@ff2
  2779  030E  082E               	movf	sqrt@a+1,w
  2780  030F  00F4               	movwf	___ftge@ff2+1
  2781  0310  082F               	movf	sqrt@a+2,w
  2782  0311  00F5               	movwf	___ftge@ff2+2
  2783  0312  3186  26A1  3183   	fcall	___ftge
  2784  0315  1C03               	btfss	3,0
  2785  0316  2B36               	goto	i1l1787
  2786  0317  0020               	movlb	0	; select bank0
  2787  0318  082D               	movf	sqrt@a,w
  2788  0319  00F0               	movwf	___ftge@ff1
  2789  031A  082E               	movf	sqrt@a+1,w
  2790  031B  00F1               	movwf	___ftge@ff1+1
  2791  031C  082F               	movf	sqrt@a+2,w
  2792  031D  00F2               	movwf	___ftge@ff1+2
  2793  031E  3000               	movlw	0
  2794  031F  00F3               	movwf	___ftge@ff2
  2795  0320  3000               	movlw	0
  2796  0321  00F4               	movwf	___ftge@ff2+1
  2797  0322  3000               	movlw	0
  2798  0323  00F5               	movwf	___ftge@ff2+2
  2799  0324  3186  26A1  3183   	fcall	___ftge
  2800  0327  1803               	btfsc	3,0
  2801  0328  2B2E               	goto	i1l684
  2802  0329  3021               	movlw	33
  2803  032A  0021               	movlb	1	; select bank1
  2804  032B  00AD               	movwf	_errno^(0+128)
  2805  032C  3000               	movlw	0
  2806  032D  00AE               	movwf	(_errno^(0+128)+1)
  2807  032E                     i1l684:	
  2808  032E  3000               	movlw	0
  2809  032F  0020               	movlb	0	; select bank0
  2810  0330  00AD               	movwf	?_sqrt
  2811  0331  3000               	movlw	0
  2812  0332  00AE               	movwf	?_sqrt+1
  2813  0333  3000               	movlw	0
  2814  0334  00AF               	movwf	?_sqrt+2
  2815  0335  0008               	return
  2816  0336                     i1l1787:	
  2817  0336  0020               	movlb	0	; select bank0
  2818  0337  082D               	movf	sqrt@a,w
  2819  0338  00B6               	movwf	sqrt@z
  2820  0339  082E               	movf	sqrt@a+1,w
  2821  033A  00B7               	movwf	sqrt@z+1
  2822  033B  082F               	movf	sqrt@a+2,w
  2823  033C  00B8               	movwf	sqrt@z+2
  2824  033D  092D               	comf	sqrt@a,w
  2825  033E  00B0               	movwf	??_sqrt
  2826  033F  092E               	comf	sqrt@a+1,w
  2827  0340  00B1               	movwf	??_sqrt+1
  2828  0341  092F               	comf	sqrt@a+2,w
  2829  0342  00B2               	movwf	??_sqrt+2
  2830  0343  0AB0               	incf	??_sqrt,f
  2831  0344  1903               	skipnz
  2832  0345  0AB1               	incf	??_sqrt+1,f
  2833  0346  1903               	skipnz
  2834  0347  0AB2               	incf	??_sqrt+2,f
  2835  0348  30C8               	movlw	200
  2836  0349  0730               	addwf	??_sqrt,w
  2837  034A  00BD               	movwf	sqrt@x
  2838  034B  306E               	movlw	110
  2839  034C  3D31               	addwfc	??_sqrt+1,w
  2840  034D  00BE               	movwf	sqrt@x+1
  2841  034E  30BE               	movlw	190
  2842  034F  3D32               	addwfc	??_sqrt+2,w
  2843  0350  00BF               	movwf	sqrt@x+2
  2844  0351  3001               	movlw	1
  2845  0352                     u159_25:	
  2846  0352  36BF               	lsrf	sqrt@x+2,f
  2847  0353  0CBE               	rrf	sqrt@x+1,f
  2848  0354  0CBD               	rrf	sqrt@x,f
  2849  0355  0B89               	decfsz	9,f
  2850  0356  2B52               	goto	u159_25
  2851  0357  3000               	movlw	0
  2852  0358  00B0               	movwf	??_sqrt
  2853  0359  3080               	movlw	128
  2854  035A  00B1               	movwf	??_sqrt+1
  2855  035B  3000               	movlw	0
  2856  035C  00B2               	movwf	??_sqrt+2
  2857  035D  0830               	movf	??_sqrt,w
  2858  035E  02B6               	subwf	sqrt@z,f
  2859  035F  0831               	movf	??_sqrt+1,w
  2860  0360  3BB7               	subwfb	sqrt@z+1,f
  2861  0361  0832               	movf	??_sqrt+2,w
  2862  0362  3BB8               	subwfb	sqrt@z+2,f
  2863  0363  3004               	movlw	4
  2864  0364  00B0               	movwf	??_sqrt
  2865  0365  0830               	movf	??_sqrt,w
  2866  0366  00B9               	movwf	sqrt@i
  2867  0367                     i1l686:	
  2868  0367  083D               	movf	sqrt@x,w
  2869  0368  00B3               	movwf	sqrt@og
  2870  0369  083E               	movf	sqrt@x+1,w
  2871  036A  00B4               	movwf	sqrt@og+1
  2872  036B  083F               	movf	sqrt@x+2,w
  2873  036C  00B5               	movwf	sqrt@og+2
  2874  036D  0836               	movf	sqrt@z,w
  2875  036E  00F8               	movwf	___ftmul@f1
  2876  036F  0837               	movf	sqrt@z+1,w
  2877  0370  00F9               	movwf	___ftmul@f1+1
  2878  0371  0838               	movf	sqrt@z+2,w
  2879  0372  00FA               	movwf	___ftmul@f1+2
  2880  0373  083D               	movf	sqrt@x,w
  2881  0374  00FB               	movwf	___ftmul@f2
  2882  0375  083E               	movf	sqrt@x+1,w
  2883  0376  00FC               	movwf	___ftmul@f2+1
  2884  0377  083F               	movf	sqrt@x+2,w
  2885  0378  00FD               	movwf	___ftmul@f2+2
  2886  0379  3183  23F5  3183   	fcall	___ftmul
  2887  037C  0878               	movf	?___ftmul,w
  2888  037D  0020               	movlb	0	; select bank0
  2889  037E  00BA               	movwf	sqrt@q
  2890  037F  0879               	movf	?___ftmul+1,w
  2891  0380  00BB               	movwf	sqrt@q+1
  2892  0381  087A               	movf	?___ftmul+2,w
  2893  0382  00BC               	movwf	sqrt@q+2
  2894  0383  083D               	movf	sqrt@x,w
  2895  0384  00F8               	movwf	___ftmul@f1
  2896  0385  083E               	movf	sqrt@x+1,w
  2897  0386  00F9               	movwf	___ftmul@f1+1
  2898  0387  083F               	movf	sqrt@x+2,w
  2899  0388  00FA               	movwf	___ftmul@f1+2
  2900  0389  083A               	movf	sqrt@q,w
  2901  038A  00FB               	movwf	___ftmul@f2
  2902  038B  083B               	movf	sqrt@q+1,w
  2903  038C  00FC               	movwf	___ftmul@f2+1
  2904  038D  083C               	movf	sqrt@q+2,w
  2905  038E  00FD               	movwf	___ftmul@f2+2
  2906  038F  3183  23F5  3183   	fcall	___ftmul
  2907  0392  0878               	movf	?___ftmul,w
  2908  0393  0020               	movlb	0	; select bank0
  2909  0394  00BA               	movwf	sqrt@q
  2910  0395  0879               	movf	?___ftmul+1,w
  2911  0396  00BB               	movwf	sqrt@q+1
  2912  0397  087A               	movf	?___ftmul+2,w
  2913  0398  00BC               	movwf	sqrt@q+2
  2914  0399  083D               	movf	sqrt@x,w
  2915  039A  00F8               	movwf	___ftmul@f1
  2916  039B  083E               	movf	sqrt@x+1,w
  2917  039C  00F9               	movwf	___ftmul@f1+1
  2918  039D  083F               	movf	sqrt@x+2,w
  2919  039E  00FA               	movwf	___ftmul@f1+2
  2920  039F  083A               	movf	sqrt@q,w
  2921  03A0  00FB               	movwf	___ftmul@f2
  2922  03A1  083B               	movf	sqrt@q+1,w
  2923  03A2  00FC               	movwf	___ftmul@f2+1
  2924  03A3  083C               	movf	sqrt@q+2,w
  2925  03A4  00FD               	movwf	___ftmul@f2+2
  2926  03A5  3183  23F5  3183   	fcall	___ftmul
  2927  03A8  0878               	movf	?___ftmul,w
  2928  03A9  0020               	movlb	0	; select bank0
  2929  03AA  00BA               	movwf	sqrt@q
  2930  03AB  0879               	movf	?___ftmul+1,w
  2931  03AC  00BB               	movwf	sqrt@q+1
  2932  03AD  087A               	movf	?___ftmul+2,w
  2933  03AE  00BC               	movwf	sqrt@q+2
  2934  03AF  3000               	movlw	0
  2935  03B0  00F8               	movwf	___ftmul@f1
  2936  03B1  30C0               	movlw	192
  2937  03B2  00F9               	movwf	___ftmul@f1+1
  2938  03B3  303F               	movlw	63
  2939  03B4  00FA               	movwf	___ftmul@f1+2
  2940  03B5  083D               	movf	sqrt@x,w
  2941  03B6  00FB               	movwf	___ftmul@f2
  2942  03B7  083E               	movf	sqrt@x+1,w
  2943  03B8  00FC               	movwf	___ftmul@f2+1
  2944  03B9  083F               	movf	sqrt@x+2,w
  2945  03BA  00FD               	movwf	___ftmul@f2+2
  2946  03BB  3183  23F5  3183   	fcall	___ftmul
  2947  03BE  0878               	movf	?___ftmul,w
  2948  03BF  0020               	movlb	0	; select bank0
  2949  03C0  00BD               	movwf	sqrt@x
  2950  03C1  0879               	movf	?___ftmul+1,w
  2951  03C2  00BE               	movwf	sqrt@x+1
  2952  03C3  087A               	movf	?___ftmul+2,w
  2953  03C4  00BF               	movwf	sqrt@x+2
  2954  03C5  083A               	movf	sqrt@q,w
  2955  03C6  00A7               	movwf	___ftsub@f2
  2956  03C7  083B               	movf	sqrt@q+1,w
  2957  03C8  00A8               	movwf	___ftsub@f2+1
  2958  03C9  083C               	movf	sqrt@q+2,w
  2959  03CA  00A9               	movwf	___ftsub@f2+2
  2960  03CB  083D               	movf	sqrt@x,w
  2961  03CC  00AA               	movwf	___ftsub@f1
  2962  03CD  083E               	movf	sqrt@x+1,w
  2963  03CE  00AB               	movwf	___ftsub@f1+1
  2964  03CF  083F               	movf	sqrt@x+2,w
  2965  03D0  00AC               	movwf	___ftsub@f1+2
  2966  03D1  3187  279F  3183   	fcall	___ftsub
  2967  03D4  0020               	movlb	0	; select bank0
  2968  03D5  0827               	movf	?___ftsub,w
  2969  03D6  00BD               	movwf	sqrt@x
  2970  03D7  0828               	movf	?___ftsub+1,w
  2971  03D8  00BE               	movwf	sqrt@x+1
  2972  03D9  0829               	movf	?___ftsub+2,w
  2973  03DA  00BF               	movwf	sqrt@x+2
  2974  03DB  3001               	movlw	1
  2975  03DC  02B9               	subwf	sqrt@i,f
  2976  03DD  1D03               	btfss	3,2
  2977  03DE  2B67               	goto	i1l686
  2978  03DF  082D               	movf	sqrt@a,w
  2979  03E0  00F8               	movwf	___ftmul@f1
  2980  03E1  082E               	movf	sqrt@a+1,w
  2981  03E2  00F9               	movwf	___ftmul@f1+1
  2982  03E3  082F               	movf	sqrt@a+2,w
  2983  03E4  00FA               	movwf	___ftmul@f1+2
  2984  03E5  083D               	movf	sqrt@x,w
  2985  03E6  00FB               	movwf	___ftmul@f2
  2986  03E7  083E               	movf	sqrt@x+1,w
  2987  03E8  00FC               	movwf	___ftmul@f2+1
  2988  03E9  083F               	movf	sqrt@x+2,w
  2989  03EA  00FD               	movwf	___ftmul@f2+2
  2990  03EB  3183  23F5         	fcall	___ftmul
  2991  03ED  0878               	movf	?___ftmul,w
  2992  03EE  0020               	movlb	0	; select bank0
  2993  03EF  00AD               	movwf	?_sqrt
  2994  03F0  0879               	movf	?___ftmul+1,w
  2995  03F1  00AE               	movwf	?_sqrt+1
  2996  03F2  087A               	movf	?___ftmul+2,w
  2997  03F3  00AF               	movwf	?_sqrt+2
  2998  03F4  0008               	return
  2999  03F5                     __end_of_sqrt:	
  3000                           
  3001                           	psect	text8
  3002  079F                     __ptext8:	
  3003 ;; *************** function ___ftsub *****************
  3004 ;; Defined at:
  3005 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  f2              3    7[BANK0 ] float 
  3008 ;;  f1              3   10[BANK0 ] float 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  3    7[BANK0 ] float 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3020 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;Total ram usage:        6 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    2
  3027 ;; This function calls:
  3028 ;;		___ftadd
  3029 ;; This function is called by:
  3030 ;;		_sqrt
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function ___ftsub
  3036  079F                     ___ftsub:	
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3040  079F  0020               	movlb	0	; select bank0
  3041  07A0  0829               	movf	___ftsub@f2+2,w
  3042  07A1  0428               	iorwf	___ftsub@f2+1,w
  3043  07A2  0427               	iorwf	___ftsub@f2,w
  3044  07A3  1903               	skipnz
  3045  07A4  2FA7               	goto	i1l1745
  3046  07A5  3080               	movlw	128
  3047  07A6  06A9               	xorwf	___ftsub@f2+2,f
  3048  07A7                     i1l1745:	
  3049  07A7  082A               	movf	___ftsub@f1,w
  3050  07A8  00F8               	movwf	___ftadd@f1
  3051  07A9  082B               	movf	___ftsub@f1+1,w
  3052  07AA  00F9               	movwf	___ftadd@f1+1
  3053  07AB  082C               	movf	___ftsub@f1+2,w
  3054  07AC  00FA               	movwf	___ftadd@f1+2
  3055  07AD  0827               	movf	___ftsub@f2,w
  3056  07AE  00FB               	movwf	___ftadd@f2
  3057  07AF  0828               	movf	___ftsub@f2+1,w
  3058  07B0  00FC               	movwf	___ftadd@f2+1
  3059  07B1  0829               	movf	___ftsub@f2+2,w
  3060  07B2  00FD               	movwf	___ftadd@f2+2
  3061  07B3  3182  2210         	fcall	___ftadd
  3062  07B5  0878               	movf	?___ftadd,w
  3063  07B6  0020               	movlb	0	; select bank0
  3064  07B7  00A7               	movwf	?___ftsub
  3065  07B8  0879               	movf	?___ftadd+1,w
  3066  07B9  00A8               	movwf	?___ftsub+1
  3067  07BA  087A               	movf	?___ftadd+2,w
  3068  07BB  00A9               	movwf	?___ftsub+2
  3069  07BC  0008               	return
  3070  07BD                     __end_of___ftsub:	
  3071                           
  3072                           	psect	text9
  3073  0210                     __ptext9:	
  3074 ;; *************** function ___ftadd *****************
  3075 ;; Defined at:
  3076 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  f1              3    8[COMMON] float 
  3079 ;;  f2              3   11[COMMON] float 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  exp1            1    6[BANK0 ] unsigned char 
  3082 ;;  exp2            1    5[BANK0 ] unsigned char 
  3083 ;;  sign            1    4[BANK0 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  3    8[COMMON] float 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3093 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Totals:         6       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;Total ram usage:       13 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    1
  3100 ;; This function calls:
  3101 ;;		___ftpack
  3102 ;; This function is called by:
  3103 ;;		___ftsub
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function ___ftadd
  3109  0210                     ___ftadd:	
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3113  0210  0878               	movf	___ftadd@f1,w
  3114  0211  0020               	movlb	0	; select bank0
  3115  0212  00A0               	movwf	??___ftadd
  3116  0213  0879               	movf	___ftadd@f1+1,w
  3117  0214  00A1               	movwf	??___ftadd+1
  3118  0215  087A               	movf	___ftadd@f1+2,w
  3119  0216  00A2               	movwf	??___ftadd+2
  3120  0217  1003               	clrc
  3121  0218  0D21               	rlf	??___ftadd+1,w
  3122  0219  0D22               	rlf	??___ftadd+2,w
  3123  021A  00A3               	movwf	??___ftadd+3
  3124  021B  0823               	movf	??___ftadd+3,w
  3125  021C  00A6               	movwf	___ftadd@exp1
  3126  021D  087B               	movf	___ftadd@f2,w
  3127  021E  00A0               	movwf	??___ftadd
  3128  021F  087C               	movf	___ftadd@f2+1,w
  3129  0220  00A1               	movwf	??___ftadd+1
  3130  0221  087D               	movf	___ftadd@f2+2,w
  3131  0222  00A2               	movwf	??___ftadd+2
  3132  0223  1003               	clrc
  3133  0224  0D21               	rlf	??___ftadd+1,w
  3134  0225  0D22               	rlf	??___ftadd+2,w
  3135  0226  00A3               	movwf	??___ftadd+3
  3136  0227  0823               	movf	??___ftadd+3,w
  3137  0228  00A5               	movwf	___ftadd@exp2
  3138  0229  0826               	movf	___ftadd@exp1,w
  3139  022A  1903               	btfsc	3,2
  3140  022B  2A38               	goto	i1l1583
  3141  022C  0825               	movf	___ftadd@exp2,w
  3142  022D  0226               	subwf	___ftadd@exp1,w
  3143  022E  1803               	skipnc
  3144  022F  2A3F               	goto	i1l1587
  3145  0230  0326               	decf	___ftadd@exp1,w
  3146  0231  3AFF               	xorlw	255
  3147  0232  0725               	addwf	___ftadd@exp2,w
  3148  0233  00A0               	movwf	??___ftadd
  3149  0234  3019               	movlw	25
  3150  0235  0220               	subwf	??___ftadd,w
  3151  0236  1C03               	skipc
  3152  0237  2A3F               	goto	i1l1587
  3153  0238                     i1l1583:	
  3154  0238  087B               	movf	___ftadd@f2,w
  3155  0239  00F8               	movwf	?___ftadd
  3156  023A  087C               	movf	___ftadd@f2+1,w
  3157  023B  00F9               	movwf	?___ftadd+1
  3158  023C  087D               	movf	___ftadd@f2+2,w
  3159  023D  00FA               	movwf	?___ftadd+2
  3160  023E  0008               	return
  3161  023F                     i1l1587:	
  3162  023F  0825               	movf	___ftadd@exp2,w
  3163  0240  1903               	btfsc	3,2
  3164  0241  0008               	return
  3165  0242  0826               	movf	___ftadd@exp1,w
  3166  0243  0225               	subwf	___ftadd@exp2,w
  3167  0244  1803               	skipnc
  3168  0245  2A4E               	goto	i1l1593
  3169  0246  0325               	decf	___ftadd@exp2,w
  3170  0247  3AFF               	xorlw	255
  3171  0248  0726               	addwf	___ftadd@exp1,w
  3172  0249  00A0               	movwf	??___ftadd
  3173  024A  3019               	movlw	25
  3174  024B  0220               	subwf	??___ftadd,w
  3175  024C  1803               	btfsc	3,0
  3176  024D  0008               	return
  3177  024E                     i1l1593:	
  3178  024E  3006               	movlw	6
  3179  024F  00A0               	movwf	??___ftadd
  3180  0250  0820               	movf	??___ftadd,w
  3181  0251  00A4               	movwf	___ftadd@sign
  3182  0252  1BFA               	btfsc	___ftadd@f1+2,7
  3183  0253  17A4               	bsf	___ftadd@sign,7
  3184  0254  1BFD               	btfsc	___ftadd@f2+2,7
  3185  0255  1724               	bsf	___ftadd@sign,6
  3186  0256  17F9               	bsf	___ftadd@f1+1,7
  3187  0257  30FF               	movlw	255
  3188  0258  05F8               	andwf	___ftadd@f1,f
  3189  0259  30FF               	movlw	255
  3190  025A  05F9               	andwf	___ftadd@f1+1,f
  3191  025B  3000               	movlw	0
  3192  025C  05FA               	andwf	___ftadd@f1+2,f
  3193  025D  17FC               	bsf	___ftadd@f2+1,7
  3194  025E  30FF               	movlw	255
  3195  025F  05FB               	andwf	___ftadd@f2,f
  3196  0260  30FF               	movlw	255
  3197  0261  05FC               	andwf	___ftadd@f2+1,f
  3198  0262  3000               	movlw	0
  3199  0263  05FD               	andwf	___ftadd@f2+2,f
  3200  0264  0825               	movf	___ftadd@exp2,w
  3201  0265  0226               	subwf	___ftadd@exp1,w
  3202  0266  1803               	skipnc
  3203  0267  2A8A               	goto	i1l1615
  3204  0268                     i1l1605:	
  3205  0268  3001               	movlw	1
  3206  0269                     u126_25:	
  3207  0269  35FB               	lslf	___ftadd@f2,f
  3208  026A  0DFC               	rlf	___ftadd@f2+1,f
  3209  026B  0DFD               	rlf	___ftadd@f2+2,f
  3210  026C  0B89               	decfsz	9,f
  3211  026D  2A69               	goto	u126_25
  3212  026E  3001               	movlw	1
  3213  026F  02A5               	subwf	___ftadd@exp2,f
  3214  0270  0825               	movf	___ftadd@exp2,w
  3215  0271  0626               	xorwf	___ftadd@exp1,w
  3216  0272  1903               	skipnz
  3217  0273  2A85               	goto	i1l1613
  3218  0274  3001               	movlw	1
  3219  0275  02A4               	subwf	___ftadd@sign,f
  3220  0276  0824               	movf	___ftadd@sign,w
  3221  0277  3907               	andlw	7
  3222  0278  1903               	btfsc	3,2
  3223  0279  2A85               	goto	i1l1613
  3224  027A  2A68               	goto	i1l1605
  3225  027B                     i1l1611:	
  3226  027B  3001               	movlw	1
  3227  027C                     u129_25:	
  3228  027C  36FA               	lsrf	___ftadd@f1+2,f
  3229  027D  0CF9               	rrf	___ftadd@f1+1,f
  3230  027E  0CF8               	rrf	___ftadd@f1,f
  3231  027F  0B89               	decfsz	9,f
  3232  0280  2A7C               	goto	u129_25
  3233  0281  3001               	movlw	1
  3234  0282  00A0               	movwf	??___ftadd
  3235  0283  0820               	movf	??___ftadd,w
  3236  0284  07A6               	addwf	___ftadd@exp1,f
  3237  0285                     i1l1613:	
  3238  0285  0826               	movf	___ftadd@exp1,w
  3239  0286  0625               	xorwf	___ftadd@exp2,w
  3240  0287  1903               	btfsc	3,2
  3241  0288  2AAF               	goto	i1l516
  3242  0289  2A7B               	goto	i1l1611
  3243  028A                     i1l1615:	
  3244  028A  0826               	movf	___ftadd@exp1,w
  3245  028B  0225               	subwf	___ftadd@exp2,w
  3246  028C  1803               	skipnc
  3247  028D  2AAF               	goto	i1l516
  3248  028E                     i1l1617:	
  3249  028E  3001               	movlw	1
  3250  028F                     u132_25:	
  3251  028F  35F8               	lslf	___ftadd@f1,f
  3252  0290  0DF9               	rlf	___ftadd@f1+1,f
  3253  0291  0DFA               	rlf	___ftadd@f1+2,f
  3254  0292  0B89               	decfsz	9,f
  3255  0293  2A8F               	goto	u132_25
  3256  0294  3001               	movlw	1
  3257  0295  02A6               	subwf	___ftadd@exp1,f
  3258  0296  0825               	movf	___ftadd@exp2,w
  3259  0297  0626               	xorwf	___ftadd@exp1,w
  3260  0298  1903               	skipnz
  3261  0299  2AAB               	goto	i1l1625
  3262  029A  3001               	movlw	1
  3263  029B  02A4               	subwf	___ftadd@sign,f
  3264  029C  0824               	movf	___ftadd@sign,w
  3265  029D  3907               	andlw	7
  3266  029E  1903               	btfsc	3,2
  3267  029F  2AAB               	goto	i1l1625
  3268  02A0  2A8E               	goto	i1l1617
  3269  02A1                     i1l1623:	
  3270  02A1  3001               	movlw	1
  3271  02A2                     u135_25:	
  3272  02A2  36FD               	lsrf	___ftadd@f2+2,f
  3273  02A3  0CFC               	rrf	___ftadd@f2+1,f
  3274  02A4  0CFB               	rrf	___ftadd@f2,f
  3275  02A5  0B89               	decfsz	9,f
  3276  02A6  2AA2               	goto	u135_25
  3277  02A7  3001               	movlw	1
  3278  02A8  00A0               	movwf	??___ftadd
  3279  02A9  0820               	movf	??___ftadd,w
  3280  02AA  07A5               	addwf	___ftadd@exp2,f
  3281  02AB                     i1l1625:	
  3282  02AB  0826               	movf	___ftadd@exp1,w
  3283  02AC  0625               	xorwf	___ftadd@exp2,w
  3284  02AD  1D03               	skipz
  3285  02AE  2AA1               	goto	i1l1623
  3286  02AF                     i1l516:	
  3287  02AF  1FA4               	btfss	___ftadd@sign,7
  3288  02B0  2AC1               	goto	i1l1629
  3289  02B1  30FF               	movlw	255
  3290  02B2  06F8               	xorwf	___ftadd@f1,f
  3291  02B3  30FF               	movlw	255
  3292  02B4  06F9               	xorwf	___ftadd@f1+1,f
  3293  02B5  30FF               	movlw	255
  3294  02B6  06FA               	xorwf	___ftadd@f1+2,f
  3295  02B7  3001               	movlw	1
  3296  02B8  07F8               	addwf	___ftadd@f1,f
  3297  02B9  3000               	movlw	0
  3298  02BA  1803               	skipnc
  3299  02BB  3001               	movlw	1
  3300  02BC  07F9               	addwf	___ftadd@f1+1,f
  3301  02BD  3000               	movlw	0
  3302  02BE  1803               	skipnc
  3303  02BF  3001               	movlw	1
  3304  02C0  07FA               	addwf	___ftadd@f1+2,f
  3305  02C1                     i1l1629:	
  3306  02C1  1F24               	btfss	___ftadd@sign,6
  3307  02C2  2AD3               	goto	i1l1633
  3308  02C3  30FF               	movlw	255
  3309  02C4  06FB               	xorwf	___ftadd@f2,f
  3310  02C5  30FF               	movlw	255
  3311  02C6  06FC               	xorwf	___ftadd@f2+1,f
  3312  02C7  30FF               	movlw	255
  3313  02C8  06FD               	xorwf	___ftadd@f2+2,f
  3314  02C9  3001               	movlw	1
  3315  02CA  07FB               	addwf	___ftadd@f2,f
  3316  02CB  3000               	movlw	0
  3317  02CC  1803               	skipnc
  3318  02CD  3001               	movlw	1
  3319  02CE  07FC               	addwf	___ftadd@f2+1,f
  3320  02CF  3000               	movlw	0
  3321  02D0  1803               	skipnc
  3322  02D1  3001               	movlw	1
  3323  02D2  07FD               	addwf	___ftadd@f2+2,f
  3324  02D3                     i1l1633:	
  3325  02D3  01A4               	clrf	___ftadd@sign
  3326  02D4  0878               	movf	___ftadd@f1,w
  3327  02D5  07FB               	addwf	___ftadd@f2,f
  3328  02D6  0879               	movf	___ftadd@f1+1,w
  3329  02D7  3DFC               	addwfc	___ftadd@f2+1,f
  3330  02D8  087A               	movf	___ftadd@f1+2,w
  3331  02D9  3DFD               	addwfc	___ftadd@f2+2,f
  3332  02DA  1FFD               	btfss	___ftadd@f2+2,7
  3333  02DB  2AEE               	goto	i1l1643
  3334  02DC  30FF               	movlw	255
  3335  02DD  06FB               	xorwf	___ftadd@f2,f
  3336  02DE  30FF               	movlw	255
  3337  02DF  06FC               	xorwf	___ftadd@f2+1,f
  3338  02E0  30FF               	movlw	255
  3339  02E1  06FD               	xorwf	___ftadd@f2+2,f
  3340  02E2  3001               	movlw	1
  3341  02E3  07FB               	addwf	___ftadd@f2,f
  3342  02E4  3000               	movlw	0
  3343  02E5  1803               	skipnc
  3344  02E6  3001               	movlw	1
  3345  02E7  07FC               	addwf	___ftadd@f2+1,f
  3346  02E8  3000               	movlw	0
  3347  02E9  1803               	skipnc
  3348  02EA  3001               	movlw	1
  3349  02EB  07FD               	addwf	___ftadd@f2+2,f
  3350  02EC  01A4               	clrf	___ftadd@sign
  3351  02ED  0AA4               	incf	___ftadd@sign,f
  3352  02EE                     i1l1643:	
  3353  02EE  087B               	movf	___ftadd@f2,w
  3354  02EF  00F0               	movwf	___ftpack@arg
  3355  02F0  087C               	movf	___ftadd@f2+1,w
  3356  02F1  00F1               	movwf	___ftpack@arg+1
  3357  02F2  087D               	movf	___ftadd@f2+2,w
  3358  02F3  00F2               	movwf	___ftpack@arg+2
  3359  02F4  0826               	movf	___ftadd@exp1,w
  3360  02F5  00A0               	movwf	??___ftadd
  3361  02F6  0820               	movf	??___ftadd,w
  3362  02F7  00F3               	movwf	___ftpack@exp
  3363  02F8  0824               	movf	___ftadd@sign,w
  3364  02F9  00A1               	movwf	??___ftadd+1
  3365  02FA  0821               	movf	??___ftadd+1,w
  3366  02FB  00F4               	movwf	___ftpack@sign
  3367  02FC  3185  25AA         	fcall	___ftpack
  3368  02FE  0870               	movf	?___ftpack,w
  3369  02FF  00F8               	movwf	?___ftadd
  3370  0300  0871               	movf	?___ftpack+1,w
  3371  0301  00F9               	movwf	?___ftadd+1
  3372  0302  0872               	movf	?___ftpack+2,w
  3373  0303  00FA               	movwf	?___ftadd+2
  3374  0304  0008               	return
  3375  0305                     __end_of___ftadd:	
  3376                           
  3377                           	psect	text10
  3378  03F5                     __ptext10:	
  3379 ;; *************** function ___ftmul *****************
  3380 ;; Defined at:
  3381 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  f1              3    8[COMMON] float 
  3384 ;;  f2              3   11[COMMON] float 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3387 ;;  sign            1    9[BANK0 ] unsigned char 
  3388 ;;  cntr            1    8[BANK0 ] unsigned char 
  3389 ;;  exp             1    4[BANK0 ] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  3    8[COMMON] float 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, pclath, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3399 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3403 ;;Total ram usage:       16 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    1
  3406 ;; This function calls:
  3407 ;;		___ftpack
  3408 ;; This function is called by:
  3409 ;;		_sqrt
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function ___ftmul
  3415  03F5                     ___ftmul:	
  3416                           
  3417                           ;incstack = 0
  3418                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3419  03F5  0878               	movf	___ftmul@f1,w
  3420  03F6  0020               	movlb	0	; select bank0
  3421  03F7  00A0               	movwf	??___ftmul
  3422  03F8  0879               	movf	___ftmul@f1+1,w
  3423  03F9  00A1               	movwf	??___ftmul+1
  3424  03FA  087A               	movf	___ftmul@f1+2,w
  3425  03FB  00A2               	movwf	??___ftmul+2
  3426  03FC  1003               	clrc
  3427  03FD  0D21               	rlf	??___ftmul+1,w
  3428  03FE  0D22               	rlf	??___ftmul+2,w
  3429  03FF  00A3               	movwf	??___ftmul+3
  3430  0400  0823               	movf	??___ftmul+3,w
  3431  0401  00A4               	movwf	___ftmul@exp
  3432  0402  0824               	movf	___ftmul@exp,w
  3433  0403  1D03               	btfss	3,2
  3434  0404  2C0C               	goto	i1l1697
  3435  0405  3000               	movlw	0
  3436  0406  00F8               	movwf	?___ftmul
  3437  0407  3000               	movlw	0
  3438  0408  00F9               	movwf	?___ftmul+1
  3439  0409  3000               	movlw	0
  3440  040A  00FA               	movwf	?___ftmul+2
  3441  040B  0008               	return
  3442  040C                     i1l1697:	
  3443  040C  087B               	movf	___ftmul@f2,w
  3444  040D  00A0               	movwf	??___ftmul
  3445  040E  087C               	movf	___ftmul@f2+1,w
  3446  040F  00A1               	movwf	??___ftmul+1
  3447  0410  087D               	movf	___ftmul@f2+2,w
  3448  0411  00A2               	movwf	??___ftmul+2
  3449  0412  1003               	clrc
  3450  0413  0D21               	rlf	??___ftmul+1,w
  3451  0414  0D22               	rlf	??___ftmul+2,w
  3452  0415  00A3               	movwf	??___ftmul+3
  3453  0416  0823               	movf	??___ftmul+3,w
  3454  0417  00A9               	movwf	___ftmul@sign
  3455  0418  0829               	movf	___ftmul@sign,w
  3456  0419  1D03               	btfss	3,2
  3457  041A  2C22               	goto	i1l1703
  3458  041B  3000               	movlw	0
  3459  041C  00F8               	movwf	?___ftmul
  3460  041D  3000               	movlw	0
  3461  041E  00F9               	movwf	?___ftmul+1
  3462  041F  3000               	movlw	0
  3463  0420  00FA               	movwf	?___ftmul+2
  3464  0421  0008               	return
  3465  0422                     i1l1703:	
  3466  0422  0829               	movf	___ftmul@sign,w
  3467  0423  3E7B               	addlw	123
  3468  0424  00A0               	movwf	??___ftmul
  3469  0425  0820               	movf	??___ftmul,w
  3470  0426  07A4               	addwf	___ftmul@exp,f
  3471  0427  0878               	movf	___ftmul@f1,w
  3472  0428  00A0               	movwf	??___ftmul
  3473  0429  0879               	movf	___ftmul@f1+1,w
  3474  042A  00A1               	movwf	??___ftmul+1
  3475  042B  087A               	movf	___ftmul@f1+2,w
  3476  042C  00A2               	movwf	??___ftmul+2
  3477  042D  3010               	movlw	16
  3478  042E                     u146_25:	
  3479  042E  36A2               	lsrf	??___ftmul+2,f
  3480  042F  0CA1               	rrf	??___ftmul+1,f
  3481  0430  0CA0               	rrf	??___ftmul,f
  3482  0431  0B89               	decfsz	9,f
  3483  0432  2C2E               	goto	u146_25
  3484  0433  0820               	movf	??___ftmul,w
  3485  0434  00A3               	movwf	??___ftmul+3
  3486  0435  0823               	movf	??___ftmul+3,w
  3487  0436  00A9               	movwf	___ftmul@sign
  3488  0437  087B               	movf	___ftmul@f2,w
  3489  0438  00A0               	movwf	??___ftmul
  3490  0439  087C               	movf	___ftmul@f2+1,w
  3491  043A  00A1               	movwf	??___ftmul+1
  3492  043B  087D               	movf	___ftmul@f2+2,w
  3493  043C  00A2               	movwf	??___ftmul+2
  3494  043D  3010               	movlw	16
  3495  043E                     u147_25:	
  3496  043E  36A2               	lsrf	??___ftmul+2,f
  3497  043F  0CA1               	rrf	??___ftmul+1,f
  3498  0440  0CA0               	rrf	??___ftmul,f
  3499  0441  0B89               	decfsz	9,f
  3500  0442  2C3E               	goto	u147_25
  3501  0443  0820               	movf	??___ftmul,w
  3502  0444  00A3               	movwf	??___ftmul+3
  3503  0445  0823               	movf	??___ftmul+3,w
  3504  0446  06A9               	xorwf	___ftmul@sign,f
  3505  0447  3080               	movlw	128
  3506  0448  00A0               	movwf	??___ftmul
  3507  0449  0820               	movf	??___ftmul,w
  3508  044A  05A9               	andwf	___ftmul@sign,f
  3509  044B  17F9               	bsf	___ftmul@f1+1,7
  3510  044C  17FC               	bsf	___ftmul@f2+1,7
  3511  044D  30FF               	movlw	255
  3512  044E  05FB               	andwf	___ftmul@f2,f
  3513  044F  30FF               	movlw	255
  3514  0450  05FC               	andwf	___ftmul@f2+1,f
  3515  0451  3000               	movlw	0
  3516  0452  05FD               	andwf	___ftmul@f2+2,f
  3517  0453  3000               	movlw	0
  3518  0454  00A5               	movwf	___ftmul@f3_as_product
  3519  0455  3000               	movlw	0
  3520  0456  00A6               	movwf	___ftmul@f3_as_product+1
  3521  0457  3000               	movlw	0
  3522  0458  00A7               	movwf	___ftmul@f3_as_product+2
  3523  0459  3007               	movlw	7
  3524  045A  00A0               	movwf	??___ftmul
  3525  045B  0820               	movf	??___ftmul,w
  3526  045C  00A8               	movwf	___ftmul@cntr
  3527  045D                     i1l1715:	
  3528  045D  1C78               	btfss	___ftmul@f1,0
  3529  045E  2C65               	goto	i1l1719
  3530  045F  087B               	movf	___ftmul@f2,w
  3531  0460  07A5               	addwf	___ftmul@f3_as_product,f
  3532  0461  087C               	movf	___ftmul@f2+1,w
  3533  0462  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3534  0463  087D               	movf	___ftmul@f2+2,w
  3535  0464  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3536  0465                     i1l1719:	
  3537  0465  3001               	movlw	1
  3538  0466                     u149_25:	
  3539  0466  36FA               	lsrf	___ftmul@f1+2,f
  3540  0467  0CF9               	rrf	___ftmul@f1+1,f
  3541  0468  0CF8               	rrf	___ftmul@f1,f
  3542  0469  0B89               	decfsz	9,f
  3543  046A  2C66               	goto	u149_25
  3544  046B  3001               	movlw	1
  3545  046C                     u150_25:	
  3546  046C  35FB               	lslf	___ftmul@f2,f
  3547  046D  0DFC               	rlf	___ftmul@f2+1,f
  3548  046E  0DFD               	rlf	___ftmul@f2+2,f
  3549  046F  0B89               	decfsz	9,f
  3550  0470  2C6C               	goto	u150_25
  3551  0471  3001               	movlw	1
  3552  0472  02A8               	subwf	___ftmul@cntr,f
  3553  0473  1D03               	btfss	3,2
  3554  0474  2C5D               	goto	i1l1715
  3555  0475  3009               	movlw	9
  3556  0476  00A0               	movwf	??___ftmul
  3557  0477  0820               	movf	??___ftmul,w
  3558  0478  00A8               	movwf	___ftmul@cntr
  3559  0479                     i1l1727:	
  3560  0479  1C78               	btfss	___ftmul@f1,0
  3561  047A  2C81               	goto	i1l1731
  3562  047B  087B               	movf	___ftmul@f2,w
  3563  047C  07A5               	addwf	___ftmul@f3_as_product,f
  3564  047D  087C               	movf	___ftmul@f2+1,w
  3565  047E  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3566  047F  087D               	movf	___ftmul@f2+2,w
  3567  0480  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3568  0481                     i1l1731:	
  3569  0481  3001               	movlw	1
  3570  0482                     u153_25:	
  3571  0482  36FA               	lsrf	___ftmul@f1+2,f
  3572  0483  0CF9               	rrf	___ftmul@f1+1,f
  3573  0484  0CF8               	rrf	___ftmul@f1,f
  3574  0485  0B89               	decfsz	9,f
  3575  0486  2C82               	goto	u153_25
  3576  0487  3001               	movlw	1
  3577  0488                     u154_25:	
  3578  0488  36A7               	lsrf	___ftmul@f3_as_product+2,f
  3579  0489  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3580  048A  0CA5               	rrf	___ftmul@f3_as_product,f
  3581  048B  0B89               	decfsz	9,f
  3582  048C  2C88               	goto	u154_25
  3583  048D  3001               	movlw	1
  3584  048E  02A8               	subwf	___ftmul@cntr,f
  3585  048F  1D03               	btfss	3,2
  3586  0490  2C79               	goto	i1l1727
  3587  0491  0825               	movf	___ftmul@f3_as_product,w
  3588  0492  00F0               	movwf	___ftpack@arg
  3589  0493  0826               	movf	___ftmul@f3_as_product+1,w
  3590  0494  00F1               	movwf	___ftpack@arg+1
  3591  0495  0827               	movf	___ftmul@f3_as_product+2,w
  3592  0496  00F2               	movwf	___ftpack@arg+2
  3593  0497  0824               	movf	___ftmul@exp,w
  3594  0498  00A0               	movwf	??___ftmul
  3595  0499  0820               	movf	??___ftmul,w
  3596  049A  00F3               	movwf	___ftpack@exp
  3597  049B  0829               	movf	___ftmul@sign,w
  3598  049C  00A1               	movwf	??___ftmul+1
  3599  049D  0821               	movf	??___ftmul+1,w
  3600  049E  00F4               	movwf	___ftpack@sign
  3601  049F  3185  25AA         	fcall	___ftpack
  3602  04A1  0870               	movf	?___ftpack,w
  3603  04A2  00F8               	movwf	?___ftmul
  3604  04A3  0871               	movf	?___ftpack+1,w
  3605  04A4  00F9               	movwf	?___ftmul+1
  3606  04A5  0872               	movf	?___ftpack+2,w
  3607  04A6  00FA               	movwf	?___ftmul+2
  3608  04A7  0008               	return
  3609  04A8                     __end_of___ftmul:	
  3610                           
  3611                           	psect	text11
  3612  06A1                     __ptext11:	
  3613 ;; *************** function ___ftge *****************
  3614 ;; Defined at:
  3615 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  ff1             3    0[COMMON] float 
  3618 ;;  ff2             3    3[COMMON] float 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;		None               void
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3630 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;Total ram usage:        9 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_sqrt
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           
  3644                           ;psect for function ___ftge
  3645  06A1                     ___ftge:	
  3646                           
  3647                           ;incstack = 0
  3648                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3649  06A1  1FF2               	btfss	___ftge@ff1+2,7
  3650  06A2  2EB7               	goto	i1l1675
  3651  06A3  0970               	comf	___ftge@ff1,w
  3652  06A4  00F6               	movwf	??___ftge
  3653  06A5  0971               	comf	___ftge@ff1+1,w
  3654  06A6  00F7               	movwf	??___ftge+1
  3655  06A7  0972               	comf	___ftge@ff1+2,w
  3656  06A8  00F8               	movwf	??___ftge+2
  3657  06A9  0AF6               	incf	??___ftge,f
  3658  06AA  1903               	skipnz
  3659  06AB  0AF7               	incf	??___ftge+1,f
  3660  06AC  1903               	skipnz
  3661  06AD  0AF8               	incf	??___ftge+2,f
  3662  06AE  3000               	movlw	0
  3663  06AF  0776               	addwf	??___ftge,w
  3664  06B0  00F0               	movwf	___ftge@ff1
  3665  06B1  3000               	movlw	0
  3666  06B2  3D77               	addwfc	??___ftge+1,w
  3667  06B3  00F1               	movwf	___ftge@ff1+1
  3668  06B4  3080               	movlw	128
  3669  06B5  3D78               	addwfc	??___ftge+2,w
  3670  06B6  00F2               	movwf	___ftge@ff1+2
  3671  06B7                     i1l1675:	
  3672  06B7  1FF5               	btfss	___ftge@ff2+2,7
  3673  06B8  2ECD               	goto	i1l1679
  3674  06B9  0973               	comf	___ftge@ff2,w
  3675  06BA  00F6               	movwf	??___ftge
  3676  06BB  0974               	comf	___ftge@ff2+1,w
  3677  06BC  00F7               	movwf	??___ftge+1
  3678  06BD  0975               	comf	___ftge@ff2+2,w
  3679  06BE  00F8               	movwf	??___ftge+2
  3680  06BF  0AF6               	incf	??___ftge,f
  3681  06C0  1903               	skipnz
  3682  06C1  0AF7               	incf	??___ftge+1,f
  3683  06C2  1903               	skipnz
  3684  06C3  0AF8               	incf	??___ftge+2,f
  3685  06C4  3000               	movlw	0
  3686  06C5  0776               	addwf	??___ftge,w
  3687  06C6  00F3               	movwf	___ftge@ff2
  3688  06C7  3000               	movlw	0
  3689  06C8  3D77               	addwfc	??___ftge+1,w
  3690  06C9  00F4               	movwf	___ftge@ff2+1
  3691  06CA  3080               	movlw	128
  3692  06CB  3D78               	addwfc	??___ftge+2,w
  3693  06CC  00F5               	movwf	___ftge@ff2+2
  3694  06CD                     i1l1679:	
  3695  06CD  3080               	movlw	128
  3696  06CE  06F2               	xorwf	___ftge@ff1+2,f
  3697  06CF  3080               	movlw	128
  3698  06D0  06F5               	xorwf	___ftge@ff2+2,f
  3699  06D1  0875               	movf	___ftge@ff2+2,w
  3700  06D2  0272               	subwf	___ftge@ff1+2,w
  3701  06D3  1D03               	skipz
  3702  06D4  0008               	return
  3703  06D5  0874               	movf	___ftge@ff2+1,w
  3704  06D6  0271               	subwf	___ftge@ff1+1,w
  3705  06D7  1D03               	skipz
  3706  06D8  0008               	return
  3707  06D9  0873               	movf	___ftge@ff2,w
  3708  06DA  0270               	subwf	___ftge@ff1,w
  3709  06DB  0008               	return
  3710  06DC                     __end_of___ftge:	
  3711                           
  3712                           	psect	text12
  3713  052F                     __ptext12:	
  3714 ;; *************** function _nRF_Setup *****************
  3715 ;; Defined at:
  3716 ;;		line 15 in file "nRF24L01P.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  RXTX_ADDR       5    9[COMMON] unsigned char [5]
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3731 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;Total ram usage:        7 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    2
  3737 ;; This function calls:
  3738 ;;		_WriteAddress
  3739 ;;		_WriteRegister
  3740 ;; This function is called by:
  3741 ;;		_ISR_ROUTINE
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           
  3746                           ;psect for function _nRF_Setup
  3747  052F                     _nRF_Setup:	
  3748                           
  3749                           ;nRF24L01P.c: 18: uint8_t RXTX_ADDR[5];
  3750                           ;nRF24L01P.c: 19: RXTX_ADDR[4] = 0xAB;
  3751                           
  3752                           ;incstack = 0
  3753                           ; Regs used in _nRF_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3754  052F  30AB               	movlw	171
  3755  0530  00F7               	movwf	??_nRF_Setup
  3756  0531  0877               	movf	??_nRF_Setup,w
  3757  0532  00FD               	movwf	nRF_Setup@RXTX_ADDR+4
  3758                           
  3759                           ;nRF24L01P.c: 20: RXTX_ADDR[3] = 0xAC;
  3760  0533  30AC               	movlw	172
  3761  0534  00F7               	movwf	??_nRF_Setup
  3762  0535  0877               	movf	??_nRF_Setup,w
  3763  0536  00FC               	movwf	nRF_Setup@RXTX_ADDR+3
  3764                           
  3765                           ;nRF24L01P.c: 21: RXTX_ADDR[2] = 0xAD;
  3766  0537  30AD               	movlw	173
  3767  0538  00F7               	movwf	??_nRF_Setup
  3768  0539  0877               	movf	??_nRF_Setup,w
  3769  053A  00FB               	movwf	nRF_Setup@RXTX_ADDR+2
  3770                           
  3771                           ;nRF24L01P.c: 22: RXTX_ADDR[1] = 0xAE;
  3772  053B  30AE               	movlw	174
  3773  053C  00F7               	movwf	??_nRF_Setup
  3774  053D  0877               	movf	??_nRF_Setup,w
  3775  053E  00FA               	movwf	nRF_Setup@RXTX_ADDR+1
  3776                           
  3777                           ;nRF24L01P.c: 23: RXTX_ADDR[0] = 0xAF;
  3778  053F  30AF               	movlw	175
  3779  0540  00F7               	movwf	??_nRF_Setup
  3780  0541  0877               	movf	??_nRF_Setup,w
  3781  0542  00F9               	movwf	nRF_Setup@RXTX_ADDR
  3782                           
  3783                           ;nRF24L01P.c: 25: LATAbits.LATA4 = 0;
  3784  0543  0022               	movlb	2	; select bank2
  3785  0544  120C               	bcf	12,4	;volatile
  3786                           
  3787                           ;nRF24L01P.c: 26: WriteAddress(0x10, 5, RXTX_ADDR);
  3788  0545  3005               	movlw	5
  3789  0546  00F7               	movwf	??_nRF_Setup
  3790  0547  0877               	movf	??_nRF_Setup,w
  3791  0548  00F1               	movwf	WriteAddress@num
  3792  0549  3079               	movlw	(low (nRF_Setup@RXTX_ADDR| 0))& (0+255)
  3793  054A  00F8               	movwf	??_nRF_Setup+1
  3794  054B  0878               	movf	??_nRF_Setup+1,w
  3795  054C  00F2               	movwf	WriteAddress@addr
  3796  054D  3010               	movlw	16
  3797  054E  3187  2733  3185   	fcall	_WriteAddress
  3798                           
  3799                           ;nRF24L01P.c: 27: WriteAddress(0x0A, 5, RXTX_ADDR);
  3800  0551  3005               	movlw	5
  3801  0552  00F7               	movwf	??_nRF_Setup
  3802  0553  0877               	movf	??_nRF_Setup,w
  3803  0554  00F1               	movwf	WriteAddress@num
  3804  0555  3079               	movlw	(low (nRF_Setup@RXTX_ADDR| 0))& (0+255)
  3805  0556  00F8               	movwf	??_nRF_Setup+1
  3806  0557  0878               	movf	??_nRF_Setup+1,w
  3807  0558  00F2               	movwf	WriteAddress@addr
  3808  0559  300A               	movlw	10
  3809  055A  3187  2733  3185   	fcall	_WriteAddress
  3810                           
  3811                           ;nRF24L01P.c: 28: WriteRegister(0x01, 0x01);
  3812  055D  01F1               	clrf	WriteRegister@val
  3813  055E  0AF1               	incf	WriteRegister@val,f
  3814  055F  3001               	movlw	1
  3815  0560  318F  27D1  3185   	fcall	_WriteRegister
  3816                           
  3817                           ;nRF24L01P.c: 29: WriteRegister(0x02, 0x01);
  3818  0563  01F1               	clrf	WriteRegister@val
  3819  0564  0AF1               	incf	WriteRegister@val,f
  3820  0565  3002               	movlw	2
  3821  0566  318F  27D1  3185   	fcall	_WriteRegister
  3822                           
  3823                           ;nRF24L01P.c: 30: WriteRegister(0x03, 0x03);
  3824  0569  3003               	movlw	3
  3825  056A  00F7               	movwf	??_nRF_Setup
  3826  056B  0877               	movf	??_nRF_Setup,w
  3827  056C  00F1               	movwf	WriteRegister@val
  3828  056D  3003               	movlw	3
  3829  056E  318F  27D1  3185   	fcall	_WriteRegister
  3830                           
  3831                           ;nRF24L01P.c: 31: WriteRegister(0x04, 0x2F);
  3832  0571  302F               	movlw	47
  3833  0572  00F7               	movwf	??_nRF_Setup
  3834  0573  0877               	movf	??_nRF_Setup,w
  3835  0574  00F1               	movwf	WriteRegister@val
  3836  0575  3004               	movlw	4
  3837  0576  318F  27D1  3185   	fcall	_WriteRegister
  3838                           
  3839                           ;nRF24L01P.c: 32: WriteRegister(0x05, 0x2C);
  3840  0579  302C               	movlw	44
  3841  057A  00F7               	movwf	??_nRF_Setup
  3842  057B  0877               	movf	??_nRF_Setup,w
  3843  057C  00F1               	movwf	WriteRegister@val
  3844  057D  3005               	movlw	5
  3845  057E  318F  27D1  3185   	fcall	_WriteRegister
  3846                           
  3847                           ;nRF24L01P.c: 33: WriteRegister(0x06, 0x06);
  3848  0581  3006               	movlw	6
  3849  0582  00F7               	movwf	??_nRF_Setup
  3850  0583  0877               	movf	??_nRF_Setup,w
  3851  0584  00F1               	movwf	WriteRegister@val
  3852  0585  3006               	movlw	6
  3853  0586  318F  27D1  3185   	fcall	_WriteRegister
  3854                           
  3855                           ;nRF24L01P.c: 34: WriteRegister(0x07,0x70);
  3856  0589  3070               	movlw	112
  3857  058A  00F7               	movwf	??_nRF_Setup
  3858  058B  0877               	movf	??_nRF_Setup,w
  3859  058C  00F1               	movwf	WriteRegister@val
  3860  058D  3007               	movlw	7
  3861  058E  318F  27D1  3185   	fcall	_WriteRegister
  3862                           
  3863                           ;nRF24L01P.c: 35: WriteRegister(0x11, 0x05);
  3864  0591  3005               	movlw	5
  3865  0592  00F7               	movwf	??_nRF_Setup
  3866  0593  0877               	movf	??_nRF_Setup,w
  3867  0594  00F1               	movwf	WriteRegister@val
  3868  0595  3011               	movlw	17
  3869  0596  318F  27D1  3185   	fcall	_WriteRegister
  3870                           
  3871                           ;nRF24L01P.c: 36: WriteRegister(0x00,0x7A);
  3872  0599  307A               	movlw	122
  3873  059A  00F7               	movwf	??_nRF_Setup
  3874  059B  0877               	movf	??_nRF_Setup,w
  3875  059C  00F1               	movwf	WriteRegister@val
  3876  059D  3000               	movlw	0
  3877  059E  318F  27D1  3185   	fcall	_WriteRegister
  3878                           
  3879                           ;nRF24L01P.c: 37: _delay((unsigned long)((2)*(8000000L/4000.0)));
  3880  05A1  3006               	movlw	6
  3881  05A2  00F7               	movwf	??_nRF_Setup
  3882  05A3  3030               	movlw	48
  3883  05A4                     u199_27:	
  3884  05A4  0B89               	decfsz	9,f
  3885  05A5  2DA4               	goto	u199_27
  3886  05A6  0BF7               	decfsz	??_nRF_Setup,f
  3887  05A7  2DA4               	goto	u199_27
  3888  05A8  3200               	nop2
  3889  05A9  0008               	return
  3890  05AA                     __end_of_nRF_Setup:	
  3891                           
  3892                           	psect	text13
  3893  0733                     __ptext13:	
  3894 ;; *************** function _WriteAddress *****************
  3895 ;; Defined at:
  3896 ;;		line 61 in file "nRF24L01P.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  reg             1    wreg     unsigned char 
  3899 ;;  num             1    1[COMMON] unsigned char 
  3900 ;;  addr            1    2[COMMON] PTR unsigned char 
  3901 ;;		 -> nRF_Setup@RXTX_ADDR(5), 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  reg             1    4[COMMON] unsigned char 
  3904 ;;  i               2    5[COMMON] int 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;Total ram usage:        6 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    1
  3921 ;; This function calls:
  3922 ;;		_SPI_transfer
  3923 ;; This function is called by:
  3924 ;;		_nRF_Setup
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _WriteAddress
  3930  0733                     _WriteAddress:	
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _WriteAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3934                           ;WriteAddress@reg stored from wreg
  3935  0733  00F4               	movwf	WriteAddress@reg
  3936                           
  3937                           ;nRF24L01P.c: 63: LATCbits.LATC6 = 0;
  3938  0734  0022               	movlb	2	; select bank2
  3939  0735  130E               	bcf	14,6	;volatile
  3940                           
  3941                           ;nRF24L01P.c: 64: SPI_transfer(0x20 | reg);
  3942  0736  0874               	movf	WriteAddress@reg,w
  3943  0737  3820               	iorlw	32
  3944  0738  318F  27AA  3187   	fcall	_SPI_transfer
  3945                           
  3946                           ;nRF24L01P.c: 65: for (int i=0; i<num; i++)
  3947  073B  01F5               	clrf	WriteAddress@i
  3948  073C  01F6               	clrf	WriteAddress@i+1
  3949  073D                     i1l1663:	
  3950  073D  0876               	movf	WriteAddress@i+1,w
  3951  073E  3A80               	xorlw	128
  3952  073F  00F3               	movwf	??_WriteAddress
  3953  0740  3080               	movlw	128
  3954  0741  0273               	subwf	??_WriteAddress,w
  3955  0742  1D03               	skipz
  3956  0743  2F46               	goto	u140_25
  3957  0744  0871               	movf	WriteAddress@num,w
  3958  0745  0275               	subwf	WriteAddress@i,w
  3959  0746                     u140_25:	
  3960  0746  1803               	btfsc	3,0
  3961  0747  2F57               	goto	i1l137
  3962                           
  3963                           ;nRF24L01P.c: 66: SPI_transfer(addr[i]);
  3964  0748  0875               	movf	WriteAddress@i,w
  3965  0749  0772               	addwf	WriteAddress@addr,w
  3966  074A  00F3               	movwf	??_WriteAddress
  3967  074B  0873               	movf	??_WriteAddress,w
  3968  074C  0086               	movwf	6
  3969  074D  0187               	clrf	7
  3970  074E  0801               	movf	1,w
  3971  074F  318F  27AA  3187   	fcall	_SPI_transfer
  3972  0752  3001               	movlw	1
  3973  0753  07F5               	addwf	WriteAddress@i,f
  3974  0754  3000               	movlw	0
  3975  0755  3DF6               	addwfc	WriteAddress@i+1,f
  3976  0756  2F3D               	goto	i1l1663
  3977  0757                     i1l137:	
  3978                           
  3979                           ;nRF24L01P.c: 67: LATCbits.LATC6 = 1;
  3980  0757  0022               	movlb	2	; select bank2
  3981  0758  170E               	bsf	14,6	;volatile
  3982  0759  0008               	return
  3983  075A                     __end_of_WriteAddress:	
  3984                           
  3985                           	psect	text14
  3986  06DC                     __ptext14:	
  3987 ;; *************** function ___lmul *****************
  3988 ;; Defined at:
  3989 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  multiplier      4    0[COMMON] unsigned long 
  3992 ;;  multiplicand    4    4[COMMON] unsigned long 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  product         4    8[COMMON] unsigned long 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  4    0[COMMON] unsigned long 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4004 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;Total ram usage:       12 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_ISR_ROUTINE
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function ___lmul
  4019  06DC                     ___lmul:	
  4020                           
  4021                           ;incstack = 0
  4022                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4023  06DC  3000               	movlw	0
  4024  06DD  00FB               	movwf	___lmul@product+3
  4025  06DE  3000               	movlw	0
  4026  06DF  00FA               	movwf	___lmul@product+2
  4027  06E0  3000               	movlw	0
  4028  06E1  00F9               	movwf	___lmul@product+1
  4029  06E2  3000               	movlw	0
  4030  06E3  00F8               	movwf	___lmul@product
  4031  06E4                     i1l1961:	
  4032  06E4  1C70               	btfss	___lmul@multiplier,0
  4033  06E5  2EEE               	goto	i1l1965
  4034  06E6  0874               	movf	___lmul@multiplicand,w
  4035  06E7  07F8               	addwf	___lmul@product,f
  4036  06E8  0875               	movf	___lmul@multiplicand+1,w
  4037  06E9  3DF9               	addwfc	___lmul@product+1,f
  4038  06EA  0876               	movf	___lmul@multiplicand+2,w
  4039  06EB  3DFA               	addwfc	___lmul@product+2,f
  4040  06EC  0877               	movf	___lmul@multiplicand+3,w
  4041  06ED  3DFB               	addwfc	___lmul@product+3,f
  4042  06EE                     i1l1965:	
  4043  06EE  3001               	movlw	1
  4044  06EF                     u163_25:	
  4045  06EF  35F4               	lslf	___lmul@multiplicand,f
  4046  06F0  0DF5               	rlf	___lmul@multiplicand+1,f
  4047  06F1  0DF6               	rlf	___lmul@multiplicand+2,f
  4048  06F2  0DF7               	rlf	___lmul@multiplicand+3,f
  4049  06F3  0B89               	decfsz	9,f
  4050  06F4  2EEF               	goto	u163_25
  4051  06F5  3001               	movlw	1
  4052  06F6                     u164_25:	
  4053  06F6  36F3               	lsrf	___lmul@multiplier+3,f
  4054  06F7  0CF2               	rrf	___lmul@multiplier+2,f
  4055  06F8  0CF1               	rrf	___lmul@multiplier+1,f
  4056  06F9  0CF0               	rrf	___lmul@multiplier,f
  4057  06FA  0B89               	decfsz	9,f
  4058  06FB  2EF6               	goto	u164_25
  4059  06FC  0873               	movf	___lmul@multiplier+3,w
  4060  06FD  0472               	iorwf	___lmul@multiplier+2,w
  4061  06FE  0471               	iorwf	___lmul@multiplier+1,w
  4062  06FF  0470               	iorwf	___lmul@multiplier,w
  4063  0700  1D03               	skipz
  4064  0701  2EE4               	goto	i1l1961
  4065  0702  087B               	movf	___lmul@product+3,w
  4066  0703  00F3               	movwf	?___lmul+3
  4067  0704  087A               	movf	___lmul@product+2,w
  4068  0705  00F2               	movwf	?___lmul+2
  4069  0706  0879               	movf	___lmul@product+1,w
  4070  0707  00F1               	movwf	?___lmul+1
  4071  0708  0878               	movf	___lmul@product,w
  4072  0709  00F0               	movwf	?___lmul
  4073  070A  0008               	return
  4074  070B                     __end_of___lmul:	
  4075                           
  4076                           	psect	text15
  4077  070B                     __ptext15:	
  4078 ;; *************** function ___lltoft *****************
  4079 ;; Defined at:
  4080 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  c               4    8[COMMON] unsigned long 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  exp             1   13[COMMON] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  3    8[COMMON] float 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, pclath, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;Total ram usage:        6 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    1
  4101 ;; This function calls:
  4102 ;;		___ftpack
  4103 ;; This function is called by:
  4104 ;;		_ISR_ROUTINE
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function ___lltoft
  4110  070B                     ___lltoft:	
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4114  070B  308E               	movlw	142
  4115  070C  00FC               	movwf	??___lltoft
  4116  070D  087C               	movf	??___lltoft,w
  4117  070E  00FD               	movwf	___lltoft@exp
  4118  070F                     i1l2043:	
  4119  070F  30FF               	movlw	255
  4120  0710  057B               	andwf	___lltoft@c+3,w
  4121  0711  1903               	btfsc	3,2
  4122  0712  2F1F               	goto	i1l2045
  4123  0713  3001               	movlw	1
  4124  0714                     u183_25:	
  4125  0714  36FB               	lsrf	___lltoft@c+3,f
  4126  0715  0CFA               	rrf	___lltoft@c+2,f
  4127  0716  0CF9               	rrf	___lltoft@c+1,f
  4128  0717  0CF8               	rrf	___lltoft@c,f
  4129  0718  0B89               	decfsz	9,f
  4130  0719  2F14               	goto	u183_25
  4131  071A  3001               	movlw	1
  4132  071B  00FC               	movwf	??___lltoft
  4133  071C  087C               	movf	??___lltoft,w
  4134  071D  07FD               	addwf	___lltoft@exp,f
  4135  071E  2F0F               	goto	i1l2043
  4136  071F                     i1l2045:	
  4137  071F  0878               	movf	___lltoft@c,w
  4138  0720  00F0               	movwf	___ftpack@arg
  4139  0721  0879               	movf	___lltoft@c+1,w
  4140  0722  00F1               	movwf	___ftpack@arg+1
  4141  0723  087A               	movf	___lltoft@c+2,w
  4142  0724  00F2               	movwf	___ftpack@arg+2
  4143  0725  087D               	movf	___lltoft@exp,w
  4144  0726  00FC               	movwf	??___lltoft
  4145  0727  087C               	movf	??___lltoft,w
  4146  0728  00F3               	movwf	___ftpack@exp
  4147  0729  01F4               	clrf	___ftpack@sign
  4148  072A  3185  25AA         	fcall	___ftpack
  4149  072C  0870               	movf	?___ftpack,w
  4150  072D  00F8               	movwf	?___lltoft
  4151  072E  0871               	movf	?___ftpack+1,w
  4152  072F  00F9               	movwf	?___lltoft+1
  4153  0730  0872               	movf	?___ftpack+2,w
  4154  0731  00FA               	movwf	?___lltoft+2
  4155  0732  0008               	return
  4156  0733                     __end_of___lltoft:	
  4157                           
  4158                           	psect	text16
  4159  05AA                     __ptext16:	
  4160 ;; *************** function ___ftpack *****************
  4161 ;; Defined at:
  4162 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  arg             3    0[COMMON] unsigned um
  4165 ;;  exp             1    3[COMMON] unsigned char 
  4166 ;;  sign            1    4[COMMON] unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  3    0[COMMON] float 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4178 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;Total ram usage:        8 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		___ftadd
  4188 ;;		___ftmul
  4189 ;;		___lltoft
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function ___ftpack
  4195  05AA                     ___ftpack:	
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4199  05AA  0873               	movf	___ftpack@exp,w
  4200  05AB  1903               	btfsc	3,2
  4201  05AC  2DB2               	goto	i1l1543
  4202  05AD  0872               	movf	___ftpack@arg+2,w
  4203  05AE  0471               	iorwf	___ftpack@arg+1,w
  4204  05AF  0470               	iorwf	___ftpack@arg,w
  4205  05B0  1D03               	skipz
  4206  05B1  2DC3               	goto	i1l1549
  4207  05B2                     i1l1543:	
  4208  05B2  3000               	movlw	0
  4209  05B3  00F0               	movwf	?___ftpack
  4210  05B4  3000               	movlw	0
  4211  05B5  00F1               	movwf	?___ftpack+1
  4212  05B6  3000               	movlw	0
  4213  05B7  00F2               	movwf	?___ftpack+2
  4214  05B8  0008               	return
  4215  05B9                     i1l1547:	
  4216  05B9  3001               	movlw	1
  4217  05BA  00F5               	movwf	??___ftpack
  4218  05BB  0875               	movf	??___ftpack,w
  4219  05BC  07F3               	addwf	___ftpack@exp,f
  4220  05BD  3001               	movlw	1
  4221  05BE                     u106_25:	
  4222  05BE  36F2               	lsrf	___ftpack@arg+2,f
  4223  05BF  0CF1               	rrf	___ftpack@arg+1,f
  4224  05C0  0CF0               	rrf	___ftpack@arg,f
  4225  05C1  0B89               	decfsz	9,f
  4226  05C2  2DBE               	goto	u106_25
  4227  05C3                     i1l1549:	
  4228  05C3  30FE               	movlw	254
  4229  05C4  0572               	andwf	___ftpack@arg+2,w
  4230  05C5  1903               	btfsc	3,2
  4231  05C6  2DDC               	goto	i1l485
  4232  05C7  2DB9               	goto	i1l1547
  4233  05C8                     i1l1551:	
  4234  05C8  3001               	movlw	1
  4235  05C9  00F5               	movwf	??___ftpack
  4236  05CA  0875               	movf	??___ftpack,w
  4237  05CB  07F3               	addwf	___ftpack@exp,f
  4238  05CC  3001               	movlw	1
  4239  05CD  07F0               	addwf	___ftpack@arg,f
  4240  05CE  3000               	movlw	0
  4241  05CF  1803               	skipnc
  4242  05D0  3001               	movlw	1
  4243  05D1  07F1               	addwf	___ftpack@arg+1,f
  4244  05D2  3000               	movlw	0
  4245  05D3  1803               	skipnc
  4246  05D4  3001               	movlw	1
  4247  05D5  07F2               	addwf	___ftpack@arg+2,f
  4248  05D6  3001               	movlw	1
  4249  05D7                     u108_25:	
  4250  05D7  36F2               	lsrf	___ftpack@arg+2,f
  4251  05D8  0CF1               	rrf	___ftpack@arg+1,f
  4252  05D9  0CF0               	rrf	___ftpack@arg,f
  4253  05DA  0B89               	decfsz	9,f
  4254  05DB  2DD7               	goto	u108_25
  4255  05DC                     i1l485:	
  4256  05DC  30FF               	movlw	255
  4257  05DD  0572               	andwf	___ftpack@arg+2,w
  4258  05DE  1903               	btfsc	3,2
  4259  05DF  2DE9               	goto	i1l1559
  4260  05E0  2DC8               	goto	i1l1551
  4261  05E1                     i1l1557:	
  4262  05E1  3001               	movlw	1
  4263  05E2  02F3               	subwf	___ftpack@exp,f
  4264  05E3  3001               	movlw	1
  4265  05E4                     u110_25:	
  4266  05E4  35F0               	lslf	___ftpack@arg,f
  4267  05E5  0DF1               	rlf	___ftpack@arg+1,f
  4268  05E6  0DF2               	rlf	___ftpack@arg+2,f
  4269  05E7  0B89               	decfsz	9,f
  4270  05E8  2DE4               	goto	u110_25
  4271  05E9                     i1l1559:	
  4272  05E9  1BF1               	btfsc	___ftpack@arg+1,7
  4273  05EA  2DEF               	goto	i1l492
  4274  05EB  3002               	movlw	2
  4275  05EC  0273               	subwf	___ftpack@exp,w
  4276  05ED  1803               	skipnc
  4277  05EE  2DE1               	goto	i1l1557
  4278  05EF                     i1l492:	
  4279  05EF  1873               	btfsc	___ftpack@exp,0
  4280  05F0  2DF7               	goto	i1l493
  4281  05F1  30FF               	movlw	255
  4282  05F2  05F0               	andwf	___ftpack@arg,f
  4283  05F3  307F               	movlw	127
  4284  05F4  05F1               	andwf	___ftpack@arg+1,f
  4285  05F5  30FF               	movlw	255
  4286  05F6  05F2               	andwf	___ftpack@arg+2,f
  4287  05F7                     i1l493:	
  4288  05F7  1003               	clrc
  4289  05F8  0CF3               	rrf	___ftpack@exp,f
  4290  05F9  0873               	movf	___ftpack@exp,w
  4291  05FA  00F5               	movwf	??___ftpack
  4292  05FB  01F6               	clrf	??___ftpack+1
  4293  05FC  01F7               	clrf	??___ftpack+2
  4294  05FD  3010               	movlw	16
  4295  05FE                     u114_25:	
  4296  05FE  35F5               	lslf	??___ftpack,f
  4297  05FF  0DF6               	rlf	??___ftpack+1,f
  4298  0600  0DF7               	rlf	??___ftpack+2,f
  4299  0601  0B89               	decfsz	9,f
  4300  0602  2DFE               	goto	u114_25
  4301  0603  0875               	movf	??___ftpack,w
  4302  0604  04F0               	iorwf	___ftpack@arg,f
  4303  0605  0876               	movf	??___ftpack+1,w
  4304  0606  04F1               	iorwf	___ftpack@arg+1,f
  4305  0607  0877               	movf	??___ftpack+2,w
  4306  0608  04F2               	iorwf	___ftpack@arg+2,f
  4307  0609  0874               	movf	___ftpack@sign,w
  4308  060A  1903               	btfsc	3,2
  4309  060B  0008               	return
  4310  060C  17F2               	bsf	___ftpack@arg+2,7
  4311  060D  0008               	return
  4312  060E                     __end_of___ftpack:	
  4313                           
  4314                           	psect	text17
  4315  060E                     __ptext17:	
  4316 ;; *************** function ___lldiv *****************
  4317 ;; Defined at:
  4318 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  divisor         4    0[COMMON] unsigned long 
  4321 ;;  dividend        4    4[COMMON] unsigned long 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  quotient        4    9[COMMON] unsigned long 
  4324 ;;  counter         1   13[COMMON] unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  4    0[COMMON] unsigned long 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4334 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;Total ram usage:       14 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_ISR_ROUTINE
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function ___lldiv
  4349  060E                     ___lldiv:	
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4353  060E  3000               	movlw	0
  4354  060F  00FC               	movwf	___lldiv@quotient+3
  4355  0610  3000               	movlw	0
  4356  0611  00FB               	movwf	___lldiv@quotient+2
  4357  0612  3000               	movlw	0
  4358  0613  00FA               	movwf	___lldiv@quotient+1
  4359  0614  3000               	movlw	0
  4360  0615  00F9               	movwf	___lldiv@quotient
  4361  0616  0873               	movf	___lldiv@divisor+3,w
  4362  0617  0472               	iorwf	___lldiv@divisor+2,w
  4363  0618  0471               	iorwf	___lldiv@divisor+1,w
  4364  0619  0470               	iorwf	___lldiv@divisor,w
  4365  061A  1903               	skipnz
  4366  061B  2E57               	goto	i1l2035
  4367  061C  01FD               	clrf	___lldiv@counter
  4368  061D  0AFD               	incf	___lldiv@counter,f
  4369  061E                     i1l2021:	
  4370  061E  1BF3               	btfsc	___lldiv@divisor+3,7
  4371  061F  2E2C               	goto	i1l2023
  4372  0620  3001               	movlw	1
  4373  0621                     u177_25:	
  4374  0621  35F0               	lslf	___lldiv@divisor,f
  4375  0622  0DF1               	rlf	___lldiv@divisor+1,f
  4376  0623  0DF2               	rlf	___lldiv@divisor+2,f
  4377  0624  0DF3               	rlf	___lldiv@divisor+3,f
  4378  0625  0B89               	decfsz	9,f
  4379  0626  2E21               	goto	u177_25
  4380  0627  3001               	movlw	1
  4381  0628  00F8               	movwf	??___lldiv
  4382  0629  0878               	movf	??___lldiv,w
  4383  062A  07FD               	addwf	___lldiv@counter,f
  4384  062B  2E1E               	goto	i1l2021
  4385  062C                     i1l2023:	
  4386  062C  3001               	movlw	1
  4387  062D                     u179_25:	
  4388  062D  35F9               	lslf	___lldiv@quotient,f
  4389  062E  0DFA               	rlf	___lldiv@quotient+1,f
  4390  062F  0DFB               	rlf	___lldiv@quotient+2,f
  4391  0630  0DFC               	rlf	___lldiv@quotient+3,f
  4392  0631  0B89               	decfsz	9,f
  4393  0632  2E2D               	goto	u179_25
  4394  0633  0873               	movf	___lldiv@divisor+3,w
  4395  0634  0277               	subwf	___lldiv@dividend+3,w
  4396  0635  1D03               	skipz
  4397  0636  2E41               	goto	u180_25
  4398  0637  0872               	movf	___lldiv@divisor+2,w
  4399  0638  0276               	subwf	___lldiv@dividend+2,w
  4400  0639  1D03               	skipz
  4401  063A  2E41               	goto	u180_25
  4402  063B  0871               	movf	___lldiv@divisor+1,w
  4403  063C  0275               	subwf	___lldiv@dividend+1,w
  4404  063D  1D03               	skipz
  4405  063E  2E41               	goto	u180_25
  4406  063F  0870               	movf	___lldiv@divisor,w
  4407  0640  0274               	subwf	___lldiv@dividend,w
  4408  0641                     u180_25:	
  4409  0641  1C03               	skipc
  4410  0642  2E4C               	goto	i1l2031
  4411  0643  0870               	movf	___lldiv@divisor,w
  4412  0644  02F4               	subwf	___lldiv@dividend,f
  4413  0645  0871               	movf	___lldiv@divisor+1,w
  4414  0646  3BF5               	subwfb	___lldiv@dividend+1,f
  4415  0647  0872               	movf	___lldiv@divisor+2,w
  4416  0648  3BF6               	subwfb	___lldiv@dividend+2,f
  4417  0649  0873               	movf	___lldiv@divisor+3,w
  4418  064A  3BF7               	subwfb	___lldiv@dividend+3,f
  4419  064B  1479               	bsf	___lldiv@quotient,0
  4420  064C                     i1l2031:	
  4421  064C  3001               	movlw	1
  4422  064D                     u181_25:	
  4423  064D  36F3               	lsrf	___lldiv@divisor+3,f
  4424  064E  0CF2               	rrf	___lldiv@divisor+2,f
  4425  064F  0CF1               	rrf	___lldiv@divisor+1,f
  4426  0650  0CF0               	rrf	___lldiv@divisor,f
  4427  0651  0B89               	decfsz	9,f
  4428  0652  2E4D               	goto	u181_25
  4429  0653  3001               	movlw	1
  4430  0654  02FD               	subwf	___lldiv@counter,f
  4431  0655  1D03               	btfss	3,2
  4432  0656  2E2C               	goto	i1l2023
  4433  0657                     i1l2035:	
  4434  0657  087C               	movf	___lldiv@quotient+3,w
  4435  0658  00F3               	movwf	?___lldiv+3
  4436  0659  087B               	movf	___lldiv@quotient+2,w
  4437  065A  00F2               	movwf	?___lldiv+2
  4438  065B  087A               	movf	___lldiv@quotient+1,w
  4439  065C  00F1               	movwf	?___lldiv+1
  4440  065D  0879               	movf	___lldiv@quotient,w
  4441  065E  00F0               	movwf	?___lldiv
  4442  065F  0008               	return
  4443  0660                     __end_of___lldiv:	
  4444                           
  4445                           	psect	text18
  4446  04A8                     __ptext18:	
  4447 ;; *************** function ___fttol *****************
  4448 ;; Defined at:
  4449 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  f1              3   32[BANK0 ] float 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  lval            4   41[BANK0 ] unsigned long 
  4454 ;;  exp1            1   45[BANK0 ] unsigned char 
  4455 ;;  sign1           1   40[BANK0 ] unsigned char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  4   32[BANK0 ] long 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;Total ram usage:       14 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_ISR_ROUTINE
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function ___fttol
  4480  04A8                     ___fttol:	
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4484  04A8  0020               	movlb	0	; select bank0
  4485  04A9  0840               	movf	___fttol@f1,w
  4486  04AA  00C4               	movwf	??___fttol
  4487  04AB  0841               	movf	___fttol@f1+1,w
  4488  04AC  00C5               	movwf	??___fttol+1
  4489  04AD  0842               	movf	___fttol@f1+2,w
  4490  04AE  00C6               	movwf	??___fttol+2
  4491  04AF  1003               	clrc
  4492  04B0  0D45               	rlf	??___fttol+1,w
  4493  04B1  0D46               	rlf	??___fttol+2,w
  4494  04B2  00C7               	movwf	??___fttol+3
  4495  04B3  0847               	movf	??___fttol+3,w
  4496  04B4  00CD               	movwf	___fttol@exp1
  4497  04B5  084D               	movf	___fttol@exp1,w
  4498  04B6  1D03               	btfss	3,2
  4499  04B7  2CC1               	goto	i1l1979
  4500  04B8  3000               	movlw	0
  4501  04B9  00C3               	movwf	?___fttol+3
  4502  04BA  3000               	movlw	0
  4503  04BB  00C2               	movwf	?___fttol+2
  4504  04BC  3000               	movlw	0
  4505  04BD  00C1               	movwf	?___fttol+1
  4506  04BE  3000               	movlw	0
  4507  04BF  00C0               	movwf	?___fttol
  4508  04C0  0008               	return
  4509  04C1                     i1l1979:	
  4510  04C1  0840               	movf	___fttol@f1,w
  4511  04C2  00C4               	movwf	??___fttol
  4512  04C3  0841               	movf	___fttol@f1+1,w
  4513  04C4  00C5               	movwf	??___fttol+1
  4514  04C5  0842               	movf	___fttol@f1+2,w
  4515  04C6  00C6               	movwf	??___fttol+2
  4516  04C7  3017               	movlw	23
  4517  04C8                     u167_25:	
  4518  04C8  36C6               	lsrf	??___fttol+2,f
  4519  04C9  0CC5               	rrf	??___fttol+1,f
  4520  04CA  0CC4               	rrf	??___fttol,f
  4521  04CB  0B89               	decfsz	9,f
  4522  04CC  2CC8               	goto	u167_25
  4523  04CD  0844               	movf	??___fttol,w
  4524  04CE  00C7               	movwf	??___fttol+3
  4525  04CF  0847               	movf	??___fttol+3,w
  4526  04D0  00C8               	movwf	___fttol@sign1
  4527  04D1  17C1               	bsf	___fttol@f1+1,7
  4528  04D2  30FF               	movlw	255
  4529  04D3  05C0               	andwf	___fttol@f1,f
  4530  04D4  30FF               	movlw	255
  4531  04D5  05C1               	andwf	___fttol@f1+1,f
  4532  04D6  3000               	movlw	0
  4533  04D7  05C2               	andwf	___fttol@f1+2,f
  4534  04D8  0840               	movf	___fttol@f1,w
  4535  04D9  00C9               	movwf	___fttol@lval
  4536  04DA  0841               	movf	___fttol@f1+1,w
  4537  04DB  00CA               	movwf	___fttol@lval+1
  4538  04DC  0842               	movf	___fttol@f1+2,w
  4539  04DD  00CB               	movwf	___fttol@lval+2
  4540  04DE  01CC               	clrf	___fttol@lval+3
  4541  04DF  308E               	movlw	142
  4542  04E0  02CD               	subwf	___fttol@exp1,f
  4543  04E1  1FCD               	btfss	___fttol@exp1,7
  4544  04E2  2CFF               	goto	i1l1999
  4545  04E3  084D               	movf	___fttol@exp1,w
  4546  04E4  3A80               	xorlw	128
  4547  04E5  3E8F               	addlw	143
  4548  04E6  1803               	skipnc
  4549  04E7  2CF1               	goto	i1l1997
  4550  04E8  3000               	movlw	0
  4551  04E9  00C3               	movwf	?___fttol+3
  4552  04EA  3000               	movlw	0
  4553  04EB  00C2               	movwf	?___fttol+2
  4554  04EC  3000               	movlw	0
  4555  04ED  00C1               	movwf	?___fttol+1
  4556  04EE  3000               	movlw	0
  4557  04EF  00C0               	movwf	?___fttol
  4558  04F0  0008               	return
  4559  04F1                     i1l1997:	
  4560  04F1  3001               	movlw	1
  4561  04F2                     u170_25:	
  4562  04F2  36CC               	lsrf	___fttol@lval+3,f
  4563  04F3  0CCB               	rrf	___fttol@lval+2,f
  4564  04F4  0CCA               	rrf	___fttol@lval+1,f
  4565  04F5  0CC9               	rrf	___fttol@lval,f
  4566  04F6  0B89               	decfsz	9,f
  4567  04F7  2CF2               	goto	u170_25
  4568  04F8  3001               	movlw	1
  4569  04F9  00C4               	movwf	??___fttol
  4570  04FA  0844               	movf	??___fttol,w
  4571  04FB  07CD               	addwf	___fttol@exp1,f
  4572  04FC  1903               	btfsc	3,2
  4573  04FD  2D18               	goto	i1l2007
  4574  04FE  2CF1               	goto	i1l1997
  4575  04FF                     i1l1999:	
  4576  04FF  3018               	movlw	24
  4577  0500  024D               	subwf	___fttol@exp1,w
  4578  0501  1C03               	skipc
  4579  0502  2D15               	goto	i1l576
  4580  0503  3000               	movlw	0
  4581  0504  00C3               	movwf	?___fttol+3
  4582  0505  3000               	movlw	0
  4583  0506  00C2               	movwf	?___fttol+2
  4584  0507  3000               	movlw	0
  4585  0508  00C1               	movwf	?___fttol+1
  4586  0509  3000               	movlw	0
  4587  050A  00C0               	movwf	?___fttol
  4588  050B  0008               	return
  4589  050C                     i1l2005:	
  4590  050C  3001               	movlw	1
  4591  050D                     u173_25:	
  4592  050D  35C9               	lslf	___fttol@lval,f
  4593  050E  0DCA               	rlf	___fttol@lval+1,f
  4594  050F  0DCB               	rlf	___fttol@lval+2,f
  4595  0510  0DCC               	rlf	___fttol@lval+3,f
  4596  0511  0B89               	decfsz	9,f
  4597  0512  2D0D               	goto	u173_25
  4598  0513  3001               	movlw	1
  4599  0514  02CD               	subwf	___fttol@exp1,f
  4600  0515                     i1l576:	
  4601  0515  084D               	movf	___fttol@exp1,w
  4602  0516  1D03               	btfss	3,2
  4603  0517  2D0C               	goto	i1l2005
  4604  0518                     i1l2007:	
  4605  0518  0848               	movf	___fttol@sign1,w
  4606  0519  1903               	btfsc	3,2
  4607  051A  2D26               	goto	i1l2011
  4608  051B  09C9               	comf	___fttol@lval,f
  4609  051C  09CA               	comf	___fttol@lval+1,f
  4610  051D  09CB               	comf	___fttol@lval+2,f
  4611  051E  09CC               	comf	___fttol@lval+3,f
  4612  051F  0AC9               	incf	___fttol@lval,f
  4613  0520  1903               	skipnz
  4614  0521  0ACA               	incf	___fttol@lval+1,f
  4615  0522  1903               	skipnz
  4616  0523  0ACB               	incf	___fttol@lval+2,f
  4617  0524  1903               	skipnz
  4618  0525  0ACC               	incf	___fttol@lval+3,f
  4619  0526                     i1l2011:	
  4620  0526  084C               	movf	___fttol@lval+3,w
  4621  0527  00C3               	movwf	?___fttol+3
  4622  0528  084B               	movf	___fttol@lval+2,w
  4623  0529  00C2               	movwf	?___fttol+2
  4624  052A  084A               	movf	___fttol@lval+1,w
  4625  052B  00C1               	movwf	?___fttol+1
  4626  052C  0849               	movf	___fttol@lval,w
  4627  052D  00C0               	movwf	?___fttol
  4628  052E  0008               	return
  4629  052F                     __end_of___fttol:	
  4630                           
  4631                           	psect	text19
  4632  075A                     __ptext19:	
  4633 ;; *************** function _WritePayload *****************
  4634 ;; Defined at:
  4635 ;;		line 92 in file "nRF24L01P.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  num             1    wreg     unsigned char 
  4638 ;;  data            1    1[COMMON] PTR unsigned char 
  4639 ;;		 -> ISR_ROUTINE@data(5), 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  num             1    3[COMMON] unsigned char 
  4642 ;;  i               1    4[COMMON] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4652 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;Total ram usage:        4 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    1
  4659 ;; This function calls:
  4660 ;;		_SPI_transfer
  4661 ;; This function is called by:
  4662 ;;		_ISR_ROUTINE
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _WritePayload
  4668  075A                     _WritePayload:	
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _WritePayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4672                           ;WritePayload@num stored from wreg
  4673  075A  00F3               	movwf	WritePayload@num
  4674                           
  4675                           ;nRF24L01P.c: 94: LATCbits.LATC6 = 0;
  4676  075B  0022               	movlb	2	; select bank2
  4677  075C  130E               	bcf	14,6	;volatile
  4678                           
  4679                           ;nRF24L01P.c: 95: SPI_transfer(0xA0);
  4680  075D  30A0               	movlw	160
  4681  075E  318F  27AA  3187   	fcall	_SPI_transfer
  4682                           
  4683                           ;nRF24L01P.c: 96: for ( uint8_t i=0; i<num; i++)
  4684  0761  01F4               	clrf	WritePayload@i
  4685  0762                     i1l1875:	
  4686  0762  0873               	movf	WritePayload@num,w
  4687  0763  0274               	subwf	WritePayload@i,w
  4688  0764  1803               	btfsc	3,0
  4689  0765  2F75               	goto	i1l149
  4690                           
  4691                           ;nRF24L01P.c: 97: SPI_transfer(data[i]);
  4692  0766  0874               	movf	WritePayload@i,w
  4693  0767  0771               	addwf	WritePayload@data,w
  4694  0768  00F2               	movwf	??_WritePayload
  4695  0769  0872               	movf	??_WritePayload,w
  4696  076A  0086               	movwf	6
  4697  076B  0187               	clrf	7
  4698  076C  0801               	movf	1,w
  4699  076D  318F  27AA  3187   	fcall	_SPI_transfer
  4700  0770  3001               	movlw	1
  4701  0771  00F2               	movwf	??_WritePayload
  4702  0772  0872               	movf	??_WritePayload,w
  4703  0773  07F4               	addwf	WritePayload@i,f
  4704  0774  2F62               	goto	i1l1875
  4705  0775                     i1l149:	
  4706                           
  4707                           ;nRF24L01P.c: 98: LATCbits.LATC6 = 1;
  4708  0775  0022               	movlb	2	; select bank2
  4709  0776  170E               	bsf	14,6	;volatile
  4710                           
  4711                           ;nRF24L01P.c: 100: LATAbits.LATA4 = 1;
  4712  0777  160C               	bsf	12,4	;volatile
  4713                           
  4714                           ;nRF24L01P.c: 101: _delay((unsigned long)((12)*(8000000L/4000000.0)));
  4715  0778  3008               	movlw	8
  4716  0779                     u200_27:	
  4717  0779  0B89               	decfsz	9,f
  4718  077A  2F79               	goto	u200_27
  4719                           
  4720                           ;nRF24L01P.c: 102: LATAbits.LATA4 = 0;
  4721  077B  0022               	movlb	2	; select bank2
  4722  077C  120C               	bcf	12,4	;volatile
  4723  077D  0008               	return
  4724  077E                     __end_of_WritePayload:	
  4725                           
  4726                           	psect	text20
  4727  07BD                     __ptext20:	
  4728 ;; *************** function _SPI_init *****************
  4729 ;; Defined at:
  4730 ;;		line 13 in file "spi.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;Total ram usage:        0 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_ISR_ROUTINE
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _SPI_init
  4759  07BD                     _SPI_init:	
  4760                           
  4761                           ;spi.c: 15: SSPCON1bits.SSPEN = 1;
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
  4765  07BD  0024               	movlb	4	; select bank4
  4766  07BE  1695               	bsf	21,5	;volatile
  4767                           
  4768                           ;spi.c: 16: SSPBUF = 0;
  4769  07BF  0191               	clrf	17	;volatile
  4770                           
  4771                           ;spi.c: 18: ANSELA = 0x00;
  4772  07C0  0023               	movlb	3	; select bank3
  4773  07C1  018C               	clrf	12	;volatile
  4774                           
  4775                           ;spi.c: 19: ANSELB = 0x00;
  4776  07C2  018D               	clrf	13	;volatile
  4777                           
  4778                           ;spi.c: 20: ANSELC = 0x00;
  4779  07C3  018E               	clrf	14	;volatile
  4780                           
  4781                           ;spi.c: 22: TRISBbits.TRISB6 = 0;
  4782  07C4  0021               	movlb	1	; select bank1
  4783  07C5  130D               	bcf	13,6	;volatile
  4784                           
  4785                           ;spi.c: 23: TRISBbits.TRISB4 = 1;
  4786  07C6  160D               	bsf	13,4	;volatile
  4787                           
  4788                           ;spi.c: 24: TRISCbits.TRISC7 = 0;
  4789  07C7  138E               	bcf	14,7	;volatile
  4790                           
  4791                           ;spi.c: 25: TRISCbits.TRISC6 = 0;
  4792  07C8  130E               	bcf	14,6	;volatile
  4793                           
  4794                           ;spi.c: 26: TRISAbits.TRISA4 = 0;
  4795  07C9  120C               	bcf	12,4	;volatile
  4796                           
  4797                           ;spi.c: 28: LATCbits.LATC6 = 1;
  4798  07CA  0022               	movlb	2	; select bank2
  4799  07CB  170E               	bsf	14,6	;volatile
  4800                           
  4801                           ;spi.c: 29: LATAbits.LATA4 = 0;
  4802  07CC  120C               	bcf	12,4	;volatile
  4803                           
  4804                           ;spi.c: 32: SSPSTATbits.CKE = 1;
  4805  07CD  0024               	movlb	4	; select bank4
  4806  07CE  1714               	bsf	20,6	;volatile
  4807                           
  4808                           ;spi.c: 34: SSPCON1bits.CKP = 0;
  4809  07CF  1215               	bcf	21,4	;volatile
  4810                           
  4811                           ;spi.c: 36: SSPSTATbits.SMP = 0;
  4812  07D0  1394               	bcf	20,7	;volatile
  4813                           
  4814                           ;spi.c: 42: SSPCON1bits.SSPM = 0b0000;
  4815  07D1  30F0               	movlw	-16
  4816  07D2  0595               	andwf	21,f	;volatile
  4817  07D3  0008               	return
  4818  07D4                     __end_of_SPI_init:	
  4819                           
  4820                           	psect	text21
  4821  0FDF                     __ptext21:	
  4822 ;; *************** function _FlushTXRX *****************
  4823 ;; Defined at:
  4824 ;;		line 43 in file "nRF24L01P.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0, pclath, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;Total ram usage:        1 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    2
  4845 ;; This function calls:
  4846 ;;		_WriteCommand
  4847 ;;		_WriteRegister
  4848 ;; This function is called by:
  4849 ;;		_ISR_ROUTINE
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function _FlushTXRX
  4855  0FDF                     _FlushTXRX:	
  4856                           
  4857                           ;nRF24L01P.c: 45: WriteRegister(0x07, 0x70);
  4858                           
  4859                           ;incstack = 0
  4860                           ; Regs used in _FlushTXRX: [wreg+status,2+status,0+pclath+cstack]
  4861  0FDF  3070               	movlw	112
  4862  0FE0  00F3               	movwf	??_FlushTXRX
  4863  0FE1  0873               	movf	??_FlushTXRX,w
  4864  0FE2  00F1               	movwf	WriteRegister@val
  4865  0FE3  3007               	movlw	7
  4866  0FE4  318F  27D1  318F   	fcall	_WriteRegister
  4867                           
  4868                           ;nRF24L01P.c: 46: WriteCommand(0xE2);
  4869  0FE7  30E2               	movlw	226
  4870  0FE8  318F  27B2  318F   	fcall	_WriteCommand
  4871                           
  4872                           ;nRF24L01P.c: 47: WriteCommand(0xE1);
  4873  0FEB  30E1               	movlw	225
  4874  0FEC  318F  27B2         	fcall	_WriteCommand
  4875  0FEE  0008               	return
  4876  0FEF                     __end_of_FlushTXRX:	
  4877                           
  4878                           	psect	text22
  4879  0FD1                     __ptext22:	
  4880 ;; *************** function _WriteRegister *****************
  4881 ;; Defined at:
  4882 ;;		line 51 in file "nRF24L01P.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  reg             1    wreg     unsigned char 
  4885 ;;  val             1    1[COMMON] unsigned char 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  reg             1    2[COMMON] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0, pclath, cstack
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:        2 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    1
  4904 ;; This function calls:
  4905 ;;		_SPI_transfer
  4906 ;; This function is called by:
  4907 ;;		_ISR_ROUTINE
  4908 ;;		_nRF_Setup
  4909 ;;		_FlushTXRX
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function _WriteRegister
  4915  0FD1                     _WriteRegister:	
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in _WriteRegister: [wreg+status,2+status,0+pclath+cstack]
  4919                           ;WriteRegister@reg stored from wreg
  4920  0FD1  00F2               	movwf	WriteRegister@reg
  4921                           
  4922                           ;nRF24L01P.c: 53: LATCbits.LATC6 = 0;
  4923  0FD2  0022               	movlb	2	; select bank2
  4924  0FD3  130E               	bcf	14,6	;volatile
  4925                           
  4926                           ;nRF24L01P.c: 55: SPI_transfer(0x20 | reg);
  4927  0FD4  0872               	movf	WriteRegister@reg,w
  4928  0FD5  3820               	iorlw	32
  4929  0FD6  318F  27AA  318F   	fcall	_SPI_transfer
  4930                           
  4931                           ;nRF24L01P.c: 56: SPI_transfer(val);
  4932  0FD9  0871               	movf	WriteRegister@val,w
  4933  0FDA  318F  27AA         	fcall	_SPI_transfer
  4934                           
  4935                           ;nRF24L01P.c: 57: LATCbits.LATC6 = 1;
  4936  0FDC  0022               	movlb	2	; select bank2
  4937  0FDD  170E               	bsf	14,6	;volatile
  4938  0FDE  0008               	return
  4939  0FDF                     __end_of_WriteRegister:	
  4940                           
  4941                           	psect	text23
  4942  0FB2                     __ptext23:	
  4943 ;; *************** function _WriteCommand *****************
  4944 ;; Defined at:
  4945 ;;		line 85 in file "nRF24L01P.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  command         1    wreg     unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  command         1    1[COMMON] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0, pclath, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;Total ram usage:        1 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    1
  4966 ;; This function calls:
  4967 ;;		_SPI_transfer
  4968 ;; This function is called by:
  4969 ;;		_FlushTXRX
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function _WriteCommand
  4975  0FB2                     _WriteCommand:	
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  4979                           ;WriteCommand@command stored from wreg
  4980  0FB2  00F1               	movwf	WriteCommand@command
  4981                           
  4982                           ;nRF24L01P.c: 87: LATCbits.LATC6 = 0;
  4983  0FB3  0022               	movlb	2	; select bank2
  4984  0FB4  130E               	bcf	14,6	;volatile
  4985                           
  4986                           ;nRF24L01P.c: 88: SPI_transfer(command);
  4987  0FB5  0871               	movf	WriteCommand@command,w
  4988  0FB6  318F  27AA         	fcall	_SPI_transfer
  4989                           
  4990                           ;nRF24L01P.c: 89: LATCbits.LATC6 = 1;
  4991  0FB8  0022               	movlb	2	; select bank2
  4992  0FB9  170E               	bsf	14,6	;volatile
  4993  0FBA  0008               	return
  4994  0FBB                     __end_of_WriteCommand:	
  4995                           
  4996                           	psect	text24
  4997  0FAA                     __ptext24:	
  4998 ;; *************** function _SPI_transfer *****************
  4999 ;; Defined at:
  5000 ;;		line 46 in file "spi.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  data            1    wreg     unsigned char 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  data            1    0[COMMON] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      unsigned char 
  5007 ;; Registers used:
  5008 ;;		wreg
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;Total ram usage:        1 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_WriteRegister
  5024 ;;		_WriteAddress
  5025 ;;		_WriteCommand
  5026 ;;		_WritePayload
  5027 ;;		_ReadRegister
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           
  5032                           ;psect for function _SPI_transfer
  5033  0FAA                     _SPI_transfer:	
  5034                           
  5035                           ;incstack = 0
  5036                           ; Regs used in _SPI_transfer: [wreg]
  5037                           ;SPI_transfer@data stored from wreg
  5038  0FAA  00F0               	movwf	SPI_transfer@data
  5039                           
  5040                           ;spi.c: 48: SSPBUF = data;
  5041  0FAB  0870               	movf	SPI_transfer@data,w
  5042  0FAC  0024               	movlb	4	; select bank4
  5043  0FAD  0091               	movwf	17	;volatile
  5044  0FAE                     i1l184:	
  5045                           ;spi.c: 49: while (!SSPSTATbits.BF);
  5046                           
  5047  0FAE  1C14               	btfss	20,0	;volatile
  5048  0FAF  2FAE               	goto	i1l184
  5049                           
  5050                           ;spi.c: 50: return SSPBUF;
  5051  0FB0  0811               	movf	17,w	;volatile
  5052  0FB1  0008               	return
  5053  0FB2                     __end_of_SPI_transfer:	
  5054  007E                     btemp	set	126	;btemp
  5055  007E                     int$flags	set	126
  5056  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      79
    BANK1            80      0      15
    BANK2            80      0      80
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    WritePayload@data	PTR unsigned char  size(1) Largest target is 5
		 -> ISR_ROUTINE@data(BANK0[5]), 

    WriteAddress@addr	PTR unsigned char  size(1) Largest target is 5
		 -> nRF_Setup@RXTX_ADDR(COMMON[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_ROUTINE in COMMON

    _ISR_ROUTINE->___lldiv
    _ISR_ROUTINE->___lltoft
    _ISR_ROUTINE->_nRF_Setup
    _sqrt->___ftmul
    _sqrt->___lltoft
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _nRF_Setup->_WriteAddress
    _WriteAddress->_SPI_transfer
    ___lltoft->___ftpack
    ___fttol->___lltoft
    _WritePayload->_SPI_transfer
    _FlushTXRX->_WriteRegister
    _WriteRegister->_SPI_transfer
    _WriteCommand->_SPI_transfer

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_ROUTINE in BANK0

    _ISR_ROUTINE->___fttol
    _sqrt->___ftsub
    ___ftsub->___ftadd
    ___fttol->_sqrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_ROUTINE in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_ROUTINE in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_ROUTINE in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_ROUTINE in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_ROUTINE in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_ROUTINE in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_ROUTINE in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_ROUTINE in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_ROUTINE in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_ROUTINE in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_ROUTINE in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_ROUTINE in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                _ConfigureOscillator
                            _InitApp
                           _init_adc
           _timer_setup_and_start_IE
 ---------------------------------------------------------------------------------
 (1) _timer_setup_and_start_IE                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_ROUTINE                                         25    25      0   12189
                                             46 BANK0     25    25      0
                          _FlushTXRX
                           _SPI_init
                       _WritePayload
                      _WriteRegister
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
                          _nRF_Setup
                               _sqrt
                          i1_InitApp
 ---------------------------------------------------------------------------------
 (3) i1_InitApp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                19    16      3    6097
                                             13 BANK0     19    16      3
                             ___ftge
                            ___ftmul
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    2787
                                              7 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    2614
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2524
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     348
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) _nRF_Setup                                            7     7      0    1243
                                              7 COMMON     7     7      0
                       _WriteAddress
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (4) _WriteAddress                                         6     4      2     346
                                              1 COMMON     6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     198
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     305
                                             32 BANK0     14    10      4
                           ___lltoft (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (3) _WritePayload                                         4     3      1     165
                                              1 COMMON     4     3      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FlushTXRX                                            1     1      0     799
                                              3 COMMON     1     1      0
                       _WriteCommand
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (4) _WriteRegister                                        2     1      1     755
                                              1 COMMON     2     1      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _WriteCommand                                         1     1      0      44
                                              1 COMMON     1     1      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _SPI_transfer                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _init_adc
   _timer_setup_and_start_IE

 _ISR_ROUTINE (ROOT)
   _FlushTXRX
     _WriteCommand
       _SPI_transfer
     _WriteRegister
       _SPI_transfer
   _SPI_init
   _WritePayload
     _SPI_transfer
   _WriteRegister
     _SPI_transfer
   ___fttol
     ___lltoft (ARG)
       ___ftpack
     _sqrt (ARG)
       ___ftge
       ___ftmul
         ___ftpack
       ___ftsub
         ___ftadd
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
   ___lldiv
   ___lltoft
     ___ftpack
   ___lmul
   _nRF_Setup
     _WriteAddress
       _SPI_transfer
     _WriteRegister
       _SPI_transfer
   _sqrt
     ___ftge
     ___ftmul
       ___ftpack
     ___ftsub
       ___ftadd
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
   i1_InitApp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       F       7       18.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jul 23 09:56:05 2018

                      __CFG_CP$OFF 0000                        _SSPSTATbits 0214  
                               _SW 006E                                 _cc 0069  
                     ___ftadd@exp1 0026                       ___ftadd@exp2 0025  
                     ___ftadd@sign 0024              __size_of_WriteAddress 0027  
                     __CFG_BORV$LO 0000                                wreg 0009  
            __size_of_WriteCommand 0009                       __CFG_LVP$OFF 0000  
            __size_of_SPI_transfer 0008                               l2205 066C  
                     __CFG_WDTE$ON 0000                               _CREN 0CEC  
                             _RCIF 008D                               i1l84 0038  
                             i1l94 01DD                               i1l87 0053  
                             _OERR 0CE9                               _TMR0 0015  
                             _TRMT 0CF1              __size_of_WritePayload 0024  
                     __CFG_WRT$OFF 0000                               _main 0660  
                     ___ftpack@arg 0070                       ___ftpack@exp 0073  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               _sqrt 0305  
                             start 01E1                      __CFG_IESO$OFF 0000  
                  ISR_ROUTINE@data 0057                __CFG_PLLEN$DISABLED 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 0028  
                     ___ftmul@sign 0029                    __end_of_InitApp 07E8  
                     ___fttol@exp1 004D                       ___fttol@lval 0049  
                     _WriteAddress 0733                              ?_main 0070  
                     _WriteCommand 0FB2                    __end_of___ftadd 0305  
                  __end_of___lldiv 0660                              ?_sqrt 002D  
                  __end_of___ftmul 04A8                    __end_of___ftsub 07BD  
                  __end_of___fttol 052F                              i1l137 0757  
                            i1l149 0775                              i1l184 0FAE  
                            i1l516 02AF                   SPI_transfer@data 0070  
                            i1l492 05EF                              i1l493 05F7  
                            i1l485 05DC                              i1l576 0515  
                            i1l684 032E                              i1l686 0367  
                            _RCREG 0199                       _SPI_transfer 0FAA  
                            _TMR1H 0017                              _TMR1L 0016  
                            _SPBRG 019B                              _TXREG 019A  
              _ConfigureOscillator 0FBB             __size_of_WriteRegister 000E  
                     _WritePayload 075A                ___lmul@multiplicand 0074  
                     ___lltoft@exp 007D                     __CFG_FCMEN$OFF 0000  
               __size_ofi1_InitApp 0014                              _errno 00AD  
                    ___ftpack@sign 0074                   ISR_ROUTINE@F2923 00A0  
                   __CFG_BOREN$OFF 0000                   __end_of_SPI_init 07D4  
                            sqrt@a 002D                              sqrt@i 0039  
                            sqrt@q 003A                              sqrt@x 003D  
                            sqrt@z 0036                              status 0003  
                            wtemp0 007E               ?_ConfigureOscillator 0070  
         ISR_ROUTINE@dc_filter_val 0062                    __initialization 01E3  
                     __end_of_main 06A1                       __end_of_sqrt 03F5  
                     ?_ISR_ROUTINE 0070                     __CFG_LPBOR$OFF 0000  
                           ??_main 0000                      ___fttol@sign1 0048  
                           ??_sqrt 0030                __CFG_USBLSCLK$48MHz 0000  
                           _ADRESH 009C                             _ADRESL 009B  
                           _ANSELA 018C                             _ANSELB 018D  
                           _ANSELC 018E                   __end_of___ftpack 060E  
                 __end_of___lltoft 0733                             i1l2011 0526  
                           i1l2005 050C                             i1l2021 061E  
                           u110_25 05E4                             i1l2007 0518  
                           i1l2031 064C                             i1l2023 062C  
                           i1l2035 0657                             i1l2043 070F  
                           i1l2107 002C                             i1l2045 071F  
                           i1l2125 0090                             i1l2143 012C  
                           i1l2135 00D8                             i1l2119 006E  
                           i1l1611 027B                             i1l1613 0285  
                           i1l1605 0268                             u200_27 0779  
                           i1l1551 05C8                             i1l1543 05B2  
                           i1l1703 0422                             i1l1623 02A1  
                           i1l1615 028A                             i1l1633 02D3  
                           i1l1625 02AB                             i1l1617 028E  
                           i1l1547 05B9                             i1l1731 0481  
                           i1l1715 045D                             i1l1643 02EE  
                           i1l2187 01D1                             i1l1557 05E1  
                           i1l1549 05C3                             i1l1629 02C1  
                           i1l1559 05E9                             i1l1663 073D  
                           i1l1727 0479                             i1l1719 0465  
                           i1l1583 0238                             i1l1593 024E  
                           i1l1745 07A7                             i1l1675 06B7  
                           i1l1587 023F                             u114_25 05FE  
                           u106_25 05BE                             i1l1679 06CD  
                           i1l1961 06E4                             i1l1697 040C  
                           i1l1875 0762                             i1l1787 0336  
                           i1l1965 06EE                             i1l1979 04C1  
                           i1l1997 04F1                             u108_25 05D7  
                           u140_25 0746                             u132_25 028F  
                           i1l1999 04FF                             u150_25 046C  
                           u126_25 0269                             u135_25 02A2  
                           _INTCON 000B                             u153_25 0482  
                           u129_25 027C                             u170_25 04F2  
                           u154_25 0488                             u146_25 042E  
                           u163_25 06EF                             u147_25 043E  
                           u180_25 0641                             u164_25 06F6  
                           u173_25 050D                             u181_25 064D  
                           u149_25 0466                             u167_25 04C8  
                           u183_25 0714                             u159_25 0352  
                           u177_25 0621                             u194_20 01A0  
                           u179_25 062D                             u195_27 0027  
                           u196_27 018B                 __size_of_FlushTXRX 0010  
                           u197_27 0193                             u198_27 01C0  
                           u199_27 05A4                             _TMR0IF 005A  
                           _SSPBUF 0211                          ??_InitApp 0000  
            ??_ConfigureOscillator 0000                      _WriteRegister 0FD1  
                   __CFG_PWRTE$OFF 0000                             ___ftge 06A1  
                           ___lmul 06DC                          ??___ftadd 0020  
                __end_ofi1_InitApp 07FC                          ??___lldiv 0078  
                        ??___ftmul 0020                          ??___ftsub 007E  
                        ??___fttol 0044                             _buffer 238C  
                 __end_of_init_adc 1000              ___ftmul@f3_as_product 0025  
               __size_of_nRF_Setup 007B                             sqrt@og 0033  
         _timer_setup_and_start_IE 077E            __end_of__initialization 020C  
                       ___ftadd@f1 0078                         ___ftadd@f2 007B  
                       ___ftge@ff1 0070                         ___ftge@ff2 0073  
                 WritePayload@data 0071                     ?_WriteRegister 0071  
                ISR_ROUTINE@adc_hi 005D                  ISR_ROUTINE@adc_lo 005C  
                 WriteRegister@reg 0072                   WriteRegister@val 0071  
                       ___ftmul@f1 0078                         ___ftmul@f2 007B  
                       ___ftsub@f1 002A                         ___ftsub@f2 0027  
                       ___fttol@f1 0040                     __pcstackCOMMON 0070  
                       ___lltoft@c 0078                  __end_of_FlushTXRX 0FEF  
                        ?_SPI_init 0070                     _OPTION_REGbits 0095  
                   _adc_data_index 006B                         __pbssBANK0 0067  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                  WriteAddress@reg 0074                    WriteAddress@num 0071  
                       __pmaintext 0660                            ?___ftge 0070  
                          ?___lmul 0070                  __end_of_nRF_Setup 05AA  
                  __CFG_PLLMULT$3x 0000                         __pintentry 0004  
                   ___lmul@product 0078                          ?___ftpack 0070  
             __size_of_ISR_ROUTINE 01DD                          ?___lltoft 0078  
                       ??_SPI_init 0070                            _TMR_CNT 006C  
                  ??_WriteRegister 0072                          ?_init_adc 0070  
                          _InitApp 07D4                    __size_of___ftge 003B  
                  __size_of___lmul 002F                            ___ftadd 0210  
                          ___lldiv 060E                            ___ftmul 03F5  
                          ___ftsub 079F                            ___fttol 04A8  
                  __CFG_STVREN$OFF 0000                         ??___ftpack 0075  
                       ??___lltoft 007C                            __ptext0 0000  
                          __ptext1 077E                            __ptext2 0FEF  
                          __ptext3 07D4                            __ptext4 0FBB  
                          __ptext6 07E8                            __ptext7 0305  
                          __ptext8 079F                            __ptext9 0210  
                        _T1CONbits 0018                            _tmrcmpt 006A  
                          clrloop0 0FC6               end_of_initialization 020C  
                       ??_init_adc 0000                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                          _RCSTAbits 019D  
        ISR_ROUTINE@adc_filter_val 005E                          i1_InitApp 07E8  
       ??_timer_setup_and_start_IE 0000                   __CFG_FOSC$INTOSC 0000  
              _adcUpdate_timestamp 00A5                          _TRISAbits 008C  
                        _TRISBbits 008D                          _TRISCbits 008E  
      __end_of_ConfigureOscillator 0FC5                          _TXSTAbits 019E  
              WriteCommand@command 0071                        ___ftmul@exp 0024  
                   __end_of___ftge 06DC                     __end_of___lmul 070B  
                      _BAUDCONbits 019F                         ?i1_InitApp 0070  
              start_initialization 01E3                  __size_of_SPI_init 0017  
                        _FlushTXRX 0FDF                      WriteAddress@i 0075  
                         ??___ftge 0076                           ??___lmul 0078  
                    ?_WriteAddress 0071                          _nRF_Setup 052F  
                    ?_WriteCommand 0070                      ?_SPI_transfer 0070  
                __size_of___ftpack 0064                        __pbssBIGRAM 238C  
                __size_of___lltoft 0028                      ?_WritePayload 0071  
                  WritePayload@num 0073                         ?_FlushTXRX 0070  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 0000                       ISR_ROUTINE@i 0066  
                 WriteAddress@addr 0072                      WritePayload@i 0074  
                         ?_InitApp 0070                  __size_of_init_adc 0011  
                    ??_ISR_ROUTINE 004E                     ??_WriteAddress 0073  
                         ?___ftadd 0078                           ?___lldiv 0070  
                         ?___ftmul 0078                           ?___ftsub 0027  
                         ?___fttol 0040                     ??_WriteCommand 0071  
                       ?_nRF_Setup 0070   __end_of_timer_setup_and_start_IE 079F  
                   ??_SPI_transfer 0070                        ??i1_InitApp 0070  
                   ??_WritePayload 0072                           _LATAbits 010C  
                         _LATBbits 010D                           _LATCbits 010E  
            __end_of_WriteRegister 0FDF                          clear_ram0 0FC5  
                         _PIE1bits 0091                           _PIR1bits 0011  
                       _ADCON0bits 009D                         _ADCON1bits 009E  
                         _SPI_init 07BD                __end_of_ISR_ROUTINE 01E1  
                      ??_FlushTXRX 0073                 nRF_Setup@RXTX_ADDR 0079  
                ___lmul@multiplier 0070                   __size_of_InitApp 0014  
                 __size_of___ftadd 00F5                   __size_of___lldiv 0052  
                 __size_of___ftmul 00B3                   __size_of___ftsub 001E  
                 __size_of___fttol 0087                           ___ftpack 05AA  
                      ??_nRF_Setup 0077                           _adc_data 0120  
                         ___lltoft 070B                           _ac_value 0067  
                       _ANSELCbits 018E                           __ptext10 03F5  
                         __ptext11 06A1                           __ptext20 07BD  
                         __ptext12 052F                           __ptext21 0FDF  
                         __ptext13 0733                           __ptext22 0FD1  
                         __ptext14 06DC                           __ptext23 0FB2  
                         __ptext15 070B                           __ptext24 0FAA  
                         __ptext16 05AA                           __ptext17 060E  
                         __ptext18 04A8                           __ptext19 075A  
             __end_of_WriteAddress 075A               __end_of_WriteCommand 0FBB  
                         _init_adc 0FEF  __size_of_timer_setup_and_start_IE 0021  
                    __size_of_main 0041          ?_timer_setup_and_start_IE 0070  
                    __size_of_sqrt 00F0               __end_of_SPI_transfer 0FB2  
                      _millisecond 00A9               __end_of_WritePayload 077E  
     __size_of_ConfigureOscillator 000A                           int$flags 007E  
                      _ISR_ROUTINE 0004                         _INTCONbits 000B  
                         intlevel1 0000                        _MUSHROOM_ON 006D  
                 ___lldiv@dividend 0074                  __CFG_CLKOUTEN$OFF 0000  
                       _OSCCONbits 0099               __CFG_CPUDIV$NOCLKDIV 0000  
                 ___lldiv@quotient 0079                        _SSPCON1bits 0215  
