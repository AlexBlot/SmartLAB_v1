
NCS36510/SmartLAB8.0.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0010deb5


Disassembly of section .text:

00102090 <deregister_tm_clones>:
  102090:	4b04      	ldr	r3, [pc, #16]	; (1020a4 <deregister_tm_clones+0x14>)
  102092:	4805      	ldr	r0, [pc, #20]	; (1020a8 <deregister_tm_clones+0x18>)
  102094:	1a1b      	subs	r3, r3, r0
  102096:	2b06      	cmp	r3, #6
  102098:	d902      	bls.n	1020a0 <deregister_tm_clones+0x10>
  10209a:	4b04      	ldr	r3, [pc, #16]	; (1020ac <deregister_tm_clones+0x1c>)
  10209c:	b103      	cbz	r3, 1020a0 <deregister_tm_clones+0x10>
  10209e:	4718      	bx	r3
  1020a0:	4770      	bx	lr
  1020a2:	bf00      	nop
  1020a4:	3fff42e3 	.word	0x3fff42e3
  1020a8:	3fff42e0 	.word	0x3fff42e0
  1020ac:	00000000 	.word	0x00000000

001020b0 <register_tm_clones>:
  1020b0:	4905      	ldr	r1, [pc, #20]	; (1020c8 <register_tm_clones+0x18>)
  1020b2:	4806      	ldr	r0, [pc, #24]	; (1020cc <register_tm_clones+0x1c>)
  1020b4:	1a09      	subs	r1, r1, r0
  1020b6:	1089      	asrs	r1, r1, #2
  1020b8:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
  1020bc:	1049      	asrs	r1, r1, #1
  1020be:	d002      	beq.n	1020c6 <register_tm_clones+0x16>
  1020c0:	4b03      	ldr	r3, [pc, #12]	; (1020d0 <register_tm_clones+0x20>)
  1020c2:	b103      	cbz	r3, 1020c6 <register_tm_clones+0x16>
  1020c4:	4718      	bx	r3
  1020c6:	4770      	bx	lr
  1020c8:	3fff42e0 	.word	0x3fff42e0
  1020cc:	3fff42e0 	.word	0x3fff42e0
  1020d0:	00000000 	.word	0x00000000

001020d4 <__do_global_dtors_aux>:
  1020d4:	b510      	push	{r4, lr}
  1020d6:	4c06      	ldr	r4, [pc, #24]	; (1020f0 <__do_global_dtors_aux+0x1c>)
  1020d8:	7823      	ldrb	r3, [r4, #0]
  1020da:	b943      	cbnz	r3, 1020ee <__do_global_dtors_aux+0x1a>
  1020dc:	f7ff ffd8 	bl	102090 <deregister_tm_clones>
  1020e0:	4b04      	ldr	r3, [pc, #16]	; (1020f4 <__do_global_dtors_aux+0x20>)
  1020e2:	b113      	cbz	r3, 1020ea <__do_global_dtors_aux+0x16>
  1020e4:	4804      	ldr	r0, [pc, #16]	; (1020f8 <__do_global_dtors_aux+0x24>)
  1020e6:	f3af 8000 	nop.w
  1020ea:	2301      	movs	r3, #1
  1020ec:	7023      	strb	r3, [r4, #0]
  1020ee:	bd10      	pop	{r4, pc}
  1020f0:	3fff42e0 	.word	0x3fff42e0
  1020f4:	00000000 	.word	0x00000000
  1020f8:	0011a458 	.word	0x0011a458

001020fc <frame_dummy>:
  1020fc:	b508      	push	{r3, lr}
  1020fe:	4b08      	ldr	r3, [pc, #32]	; (102120 <frame_dummy+0x24>)
  102100:	b11b      	cbz	r3, 10210a <frame_dummy+0xe>
  102102:	4908      	ldr	r1, [pc, #32]	; (102124 <frame_dummy+0x28>)
  102104:	4808      	ldr	r0, [pc, #32]	; (102128 <frame_dummy+0x2c>)
  102106:	f3af 8000 	nop.w
  10210a:	4808      	ldr	r0, [pc, #32]	; (10212c <frame_dummy+0x30>)
  10210c:	6803      	ldr	r3, [r0, #0]
  10210e:	b913      	cbnz	r3, 102116 <frame_dummy+0x1a>
  102110:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  102114:	e7cc      	b.n	1020b0 <register_tm_clones>
  102116:	4b06      	ldr	r3, [pc, #24]	; (102130 <frame_dummy+0x34>)
  102118:	2b00      	cmp	r3, #0
  10211a:	d0f9      	beq.n	102110 <frame_dummy+0x14>
  10211c:	4798      	blx	r3
  10211e:	e7f7      	b.n	102110 <frame_dummy+0x14>
  102120:	00000000 	.word	0x00000000
  102124:	3fff42e4 	.word	0x3fff42e4
  102128:	0011a458 	.word	0x0011a458
  10212c:	3fff42e0 	.word	0x3fff42e0
  102130:	00000000 	.word	0x00000000

00102134 <__tcf_0>:
  102134:	b538      	push	{r3, r4, r5, lr}
  102136:	4d06      	ldr	r5, [pc, #24]	; (102150 <__tcf_0+0x1c>)
  102138:	2400      	movs	r4, #0
  10213a:	f504 70b4 	add.w	r0, r4, #360	; 0x168
  10213e:	4428      	add	r0, r5
  102140:	3c18      	subs	r4, #24
  102142:	f00b ffb5 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102146:	f514 7fc0 	cmn.w	r4, #384	; 0x180
  10214a:	d1f6      	bne.n	10213a <__tcf_0+0x6>
  10214c:	bd38      	pop	{r3, r4, r5, pc}
  10214e:	bf00      	nop
  102150:	3fff42fc 	.word	0x3fff42fc

00102154 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.14] [clone .constprop.16]>:
  102154:	b510      	push	{r4, lr}
  102156:	4604      	mov	r4, r0
  102158:	4a05      	ldr	r2, [pc, #20]	; (102170 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.14] [clone .constprop.16]+0x1c>)
  10215a:	3008      	adds	r0, #8
  10215c:	6020      	str	r0, [r4, #0]
  10215e:	4611      	mov	r1, r2
  102160:	f00b ffbc 	bl	10e0dc <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)>
  102164:	6822      	ldr	r2, [r4, #0]
  102166:	2300      	movs	r3, #0
  102168:	6063      	str	r3, [r4, #4]
  10216a:	7013      	strb	r3, [r2, #0]
  10216c:	4620      	mov	r0, r4
  10216e:	bd10      	pop	{r4, pc}
  102170:	001164ed 	.word	0x001164ed

00102174 <FillIDS(unsigned long*, char**)>:
  102174:	4b0c      	ldr	r3, [pc, #48]	; (1021a8 <FillIDS(unsigned long*, char**)+0x34>)
  102176:	681b      	ldr	r3, [r3, #0]
  102178:	6003      	str	r3, [r0, #0]
  10217a:	4b0c      	ldr	r3, [pc, #48]	; (1021ac <FillIDS(unsigned long*, char**)+0x38>)
  10217c:	681b      	ldr	r3, [r3, #0]
  10217e:	6043      	str	r3, [r0, #4]
  102180:	4b0b      	ldr	r3, [pc, #44]	; (1021b0 <FillIDS(unsigned long*, char**)+0x3c>)
  102182:	681b      	ldr	r3, [r3, #0]
  102184:	6083      	str	r3, [r0, #8]
  102186:	4b0b      	ldr	r3, [pc, #44]	; (1021b4 <FillIDS(unsigned long*, char**)+0x40>)
  102188:	681b      	ldr	r3, [r3, #0]
  10218a:	60c3      	str	r3, [r0, #12]
  10218c:	4b0a      	ldr	r3, [pc, #40]	; (1021b8 <FillIDS(unsigned long*, char**)+0x44>)
  10218e:	681b      	ldr	r3, [r3, #0]
  102190:	600b      	str	r3, [r1, #0]
  102192:	4b0a      	ldr	r3, [pc, #40]	; (1021bc <FillIDS(unsigned long*, char**)+0x48>)
  102194:	681b      	ldr	r3, [r3, #0]
  102196:	604b      	str	r3, [r1, #4]
  102198:	4b09      	ldr	r3, [pc, #36]	; (1021c0 <FillIDS(unsigned long*, char**)+0x4c>)
  10219a:	681b      	ldr	r3, [r3, #0]
  10219c:	608b      	str	r3, [r1, #8]
  10219e:	4b09      	ldr	r3, [pc, #36]	; (1021c4 <FillIDS(unsigned long*, char**)+0x50>)
  1021a0:	681b      	ldr	r3, [r3, #0]
  1021a2:	60cb      	str	r3, [r1, #12]
  1021a4:	4770      	bx	lr
  1021a6:	bf00      	nop
  1021a8:	3fff40b4 	.word	0x3fff40b4
  1021ac:	3fff40b8 	.word	0x3fff40b8
  1021b0:	3fff40bc 	.word	0x3fff40bc
  1021b4:	3fff40c0 	.word	0x3fff40c0
  1021b8:	3fff40a4 	.word	0x3fff40a4
  1021bc:	3fff40a8 	.word	0x3fff40a8
  1021c0:	3fff40ac 	.word	0x3fff40ac
  1021c4:	3fff40b0 	.word	0x3fff40b0

001021c8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode>:
  1021c8:	b510      	push	{r4, lr}
  1021ca:	482b      	ldr	r0, [pc, #172]	; (102278 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb0>)
  1021cc:	f7ff ffc2 	bl	102154 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.14] [clone .constprop.16]>
  1021d0:	4a2a      	ldr	r2, [pc, #168]	; (10227c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb4>)
  1021d2:	492b      	ldr	r1, [pc, #172]	; (102280 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb8>)
  1021d4:	4828      	ldr	r0, [pc, #160]	; (102278 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb0>)
  1021d6:	f00b fa7e 	bl	10d6d6 <__aeabi_atexit>
  1021da:	4b2a      	ldr	r3, [pc, #168]	; (102284 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xbc>)
  1021dc:	2200      	movs	r2, #0
  1021de:	f503 70c0 	add.w	r0, r3, #384	; 0x180
  1021e2:	4619      	mov	r1, r3
  1021e4:	f843 2c04 	str.w	r2, [r3, #-4]
  1021e8:	f843 3c08 	str.w	r3, [r3, #-8]
  1021ec:	f801 2b18 	strb.w	r2, [r1], #24
  1021f0:	6119      	str	r1, [r3, #16]
  1021f2:	615a      	str	r2, [r3, #20]
  1021f4:	761a      	strb	r2, [r3, #24]
  1021f6:	3330      	adds	r3, #48	; 0x30
  1021f8:	4283      	cmp	r3, r0
  1021fa:	f04f 0400 	mov.w	r4, #0
  1021fe:	d1f0      	bne.n	1021e2 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1a>
  102200:	4a1e      	ldr	r2, [pc, #120]	; (10227c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb4>)
  102202:	4921      	ldr	r1, [pc, #132]	; (102288 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xc0>)
  102204:	4620      	mov	r0, r4
  102206:	f00b fa66 	bl	10d6d6 <__aeabi_atexit>
  10220a:	4820      	ldr	r0, [pc, #128]	; (10228c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xc4>)
  10220c:	f7ff ffa2 	bl	102154 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.14] [clone .constprop.16]>
  102210:	4a1a      	ldr	r2, [pc, #104]	; (10227c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb4>)
  102212:	491b      	ldr	r1, [pc, #108]	; (102280 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb8>)
  102214:	481d      	ldr	r0, [pc, #116]	; (10228c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xc4>)
  102216:	f00b fa5e 	bl	10d6d6 <__aeabi_atexit>
  10221a:	481d      	ldr	r0, [pc, #116]	; (102290 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xc8>)
  10221c:	f7ff ff9a 	bl	102154 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.14] [clone .constprop.16]>
  102220:	4a16      	ldr	r2, [pc, #88]	; (10227c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb4>)
  102222:	4917      	ldr	r1, [pc, #92]	; (102280 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb8>)
  102224:	481a      	ldr	r0, [pc, #104]	; (102290 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xc8>)
  102226:	f00b fa56 	bl	10d6d6 <__aeabi_atexit>
  10222a:	481a      	ldr	r0, [pc, #104]	; (102294 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xcc>)
  10222c:	f7ff ff92 	bl	102154 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.14] [clone .constprop.16]>
  102230:	4a12      	ldr	r2, [pc, #72]	; (10227c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb4>)
  102232:	4913      	ldr	r1, [pc, #76]	; (102280 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb8>)
  102234:	4817      	ldr	r0, [pc, #92]	; (102294 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xcc>)
  102236:	f00b fa4e 	bl	10d6d6 <__aeabi_atexit>
  10223a:	4817      	ldr	r0, [pc, #92]	; (102298 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xd0>)
  10223c:	f00b fc4e 	bl	10dadc <rtos::Mutex::Mutex()>
  102240:	4a0e      	ldr	r2, [pc, #56]	; (10227c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xb4>)
  102242:	4916      	ldr	r1, [pc, #88]	; (10229c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xd4>)
  102244:	4814      	ldr	r0, [pc, #80]	; (102298 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xd0>)
  102246:	f00b fa46 	bl	10d6d6 <__aeabi_atexit>
  10224a:	4815      	ldr	r0, [pc, #84]	; (1022a0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xd8>)
  10224c:	2107      	movs	r1, #7
  10224e:	6004      	str	r4, [r0, #0]
  102250:	7104      	strb	r4, [r0, #4]
  102252:	6084      	str	r4, [r0, #8]
  102254:	f006 f980 	bl	108558 <gpio_init_out>
  102258:	4812      	ldr	r0, [pc, #72]	; (1022a4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xdc>)
  10225a:	2110      	movs	r1, #16
  10225c:	6004      	str	r4, [r0, #0]
  10225e:	7104      	strb	r4, [r0, #4]
  102260:	6084      	str	r4, [r0, #8]
  102262:	f006 f979 	bl	108558 <gpio_init_out>
  102266:	4810      	ldr	r0, [pc, #64]	; (1022a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0xe0>)
  102268:	210e      	movs	r1, #14
  10226a:	6004      	str	r4, [r0, #0]
  10226c:	7104      	strb	r4, [r0, #4]
  10226e:	6084      	str	r4, [r0, #8]
  102270:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  102274:	f006 b970 	b.w	108558 <gpio_init_out>
  102278:	3fff447c 	.word	0x3fff447c
  10227c:	3fff40a0 	.word	0x3fff40a0
  102280:	0010e1e5 	.word	0x0010e1e5
  102284:	3fff4304 	.word	0x3fff4304
  102288:	00102135 	.word	0x00102135
  10228c:	3fff44b8 	.word	0x3fff44b8
  102290:	3fff4494 	.word	0x3fff4494
  102294:	3fff451c 	.word	0x3fff451c
  102298:	3fff44ec 	.word	0x3fff44ec
  10229c:	0010daf7 	.word	0x0010daf7
  1022a0:	3fff44ac 	.word	0x3fff44ac
  1022a4:	3fff44e0 	.word	0x3fff44e0
  1022a8:	3fff44d0 	.word	0x3fff44d0

001022ac <HttpParser::on_message_begin_callback(http_parser*)>:
  1022ac:	2000      	movs	r0, #0
  1022ae:	4770      	bx	lr

001022b0 <HttpParser::on_message_complete_callback(http_parser*)>:
  1022b0:	6983      	ldr	r3, [r0, #24]
  1022b2:	2201      	movs	r2, #1
  1022b4:	681b      	ldr	r3, [r3, #0]
  1022b6:	2000      	movs	r0, #0
  1022b8:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
  1022bc:	4770      	bx	lr

001022be <HttpParser::on_chunk_header_callback(http_parser*)>:
  1022be:	6983      	ldr	r3, [r0, #24]
  1022c0:	2201      	movs	r2, #1
  1022c2:	681b      	ldr	r3, [r3, #0]
  1022c4:	2000      	movs	r0, #0
  1022c6:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
  1022ca:	4770      	bx	lr

001022cc <HttpParser::on_chunk_complete_callback(http_parser*)>:
  1022cc:	2000      	movs	r0, #0
  1022ce:	4770      	bx	lr

001022d0 <interrupt()>:
  1022d0:	4b01      	ldr	r3, [pc, #4]	; (1022d8 <interrupt()+0x8>)
  1022d2:	2201      	movs	r2, #1
  1022d4:	601a      	str	r2, [r3, #0]
  1022d6:	4770      	bx	lr
  1022d8:	3fff8244 	.word	0x3fff8244

001022dc <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
  1022dc:	6803      	ldr	r3, [r0, #0]
  1022de:	4718      	bx	r3

001022e0 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
  1022e0:	b108      	cbz	r0, 1022e6 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
  1022e2:	680b      	ldr	r3, [r1, #0]
  1022e4:	6003      	str	r3, [r0, #0]
  1022e6:	4770      	bx	lr

001022e8 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
  1022e8:	4770      	bx	lr
	...

001022ec <__tcf_0>:
  1022ec:	b538      	push	{r3, r4, r5, lr}
  1022ee:	4d06      	ldr	r5, [pc, #24]	; (102308 <__tcf_0+0x1c>)
  1022f0:	2400      	movs	r4, #0
  1022f2:	f504 70b4 	add.w	r0, r4, #360	; 0x168
  1022f6:	4428      	add	r0, r5
  1022f8:	3c18      	subs	r4, #24
  1022fa:	f00b fed9 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  1022fe:	f514 7fc0 	cmn.w	r4, #384	; 0x180
  102302:	d1f6      	bne.n	1022f2 <__tcf_0+0x6>
  102304:	bd38      	pop	{r3, r4, r5, pc}
  102306:	bf00      	nop
  102308:	3fff45d0 	.word	0x3fff45d0

0010230c <NRF24L01P::~NRF24L01P()>:
  10230c:	4770      	bx	lr
	...

00102310 <pir_routine()>:
  102310:	b508      	push	{r3, lr}
  102312:	4904      	ldr	r1, [pc, #16]	; (102324 <pir_routine()+0x14>)
  102314:	4804      	ldr	r0, [pc, #16]	; (102328 <pir_routine()+0x18>)
  102316:	f00b fb95 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10231a:	4b04      	ldr	r3, [pc, #16]	; (10232c <pir_routine()+0x1c>)
  10231c:	2201      	movs	r2, #1
  10231e:	601a      	str	r2, [r3, #0]
  102320:	bd08      	pop	{r3, pc}
  102322:	bf00      	nop
  102324:	00116000 	.word	0x00116000
  102328:	3fff8184 	.word	0x3fff8184
  10232c:	3fff8260 	.word	0x3fff8260

00102330 <NHD_C0216CZ::~NHD_C0216CZ()>:
  102330:	b510      	push	{r4, lr}
  102332:	4604      	mov	r4, r0
  102334:	3040      	adds	r0, #64	; 0x40
  102336:	f005 fc99 	bl	107c6c <PCA9655E::~PCA9655E()>
  10233a:	4620      	mov	r0, r4
  10233c:	bd10      	pop	{r4, pc}
	...

00102340 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]>:
  102340:	b573      	push	{r0, r1, r4, r5, r6, lr}
  102342:	4604      	mov	r4, r0
  102344:	4616      	mov	r6, r2
  102346:	460d      	mov	r5, r1
  102348:	b901      	cbnz	r1, 10234c <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]+0xc>
  10234a:	b9ba      	cbnz	r2, 10237c <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]+0x3c>
  10234c:	1b73      	subs	r3, r6, r5
  10234e:	2b0f      	cmp	r3, #15
  102350:	9301      	str	r3, [sp, #4]
  102352:	d907      	bls.n	102364 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]+0x24>
  102354:	2200      	movs	r2, #0
  102356:	a901      	add	r1, sp, #4
  102358:	4620      	mov	r0, r4
  10235a:	f00b fe8d 	bl	10e078 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)>
  10235e:	9b01      	ldr	r3, [sp, #4]
  102360:	6020      	str	r0, [r4, #0]
  102362:	60a3      	str	r3, [r4, #8]
  102364:	4632      	mov	r2, r6
  102366:	4629      	mov	r1, r5
  102368:	6820      	ldr	r0, [r4, #0]
  10236a:	f00b feb7 	bl	10e0dc <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)>
  10236e:	9b01      	ldr	r3, [sp, #4]
  102370:	6822      	ldr	r2, [r4, #0]
  102372:	2100      	movs	r1, #0
  102374:	6063      	str	r3, [r4, #4]
  102376:	54d1      	strb	r1, [r2, r3]
  102378:	b002      	add	sp, #8
  10237a:	bd70      	pop	{r4, r5, r6, pc}
  10237c:	4801      	ldr	r0, [pc, #4]	; (102384 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]+0x44>)
  10237e:	f00b fe6c 	bl	10e05a <std::__throw_logic_error(char const*)>
  102382:	bf00      	nop
  102384:	00116014 	.word	0x00116014

00102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>:
  102388:	b538      	push	{r3, r4, r5, lr}
  10238a:	f100 0308 	add.w	r3, r0, #8
  10238e:	4604      	mov	r4, r0
  102390:	6003      	str	r3, [r0, #0]
  102392:	460d      	mov	r5, r1
  102394:	b121      	cbz	r1, 1023a0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]+0x18>
  102396:	4608      	mov	r0, r1
  102398:	f00f fa05 	bl	1117a6 <strlen>
  10239c:	182a      	adds	r2, r5, r0
  10239e:	e001      	b.n	1023a4 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]+0x1c>
  1023a0:	f04f 32ff 	mov.w	r2, #4294967295
  1023a4:	4620      	mov	r0, r4
  1023a6:	4629      	mov	r1, r5
  1023a8:	f7ff ffca 	bl	102340 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]>
  1023ac:	4620      	mov	r0, r4
  1023ae:	bd38      	pop	{r3, r4, r5, pc}

001023b0 <HttpParser::on_status_callback(http_parser*, char const*, unsigned int)>:
  1023b0:	b530      	push	{r4, r5, lr}
  1023b2:	4605      	mov	r5, r0
  1023b4:	b08d      	sub	sp, #52	; 0x34
  1023b6:	6984      	ldr	r4, [r0, #24]
  1023b8:	ab02      	add	r3, sp, #8
  1023ba:	440a      	add	r2, r1
  1023bc:	4668      	mov	r0, sp
  1023be:	9300      	str	r3, [sp, #0]
  1023c0:	f7ff ffbe 	bl	102340 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]>
  1023c4:	6824      	ldr	r4, [r4, #0]
  1023c6:	4669      	mov	r1, sp
  1023c8:	a806      	add	r0, sp, #24
  1023ca:	8aad      	ldrh	r5, [r5, #20]
  1023cc:	f00b ffd6 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  1023d0:	4620      	mov	r0, r4
  1023d2:	a906      	add	r1, sp, #24
  1023d4:	f840 5b04 	str.w	r5, [r0], #4
  1023d8:	f00b fe85 	bl	10e0e6 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  1023dc:	a806      	add	r0, sp, #24
  1023de:	f00b fe67 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  1023e2:	4668      	mov	r0, sp
  1023e4:	f00b fe64 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  1023e8:	2000      	movs	r0, #0
  1023ea:	b00d      	add	sp, #52	; 0x34
  1023ec:	bd30      	pop	{r4, r5, pc}

001023ee <HttpParser::on_url_callback(http_parser*, char const*, unsigned int)>:
  1023ee:	b510      	push	{r4, lr}
  1023f0:	6984      	ldr	r4, [r0, #24]
  1023f2:	b08c      	sub	sp, #48	; 0x30
  1023f4:	ab02      	add	r3, sp, #8
  1023f6:	440a      	add	r2, r1
  1023f8:	4668      	mov	r0, sp
  1023fa:	9300      	str	r3, [sp, #0]
  1023fc:	f7ff ffa0 	bl	102340 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]>
  102400:	6824      	ldr	r4, [r4, #0]
  102402:	4669      	mov	r1, sp
  102404:	a806      	add	r0, sp, #24
  102406:	f00b ffb9 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  10240a:	a906      	add	r1, sp, #24
  10240c:	f104 001c 	add.w	r0, r4, #28
  102410:	f00b fe69 	bl	10e0e6 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102414:	a806      	add	r0, sp, #24
  102416:	f00b fe4b 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  10241a:	4668      	mov	r0, sp
  10241c:	f00b fe48 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102420:	2000      	movs	r0, #0
  102422:	b00c      	add	sp, #48	; 0x30
  102424:	bd10      	pop	{r4, pc}

00102426 <mbed::DigitalOut::DigitalOut(PinName)>:
  102426:	b510      	push	{r4, lr}
  102428:	4604      	mov	r4, r0
  10242a:	2300      	movs	r3, #0
  10242c:	6003      	str	r3, [r0, #0]
  10242e:	7103      	strb	r3, [r0, #4]
  102430:	6083      	str	r3, [r0, #8]
  102432:	f006 f891 	bl	108558 <gpio_init_out>
  102436:	4620      	mov	r0, r4
  102438:	bd10      	pop	{r4, pc}

0010243a <HttpResponse::~HttpResponse()>:
  10243a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10243c:	4604      	mov	r4, r0
  10243e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
  102440:	b108      	cbz	r0, 102446 <HttpResponse::~HttpResponse()+0xc>
  102442:	f00d fd25 	bl	10fe90 <free>
  102446:	2500      	movs	r5, #0
  102448:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  10244a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  10244c:	1a9b      	subs	r3, r3, r2
  10244e:	ebb5 0fa3 	cmp.w	r5, r3, asr #2
  102452:	d214      	bcs.n	10247e <HttpResponse::~HttpResponse()+0x44>
  102454:	f852 6025 	ldr.w	r6, [r2, r5, lsl #2]
  102458:	00af      	lsls	r7, r5, #2
  10245a:	b12e      	cbz	r6, 102468 <HttpResponse::~HttpResponse()+0x2e>
  10245c:	4630      	mov	r0, r6
  10245e:	f00b fe27 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102462:	4630      	mov	r0, r6
  102464:	f00b f978 	bl	10d758 <operator delete(void*)>
  102468:	6c63      	ldr	r3, [r4, #68]	; 0x44
  10246a:	59de      	ldr	r6, [r3, r7]
  10246c:	b12e      	cbz	r6, 10247a <HttpResponse::~HttpResponse()+0x40>
  10246e:	4630      	mov	r0, r6
  102470:	f00b fe1e 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102474:	4630      	mov	r0, r6
  102476:	f00b f96f 	bl	10d758 <operator delete(void*)>
  10247a:	3501      	adds	r5, #1
  10247c:	e7e4      	b.n	102448 <HttpResponse::~HttpResponse()+0xe>
  10247e:	6c60      	ldr	r0, [r4, #68]	; 0x44
  102480:	b108      	cbz	r0, 102486 <HttpResponse::~HttpResponse()+0x4c>
  102482:	f00b f969 	bl	10d758 <operator delete(void*)>
  102486:	6ba0      	ldr	r0, [r4, #56]	; 0x38
  102488:	b108      	cbz	r0, 10248e <HttpResponse::~HttpResponse()+0x54>
  10248a:	f00b f965 	bl	10d758 <operator delete(void*)>
  10248e:	f104 001c 	add.w	r0, r4, #28
  102492:	f00b fe0d 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102496:	1d20      	adds	r0, r4, #4
  102498:	f00b fe0a 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  10249c:	4620      	mov	r0, r4
  10249e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

001024a0 <HttpResponse::set_headers_complete()>:
  1024a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1024a4:	4606      	mov	r6, r0
  1024a6:	6b87      	ldr	r7, [r0, #56]	; 0x38
  1024a8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  1024aa:	2200      	movs	r2, #0
  1024ac:	1bdb      	subs	r3, r3, r7
  1024ae:	109d      	asrs	r5, r3, #2
  1024b0:	42aa      	cmp	r2, r5
  1024b2:	d02b      	beq.n	10250c <HttpResponse::set_headers_complete()+0x6c>
  1024b4:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
  1024b8:	f8df e054 	ldr.w	lr, [pc, #84]	; 102510 <HttpResponse::set_headers_complete()+0x70>
  1024bc:	6818      	ldr	r0, [r3, #0]
  1024be:	ea4f 0c82 	mov.w	r12, r2, lsl #2
  1024c2:	3801      	subs	r0, #1
  1024c4:	f810 1f01 	ldrb.w	r1, [r0, #1]!
  1024c8:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
  1024cc:	2b19      	cmp	r3, #25
  1024ce:	bf88      	it	hi
  1024d0:	460c      	movhi	r4, r1
  1024d2:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
  1024d6:	bf98      	it	ls
  1024d8:	f101 0420 	addls.w	r4, r1, #32
  1024dc:	f1a3 0841 	sub.w	r8, r3, #65	; 0x41
  1024e0:	bf98      	it	ls
  1024e2:	b2e4      	uxtbls	r4, r4
  1024e4:	f1b8 0f19 	cmp.w	r8, #25
  1024e8:	bf9c      	itt	ls
  1024ea:	3320      	addls	r3, #32
  1024ec:	b2db      	uxtbls	r3, r3
  1024ee:	42a3      	cmp	r3, r4
  1024f0:	d10a      	bne.n	102508 <HttpResponse::set_headers_complete()+0x68>
  1024f2:	2900      	cmp	r1, #0
  1024f4:	d1e6      	bne.n	1024c4 <HttpResponse::set_headers_complete()+0x24>
  1024f6:	6c73      	ldr	r3, [r6, #68]	; 0x44
  1024f8:	f853 300c 	ldr.w	r3, [r3, r12]
  1024fc:	6818      	ldr	r0, [r3, #0]
  1024fe:	f00d f967 	bl	10f7d0 <atoi>
  102502:	6570      	str	r0, [r6, #84]	; 0x54
  102504:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  102508:	3201      	adds	r2, #1
  10250a:	e7d1      	b.n	1024b0 <HttpResponse::set_headers_complete()+0x10>
  10250c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  102510:	0011603d 	.word	0x0011603d

00102514 <HttpParser::on_headers_complete_callback(http_parser*)>:
  102514:	b538      	push	{r3, r4, r5, lr}
  102516:	4604      	mov	r4, r0
  102518:	6985      	ldr	r5, [r0, #24]
  10251a:	6828      	ldr	r0, [r5, #0]
  10251c:	f7ff ffc0 	bl	1024a0 <HttpResponse::set_headers_complete()>
  102520:	682b      	ldr	r3, [r5, #0]
  102522:	7da2      	ldrb	r2, [r4, #22]
  102524:	2000      	movs	r0, #0
  102526:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  10252a:	bd38      	pop	{r3, r4, r5, pc}

0010252c <ParsedUrl::ParsedUrl(char const*)>:
  10252c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  102530:	4604      	mov	r4, r0
  102532:	b088      	sub	sp, #32
  102534:	4608      	mov	r0, r1
  102536:	460f      	mov	r7, r1
  102538:	f00f f935 	bl	1117a6 <strlen>
  10253c:	466b      	mov	r3, sp
  10253e:	4601      	mov	r1, r0
  102540:	2200      	movs	r2, #0
  102542:	4638      	mov	r0, r7
  102544:	f005 f948 	bl	1077d8 <http_parser_parse_url>
  102548:	466d      	mov	r5, sp
  10254a:	2600      	movs	r6, #0
  10254c:	f8bd 3000 	ldrh.w	r3, [sp]
  102550:	4133      	asrs	r3, r6
  102552:	07db      	lsls	r3, r3, #31
  102554:	d50c      	bpl.n	102570 <ParsedUrl::ParsedUrl(char const*)+0x44>
  102556:	f8b5 8006 	ldrh.w	r8, [r5, #6]
  10255a:	2101      	movs	r1, #1
  10255c:	eb08 0001 	add.w	r0, r8, r1
  102560:	f00d f93a 	bl	10f7d8 <calloc>
  102564:	88a9      	ldrh	r1, [r5, #4]
  102566:	4642      	mov	r2, r8
  102568:	4439      	add	r1, r7
  10256a:	f00d fcb6 	bl	10feda <memcpy>
  10256e:	e003      	b.n	102578 <ParsedUrl::ParsedUrl(char const*)+0x4c>
  102570:	2101      	movs	r1, #1
  102572:	4608      	mov	r0, r1
  102574:	f00d f930 	bl	10f7d8 <calloc>
  102578:	2e06      	cmp	r6, #6
  10257a:	d80f      	bhi.n	10259c <ParsedUrl::ParsedUrl(char const*)+0x70>
  10257c:	e8df f006 	tbb	[pc, r6]
  102580:	080e0604 	.word	0x080e0604
  102584:	0e0a      	.short	0x0e0a
  102586:	0c          	.byte	0x0c
  102587:	00          	.byte	0x00
  102588:	6060      	str	r0, [r4, #4]
  10258a:	e009      	b.n	1025a0 <ParsedUrl::ParsedUrl(char const*)+0x74>
  10258c:	60a0      	str	r0, [r4, #8]
  10258e:	e007      	b.n	1025a0 <ParsedUrl::ParsedUrl(char const*)+0x74>
  102590:	60e0      	str	r0, [r4, #12]
  102592:	e005      	b.n	1025a0 <ParsedUrl::ParsedUrl(char const*)+0x74>
  102594:	6120      	str	r0, [r4, #16]
  102596:	e003      	b.n	1025a0 <ParsedUrl::ParsedUrl(char const*)+0x74>
  102598:	6160      	str	r0, [r4, #20]
  10259a:	e001      	b.n	1025a0 <ParsedUrl::ParsedUrl(char const*)+0x74>
  10259c:	f00d fc78 	bl	10fe90 <free>
  1025a0:	3601      	adds	r6, #1
  1025a2:	2e07      	cmp	r6, #7
  1025a4:	f105 0504 	add.w	r5, r5, #4
  1025a8:	d1d0      	bne.n	10254c <ParsedUrl::ParsedUrl(char const*)+0x20>
  1025aa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
  1025ae:	8023      	strh	r3, [r4, #0]
  1025b0:	b94b      	cbnz	r3, 1025c6 <ParsedUrl::ParsedUrl(char const*)+0x9a>
  1025b2:	490c      	ldr	r1, [pc, #48]	; (1025e4 <ParsedUrl::ParsedUrl(char const*)+0xb8>)
  1025b4:	6860      	ldr	r0, [r4, #4]
  1025b6:	f00f f8e4 	bl	111782 <strcmp>
  1025ba:	b910      	cbnz	r0, 1025c2 <ParsedUrl::ParsedUrl(char const*)+0x96>
  1025bc:	f240 13bb 	movw	r3, #443	; 0x1bb
  1025c0:	e000      	b.n	1025c4 <ParsedUrl::ParsedUrl(char const*)+0x98>
  1025c2:	2350      	movs	r3, #80	; 0x50
  1025c4:	8023      	strh	r3, [r4, #0]
  1025c6:	68e3      	ldr	r3, [r4, #12]
  1025c8:	781b      	ldrb	r3, [r3, #0]
  1025ca:	b933      	cbnz	r3, 1025da <ParsedUrl::ParsedUrl(char const*)+0xae>
  1025cc:	2101      	movs	r1, #1
  1025ce:	2002      	movs	r0, #2
  1025d0:	f00d f902 	bl	10f7d8 <calloc>
  1025d4:	232f      	movs	r3, #47	; 0x2f
  1025d6:	60e0      	str	r0, [r4, #12]
  1025d8:	7003      	strb	r3, [r0, #0]
  1025da:	4620      	mov	r0, r4
  1025dc:	b008      	add	sp, #32
  1025de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1025e2:	bf00      	nop
  1025e4:	0011604d 	.word	0x0011604d

001025e8 <mbed::Callback<void ()>::~Callback()>:
  1025e8:	68c3      	ldr	r3, [r0, #12]
  1025ea:	b510      	push	{r4, lr}
  1025ec:	4604      	mov	r4, r0
  1025ee:	b10b      	cbz	r3, 1025f4 <mbed::Callback<void ()>::~Callback()+0xc>
  1025f0:	689b      	ldr	r3, [r3, #8]
  1025f2:	4798      	blx	r3
  1025f4:	4620      	mov	r0, r4
  1025f6:	bd10      	pop	{r4, pc}

001025f8 <mbed::Ticker::~Ticker()>:
  1025f8:	b538      	push	{r3, r4, r5, lr}
  1025fa:	4605      	mov	r5, r0
  1025fc:	4604      	mov	r4, r0
  1025fe:	4b06      	ldr	r3, [pc, #24]	; (102618 <mbed::Ticker::~Ticker()+0x20>)
  102600:	f845 3b28 	str.w	r3, [r5], #40
  102604:	f00a f9ca 	bl	10c99c <mbed::Ticker::detach()>
  102608:	4628      	mov	r0, r5
  10260a:	f7ff ffed 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10260e:	4620      	mov	r0, r4
  102610:	f00a fa88 	bl	10cb24 <mbed::TimerEvent::~TimerEvent()>
  102614:	4620      	mov	r0, r4
  102616:	bd38      	pop	{r3, r4, r5, pc}
  102618:	001197a8 	.word	0x001197a8

0010261c <mbed::Ticker::~Ticker()>:
  10261c:	b510      	push	{r4, lr}
  10261e:	4604      	mov	r4, r0
  102620:	f7ff ffea 	bl	1025f8 <mbed::Ticker::~Ticker()>
  102624:	4620      	mov	r0, r4
  102626:	f00b f897 	bl	10d758 <operator delete(void*)>
  10262a:	4620      	mov	r0, r4
  10262c:	bd10      	pop	{r4, pc}
	...

00102630 <mbed::SerialBase::~SerialBase()>:
  102630:	b570      	push	{r4, r5, r6, lr}
  102632:	4605      	mov	r5, r0
  102634:	4b07      	ldr	r3, [pc, #28]	; (102654 <mbed::SerialBase::~SerialBase()+0x24>)
  102636:	4606      	mov	r6, r0
  102638:	f845 3b10 	str.w	r3, [r5], #16
  10263c:	b145      	cbz	r5, 102650 <mbed::SerialBase::~SerialBase()+0x20>
  10263e:	f100 0430 	add.w	r4, r0, #48	; 0x30
  102642:	42ac      	cmp	r4, r5
  102644:	d004      	beq.n	102650 <mbed::SerialBase::~SerialBase()+0x20>
  102646:	3c10      	subs	r4, #16
  102648:	4620      	mov	r0, r4
  10264a:	f7ff ffcd 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10264e:	e7f8      	b.n	102642 <mbed::SerialBase::~SerialBase()+0x12>
  102650:	4630      	mov	r0, r6
  102652:	bd70      	pop	{r4, r5, r6, pc}
  102654:	00119770 	.word	0x00119770

00102658 <mbed::SerialBase::~SerialBase()>:
  102658:	b510      	push	{r4, lr}
  10265a:	4604      	mov	r4, r0
  10265c:	f7ff ffe8 	bl	102630 <mbed::SerialBase::~SerialBase()>
  102660:	4620      	mov	r0, r4
  102662:	f00b f879 	bl	10d758 <operator delete(void*)>
  102666:	4620      	mov	r0, r4
  102668:	bd10      	pop	{r4, pc}
	...

0010266c <mbed::Serial::~Serial()>:
  10266c:	b510      	push	{r4, lr}
  10266e:	4604      	mov	r4, r0
  102670:	4b0a      	ldr	r3, [pc, #40]	; (10269c <mbed::Serial::~Serial()+0x30>)
  102672:	304c      	adds	r0, #76	; 0x4c
  102674:	f103 0220 	add.w	r2, r3, #32
  102678:	f840 3c4c 	str.w	r3, [r0, #-76]
  10267c:	337c      	adds	r3, #124	; 0x7c
  10267e:	f840 2c18 	str.w	r2, [r0, #-24]
  102682:	f840 3c14 	str.w	r3, [r0, #-20]
  102686:	f00b fa36 	bl	10daf6 <rtos::Mutex::~Mutex()>
  10268a:	f104 0034 	add.w	r0, r4, #52	; 0x34
  10268e:	f00b f9c7 	bl	10da20 <mbed::Stream::~Stream()>
  102692:	4620      	mov	r0, r4
  102694:	f7ff ffcc 	bl	102630 <mbed::SerialBase::~SerialBase()>
  102698:	4620      	mov	r0, r4
  10269a:	bd10      	pop	{r4, pc}
  10269c:	001196e4 	.word	0x001196e4

001026a0 <non-virtual thunk to mbed::Serial::~Serial()>:
  1026a0:	f1a0 0034 	sub.w	r0, r0, #52	; 0x34
  1026a4:	e7e2      	b.n	10266c <mbed::Serial::~Serial()>

001026a6 <non-virtual thunk to mbed::Serial::~Serial()>:
  1026a6:	f1a0 0038 	sub.w	r0, r0, #56	; 0x38
  1026aa:	e7df      	b.n	10266c <mbed::Serial::~Serial()>

001026ac <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
  1026ac:	b538      	push	{r3, r4, r5, lr}
  1026ae:	68cb      	ldr	r3, [r1, #12]
  1026b0:	4604      	mov	r4, r0
  1026b2:	460d      	mov	r5, r1
  1026b4:	b10b      	cbz	r3, 1026ba <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
  1026b6:	685b      	ldr	r3, [r3, #4]
  1026b8:	4798      	blx	r3
  1026ba:	68eb      	ldr	r3, [r5, #12]
  1026bc:	4620      	mov	r0, r4
  1026be:	60e3      	str	r3, [r4, #12]
  1026c0:	bd38      	pop	{r3, r4, r5, pc}

001026c2 <mbed::Callback<void (char const*, unsigned int)>::Callback(mbed::Callback<void (char const*, unsigned int)> const&)>:
  1026c2:	b538      	push	{r3, r4, r5, lr}
  1026c4:	68cb      	ldr	r3, [r1, #12]
  1026c6:	4604      	mov	r4, r0
  1026c8:	460d      	mov	r5, r1
  1026ca:	b10b      	cbz	r3, 1026d0 <mbed::Callback<void (char const*, unsigned int)>::Callback(mbed::Callback<void (char const*, unsigned int)> const&)+0xe>
  1026cc:	685b      	ldr	r3, [r3, #4]
  1026ce:	4798      	blx	r3
  1026d0:	68eb      	ldr	r3, [r5, #12]
  1026d2:	4620      	mov	r0, r4
  1026d4:	60e3      	str	r3, [r4, #12]
  1026d6:	bd38      	pop	{r3, r4, r5, pc}

001026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>:
  1026d8:	68c3      	ldr	r3, [r0, #12]
  1026da:	b510      	push	{r4, lr}
  1026dc:	4604      	mov	r4, r0
  1026de:	b10b      	cbz	r3, 1026e4 <mbed::Callback<void (char const*, unsigned int)>::~Callback()+0xc>
  1026e0:	689b      	ldr	r3, [r3, #8]
  1026e2:	4798      	blx	r3
  1026e4:	4620      	mov	r0, r4
  1026e6:	bd10      	pop	{r4, pc}

001026e8 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)>:
  1026e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  1026ea:	4607      	mov	r7, r0
  1026ec:	460c      	mov	r4, r1
  1026ee:	b194      	cbz	r4, 102716 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x2e>
  1026f0:	68e1      	ldr	r1, [r4, #12]
  1026f2:	4638      	mov	r0, r7
  1026f4:	f7ff fff8 	bl	1026e8 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)>
  1026f8:	f104 0610 	add.w	r6, r4, #16
  1026fc:	f104 0028 	add.w	r0, r4, #40	; 0x28
  102700:	68a5      	ldr	r5, [r4, #8]
  102702:	f00b fcd5 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102706:	4630      	mov	r0, r6
  102708:	f00b fcd2 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  10270c:	4620      	mov	r0, r4
  10270e:	f00b f823 	bl	10d758 <operator delete(void*)>
  102712:	462c      	mov	r4, r5
  102714:	e7eb      	b.n	1026ee <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x6>
  102716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00102718 <HttpRequest::~HttpRequest()>:
  102718:	b538      	push	{r3, r4, r5, lr}
  10271a:	6a85      	ldr	r5, [r0, #40]	; 0x28
  10271c:	4604      	mov	r4, r0
  10271e:	b12d      	cbz	r5, 10272c <HttpRequest::~HttpRequest()+0x14>
  102720:	4628      	mov	r0, r5
  102722:	f7ff fe8a 	bl	10243a <HttpResponse::~HttpResponse()>
  102726:	4628      	mov	r0, r5
  102728:	f00b f816 	bl	10d758 <operator delete(void*)>
  10272c:	6a25      	ldr	r5, [r4, #32]
  10272e:	b1b5      	cbz	r5, 10275e <HttpRequest::~HttpRequest()+0x46>
  102730:	6868      	ldr	r0, [r5, #4]
  102732:	b108      	cbz	r0, 102738 <HttpRequest::~HttpRequest()+0x20>
  102734:	f00d fbac 	bl	10fe90 <free>
  102738:	68a8      	ldr	r0, [r5, #8]
  10273a:	b108      	cbz	r0, 102740 <HttpRequest::~HttpRequest()+0x28>
  10273c:	f00d fba8 	bl	10fe90 <free>
  102740:	68e8      	ldr	r0, [r5, #12]
  102742:	b108      	cbz	r0, 102748 <HttpRequest::~HttpRequest()+0x30>
  102744:	f00d fba4 	bl	10fe90 <free>
  102748:	6928      	ldr	r0, [r5, #16]
  10274a:	b108      	cbz	r0, 102750 <HttpRequest::~HttpRequest()+0x38>
  10274c:	f00d fba0 	bl	10fe90 <free>
  102750:	6968      	ldr	r0, [r5, #20]
  102752:	b108      	cbz	r0, 102758 <HttpRequest::~HttpRequest()+0x40>
  102754:	f00d fb9c 	bl	10fe90 <free>
  102758:	4628      	mov	r0, r5
  10275a:	f00a fffd 	bl	10d758 <operator delete(void*)>
  10275e:	6a65      	ldr	r5, [r4, #36]	; 0x24
  102760:	b13d      	cbz	r5, 102772 <HttpRequest::~HttpRequest()+0x5a>
  102762:	f105 0008 	add.w	r0, r5, #8
  102766:	6929      	ldr	r1, [r5, #16]
  102768:	f7ff ffbe 	bl	1026e8 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)>
  10276c:	4628      	mov	r0, r5
  10276e:	f00a fff3 	bl	10d758 <operator delete(void*)>
  102772:	6860      	ldr	r0, [r4, #4]
  102774:	b128      	cbz	r0, 102782 <HttpRequest::~HttpRequest()+0x6a>
  102776:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
  10277a:	b113      	cbz	r3, 102782 <HttpRequest::~HttpRequest()+0x6a>
  10277c:	6803      	ldr	r3, [r0, #0]
  10277e:	685b      	ldr	r3, [r3, #4]
  102780:	4798      	blx	r3
  102782:	f104 000c 	add.w	r0, r4, #12
  102786:	f7ff ffa7 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10278a:	4620      	mov	r0, r4
  10278c:	bd38      	pop	{r3, r4, r5, pc}
	...

00102790 <mbed::Callback<void (char const*, unsigned int)>::call(char const*, unsigned int) const>:
  102790:	68c3      	ldr	r3, [r0, #12]
  102792:	b570      	push	{r4, r5, r6, lr}
  102794:	4604      	mov	r4, r0
  102796:	460d      	mov	r5, r1
  102798:	4616      	mov	r6, r2
  10279a:	b92b      	cbnz	r3, 1027a8 <mbed::Callback<void (char const*, unsigned int)>::call(char const*, unsigned int) const+0x18>
  10279c:	f240 628b 	movw	r2, #1675	; 0x68b
  1027a0:	4905      	ldr	r1, [pc, #20]	; (1027b8 <mbed::Callback<void (char const*, unsigned int)>::call(char const*, unsigned int) const+0x28>)
  1027a2:	4806      	ldr	r0, [pc, #24]	; (1027bc <mbed::Callback<void (char const*, unsigned int)>::call(char const*, unsigned int) const+0x2c>)
  1027a4:	f005 fffc 	bl	1087a0 <mbed_assert_internal>
  1027a8:	68e3      	ldr	r3, [r4, #12]
  1027aa:	4632      	mov	r2, r6
  1027ac:	4629      	mov	r1, r5
  1027ae:	4620      	mov	r0, r4
  1027b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  1027b4:	681b      	ldr	r3, [r3, #0]
  1027b6:	4718      	bx	r3
  1027b8:	00116053 	.word	0x00116053
  1027bc:	0011608b 	.word	0x0011608b

001027c0 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)>:
  1027c0:	6980      	ldr	r0, [r0, #24]
  1027c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  1027c4:	6804      	ldr	r4, [r0, #0]
  1027c6:	460f      	mov	r7, r1
  1027c8:	6e23      	ldr	r3, [r4, #96]	; 0x60
  1027ca:	4615      	mov	r5, r2
  1027cc:	4413      	add	r3, r2
  1027ce:	6623      	str	r3, [r4, #96]	; 0x60
  1027d0:	6903      	ldr	r3, [r0, #16]
  1027d2:	b11b      	cbz	r3, 1027dc <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x1c>
  1027d4:	3004      	adds	r0, #4
  1027d6:	f7ff ffdb 	bl	102790 <mbed::Callback<void (char const*, unsigned int)>::call(char const*, unsigned int) const>
  1027da:	e031      	b.n	102840 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x80>
  1027dc:	6d60      	ldr	r0, [r4, #84]	; 0x54
  1027de:	b918      	cbnz	r0, 1027e8 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x28>
  1027e0:	b112      	cbz	r2, 1027e8 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x28>
  1027e2:	2301      	movs	r3, #1
  1027e4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
  1027e8:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  1027ea:	b92b      	cbnz	r3, 1027f8 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x38>
  1027ec:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
  1027f0:	b913      	cbnz	r3, 1027f8 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x38>
  1027f2:	f00d fb45 	bl	10fe80 <malloc>
  1027f6:	65e0      	str	r0, [r4, #92]	; 0x5c
  1027f8:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
  1027fc:	b1b3      	cbz	r3, 10282c <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x6c>
  1027fe:	6de6      	ldr	r6, [r4, #92]	; 0x5c
  102800:	b926      	cbnz	r6, 10280c <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x4c>
  102802:	4628      	mov	r0, r5
  102804:	f00d fb3c 	bl	10fe80 <malloc>
  102808:	65e0      	str	r0, [r4, #92]	; 0x5c
  10280a:	e00f      	b.n	10282c <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x6c>
  10280c:	6e61      	ldr	r1, [r4, #100]	; 0x64
  10280e:	4630      	mov	r0, r6
  102810:	4429      	add	r1, r5
  102812:	f00e fded 	bl	1113f0 <realloc>
  102816:	65e0      	str	r0, [r4, #92]	; 0x5c
  102818:	b940      	cbnz	r0, 10282c <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x6c>
  10281a:	6e61      	ldr	r1, [r4, #100]	; 0x64
  10281c:	4809      	ldr	r0, [pc, #36]	; (102844 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x84>)
  10281e:	4429      	add	r1, r5
  102820:	f00e fd4e 	bl	1112c0 <iprintf>
  102824:	4630      	mov	r0, r6
  102826:	f00d fb33 	bl	10fe90 <free>
  10282a:	e009      	b.n	102840 <HttpParser::on_body_callback(http_parser*, char const*, unsigned int)+0x80>
  10282c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  10282e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
  102830:	462a      	mov	r2, r5
  102832:	4418      	add	r0, r3
  102834:	4639      	mov	r1, r7
  102836:	f00d fb50 	bl	10feda <memcpy>
  10283a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  10283c:	441d      	add	r5, r3
  10283e:	6665      	str	r5, [r4, #100]	; 0x64
  102840:	2000      	movs	r0, #0
  102842:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  102844:	00116090 	.word	0x00116090

00102848 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)>:
  102848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10284a:	6843      	ldr	r3, [r0, #4]
  10284c:	6804      	ldr	r4, [r0, #0]
  10284e:	4605      	mov	r5, r0
  102850:	1b1c      	subs	r4, r3, r4
  102852:	10a4      	asrs	r4, r4, #2
  102854:	bf14      	ite	ne
  102856:	4623      	movne	r3, r4
  102858:	2301      	moveq	r3, #1
  10285a:	18e4      	adds	r4, r4, r3
  10285c:	460f      	mov	r7, r1
  10285e:	d202      	bcs.n	102866 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x1e>
  102860:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
  102864:	d321      	bcc.n	1028aa <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x62>
  102866:	f06f 4440 	mvn.w	r4, #3221225472	; 0xc0000000
  10286a:	00a0      	lsls	r0, r4, #2
  10286c:	f00a ff58 	bl	10d720 <operator new(unsigned int)>
  102870:	4606      	mov	r6, r0
  102872:	e895 000c 	ldmia.w	r5, {r2, r3}
  102876:	1a9b      	subs	r3, r3, r2
  102878:	683a      	ldr	r2, [r7, #0]
  10287a:	42de      	cmn	r6, r3
  10287c:	bf18      	it	ne
  10287e:	50f2      	strne	r2, [r6, r3]
  102880:	e895 0082 	ldmia.w	r5, {r1, r7}
  102884:	1a7f      	subs	r7, r7, r1
  102886:	08bb      	lsrs	r3, r7, #2
  102888:	d003      	beq.n	102892 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x4a>
  10288a:	463a      	mov	r2, r7
  10288c:	4630      	mov	r0, r6
  10288e:	f00d fb2f 	bl	10fef0 <memmove>
  102892:	6828      	ldr	r0, [r5, #0]
  102894:	3704      	adds	r7, #4
  102896:	4437      	add	r7, r6
  102898:	b108      	cbz	r0, 10289e <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x56>
  10289a:	f00a ff5d 	bl	10d758 <operator delete(void*)>
  10289e:	eb06 0484 	add.w	r4, r6, r4, lsl #2
  1028a2:	e885 00c0 	stmia.w	r5, {r6, r7}
  1028a6:	60ac      	str	r4, [r5, #8]
  1028a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1028aa:	2c00      	cmp	r4, #0
  1028ac:	d1dd      	bne.n	10286a <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x22>
  1028ae:	4626      	mov	r6, r4
  1028b0:	e7df      	b.n	102872 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x2a>

001028b2 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)>:
  1028b2:	b538      	push	{r3, r4, r5, lr}
  1028b4:	6842      	ldr	r2, [r0, #4]
  1028b6:	6885      	ldr	r5, [r0, #8]
  1028b8:	4603      	mov	r3, r0
  1028ba:	42aa      	cmp	r2, r5
  1028bc:	d006      	beq.n	1028cc <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x1a>
  1028be:	6809      	ldr	r1, [r1, #0]
  1028c0:	b102      	cbz	r2, 1028c4 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)+0x12>
  1028c2:	6011      	str	r1, [r2, #0]
  1028c4:	685a      	ldr	r2, [r3, #4]
  1028c6:	3204      	adds	r2, #4
  1028c8:	605a      	str	r2, [r3, #4]
  1028ca:	bd38      	pop	{r3, r4, r5, pc}
  1028cc:	f7ff ffbc 	bl	102848 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)>
  1028d0:	bd38      	pop	{r3, r4, r5, pc}

001028d2 <HttpParser::on_header_value_callback(http_parser*, char const*, unsigned int)>:
  1028d2:	b530      	push	{r4, r5, lr}
  1028d4:	6984      	ldr	r4, [r0, #24]
  1028d6:	b093      	sub	sp, #76	; 0x4c
  1028d8:	ab02      	add	r3, sp, #8
  1028da:	440a      	add	r2, r1
  1028dc:	4668      	mov	r0, sp
  1028de:	9300      	str	r3, [sp, #0]
  1028e0:	f7ff fd2e 	bl	102340 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]>
  1028e4:	6824      	ldr	r4, [r4, #0]
  1028e6:	4669      	mov	r1, sp
  1028e8:	a806      	add	r0, sp, #24
  1028ea:	f00b fd47 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  1028ee:	2300      	movs	r3, #0
  1028f0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  1028f4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  1028f8:	b1b3      	cbz	r3, 102928 <HttpParser::on_header_value_callback(http_parser*, char const*, unsigned int)+0x56>
  1028fa:	6c62      	ldr	r2, [r4, #68]	; 0x44
  1028fc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  1028fe:	a80c      	add	r0, sp, #48	; 0x30
  102900:	1a9b      	subs	r3, r3, r2
  102902:	109b      	asrs	r3, r3, #2
  102904:	3b01      	subs	r3, #1
  102906:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
  10290a:	4629      	mov	r1, r5
  10290c:	f00b fd36 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102910:	a906      	add	r1, sp, #24
  102912:	a80c      	add	r0, sp, #48	; 0x30
  102914:	f00b fc8e 	bl	10e234 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102918:	4628      	mov	r0, r5
  10291a:	a90c      	add	r1, sp, #48	; 0x30
  10291c:	f00b fc8f 	bl	10e23e <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)>
  102920:	a80c      	add	r0, sp, #48	; 0x30
  102922:	f00b fbc5 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102926:	e00c      	b.n	102942 <HttpParser::on_header_value_callback(http_parser*, char const*, unsigned int)+0x70>
  102928:	2018      	movs	r0, #24
  10292a:	f00a fef9 	bl	10d720 <operator new(unsigned int)>
  10292e:	4605      	mov	r5, r0
  102930:	a906      	add	r1, sp, #24
  102932:	f00b fd23 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102936:	a90c      	add	r1, sp, #48	; 0x30
  102938:	f104 0044 	add.w	r0, r4, #68	; 0x44
  10293c:	950c      	str	r5, [sp, #48]	; 0x30
  10293e:	f7ff ffb8 	bl	1028b2 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)>
  102942:	2301      	movs	r3, #1
  102944:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  102948:	a806      	add	r0, sp, #24
  10294a:	f00b fbb1 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  10294e:	4668      	mov	r0, sp
  102950:	f00b fbae 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102954:	2000      	movs	r0, #0
  102956:	b013      	add	sp, #76	; 0x4c
  102958:	bd30      	pop	{r4, r5, pc}

0010295a <HttpParser::on_header_field_callback(http_parser*, char const*, unsigned int)>:
  10295a:	b530      	push	{r4, r5, lr}
  10295c:	6984      	ldr	r4, [r0, #24]
  10295e:	b093      	sub	sp, #76	; 0x4c
  102960:	ab02      	add	r3, sp, #8
  102962:	440a      	add	r2, r1
  102964:	4668      	mov	r0, sp
  102966:	9300      	str	r3, [sp, #0]
  102968:	f7ff fcea 	bl	102340 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]>
  10296c:	6824      	ldr	r4, [r4, #0]
  10296e:	4669      	mov	r1, sp
  102970:	a806      	add	r0, sp, #24
  102972:	f00b fd03 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102976:	2300      	movs	r3, #0
  102978:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  10297c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
  102980:	b1b3      	cbz	r3, 1029b0 <HttpParser::on_header_field_callback(http_parser*, char const*, unsigned int)+0x56>
  102982:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  102984:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  102986:	a80c      	add	r0, sp, #48	; 0x30
  102988:	1a9b      	subs	r3, r3, r2
  10298a:	109b      	asrs	r3, r3, #2
  10298c:	3b01      	subs	r3, #1
  10298e:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
  102992:	4629      	mov	r1, r5
  102994:	f00b fcf2 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102998:	a906      	add	r1, sp, #24
  10299a:	a80c      	add	r0, sp, #48	; 0x30
  10299c:	f00b fc4a 	bl	10e234 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  1029a0:	4628      	mov	r0, r5
  1029a2:	a90c      	add	r1, sp, #48	; 0x30
  1029a4:	f00b fc4b 	bl	10e23e <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)>
  1029a8:	a80c      	add	r0, sp, #48	; 0x30
  1029aa:	f00b fb81 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  1029ae:	e00c      	b.n	1029ca <HttpParser::on_header_field_callback(http_parser*, char const*, unsigned int)+0x70>
  1029b0:	2018      	movs	r0, #24
  1029b2:	f00a feb5 	bl	10d720 <operator new(unsigned int)>
  1029b6:	4605      	mov	r5, r0
  1029b8:	a906      	add	r1, sp, #24
  1029ba:	f00b fcdf 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  1029be:	a90c      	add	r1, sp, #48	; 0x30
  1029c0:	f104 0038 	add.w	r0, r4, #56	; 0x38
  1029c4:	950c      	str	r5, [sp, #48]	; 0x30
  1029c6:	f7ff ff74 	bl	1028b2 <void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)>
  1029ca:	2301      	movs	r3, #1
  1029cc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  1029d0:	a806      	add	r0, sp, #24
  1029d2:	f00b fb6d 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  1029d6:	4668      	mov	r0, sp
  1029d8:	f00b fb6a 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  1029dc:	2000      	movs	r0, #0
  1029de:	b013      	add	sp, #76	; 0x4c
  1029e0:	bd30      	pop	{r4, r5, pc}

001029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>:
  1029e2:	b508      	push	{r3, lr}
  1029e4:	f00b fc97 	bl	10e316 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const>
  1029e8:	0fc0      	lsrs	r0, r0, #31
  1029ea:	bd08      	pop	{r3, pc}

001029ec <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>:
  1029ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1029f0:	460f      	mov	r7, r1
  1029f2:	4690      	mov	r8, r2
  1029f4:	688d      	ldr	r5, [r1, #8]
  1029f6:	4604      	mov	r4, r0
  1029f8:	1d0e      	adds	r6, r1, #4
  1029fa:	2001      	movs	r0, #1
  1029fc:	b15d      	cbz	r5, 102a16 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x2a>
  1029fe:	f105 0110 	add.w	r1, r5, #16
  102a02:	4640      	mov	r0, r8
  102a04:	f7ff ffed 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102a08:	b118      	cbz	r0, 102a12 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x26>
  102a0a:	68ab      	ldr	r3, [r5, #8]
  102a0c:	462e      	mov	r6, r5
  102a0e:	461d      	mov	r5, r3
  102a10:	e7f4      	b.n	1029fc <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x10>
  102a12:	68eb      	ldr	r3, [r5, #12]
  102a14:	e7fa      	b.n	102a0c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x20>
  102a16:	b148      	cbz	r0, 102a2c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x40>
  102a18:	68fb      	ldr	r3, [r7, #12]
  102a1a:	429e      	cmp	r6, r3
  102a1c:	d101      	bne.n	102a22 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x36>
  102a1e:	6025      	str	r5, [r4, #0]
  102a20:	e00d      	b.n	102a3e <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x52>
  102a22:	4630      	mov	r0, r6
  102a24:	f00b fab4 	bl	10df90 <std::_Rb_tree_decrement(std::_Rb_tree_node_base*)>
  102a28:	4605      	mov	r5, r0
  102a2a:	e000      	b.n	102a2e <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x42>
  102a2c:	4635      	mov	r5, r6
  102a2e:	4641      	mov	r1, r8
  102a30:	f105 0010 	add.w	r0, r5, #16
  102a34:	f7ff ffd5 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102a38:	b118      	cbz	r0, 102a42 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x56>
  102a3a:	2300      	movs	r3, #0
  102a3c:	6023      	str	r3, [r4, #0]
  102a3e:	6066      	str	r6, [r4, #4]
  102a40:	e001      	b.n	102a46 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x5a>
  102a42:	6025      	str	r5, [r4, #0]
  102a44:	6060      	str	r0, [r4, #4]
  102a46:	4620      	mov	r0, r4
  102a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00102a4c <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)>:
  102a4c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  102a50:	f100 0904 	add.w	r9, r0, #4
  102a54:	4589      	cmp	r9, r1
  102a56:	4607      	mov	r7, r0
  102a58:	4616      	mov	r6, r2
  102a5a:	460c      	mov	r4, r1
  102a5c:	d10b      	bne.n	102a76 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x2a>
  102a5e:	6943      	ldr	r3, [r0, #20]
  102a60:	2b00      	cmp	r3, #0
  102a62:	d074      	beq.n	102b4e <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x102>
  102a64:	6905      	ldr	r5, [r0, #16]
  102a66:	4611      	mov	r1, r2
  102a68:	f105 0010 	add.w	r0, r5, #16
  102a6c:	f7ff ffb9 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102a70:	2800      	cmp	r0, #0
  102a72:	d174      	bne.n	102b5e <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x112>
  102a74:	e06b      	b.n	102b4e <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x102>
  102a76:	f101 0810 	add.w	r8, r1, #16
  102a7a:	4641      	mov	r1, r8
  102a7c:	4610      	mov	r0, r2
  102a7e:	f7ff ffb0 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102a82:	4605      	mov	r5, r0
  102a84:	b1a0      	cbz	r0, 102ab0 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x64>
  102a86:	68fb      	ldr	r3, [r7, #12]
  102a88:	42a3      	cmp	r3, r4
  102a8a:	d00f      	beq.n	102aac <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x60>
  102a8c:	4620      	mov	r0, r4
  102a8e:	f00b fa7f 	bl	10df90 <std::_Rb_tree_decrement(std::_Rb_tree_node_base*)>
  102a92:	4631      	mov	r1, r6
  102a94:	4605      	mov	r5, r0
  102a96:	3010      	adds	r0, #16
  102a98:	f7ff ffa3 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102a9c:	2800      	cmp	r0, #0
  102a9e:	d056      	beq.n	102b4e <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x102>
  102aa0:	68eb      	ldr	r3, [r5, #12]
  102aa2:	2b00      	cmp	r3, #0
  102aa4:	bf14      	ite	ne
  102aa6:	4625      	movne	r5, r4
  102aa8:	2400      	moveq	r4, #0
  102aaa:	e027      	b.n	102afc <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xb0>
  102aac:	4625      	mov	r5, r4
  102aae:	e025      	b.n	102afc <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xb0>
  102ab0:	4631      	mov	r1, r6
  102ab2:	4640      	mov	r0, r8
  102ab4:	f7ff ff95 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102ab8:	2800      	cmp	r0, #0
  102aba:	d044      	beq.n	102b46 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xfa>
  102abc:	693b      	ldr	r3, [r7, #16]
  102abe:	42a3      	cmp	r3, r4
  102ac0:	d019      	beq.n	102af6 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xaa>
  102ac2:	4620      	mov	r0, r4
  102ac4:	f00b fa51 	bl	10df6a <std::_Rb_tree_increment(std::_Rb_tree_node_base*)>
  102ac8:	4680      	mov	r8, r0
  102aca:	f100 0110 	add.w	r1, r0, #16
  102ace:	4630      	mov	r0, r6
  102ad0:	f7ff ff87 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102ad4:	b130      	cbz	r0, 102ae4 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0x98>
  102ad6:	68e3      	ldr	r3, [r4, #12]
  102ad8:	2b00      	cmp	r3, #0
  102ada:	bf14      	ite	ne
  102adc:	4644      	movne	r4, r8
  102ade:	f04f 0800 	moveq.w	r8, #0
  102ae2:	e009      	b.n	102af8 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xac>
  102ae4:	4632      	mov	r2, r6
  102ae6:	4639      	mov	r1, r7
  102ae8:	4668      	mov	r0, sp
  102aea:	f7ff ff7f 	bl	1029ec <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102aee:	f8dd 8000 	ldr.w	r8, [sp]
  102af2:	9c01      	ldr	r4, [sp, #4]
  102af4:	e000      	b.n	102af8 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xac>
  102af6:	46a8      	mov	r8, r5
  102af8:	4625      	mov	r5, r4
  102afa:	4644      	mov	r4, r8
  102afc:	b31d      	cbz	r5, 102b46 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xfa>
  102afe:	b944      	cbnz	r4, 102b12 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xc6>
  102b00:	45a9      	cmp	r9, r5
  102b02:	d006      	beq.n	102b12 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xc6>
  102b04:	f105 0110 	add.w	r1, r5, #16
  102b08:	4630      	mov	r0, r6
  102b0a:	f7ff ff6a 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102b0e:	4680      	mov	r8, r0
  102b10:	e001      	b.n	102b16 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xca>
  102b12:	f04f 0801 	mov.w	r8, #1
  102b16:	2040      	movs	r0, #64	; 0x40
  102b18:	f00a fe02 	bl	10d720 <operator new(unsigned int)>
  102b1c:	4604      	mov	r4, r0
  102b1e:	3010      	adds	r0, #16
  102b20:	d008      	beq.n	102b34 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xe8>
  102b22:	4631      	mov	r1, r6
  102b24:	f00b fb44 	bl	10e1b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)>
  102b28:	f106 0118 	add.w	r1, r6, #24
  102b2c:	f104 0028 	add.w	r0, r4, #40	; 0x28
  102b30:	f00b fb3e 	bl	10e1b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)>
  102b34:	464b      	mov	r3, r9
  102b36:	462a      	mov	r2, r5
  102b38:	4621      	mov	r1, r4
  102b3a:	4640      	mov	r0, r8
  102b3c:	f00b fa2a 	bl	10df94 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)>
  102b40:	697b      	ldr	r3, [r7, #20]
  102b42:	3301      	adds	r3, #1
  102b44:	617b      	str	r3, [r7, #20]
  102b46:	4620      	mov	r0, r4
  102b48:	b003      	add	sp, #12
  102b4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  102b4e:	4632      	mov	r2, r6
  102b50:	4639      	mov	r1, r7
  102b52:	4668      	mov	r0, sp
  102b54:	f7ff ff4a 	bl	1029ec <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102b58:	e89d 0030 	ldmia.w	sp, {r4, r5}
  102b5c:	e7ce      	b.n	102afc <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xb0>
  102b5e:	2d00      	cmp	r5, #0
  102b60:	d1ce      	bne.n	102b00 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xb4>
  102b62:	462c      	mov	r4, r5
  102b64:	e7ef      	b.n	102b46 <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)+0xfa>

00102b66 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>:
  102b66:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  102b6a:	f100 070c 	add.w	r7, r0, #12
  102b6e:	4605      	mov	r5, r0
  102b70:	4688      	mov	r8, r1
  102b72:	4691      	mov	r9, r2
  102b74:	463e      	mov	r6, r7
  102b76:	6904      	ldr	r4, [r0, #16]
  102b78:	b08f      	sub	sp, #60	; 0x3c
  102b7a:	b164      	cbz	r4, 102b96 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x30>
  102b7c:	4641      	mov	r1, r8
  102b7e:	f104 0010 	add.w	r0, r4, #16
  102b82:	f7ff ff2e 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102b86:	b918      	cbnz	r0, 102b90 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x2a>
  102b88:	68a3      	ldr	r3, [r4, #8]
  102b8a:	4626      	mov	r6, r4
  102b8c:	461c      	mov	r4, r3
  102b8e:	e7f4      	b.n	102b7a <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x14>
  102b90:	68e3      	ldr	r3, [r4, #12]
  102b92:	4634      	mov	r4, r6
  102b94:	e7f9      	b.n	102b8a <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x24>
  102b96:	42b7      	cmp	r7, r6
  102b98:	d00b      	beq.n	102bb2 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x4c>
  102b9a:	f106 0110 	add.w	r1, r6, #16
  102b9e:	4640      	mov	r0, r8
  102ba0:	f7ff ff1f 	bl	1029e2 <bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102ba4:	b928      	cbnz	r0, 102bb2 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x4c>
  102ba6:	4649      	mov	r1, r9
  102ba8:	f106 0028 	add.w	r0, r6, #40	; 0x28
  102bac:	f00b fa9b 	bl	10e0e6 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102bb0:	e016      	b.n	102be0 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x7a>
  102bb2:	4641      	mov	r1, r8
  102bb4:	a802      	add	r0, sp, #8
  102bb6:	f00b fbe1 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102bba:	4649      	mov	r1, r9
  102bbc:	a808      	add	r0, sp, #32
  102bbe:	f00b fbdd 	bl	10e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
  102bc2:	3508      	adds	r5, #8
  102bc4:	ab0e      	add	r3, sp, #56	; 0x38
  102bc6:	f843 5d34 	str.w	r5, [r3, #-52]!
  102bca:	aa02      	add	r2, sp, #8
  102bcc:	4639      	mov	r1, r7
  102bce:	4628      	mov	r0, r5
  102bd0:	f7ff ff3c 	bl	102a4c <std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)>
  102bd4:	a808      	add	r0, sp, #32
  102bd6:	f00b fa6b 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102bda:	a802      	add	r0, sp, #8
  102bdc:	f00b fa68 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102be0:	b00f      	add	sp, #60	; 0x3c
  102be2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

00102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>:
  102be8:	b5f0      	push	{r4, r5, r6, r7, lr}
  102bea:	4604      	mov	r4, r0
  102bec:	b08d      	sub	sp, #52	; 0x34
  102bee:	7202      	strb	r2, [r0, #8]
  102bf0:	6001      	str	r1, [r0, #0]
  102bf2:	9912      	ldr	r1, [sp, #72]	; 0x48
  102bf4:	300c      	adds	r0, #12
  102bf6:	461f      	mov	r7, r3
  102bf8:	f7ff fd63 	bl	1026c2 <mbed::Callback<void (char const*, unsigned int)>::Callback(mbed::Callback<void (char const*, unsigned int)> const&)>
  102bfc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  102bfe:	2600      	movs	r6, #0
  102c00:	61e3      	str	r3, [r4, #28]
  102c02:	6326      	str	r6, [r4, #48]	; 0x30
  102c04:	62a6      	str	r6, [r4, #40]	; 0x28
  102c06:	2018      	movs	r0, #24
  102c08:	f00a fd8a 	bl	10d720 <operator new(unsigned int)>
  102c0c:	4605      	mov	r5, r0
  102c0e:	4639      	mov	r1, r7
  102c10:	f7ff fc8c 	bl	10252c <ParsedUrl::ParsedUrl(char const*)>
  102c14:	6225      	str	r5, [r4, #32]
  102c16:	2020      	movs	r0, #32
  102c18:	f00a fd82 	bl	10d720 <operator new(unsigned int)>
  102c1c:	4605      	mov	r5, r0
  102c1e:	6a23      	ldr	r3, [r4, #32]
  102c20:	7a22      	ldrb	r2, [r4, #8]
  102c22:	f100 070c 	add.w	r7, r0, #12
  102c26:	6043      	str	r3, [r0, #4]
  102c28:	7002      	strb	r2, [r0, #0]
  102c2a:	4631      	mov	r1, r6
  102c2c:	2210      	movs	r2, #16
  102c2e:	4638      	mov	r0, r7
  102c30:	f00d f979 	bl	10ff26 <memset>
  102c34:	61ee      	str	r6, [r5, #28]
  102c36:	616f      	str	r7, [r5, #20]
  102c38:	61af      	str	r7, [r5, #24]
  102c3a:	4911      	ldr	r1, [pc, #68]	; (102c80 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)+0x98>)
  102c3c:	a806      	add	r0, sp, #24
  102c3e:	f7ff fba3 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  102c42:	686b      	ldr	r3, [r5, #4]
  102c44:	4668      	mov	r0, sp
  102c46:	6899      	ldr	r1, [r3, #8]
  102c48:	f7ff fb9e 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  102c4c:	466a      	mov	r2, sp
  102c4e:	a906      	add	r1, sp, #24
  102c50:	4628      	mov	r0, r5
  102c52:	f7ff ff88 	bl	102b66 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>
  102c56:	4668      	mov	r0, sp
  102c58:	f00b fa2a 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102c5c:	a806      	add	r0, sp, #24
  102c5e:	f00b fa27 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102c62:	6265      	str	r5, [r4, #36]	; 0x24
  102c64:	20b0      	movs	r0, #176	; 0xb0
  102c66:	f00a fd5b 	bl	10d720 <operator new(unsigned int)>
  102c6a:	4605      	mov	r5, r0
  102c6c:	f00a f9d6 	bl	10d01c <TCPSocket::TCPSocket()>
  102c70:	4620      	mov	r0, r4
  102c72:	2301      	movs	r3, #1
  102c74:	6065      	str	r5, [r4, #4]
  102c76:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  102c7a:	b00d      	add	sp, #52	; 0x34
  102c7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  102c7e:	bf00      	nop
  102c80:	001160bc 	.word	0x001160bc

00102c84 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)>:
  102c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  102c88:	4605      	mov	r5, r0
  102c8a:	b095      	sub	sp, #84	; 0x54
  102c8c:	7800      	ldrb	r0, [r0, #0]
  102c8e:	4616      	mov	r6, r2
  102c90:	461f      	mov	r7, r3
  102c92:	4688      	mov	r8, r1
  102c94:	f004 fd76 	bl	107784 <http_method_str>
  102c98:	782b      	ldrb	r3, [r5, #0]
  102c9a:	4604      	mov	r4, r0
  102c9c:	1eda      	subs	r2, r3, #3
  102c9e:	2a01      	cmp	r2, #1
  102ca0:	d901      	bls.n	102ca6 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x22>
  102ca2:	b103      	cbz	r3, 102ca6 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x22>
  102ca4:	b1c6      	cbz	r6, 102cd8 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x54>
  102ca6:	4633      	mov	r3, r6
  102ca8:	4a4c      	ldr	r2, [pc, #304]	; (102ddc <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x158>)
  102caa:	210a      	movs	r1, #10
  102cac:	a805      	add	r0, sp, #20
  102cae:	f00e fca3 	bl	1115f8 <sniprintf>
  102cb2:	494b      	ldr	r1, [pc, #300]	; (102de0 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x15c>)
  102cb4:	a80e      	add	r0, sp, #56	; 0x38
  102cb6:	f7ff fb67 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  102cba:	a905      	add	r1, sp, #20
  102cbc:	a808      	add	r0, sp, #32
  102cbe:	f7ff fb63 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  102cc2:	aa08      	add	r2, sp, #32
  102cc4:	a90e      	add	r1, sp, #56	; 0x38
  102cc6:	4628      	mov	r0, r5
  102cc8:	f7ff ff4d 	bl	102b66 <HttpRequestBuilder::set_header(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>
  102ccc:	a808      	add	r0, sp, #32
  102cce:	f00b f9ef 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102cd2:	a80e      	add	r0, sp, #56	; 0x38
  102cd4:	f00b f9ec 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  102cd8:	2300      	movs	r3, #0
  102cda:	603b      	str	r3, [r7, #0]
  102cdc:	4620      	mov	r0, r4
  102cde:	f00e fd62 	bl	1117a6 <strlen>
  102ce2:	f8d5 b004 	ldr.w	r11, [r5, #4]
  102ce6:	4681      	mov	r9, r0
  102ce8:	f8db a00c 	ldr.w	r10, [r11, #12]
  102cec:	4650      	mov	r0, r10
  102cee:	f00e fd5a 	bl	1117a6 <strlen>
  102cf2:	f8db b010 	ldr.w	r11, [r11, #16]
  102cf6:	4481      	add	r9, r0
  102cf8:	f89b 0000 	ldrb.w	r0, [r11]
  102cfc:	b118      	cbz	r0, 102d06 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x82>
  102cfe:	4658      	mov	r0, r11
  102d00:	f00e fd51 	bl	1117a6 <strlen>
  102d04:	3001      	adds	r0, #1
  102d06:	f109 090c 	add.w	r9, r9, #12
  102d0a:	4448      	add	r0, r9
  102d0c:	f8d5 9014 	ldr.w	r9, [r5, #20]
  102d10:	6038      	str	r0, [r7, #0]
  102d12:	f105 030c 	add.w	r3, r5, #12
  102d16:	4599      	cmp	r9, r3
  102d18:	9303      	str	r3, [sp, #12]
  102d1a:	6838      	ldr	r0, [r7, #0]
  102d1c:	d00d      	beq.n	102d3a <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0xb6>
  102d1e:	f8d9 2014 	ldr.w	r2, [r9, #20]
  102d22:	3004      	adds	r0, #4
  102d24:	4410      	add	r0, r2
  102d26:	f8d9 202c 	ldr.w	r2, [r9, #44]	; 0x2c
  102d2a:	4402      	add	r2, r0
  102d2c:	603a      	str	r2, [r7, #0]
  102d2e:	4648      	mov	r0, r9
  102d30:	f00b f91b 	bl	10df6a <std::_Rb_tree_increment(std::_Rb_tree_node_base*)>
  102d34:	9b03      	ldr	r3, [sp, #12]
  102d36:	4681      	mov	r9, r0
  102d38:	e7ed      	b.n	102d16 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x92>
  102d3a:	4430      	add	r0, r6
  102d3c:	1d03      	adds	r3, r0, #4
  102d3e:	603b      	str	r3, [r7, #0]
  102d40:	2101      	movs	r1, #1
  102d42:	3005      	adds	r0, #5
  102d44:	f00c fd48 	bl	10f7d8 <calloc>
  102d48:	f89b 3000 	ldrb.w	r3, [r11]
  102d4c:	4607      	mov	r7, r0
  102d4e:	f8cd b000 	str.w	r11, [sp]
  102d52:	b11b      	cbz	r3, 102d5c <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0xd8>
  102d54:	4653      	mov	r3, r10
  102d56:	4622      	mov	r2, r4
  102d58:	4922      	ldr	r1, [pc, #136]	; (102de4 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x160>)
  102d5a:	e002      	b.n	102d62 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0xde>
  102d5c:	4653      	mov	r3, r10
  102d5e:	4622      	mov	r2, r4
  102d60:	4921      	ldr	r1, [pc, #132]	; (102de8 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x164>)
  102d62:	f00e fc7b 	bl	11165c <siprintf>
  102d66:	4620      	mov	r0, r4
  102d68:	f00e fd1d 	bl	1117a6 <strlen>
  102d6c:	686c      	ldr	r4, [r5, #4]
  102d6e:	4682      	mov	r10, r0
  102d70:	68e0      	ldr	r0, [r4, #12]
  102d72:	f00e fd18 	bl	1117a6 <strlen>
  102d76:	4482      	add	r10, r0
  102d78:	6920      	ldr	r0, [r4, #16]
  102d7a:	7804      	ldrb	r4, [r0, #0]
  102d7c:	b11c      	cbz	r4, 102d86 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x102>
  102d7e:	f00e fd12 	bl	1117a6 <strlen>
  102d82:	3001      	adds	r0, #1
  102d84:	e000      	b.n	102d88 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x104>
  102d86:	4620      	mov	r0, r4
  102d88:	f10a 040c 	add.w	r4, r10, #12
  102d8c:	4420      	add	r0, r4
  102d8e:	696d      	ldr	r5, [r5, #20]
  102d90:	183c      	adds	r4, r7, r0
  102d92:	45a9      	cmp	r9, r5
  102d94:	d00f      	beq.n	102db6 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x132>
  102d96:	6aab      	ldr	r3, [r5, #40]	; 0x28
  102d98:	692a      	ldr	r2, [r5, #16]
  102d9a:	4914      	ldr	r1, [pc, #80]	; (102dec <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x168>)
  102d9c:	4620      	mov	r0, r4
  102d9e:	f00e fc5d 	bl	11165c <siprintf>
  102da2:	696a      	ldr	r2, [r5, #20]
  102da4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
  102da6:	4628      	mov	r0, r5
  102da8:	4413      	add	r3, r2
  102daa:	3304      	adds	r3, #4
  102dac:	441c      	add	r4, r3
  102dae:	f00b f8dc 	bl	10df6a <std::_Rb_tree_increment(std::_Rb_tree_node_base*)>
  102db2:	4605      	mov	r5, r0
  102db4:	e7ed      	b.n	102d92 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x10e>
  102db6:	4620      	mov	r0, r4
  102db8:	490d      	ldr	r1, [pc, #52]	; (102df0 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x16c>)
  102dba:	f00e fcec 	bl	111796 <strcpy>
  102dbe:	3402      	adds	r4, #2
  102dc0:	b126      	cbz	r6, 102dcc <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x148>
  102dc2:	4632      	mov	r2, r6
  102dc4:	4641      	mov	r1, r8
  102dc6:	4620      	mov	r0, r4
  102dc8:	f00d f887 	bl	10feda <memcpy>
  102dcc:	4908      	ldr	r1, [pc, #32]	; (102df0 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)+0x16c>)
  102dce:	19a0      	adds	r0, r4, r6
  102dd0:	f00e fce1 	bl	111796 <strcpy>
  102dd4:	4638      	mov	r0, r7
  102dd6:	b015      	add	sp, #84	; 0x54
  102dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  102ddc:	0011a2d0 	.word	0x0011a2d0
  102de0:	001160c1 	.word	0x001160c1
  102de4:	001160d0 	.word	0x001160d0
  102de8:	001160e4 	.word	0x001160e4
  102dec:	001160f7 	.word	0x001160f7
  102df0:	001164eb 	.word	0x001164eb

00102df4 <HttpRequest::send(void const*, unsigned int)>:
  102df4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  102df8:	6a87      	ldr	r7, [r0, #40]	; 0x28
  102dfa:	b08e      	sub	sp, #56	; 0x38
  102dfc:	4604      	mov	r4, r0
  102dfe:	460d      	mov	r5, r1
  102e00:	4690      	mov	r8, r2
  102e02:	b11f      	cbz	r7, 102e0c <HttpRequest::send(void const*, unsigned int)+0x18>
  102e04:	4b7b      	ldr	r3, [pc, #492]	; (102ff4 <HttpRequest::send(void const*, unsigned int)+0x200>)
  102e06:	2700      	movs	r7, #0
  102e08:	6303      	str	r3, [r0, #48]	; 0x30
  102e0a:	e0ee      	b.n	102fea <HttpRequest::send(void const*, unsigned int)+0x1f6>
  102e0c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
  102e10:	6307      	str	r7, [r0, #48]	; 0x30
  102e12:	b19b      	cbz	r3, 102e3c <HttpRequest::send(void const*, unsigned int)+0x48>
  102e14:	c841      	ldmia	r0, {r0, r6}
  102e16:	6803      	ldr	r3, [r0, #0]
  102e18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  102e1a:	4798      	blx	r3
  102e1c:	f009 fed4 	bl	10cbc8 <nsapi_create_stack(NetworkStack*)>
  102e20:	4601      	mov	r1, r0
  102e22:	4630      	mov	r0, r6
  102e24:	f009 ff54 	bl	10ccd0 <Socket::open(NetworkStack*)>
  102e28:	b930      	cbnz	r0, 102e38 <HttpRequest::send(void const*, unsigned int)+0x44>
  102e2a:	6a23      	ldr	r3, [r4, #32]
  102e2c:	6860      	ldr	r0, [r4, #4]
  102e2e:	881a      	ldrh	r2, [r3, #0]
  102e30:	6899      	ldr	r1, [r3, #8]
  102e32:	f00a f961 	bl	10d0f8 <TCPSocket::connect(char const*, unsigned short)>
  102e36:	b108      	cbz	r0, 102e3c <HttpRequest::send(void const*, unsigned int)+0x48>
  102e38:	6320      	str	r0, [r4, #48]	; 0x30
  102e3a:	e0d6      	b.n	102fea <HttpRequest::send(void const*, unsigned int)+0x1f6>
  102e3c:	ab0e      	add	r3, sp, #56	; 0x38
  102e3e:	2600      	movs	r6, #0
  102e40:	f843 6d34 	str.w	r6, [r3, #-52]!
  102e44:	4642      	mov	r2, r8
  102e46:	4629      	mov	r1, r5
  102e48:	6a60      	ldr	r0, [r4, #36]	; 0x24
  102e4a:	f7ff ff1b 	bl	102c84 <HttpRequestBuilder::build(void const*, unsigned int, unsigned int&)>
  102e4e:	9a01      	ldr	r2, [sp, #4]
  102e50:	4601      	mov	r1, r0
  102e52:	4680      	mov	r8, r0
  102e54:	6860      	ldr	r0, [r4, #4]
  102e56:	f00a f97f 	bl	10d158 <TCPSocket::send(void const*, unsigned int)>
  102e5a:	4605      	mov	r5, r0
  102e5c:	4640      	mov	r0, r8
  102e5e:	f00d f817 	bl	10fe90 <free>
  102e62:	9b01      	ldr	r3, [sp, #4]
  102e64:	429d      	cmp	r5, r3
  102e66:	d001      	beq.n	102e6c <HttpRequest::send(void const*, unsigned int)+0x78>
  102e68:	6325      	str	r5, [r4, #48]	; 0x30
  102e6a:	e0be      	b.n	102fea <HttpRequest::send(void const*, unsigned int)+0x1f6>
  102e6c:	2068      	movs	r0, #104	; 0x68
  102e6e:	f00a fc57 	bl	10d720 <operator new(unsigned int)>
  102e72:	4605      	mov	r5, r0
  102e74:	f100 030c 	add.w	r3, r0, #12
  102e78:	6043      	str	r3, [r0, #4]
  102e7a:	f104 080c 	add.w	r8, r4, #12
  102e7e:	f100 0324 	add.w	r3, r0, #36	; 0x24
  102e82:	61c3      	str	r3, [r0, #28]
  102e84:	6086      	str	r6, [r0, #8]
  102e86:	7306      	strb	r6, [r0, #12]
  102e88:	6206      	str	r6, [r0, #32]
  102e8a:	f880 6024 	strb.w	r6, [r0, #36]	; 0x24
  102e8e:	6386      	str	r6, [r0, #56]	; 0x38
  102e90:	63c6      	str	r6, [r0, #60]	; 0x3c
  102e92:	6406      	str	r6, [r0, #64]	; 0x40
  102e94:	6446      	str	r6, [r0, #68]	; 0x44
  102e96:	6486      	str	r6, [r0, #72]	; 0x48
  102e98:	64c6      	str	r6, [r0, #76]	; 0x4c
  102e9a:	6006      	str	r6, [r0, #0]
  102e9c:	f880 6050 	strb.w	r6, [r0, #80]	; 0x50
  102ea0:	f880 6051 	strb.w	r6, [r0, #81]	; 0x51
  102ea4:	6546      	str	r6, [r0, #84]	; 0x54
  102ea6:	f880 6058 	strb.w	r6, [r0, #88]	; 0x58
  102eaa:	f880 6059 	strb.w	r6, [r0, #89]	; 0x59
  102eae:	6606      	str	r6, [r0, #96]	; 0x60
  102eb0:	6646      	str	r6, [r0, #100]	; 0x64
  102eb2:	65c6      	str	r6, [r0, #92]	; 0x5c
  102eb4:	62a0      	str	r0, [r4, #40]	; 0x28
  102eb6:	4641      	mov	r1, r8
  102eb8:	a802      	add	r0, sp, #8
  102eba:	f7ff fc02 	bl	1026c2 <mbed::Callback<void (char const*, unsigned int)>::Callback(mbed::Callback<void (char const*, unsigned int)> const&)>
  102ebe:	f10d 0938 	add.w	r9, sp, #56	; 0x38
  102ec2:	a902      	add	r1, sp, #8
  102ec4:	a807      	add	r0, sp, #28
  102ec6:	f849 5d20 	str.w	r5, [r9, #-32]!
  102eca:	f8d4 a01c 	ldr.w	r10, [r4, #28]
  102ece:	f7ff fbf8 	bl	1026c2 <mbed::Callback<void (char const*, unsigned int)>::Callback(mbed::Callback<void (char const*, unsigned int)> const&)>
  102ed2:	2028      	movs	r0, #40	; 0x28
  102ed4:	f00a fc24 	bl	10d720 <operator new(unsigned int)>
  102ed8:	4605      	mov	r5, r0
  102eda:	2228      	movs	r2, #40	; 0x28
  102edc:	4631      	mov	r1, r6
  102ede:	f00d f822 	bl	10ff26 <memset>
  102ee2:	4b45      	ldr	r3, [pc, #276]	; (102ff8 <HttpRequest::send(void const*, unsigned int)+0x204>)
  102ee4:	2020      	movs	r0, #32
  102ee6:	602b      	str	r3, [r5, #0]
  102ee8:	4b44      	ldr	r3, [pc, #272]	; (102ffc <HttpRequest::send(void const*, unsigned int)+0x208>)
  102eea:	950d      	str	r5, [sp, #52]	; 0x34
  102eec:	606b      	str	r3, [r5, #4]
  102eee:	4b44      	ldr	r3, [pc, #272]	; (103000 <HttpRequest::send(void const*, unsigned int)+0x20c>)
  102ef0:	f8cd a02c 	str.w	r10, [sp, #44]	; 0x2c
  102ef4:	60ab      	str	r3, [r5, #8]
  102ef6:	4b43      	ldr	r3, [pc, #268]	; (103004 <HttpRequest::send(void const*, unsigned int)+0x210>)
  102ef8:	60eb      	str	r3, [r5, #12]
  102efa:	4b43      	ldr	r3, [pc, #268]	; (103008 <HttpRequest::send(void const*, unsigned int)+0x214>)
  102efc:	612b      	str	r3, [r5, #16]
  102efe:	4b43      	ldr	r3, [pc, #268]	; (10300c <HttpRequest::send(void const*, unsigned int)+0x218>)
  102f00:	616b      	str	r3, [r5, #20]
  102f02:	4b43      	ldr	r3, [pc, #268]	; (103010 <HttpRequest::send(void const*, unsigned int)+0x21c>)
  102f04:	622b      	str	r3, [r5, #32]
  102f06:	4b43      	ldr	r3, [pc, #268]	; (103014 <HttpRequest::send(void const*, unsigned int)+0x220>)
  102f08:	626b      	str	r3, [r5, #36]	; 0x24
  102f0a:	4b43      	ldr	r3, [pc, #268]	; (103018 <HttpRequest::send(void const*, unsigned int)+0x224>)
  102f0c:	61ab      	str	r3, [r5, #24]
  102f0e:	4b43      	ldr	r3, [pc, #268]	; (10301c <HttpRequest::send(void const*, unsigned int)+0x228>)
  102f10:	61eb      	str	r3, [r5, #28]
  102f12:	f00a fc05 	bl	10d720 <operator new(unsigned int)>
  102f16:	4605      	mov	r5, r0
  102f18:	2220      	movs	r2, #32
  102f1a:	4631      	mov	r1, r6
  102f1c:	f00d f803 	bl	10ff26 <memset>
  102f20:	2101      	movs	r1, #1
  102f22:	4628      	mov	r0, r5
  102f24:	950c      	str	r5, [sp, #48]	; 0x30
  102f26:	f004 fc39 	bl	10779c <http_parser_init>
  102f2a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  102f2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  102f2e:	2a02      	cmp	r2, #2
  102f30:	bf08      	it	eq
  102f32:	881a      	ldrheq	r2, [r3, #0]
  102f34:	f8c3 9018 	str.w	r9, [r3, #24]
  102f38:	bf04      	itt	eq
  102f3a:	f442 7280 	orreq.w	r2, r2, #256	; 0x100
  102f3e:	801a      	strheq	r2, [r3, #0]
  102f40:	a802      	add	r0, sp, #8
  102f42:	f7ff fbc9 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  102f46:	f44f 6000 	mov.w	r0, #2048	; 0x800
  102f4a:	f00c ff99 	bl	10fe80 <malloc>
  102f4e:	4605      	mov	r5, r0
  102f50:	f44f 6200 	mov.w	r2, #2048	; 0x800
  102f54:	4629      	mov	r1, r5
  102f56:	6860      	ldr	r0, [r4, #4]
  102f58:	f00a f94c 	bl	10d1f4 <TCPSocket::recv(void*, unsigned int)>
  102f5c:	1e06      	subs	r6, r0, #0
  102f5e:	dd1d      	ble.n	102f9c <HttpRequest::send(void const*, unsigned int)+0x1a8>
  102f60:	69e3      	ldr	r3, [r4, #28]
  102f62:	2b01      	cmp	r3, #1
  102f64:	d00f      	beq.n	102f86 <HttpRequest::send(void const*, unsigned int)+0x192>
  102f66:	990d      	ldr	r1, [sp, #52]	; 0x34
  102f68:	4633      	mov	r3, r6
  102f6a:	462a      	mov	r2, r5
  102f6c:	980c      	ldr	r0, [sp, #48]	; 0x30
  102f6e:	f002 fe8f 	bl	105c90 <http_parser_execute>
  102f72:	4286      	cmp	r6, r0
  102f74:	4601      	mov	r1, r0
  102f76:	d00b      	beq.n	102f90 <HttpRequest::send(void const*, unsigned int)+0x19c>
  102f78:	4632      	mov	r2, r6
  102f7a:	4829      	ldr	r0, [pc, #164]	; (103020 <HttpRequest::send(void const*, unsigned int)+0x22c>)
  102f7c:	f00e f9a0 	bl	1112c0 <iprintf>
  102f80:	4b28      	ldr	r3, [pc, #160]	; (103024 <HttpRequest::send(void const*, unsigned int)+0x230>)
  102f82:	6323      	str	r3, [r4, #48]	; 0x30
  102f84:	e00f      	b.n	102fa6 <HttpRequest::send(void const*, unsigned int)+0x1b2>
  102f86:	4632      	mov	r2, r6
  102f88:	4629      	mov	r1, r5
  102f8a:	4640      	mov	r0, r8
  102f8c:	f7ff fc00 	bl	102790 <mbed::Callback<void (char const*, unsigned int)>::call(char const*, unsigned int) const>
  102f90:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  102f92:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
  102f96:	2b00      	cmp	r3, #0
  102f98:	d0da      	beq.n	102f50 <HttpRequest::send(void const*, unsigned int)+0x15c>
  102f9a:	e008      	b.n	102fae <HttpRequest::send(void const*, unsigned int)+0x1ba>
  102f9c:	d007      	beq.n	102fae <HttpRequest::send(void const*, unsigned int)+0x1ba>
  102f9e:	4822      	ldr	r0, [pc, #136]	; (103028 <HttpRequest::send(void const*, unsigned int)+0x234>)
  102fa0:	f00e fa1e 	bl	1113e0 <puts>
  102fa4:	6326      	str	r6, [r4, #48]	; 0x30
  102fa6:	4628      	mov	r0, r5
  102fa8:	f00c ff72 	bl	10fe90 <free>
  102fac:	e012      	b.n	102fd4 <HttpRequest::send(void const*, unsigned int)+0x1e0>
  102fae:	69e3      	ldr	r3, [r4, #28]
  102fb0:	2b01      	cmp	r3, #1
  102fb2:	d005      	beq.n	102fc0 <HttpRequest::send(void const*, unsigned int)+0x1cc>
  102fb4:	2300      	movs	r3, #0
  102fb6:	461a      	mov	r2, r3
  102fb8:	990d      	ldr	r1, [sp, #52]	; 0x34
  102fba:	980c      	ldr	r0, [sp, #48]	; 0x30
  102fbc:	f002 fe68 	bl	105c90 <http_parser_execute>
  102fc0:	4628      	mov	r0, r5
  102fc2:	f00c ff65 	bl	10fe90 <free>
  102fc6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
  102fca:	b113      	cbz	r3, 102fd2 <HttpRequest::send(void const*, unsigned int)+0x1de>
  102fcc:	6860      	ldr	r0, [r4, #4]
  102fce:	f009 fe59 	bl	10cc84 <Socket::close()>
  102fd2:	6aa7      	ldr	r7, [r4, #40]	; 0x28
  102fd4:	980c      	ldr	r0, [sp, #48]	; 0x30
  102fd6:	b108      	cbz	r0, 102fdc <HttpRequest::send(void const*, unsigned int)+0x1e8>
  102fd8:	f00a fbbe 	bl	10d758 <operator delete(void*)>
  102fdc:	980d      	ldr	r0, [sp, #52]	; 0x34
  102fde:	b108      	cbz	r0, 102fe4 <HttpRequest::send(void const*, unsigned int)+0x1f0>
  102fe0:	f00a fbba 	bl	10d758 <operator delete(void*)>
  102fe4:	a807      	add	r0, sp, #28
  102fe6:	f7ff fb77 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  102fea:	4638      	mov	r0, r7
  102fec:	b00e      	add	sp, #56	; 0x38
  102fee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  102ff2:	bf00      	nop
  102ff4:	fffff7cc 	.word	0xfffff7cc
  102ff8:	001022ad 	.word	0x001022ad
  102ffc:	001023ef 	.word	0x001023ef
  103000:	001023b1 	.word	0x001023b1
  103004:	0010295b 	.word	0x0010295b
  103008:	001028d3 	.word	0x001028d3
  10300c:	00102515 	.word	0x00102515
  103010:	001022bf 	.word	0x001022bf
  103014:	001022cd 	.word	0x001022cd
  103018:	001027c1 	.word	0x001027c1
  10301c:	001022b1 	.word	0x001022b1
  103020:	00116100 	.word	0x00116100
  103024:	fffff7cb 	.word	0xfffff7cb
  103028:	00116139 	.word	0x00116139
  10302c:	00000000 	.word	0x00000000

00103030 <main>:
  103030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  103034:	498c      	ldr	r1, [pc, #560]	; (103268 <main+0x238>)
  103036:	f5ad 7d69 	sub.w	sp, sp, #932	; 0x3a4
  10303a:	2400      	movs	r4, #0
  10303c:	488b      	ldr	r0, [pc, #556]	; (10326c <main+0x23c>)
  10303e:	9417      	str	r4, [sp, #92]	; 0x5c
  103040:	f00a fd00 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103044:	9400      	str	r4, [sp, #0]
  103046:	4623      	mov	r3, r4
  103048:	4a89      	ldr	r2, [pc, #548]	; (103270 <main+0x240>)
  10304a:	498a      	ldr	r1, [pc, #552]	; (103274 <main+0x244>)
  10304c:	488a      	ldr	r0, [pc, #552]	; (103278 <main+0x248>)
  10304e:	f005 f8d3 	bl	1081f8 <WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)>
  103052:	b130      	cbz	r0, 103062 <main+0x32>
  103054:	4989      	ldr	r1, [pc, #548]	; (10327c <main+0x24c>)
  103056:	4885      	ldr	r0, [pc, #532]	; (10326c <main+0x23c>)
  103058:	f00a fcf4 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10305c:	2001      	movs	r0, #1
  10305e:	f002 b944 	b.w	1052ea <main+0x22ba>
  103062:	4987      	ldr	r1, [pc, #540]	; (103280 <main+0x250>)
  103064:	4881      	ldr	r0, [pc, #516]	; (10326c <main+0x23c>)
  103066:	f00a fced 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10306a:	4883      	ldr	r0, [pc, #524]	; (103278 <main+0x248>)
  10306c:	f005 f900 	bl	108270 <WizFi250Interface::get_ip_address()>
  103070:	4984      	ldr	r1, [pc, #528]	; (103284 <main+0x254>)
  103072:	4602      	mov	r2, r0
  103074:	487d      	ldr	r0, [pc, #500]	; (10326c <main+0x23c>)
  103076:	f00a fce5 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10307a:	2101      	movs	r1, #1
  10307c:	4882      	ldr	r0, [pc, #520]	; (103288 <main+0x258>)
  10307e:	f007 ff91 	bl	10afa4 <gpio_write>
  103082:	2102      	movs	r1, #2
  103084:	4881      	ldr	r0, [pc, #516]	; (10328c <main+0x25c>)
  103086:	f004 fef9 	bl	107e7c <NOA1305::init(NOA1305_IntTime)>
  10308a:	b138      	cbz	r0, 10309c <main+0x6c>
  10308c:	4980      	ldr	r1, [pc, #512]	; (103290 <main+0x260>)
  10308e:	4877      	ldr	r0, [pc, #476]	; (10326c <main+0x23c>)
  103090:	f00a fcd8 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103094:	f04f 30ff 	mov.w	r0, #4294967295
  103098:	f002 b927 	b.w	1052ea <main+0x22ba>
  10309c:	497d      	ldr	r1, [pc, #500]	; (103294 <main+0x264>)
  10309e:	4873      	ldr	r0, [pc, #460]	; (10326c <main+0x23c>)
  1030a0:	f00a fcd0 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1030a4:	497c      	ldr	r1, [pc, #496]	; (103298 <main+0x268>)
  1030a6:	487d      	ldr	r0, [pc, #500]	; (10329c <main+0x26c>)
  1030a8:	f004 fde8 	bl	107c7c <NCS36000::registerCallback(void (*)())>
  1030ac:	497c      	ldr	r1, [pc, #496]	; (1032a0 <main+0x270>)
  1030ae:	486f      	ldr	r0, [pc, #444]	; (10326c <main+0x23c>)
  1030b0:	f00a fcc8 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1030b4:	487b      	ldr	r0, [pc, #492]	; (1032a4 <main+0x274>)
  1030b6:	f002 fb1b 	bl	1056f0 <NRF24L01P::init()>
  1030ba:	4602      	mov	r2, r0
  1030bc:	b120      	cbz	r0, 1030c8 <main+0x98>
  1030be:	497a      	ldr	r1, [pc, #488]	; (1032a8 <main+0x278>)
  1030c0:	486a      	ldr	r0, [pc, #424]	; (10326c <main+0x23c>)
  1030c2:	f00a fcbf 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1030c6:	e003      	b.n	1030d0 <main+0xa0>
  1030c8:	4978      	ldr	r1, [pc, #480]	; (1032ac <main+0x27c>)
  1030ca:	4868      	ldr	r0, [pc, #416]	; (10326c <main+0x23c>)
  1030cc:	f00a fcba 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1030d0:	4b77      	ldr	r3, [pc, #476]	; (1032b0 <main+0x280>)
  1030d2:	ac20      	add	r4, sp, #128	; 0x80
  1030d4:	ad84      	add	r5, sp, #528	; 0x210
  1030d6:	6023      	str	r3, [r4, #0]
  1030d8:	4b76      	ldr	r3, [pc, #472]	; (1032b4 <main+0x284>)
  1030da:	4621      	mov	r1, r4
  1030dc:	4628      	mov	r0, r5
  1030de:	60e3      	str	r3, [r4, #12]
  1030e0:	f7ff fae4 	bl	1026ac <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
  1030e4:	4874      	ldr	r0, [pc, #464]	; (1032b8 <main+0x288>)
  1030e6:	f7ff fa7f 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  1030ea:	4629      	mov	r1, r5
  1030ec:	4872      	ldr	r0, [pc, #456]	; (1032b8 <main+0x288>)
  1030ee:	f7ff fadd 	bl	1026ac <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
  1030f2:	a35b      	add	r3, pc, #364	; (adr r3, 103260 <main+0x230>)
  1030f4:	e9d3 2300 	ldrd	r2, r3, [r3]
  1030f8:	4870      	ldr	r0, [pc, #448]	; (1032bc <main+0x28c>)
  1030fa:	f009 fc37 	bl	10c96c <mbed::Ticker::setup(unsigned long long)>
  1030fe:	4628      	mov	r0, r5
  103100:	f7ff fa72 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  103104:	4620      	mov	r0, r4
  103106:	f7ff fa6f 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10310a:	496d      	ldr	r1, [pc, #436]	; (1032c0 <main+0x290>)
  10310c:	4857      	ldr	r0, [pc, #348]	; (10326c <main+0x23c>)
  10310e:	f00a fc99 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103112:	4629      	mov	r1, r5
  103114:	4620      	mov	r0, r4
  103116:	f7ff f82d 	bl	102174 <FillIDS(unsigned long*, char**)>
  10311a:	4f6a      	ldr	r7, [pc, #424]	; (1032c4 <main+0x294>)
  10311c:	2600      	movs	r6, #0
  10311e:	683b      	ldr	r3, [r7, #0]
  103120:	429e      	cmp	r6, r3
  103122:	db13      	blt.n	10314c <main+0x11c>
  103124:	2300      	movs	r3, #0
  103126:	9313      	str	r3, [sp, #76]	; 0x4c
  103128:	9310      	str	r3, [sp, #64]	; 0x40
  10312a:	930f      	str	r3, [sp, #60]	; 0x3c
  10312c:	930e      	str	r3, [sp, #56]	; 0x38
  10312e:	4b66      	ldr	r3, [pc, #408]	; (1032c8 <main+0x298>)
  103130:	f04f 0b00 	mov.w	r11, #0
  103134:	465e      	mov	r6, r11
  103136:	46da      	mov	r10, r11
  103138:	f8cd b054 	str.w	r11, [sp, #84]	; 0x54
  10313c:	f8cd b050 	str.w	r11, [sp, #80]	; 0x50
  103140:	46d9      	mov	r9, r11
  103142:	9312      	str	r3, [sp, #72]	; 0x48
  103144:	f8cd b044 	str.w	r11, [sp, #68]	; 0x44
  103148:	465c      	mov	r4, r11
  10314a:	e056      	b.n	1031fa <main+0x1ca>
  10314c:	f854 2026 	ldr.w	r2, [r4, r6, lsl #2]
  103150:	495e      	ldr	r1, [pc, #376]	; (1032cc <main+0x29c>)
  103152:	3601      	adds	r6, #1
  103154:	4845      	ldr	r0, [pc, #276]	; (10326c <main+0x23c>)
  103156:	f00a fc75 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10315a:	f855 2026 	ldr.w	r2, [r5, r6, lsl #2]
  10315e:	495c      	ldr	r1, [pc, #368]	; (1032d0 <main+0x2a0>)
  103160:	4842      	ldr	r0, [pc, #264]	; (10326c <main+0x23c>)
  103162:	f00a fc6f 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103166:	e7da      	b.n	10311e <main+0xee>
  103168:	b2ef      	uxtb	r7, r5
  10316a:	f047 0240 	orr.w	r2, r7, #64	; 0x40
  10316e:	2107      	movs	r1, #7
  103170:	484c      	ldr	r0, [pc, #304]	; (1032a4 <main+0x274>)
  103172:	f002 fa94 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  103176:	06ab      	lsls	r3, r5, #26
  103178:	d505      	bpl.n	103186 <main+0x156>
  10317a:	f047 0220 	orr.w	r2, r7, #32
  10317e:	2107      	movs	r1, #7
  103180:	4848      	ldr	r0, [pc, #288]	; (1032a4 <main+0x274>)
  103182:	f002 fa8c 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  103186:	aa18      	add	r2, sp, #96	; 0x60
  103188:	2105      	movs	r1, #5
  10318a:	4846      	ldr	r0, [pc, #280]	; (1032a4 <main+0x274>)
  10318c:	f002 fb24 	bl	1057d8 <NRF24L01P::ReadPayload(unsigned char, unsigned char*)>
  103190:	21e2      	movs	r1, #226	; 0xe2
  103192:	4844      	ldr	r0, [pc, #272]	; (1032a4 <main+0x274>)
  103194:	f002 fa26 	bl	1055e4 <NRF24L01P::WriteCommand(unsigned char)>
  103198:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
  10319c:	2d01      	cmp	r5, #1
  10319e:	f040 80a5 	bne.w	1032ec <main+0x2bc>
  1031a2:	494c      	ldr	r1, [pc, #304]	; (1032d4 <main+0x2a4>)
  1031a4:	4831      	ldr	r0, [pc, #196]	; (10326c <main+0x23c>)
  1031a6:	f00a fc4d 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1031aa:	f89d 2061 	ldrb.w	r2, [sp, #97]	; 0x61
  1031ae:	494a      	ldr	r1, [pc, #296]	; (1032d8 <main+0x2a8>)
  1031b0:	482e      	ldr	r0, [pc, #184]	; (10326c <main+0x23c>)
  1031b2:	f00a fc47 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1031b6:	f89d 3061 	ldrb.w	r3, [sp, #97]	; 0x61
  1031ba:	2b02      	cmp	r3, #2
  1031bc:	d118      	bne.n	1031f0 <main+0x1c0>
  1031be:	f89d 3063 	ldrb.w	r3, [sp, #99]	; 0x63
  1031c2:	f89d 0062 	ldrb.w	r0, [sp, #98]	; 0x62
  1031c6:	46aa      	mov	r10, r5
  1031c8:	eb03 2000 	add.w	r0, r3, r0, lsl #8
  1031cc:	1100      	asrs	r0, r0, #4
  1031ce:	f00b fb7d 	bl	10e8cc <__aeabi_i2d>
  1031d2:	2200      	movs	r2, #0
  1031d4:	4b41      	ldr	r3, [pc, #260]	; (1032dc <main+0x2ac>)
  1031d6:	f00b fbdf 	bl	10e998 <__aeabi_dmul>
  1031da:	f00b fe77 	bl	10eecc <__aeabi_d2f>
  1031de:	9013      	str	r0, [sp, #76]	; 0x4c
  1031e0:	f00b fb86 	bl	10e8f0 <__aeabi_f2d>
  1031e4:	4602      	mov	r2, r0
  1031e6:	460b      	mov	r3, r1
  1031e8:	4820      	ldr	r0, [pc, #128]	; (10326c <main+0x23c>)
  1031ea:	493d      	ldr	r1, [pc, #244]	; (1032e0 <main+0x2b0>)
  1031ec:	f00a fc2a 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1031f0:	4b3c      	ldr	r3, [pc, #240]	; (1032e4 <main+0x2b4>)
  1031f2:	681f      	ldr	r7, [r3, #0]
  1031f4:	2f01      	cmp	r7, #1
  1031f6:	f000 8205 	beq.w	103604 <main+0x5d4>
  1031fa:	227b      	movs	r2, #123	; 0x7b
  1031fc:	2100      	movs	r1, #0
  1031fe:	4829      	ldr	r0, [pc, #164]	; (1032a4 <main+0x274>)
  103200:	f002 fa4d 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  103204:	222c      	movs	r2, #44	; 0x2c
  103206:	2105      	movs	r1, #5
  103208:	4826      	ldr	r0, [pc, #152]	; (1032a4 <main+0x274>)
  10320a:	f002 fa48 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  10320e:	2107      	movs	r1, #7
  103210:	4824      	ldr	r0, [pc, #144]	; (1032a4 <main+0x274>)
  103212:	f002 fa28 	bl	105666 <NRF24L01P::registerRead(unsigned char)>
  103216:	2300      	movs	r3, #0
  103218:	4605      	mov	r5, r0
  10321a:	a917      	add	r1, sp, #92	; 0x5c
  10321c:	481b      	ldr	r0, [pc, #108]	; (10328c <main+0x25c>)
  10321e:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
  103222:	f88d 3061 	strb.w	r3, [sp, #97]	; 0x61
  103226:	f88d 3062 	strb.w	r3, [sp, #98]	; 0x62
  10322a:	f88d 3063 	strb.w	r3, [sp, #99]	; 0x63
  10322e:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
  103232:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
  103236:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
  10323a:	f88d 306a 	strb.w	r3, [sp, #106]	; 0x6a
  10323e:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
  103242:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
  103246:	f004 fe8f 	bl	107f68 <NOA1305::read(int&)>
  10324a:	4927      	ldr	r1, [pc, #156]	; (1032e8 <main+0x2b8>)
  10324c:	480f      	ldr	r0, [pc, #60]	; (10328c <main+0x25c>)
  10324e:	f004 fef7 	bl	108040 <NOA1305::getAbmienceInLux(float)>
  103252:	066a      	lsls	r2, r5, #25
  103254:	4680      	mov	r8, r0
  103256:	d5cb      	bpl.n	1031f0 <main+0x1c0>
  103258:	e786      	b.n	103168 <main+0x138>
  10325a:	bf00      	nop
  10325c:	f3af 8000 	nop.w
  103260:	05f5e100 	.word	0x05f5e100
  103264:	00000000 	.word	0x00000000
  103268:	0011616d 	.word	0x0011616d
  10326c:	3fff8184 	.word	0x3fff8184
  103270:	00116182 	.word	0x00116182
  103274:	0011618f 	.word	0x0011618f
  103278:	3fff4890 	.word	0x3fff4890
  10327c:	00116198 	.word	0x00116198
  103280:	001161bc 	.word	0x001161bc
  103284:	001161d8 	.word	0x001161d8
  103288:	3fff8144 	.word	0x3fff8144
  10328c:	3fff4780 	.word	0x3fff4780
  103290:	001161f5 	.word	0x001161f5
  103294:	00116214 	.word	0x00116214
  103298:	00102311 	.word	0x00102311
  10329c:	3fff81cc 	.word	0x3fff81cc
  1032a0:	00116226 	.word	0x00116226
  1032a4:	3fff8100 	.word	0x3fff8100
  1032a8:	00116238 	.word	0x00116238
  1032ac:	0011626f 	.word	0x0011626f
  1032b0:	001022d1 	.word	0x001022d1
  1032b4:	00115ff4 	.word	0x00115ff4
  1032b8:	3fff81f8 	.word	0x3fff81f8
  1032bc:	3fff81d0 	.word	0x3fff81d0
  1032c0:	0011629b 	.word	0x0011629b
  1032c4:	3fff40c4 	.word	0x3fff40c4
  1032c8:	001164ed 	.word	0x001164ed
  1032cc:	001162b0 	.word	0x001162b0
  1032d0:	001162ca 	.word	0x001162ca
  1032d4:	001162f3 	.word	0x001162f3
  1032d8:	00116316 	.word	0x00116316
  1032dc:	3fb00000 	.word	0x3fb00000
  1032e0:	0011632e 	.word	0x0011632e
  1032e4:	3fff8244 	.word	0x3fff8244
  1032e8:	40f66666 	.word	0x40f66666
  1032ec:	2d02      	cmp	r5, #2
  1032ee:	f040 8093 	bne.w	103418 <main+0x3e8>
  1032f2:	49af      	ldr	r1, [pc, #700]	; (1035b0 <main+0x580>)
  1032f4:	48af      	ldr	r0, [pc, #700]	; (1035b4 <main+0x584>)
  1032f6:	f00a fba5 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1032fa:	f89d 2061 	ldrb.w	r2, [sp, #97]	; 0x61
  1032fe:	49ae      	ldr	r1, [pc, #696]	; (1035b8 <main+0x588>)
  103300:	48ac      	ldr	r0, [pc, #688]	; (1035b4 <main+0x584>)
  103302:	f00a fb9f 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103306:	f89d 3061 	ldrb.w	r3, [sp, #97]	; 0x61
  10330a:	2b0e      	cmp	r3, #14
  10330c:	d128      	bne.n	103360 <main+0x330>
  10330e:	49ab      	ldr	r1, [pc, #684]	; (1035bc <main+0x58c>)
  103310:	48a8      	ldr	r0, [pc, #672]	; (1035b4 <main+0x584>)
  103312:	f00a fb97 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103316:	f8bd 0062 	ldrh.w	r0, [sp, #98]	; 0x62
  10331a:	f00b fee1 	bl	10f0e0 <__aeabi_i2f>
  10331e:	f00b fae7 	bl	10e8f0 <__aeabi_f2d>
  103322:	a39f      	add	r3, pc, #636	; (adr r3, 1035a0 <main+0x570>)
  103324:	e9d3 2300 	ldrd	r2, r3, [r3]
  103328:	f00b fb36 	bl	10e998 <__aeabi_dmul>
  10332c:	f00b fdce 	bl	10eecc <__aeabi_d2f>
  103330:	f00b fade 	bl	10e8f0 <__aeabi_f2d>
  103334:	a39c      	add	r3, pc, #624	; (adr r3, 1035a8 <main+0x578>)
  103336:	e9d3 2300 	ldrd	r2, r3, [r3]
  10333a:	f00b fc57 	bl	10ebec <__aeabi_ddiv>
  10333e:	2200      	movs	r2, #0
  103340:	4b9f      	ldr	r3, [pc, #636]	; (1035c0 <main+0x590>)
  103342:	f00b fb29 	bl	10e998 <__aeabi_dmul>
  103346:	f00b fdc1 	bl	10eecc <__aeabi_d2f>
  10334a:	900e      	str	r0, [sp, #56]	; 0x38
  10334c:	f00b fad0 	bl	10e8f0 <__aeabi_f2d>
  103350:	4602      	mov	r2, r0
  103352:	460b      	mov	r3, r1
  103354:	4897      	ldr	r0, [pc, #604]	; (1035b4 <main+0x584>)
  103356:	499b      	ldr	r1, [pc, #620]	; (1035c4 <main+0x594>)
  103358:	f00a fb74 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10335c:	f04f 0901 	mov.w	r9, #1
  103360:	f89d 3061 	ldrb.w	r3, [sp, #97]	; 0x61
  103364:	2b08      	cmp	r3, #8
  103366:	d128      	bne.n	1033ba <main+0x38a>
  103368:	4997      	ldr	r1, [pc, #604]	; (1035c8 <main+0x598>)
  10336a:	4892      	ldr	r0, [pc, #584]	; (1035b4 <main+0x584>)
  10336c:	f00a fb6a 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103370:	f8bd 0062 	ldrh.w	r0, [sp, #98]	; 0x62
  103374:	f00b feb4 	bl	10f0e0 <__aeabi_i2f>
  103378:	f00b faba 	bl	10e8f0 <__aeabi_f2d>
  10337c:	a388      	add	r3, pc, #544	; (adr r3, 1035a0 <main+0x570>)
  10337e:	e9d3 2300 	ldrd	r2, r3, [r3]
  103382:	f00b fb09 	bl	10e998 <__aeabi_dmul>
  103386:	f00b fda1 	bl	10eecc <__aeabi_d2f>
  10338a:	f00b fab1 	bl	10e8f0 <__aeabi_f2d>
  10338e:	a386      	add	r3, pc, #536	; (adr r3, 1035a8 <main+0x578>)
  103390:	e9d3 2300 	ldrd	r2, r3, [r3]
  103394:	f00b fc2a 	bl	10ebec <__aeabi_ddiv>
  103398:	2200      	movs	r2, #0
  10339a:	4b89      	ldr	r3, [pc, #548]	; (1035c0 <main+0x590>)
  10339c:	f00b fafc 	bl	10e998 <__aeabi_dmul>
  1033a0:	f00b fd94 	bl	10eecc <__aeabi_d2f>
  1033a4:	900f      	str	r0, [sp, #60]	; 0x3c
  1033a6:	f00b faa3 	bl	10e8f0 <__aeabi_f2d>
  1033aa:	460b      	mov	r3, r1
  1033ac:	4602      	mov	r2, r0
  1033ae:	4987      	ldr	r1, [pc, #540]	; (1035cc <main+0x59c>)
  1033b0:	4880      	ldr	r0, [pc, #512]	; (1035b4 <main+0x584>)
  1033b2:	f00a fb47 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1033b6:	2301      	movs	r3, #1
  1033b8:	9314      	str	r3, [sp, #80]	; 0x50
  1033ba:	f89d 3061 	ldrb.w	r3, [sp, #97]	; 0x61
  1033be:	2b0d      	cmp	r3, #13
  1033c0:	f47f af16 	bne.w	1031f0 <main+0x1c0>
  1033c4:	4982      	ldr	r1, [pc, #520]	; (1035d0 <main+0x5a0>)
  1033c6:	487b      	ldr	r0, [pc, #492]	; (1035b4 <main+0x584>)
  1033c8:	f00a fb3c 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1033cc:	f8bd 0062 	ldrh.w	r0, [sp, #98]	; 0x62
  1033d0:	f00b fe86 	bl	10f0e0 <__aeabi_i2f>
  1033d4:	f00b fa8c 	bl	10e8f0 <__aeabi_f2d>
  1033d8:	a371      	add	r3, pc, #452	; (adr r3, 1035a0 <main+0x570>)
  1033da:	e9d3 2300 	ldrd	r2, r3, [r3]
  1033de:	f00b fadb 	bl	10e998 <__aeabi_dmul>
  1033e2:	f00b fd73 	bl	10eecc <__aeabi_d2f>
  1033e6:	f00b fa83 	bl	10e8f0 <__aeabi_f2d>
  1033ea:	a36f      	add	r3, pc, #444	; (adr r3, 1035a8 <main+0x578>)
  1033ec:	e9d3 2300 	ldrd	r2, r3, [r3]
  1033f0:	f00b fbfc 	bl	10ebec <__aeabi_ddiv>
  1033f4:	2200      	movs	r2, #0
  1033f6:	4b72      	ldr	r3, [pc, #456]	; (1035c0 <main+0x590>)
  1033f8:	f00b face 	bl	10e998 <__aeabi_dmul>
  1033fc:	f00b fd66 	bl	10eecc <__aeabi_d2f>
  103400:	9010      	str	r0, [sp, #64]	; 0x40
  103402:	f00b fa75 	bl	10e8f0 <__aeabi_f2d>
  103406:	460b      	mov	r3, r1
  103408:	4602      	mov	r2, r0
  10340a:	4972      	ldr	r1, [pc, #456]	; (1035d4 <main+0x5a4>)
  10340c:	4869      	ldr	r0, [pc, #420]	; (1035b4 <main+0x584>)
  10340e:	f00a fb19 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103412:	2301      	movs	r3, #1
  103414:	9315      	str	r3, [sp, #84]	; 0x54
  103416:	e6eb      	b.n	1031f0 <main+0x1c0>
  103418:	2d03      	cmp	r5, #3
  10341a:	d11e      	bne.n	10345a <main+0x42a>
  10341c:	496e      	ldr	r1, [pc, #440]	; (1035d8 <main+0x5a8>)
  10341e:	4865      	ldr	r0, [pc, #404]	; (1035b4 <main+0x584>)
  103420:	f00a fb10 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103424:	f89d 2061 	ldrb.w	r2, [sp, #97]	; 0x61
  103428:	4963      	ldr	r1, [pc, #396]	; (1035b8 <main+0x588>)
  10342a:	4862      	ldr	r0, [pc, #392]	; (1035b4 <main+0x584>)
  10342c:	f00a fb0a 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103430:	f89d b062 	ldrb.w	r11, [sp, #98]	; 0x62
  103434:	f1bb 0f01 	cmp.w	r11, #1
  103438:	d105      	bne.n	103446 <main+0x416>
  10343a:	4968      	ldr	r1, [pc, #416]	; (1035dc <main+0x5ac>)
  10343c:	485d      	ldr	r0, [pc, #372]	; (1035b4 <main+0x584>)
  10343e:	f00a fb01 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103442:	465e      	mov	r6, r11
  103444:	e6d4      	b.n	1031f0 <main+0x1c0>
  103446:	f1bb 0f00 	cmp.w	r11, #0
  10344a:	f47f aed1 	bne.w	1031f0 <main+0x1c0>
  10344e:	4964      	ldr	r1, [pc, #400]	; (1035e0 <main+0x5b0>)
  103450:	4858      	ldr	r0, [pc, #352]	; (1035b4 <main+0x584>)
  103452:	f00a faf7 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103456:	2601      	movs	r6, #1
  103458:	e6ca      	b.n	1031f0 <main+0x1c0>
  10345a:	2d1e      	cmp	r5, #30
  10345c:	f47f aec8 	bne.w	1031f0 <main+0x1c0>
  103460:	4960      	ldr	r1, [pc, #384]	; (1035e4 <main+0x5b4>)
  103462:	4854      	ldr	r0, [pc, #336]	; (1035b4 <main+0x584>)
  103464:	f00a faee 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103468:	f89d 2061 	ldrb.w	r2, [sp, #97]	; 0x61
  10346c:	495e      	ldr	r1, [pc, #376]	; (1035e8 <main+0x5b8>)
  10346e:	4851      	ldr	r0, [pc, #324]	; (1035b4 <main+0x584>)
  103470:	f00a fae8 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103474:	f89d 2062 	ldrb.w	r2, [sp, #98]	; 0x62
  103478:	495b      	ldr	r1, [pc, #364]	; (1035e8 <main+0x5b8>)
  10347a:	484e      	ldr	r0, [pc, #312]	; (1035b4 <main+0x584>)
  10347c:	f00a fae2 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103480:	f89d 2063 	ldrb.w	r2, [sp, #99]	; 0x63
  103484:	4958      	ldr	r1, [pc, #352]	; (1035e8 <main+0x5b8>)
  103486:	484b      	ldr	r0, [pc, #300]	; (1035b4 <main+0x584>)
  103488:	f00a fadc 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10348c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
  103490:	4955      	ldr	r1, [pc, #340]	; (1035e8 <main+0x5b8>)
  103492:	4848      	ldr	r0, [pc, #288]	; (1035b4 <main+0x584>)
  103494:	f00a fad6 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103498:	f89d 3062 	ldrb.w	r3, [sp, #98]	; 0x62
  10349c:	f89d 5061 	ldrb.w	r5, [sp, #97]	; 0x61
  1034a0:	041b      	lsls	r3, r3, #16
  1034a2:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  1034a6:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
  1034aa:	4950      	ldr	r1, [pc, #320]	; (1035ec <main+0x5bc>)
  1034ac:	432b      	orrs	r3, r5
  1034ae:	f89d 5063 	ldrb.w	r5, [sp, #99]	; 0x63
  1034b2:	4840      	ldr	r0, [pc, #256]	; (1035b4 <main+0x584>)
  1034b4:	ea43 2505 	orr.w	r5, r3, r5, lsl #8
  1034b8:	462a      	mov	r2, r5
  1034ba:	f00a fac3 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1034be:	4b4c      	ldr	r3, [pc, #304]	; (1035f0 <main+0x5c0>)
  1034c0:	2201      	movs	r2, #1
  1034c2:	6818      	ldr	r0, [r3, #0]
  1034c4:	2300      	movs	r3, #0
  1034c6:	461c      	mov	r4, r3
  1034c8:	af20      	add	r7, sp, #128	; 0x80
  1034ca:	f50d 7e04 	add.w	lr, sp, #528	; 0x210
  1034ce:	4283      	cmp	r3, r0
  1034d0:	da0b      	bge.n	1034ea <main+0x4ba>
  1034d2:	f857 1023 	ldr.w	r1, [r7, r3, lsl #2]
  1034d6:	3301      	adds	r3, #1
  1034d8:	428d      	cmp	r5, r1
  1034da:	bf01      	itttt	eq
  1034dc:	f85e 1022 	ldreq.w	r1, [lr, r2, lsl #2]
  1034e0:	9211      	streq	r2, [sp, #68]	; 0x44
  1034e2:	9112      	streq	r1, [sp, #72]	; 0x48
  1034e4:	2401      	moveq	r4, #1
  1034e6:	3201      	adds	r2, #1
  1034e8:	e7f1      	b.n	1034ce <main+0x49e>
  1034ea:	b34c      	cbz	r4, 103540 <main+0x510>
  1034ec:	4941      	ldr	r1, [pc, #260]	; (1035f4 <main+0x5c4>)
  1034ee:	4831      	ldr	r0, [pc, #196]	; (1035b4 <main+0x584>)
  1034f0:	f00a faa8 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1034f4:	227a      	movs	r2, #122	; 0x7a
  1034f6:	2100      	movs	r1, #0
  1034f8:	483f      	ldr	r0, [pc, #252]	; (1035f8 <main+0x5c8>)
  1034fa:	f002 f8d0 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  1034fe:	2228      	movs	r2, #40	; 0x28
  103500:	2105      	movs	r1, #5
  103502:	483d      	ldr	r0, [pc, #244]	; (1035f8 <main+0x5c8>)
  103504:	f002 f8cb 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  103508:	2270      	movs	r2, #112	; 0x70
  10350a:	2107      	movs	r1, #7
  10350c:	483a      	ldr	r0, [pc, #232]	; (1035f8 <main+0x5c8>)
  10350e:	f002 f8c6 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  103512:	2346      	movs	r3, #70	; 0x46
  103514:	aa1a      	add	r2, sp, #104	; 0x68
  103516:	2105      	movs	r1, #5
  103518:	4837      	ldr	r0, [pc, #220]	; (1035f8 <main+0x5c8>)
  10351a:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
  10351e:	f88d 4069 	strb.w	r4, [sp, #105]	; 0x69
  103522:	f002 f989 	bl	105838 <NRF24L01P::WritePayload(unsigned char, unsigned char*)>
  103526:	4935      	ldr	r1, [pc, #212]	; (1035fc <main+0x5cc>)
  103528:	4822      	ldr	r0, [pc, #136]	; (1035b4 <main+0x584>)
  10352a:	f00a fa8b 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10352e:	21e2      	movs	r1, #226	; 0xe2
  103530:	4831      	ldr	r0, [pc, #196]	; (1035f8 <main+0x5c8>)
  103532:	f002 f857 	bl	1055e4 <NRF24L01P::WriteCommand(unsigned char)>
  103536:	21e1      	movs	r1, #225	; 0xe1
  103538:	482f      	ldr	r0, [pc, #188]	; (1035f8 <main+0x5c8>)
  10353a:	f002 f853 	bl	1055e4 <NRF24L01P::WriteCommand(unsigned char)>
  10353e:	e657      	b.n	1031f0 <main+0x1c0>
  103540:	492f      	ldr	r1, [pc, #188]	; (103600 <main+0x5d0>)
  103542:	481c      	ldr	r0, [pc, #112]	; (1035b4 <main+0x584>)
  103544:	f00a fa7e 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103548:	227a      	movs	r2, #122	; 0x7a
  10354a:	2100      	movs	r1, #0
  10354c:	482a      	ldr	r0, [pc, #168]	; (1035f8 <main+0x5c8>)
  10354e:	f002 f8a6 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  103552:	2228      	movs	r2, #40	; 0x28
  103554:	2105      	movs	r1, #5
  103556:	4828      	ldr	r0, [pc, #160]	; (1035f8 <main+0x5c8>)
  103558:	f002 f8a1 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  10355c:	2270      	movs	r2, #112	; 0x70
  10355e:	2107      	movs	r1, #7
  103560:	4825      	ldr	r0, [pc, #148]	; (1035f8 <main+0x5c8>)
  103562:	f002 f89c 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  103566:	2400      	movs	r4, #0
  103568:	2346      	movs	r3, #70	; 0x46
  10356a:	aa1a      	add	r2, sp, #104	; 0x68
  10356c:	2105      	movs	r1, #5
  10356e:	4822      	ldr	r0, [pc, #136]	; (1035f8 <main+0x5c8>)
  103570:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
  103574:	f88d 4069 	strb.w	r4, [sp, #105]	; 0x69
  103578:	f002 f95e 	bl	105838 <NRF24L01P::WritePayload(unsigned char, unsigned char*)>
  10357c:	491f      	ldr	r1, [pc, #124]	; (1035fc <main+0x5cc>)
  10357e:	480d      	ldr	r0, [pc, #52]	; (1035b4 <main+0x584>)
  103580:	f00a fa60 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103584:	21e2      	movs	r1, #226	; 0xe2
  103586:	481c      	ldr	r0, [pc, #112]	; (1035f8 <main+0x5c8>)
  103588:	f002 f82c 	bl	1055e4 <NRF24L01P::WriteCommand(unsigned char)>
  10358c:	21e1      	movs	r1, #225	; 0xe1
  10358e:	481a      	ldr	r0, [pc, #104]	; (1035f8 <main+0x5c8>)
  103590:	f002 f828 	bl	1055e4 <NRF24L01P::WriteCommand(unsigned char)>
  103594:	9b84      	ldr	r3, [sp, #528]	; 0x210
  103596:	9411      	str	r4, [sp, #68]	; 0x44
  103598:	9312      	str	r3, [sp, #72]	; 0x48
  10359a:	2401      	movs	r4, #1
  10359c:	e628      	b.n	1031f0 <main+0x1c0>
  10359e:	bf00      	nop
  1035a0:	eb851eb8 	.word	0xeb851eb8
  1035a4:	4008b851 	.word	0x4008b851
  1035a8:	66666666 	.word	0x66666666
  1035ac:	40633666 	.word	0x40633666
  1035b0:	0011634f 	.word	0x0011634f
  1035b4:	3fff8184 	.word	0x3fff8184
  1035b8:	00116316 	.word	0x00116316
  1035bc:	00116372 	.word	0x00116372
  1035c0:	406b8000 	.word	0x406b8000
  1035c4:	00116392 	.word	0x00116392
  1035c8:	001163b8 	.word	0x001163b8
  1035cc:	001163d8 	.word	0x001163d8
  1035d0:	001163fe 	.word	0x001163fe
  1035d4:	0011641e 	.word	0x0011641e
  1035d8:	00116444 	.word	0x00116444
  1035dc:	00116467 	.word	0x00116467
  1035e0:	00116480 	.word	0x00116480
  1035e4:	0011649b 	.word	0x0011649b
  1035e8:	001164ba 	.word	0x001164ba
  1035ec:	001164c3 	.word	0x001164c3
  1035f0:	3fff40c4 	.word	0x3fff40c4
  1035f4:	001164d7 	.word	0x001164d7
  1035f8:	3fff8100 	.word	0x3fff8100
  1035fc:	001164ee 	.word	0x001164ee
  103600:	001164f6 	.word	0x001164f6
  103604:	4640      	mov	r0, r8
  103606:	f00b ff0f 	bl	10f428 <__aeabi_f2iz>
  10360a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  10360c:	4680      	mov	r8, r0
  10360e:	4dab      	ldr	r5, [pc, #684]	; (1038bc <main+0x88c>)
  103610:	2b00      	cmp	r3, #0
  103612:	f000 8759 	beq.w	1044c8 <main+0x1498>
  103616:	9b14      	ldr	r3, [sp, #80]	; 0x50
  103618:	2b00      	cmp	r3, #0
  10361a:	f000 83c1 	beq.w	103da0 <main+0xd70>
  10361e:	f1ba 0f00 	cmp.w	r10, #0
  103622:	f000 81a8 	beq.w	103976 <main+0x946>
  103626:	f1b9 0f00 	cmp.w	r9, #0
  10362a:	f000 810a 	beq.w	103842 <main+0x812>
  10362e:	2e00      	cmp	r6, #0
  103630:	f000 8093 	beq.w	10375a <main+0x72a>
  103634:	2c00      	cmp	r4, #0
  103636:	d057      	beq.n	1036e8 <main+0x6b8>
  103638:	2400      	movs	r4, #0
  10363a:	2100      	movs	r1, #0
  10363c:	48a0      	ldr	r0, [pc, #640]	; (1038c0 <main+0x890>)
  10363e:	f007 fcb1 	bl	10afa4 <gpio_write>
  103642:	9810      	ldr	r0, [sp, #64]	; 0x40
  103644:	702c      	strb	r4, [r5, #0]
  103646:	f00b f953 	bl	10e8f0 <__aeabi_f2d>
  10364a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
  10364e:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103650:	f00b f94e 	bl	10e8f0 <__aeabi_f2d>
  103654:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103656:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  10365a:	9308      	str	r3, [sp, #32]
  10365c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  10365e:	f8cd b018 	str.w	r11, [sp, #24]
  103662:	9307      	str	r3, [sp, #28]
  103664:	4b97      	ldr	r3, [pc, #604]	; (1038c4 <main+0x894>)
  103666:	980e      	ldr	r0, [sp, #56]	; 0x38
  103668:	681b      	ldr	r3, [r3, #0]
  10366a:	f8cd 8010 	str.w	r8, [sp, #16]
  10366e:	9305      	str	r3, [sp, #20]
  103670:	f00b f93e 	bl	10e8f0 <__aeabi_f2d>
  103674:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103678:	9813      	ldr	r0, [sp, #76]	; 0x4c
  10367a:	f00b f939 	bl	10e8f0 <__aeabi_f2d>
  10367e:	4a92      	ldr	r2, [pc, #584]	; (1038c8 <main+0x898>)
  103680:	e9cd 0100 	strd	r0, r1, [sp]
  103684:	4991      	ldr	r1, [pc, #580]	; (1038cc <main+0x89c>)
  103686:	4628      	mov	r0, r5
  103688:	f00d ffe8 	bl	11165c <siprintf>
  10368c:	2034      	movs	r0, #52	; 0x34
  10368e:	941f      	str	r4, [sp, #124]	; 0x7c
  103690:	f00a f846 	bl	10d720 <operator new(unsigned int)>
  103694:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103698:	498d      	ldr	r1, [pc, #564]	; (1038d0 <main+0x8a0>)
  10369a:	462b      	mov	r3, r5
  10369c:	463a      	mov	r2, r7
  10369e:	9401      	str	r4, [sp, #4]
  1036a0:	f8cd 9000 	str.w	r9, [sp]
  1036a4:	4680      	mov	r8, r0
  1036a6:	f7ff fa9f 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1036aa:	4648      	mov	r0, r9
  1036ac:	f7ff f814 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1036b0:	4988      	ldr	r1, [pc, #544]	; (1038d4 <main+0x8a4>)
  1036b2:	4889      	ldr	r0, [pc, #548]	; (1038d8 <main+0x8a8>)
  1036b4:	f00a f9c6 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1036b8:	4988      	ldr	r1, [pc, #544]	; (1038dc <main+0x8ac>)
  1036ba:	4887      	ldr	r0, [pc, #540]	; (1038d8 <main+0x8a8>)
  1036bc:	f00a f9c2 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1036c0:	4987      	ldr	r1, [pc, #540]	; (1038e0 <main+0x8b0>)
  1036c2:	4885      	ldr	r0, [pc, #532]	; (1038d8 <main+0x8a8>)
  1036c4:	f00a f9be 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1036c8:	4622      	mov	r2, r4
  1036ca:	4621      	mov	r1, r4
  1036cc:	4640      	mov	r0, r8
  1036ce:	f7ff fb91 	bl	102df4 <HttpRequest::send(void const*, unsigned int)>
  1036d2:	4984      	ldr	r1, [pc, #528]	; (1038e4 <main+0x8b4>)
  1036d4:	4880      	ldr	r0, [pc, #512]	; (1038d8 <main+0x8a8>)
  1036d6:	f00a f9b5 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1036da:	f1b8 0f00 	cmp.w	r8, #0
  1036de:	f041 85f1 	bne.w	1052c4 <main+0x2294>
  1036e2:	2400      	movs	r4, #0
  1036e4:	f001 bdf6 	b.w	1052d4 <main+0x22a4>
  1036e8:	4621      	mov	r1, r4
  1036ea:	4875      	ldr	r0, [pc, #468]	; (1038c0 <main+0x890>)
  1036ec:	f007 fc5a 	bl	10afa4 <gpio_write>
  1036f0:	9810      	ldr	r0, [sp, #64]	; 0x40
  1036f2:	702c      	strb	r4, [r5, #0]
  1036f4:	f00b f8fc 	bl	10e8f0 <__aeabi_f2d>
  1036f8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  1036fc:	980f      	ldr	r0, [sp, #60]	; 0x3c
  1036fe:	f00b f8f7 	bl	10e8f0 <__aeabi_f2d>
  103702:	e9cd 0108 	strd	r0, r1, [sp, #32]
  103706:	4b6f      	ldr	r3, [pc, #444]	; (1038c4 <main+0x894>)
  103708:	f8cd b018 	str.w	r11, [sp, #24]
  10370c:	681b      	ldr	r3, [r3, #0]
  10370e:	980e      	ldr	r0, [sp, #56]	; 0x38
  103710:	9305      	str	r3, [sp, #20]
  103712:	f8cd 8010 	str.w	r8, [sp, #16]
  103716:	f00b f8eb 	bl	10e8f0 <__aeabi_f2d>
  10371a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  10371e:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103720:	f00b f8e6 	bl	10e8f0 <__aeabi_f2d>
  103724:	4a68      	ldr	r2, [pc, #416]	; (1038c8 <main+0x898>)
  103726:	e9cd 0100 	strd	r0, r1, [sp]
  10372a:	496f      	ldr	r1, [pc, #444]	; (1038e8 <main+0x8b8>)
  10372c:	4628      	mov	r0, r5
  10372e:	f00d ff95 	bl	11165c <siprintf>
  103732:	2034      	movs	r0, #52	; 0x34
  103734:	941f      	str	r4, [sp, #124]	; 0x7c
  103736:	f009 fff3 	bl	10d720 <operator new(unsigned int)>
  10373a:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  10373e:	4964      	ldr	r1, [pc, #400]	; (1038d0 <main+0x8a0>)
  103740:	462b      	mov	r3, r5
  103742:	463a      	mov	r2, r7
  103744:	9401      	str	r4, [sp, #4]
  103746:	f8cd 9000 	str.w	r9, [sp]
  10374a:	4680      	mov	r8, r0
  10374c:	f7ff fa4c 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103750:	4648      	mov	r0, r9
  103752:	f7fe ffc1 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103756:	4965      	ldr	r1, [pc, #404]	; (1038ec <main+0x8bc>)
  103758:	e22e      	b.n	103bb8 <main+0xb88>
  10375a:	2c00      	cmp	r4, #0
  10375c:	d03a      	beq.n	1037d4 <main+0x7a4>
  10375e:	4631      	mov	r1, r6
  103760:	4857      	ldr	r0, [pc, #348]	; (1038c0 <main+0x890>)
  103762:	f007 fc1f 	bl	10afa4 <gpio_write>
  103766:	9810      	ldr	r0, [sp, #64]	; 0x40
  103768:	702e      	strb	r6, [r5, #0]
  10376a:	f00b f8c1 	bl	10e8f0 <__aeabi_f2d>
  10376e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  103772:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103774:	f00b f8bc 	bl	10e8f0 <__aeabi_f2d>
  103778:	9b12      	ldr	r3, [sp, #72]	; 0x48
  10377a:	e9cd 0108 	strd	r0, r1, [sp, #32]
  10377e:	9307      	str	r3, [sp, #28]
  103780:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103782:	980e      	ldr	r0, [sp, #56]	; 0x38
  103784:	9306      	str	r3, [sp, #24]
  103786:	4b4f      	ldr	r3, [pc, #316]	; (1038c4 <main+0x894>)
  103788:	681b      	ldr	r3, [r3, #0]
  10378a:	f8cd 8010 	str.w	r8, [sp, #16]
  10378e:	9305      	str	r3, [sp, #20]
  103790:	f00b f8ae 	bl	10e8f0 <__aeabi_f2d>
  103794:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103798:	9813      	ldr	r0, [sp, #76]	; 0x4c
  10379a:	f00b f8a9 	bl	10e8f0 <__aeabi_f2d>
  10379e:	4a4a      	ldr	r2, [pc, #296]	; (1038c8 <main+0x898>)
  1037a0:	e9cd 0100 	strd	r0, r1, [sp]
  1037a4:	4952      	ldr	r1, [pc, #328]	; (1038f0 <main+0x8c0>)
  1037a6:	4628      	mov	r0, r5
  1037a8:	f00d ff58 	bl	11165c <siprintf>
  1037ac:	2034      	movs	r0, #52	; 0x34
  1037ae:	961f      	str	r6, [sp, #124]	; 0x7c
  1037b0:	f009 ffb6 	bl	10d720 <operator new(unsigned int)>
  1037b4:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  1037b8:	4945      	ldr	r1, [pc, #276]	; (1038d0 <main+0x8a0>)
  1037ba:	462b      	mov	r3, r5
  1037bc:	463a      	mov	r2, r7
  1037be:	9601      	str	r6, [sp, #4]
  1037c0:	f8cd 8000 	str.w	r8, [sp]
  1037c4:	4604      	mov	r4, r0
  1037c6:	f7ff fa0f 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1037ca:	4640      	mov	r0, r8
  1037cc:	f7fe ff84 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1037d0:	4948      	ldr	r1, [pc, #288]	; (1038f4 <main+0x8c4>)
  1037d2:	e2b0      	b.n	103d36 <main+0xd06>
  1037d4:	4621      	mov	r1, r4
  1037d6:	483a      	ldr	r0, [pc, #232]	; (1038c0 <main+0x890>)
  1037d8:	f007 fbe4 	bl	10afa4 <gpio_write>
  1037dc:	9810      	ldr	r0, [sp, #64]	; 0x40
  1037de:	702c      	strb	r4, [r5, #0]
  1037e0:	f00b f886 	bl	10e8f0 <__aeabi_f2d>
  1037e4:	e9cd 0108 	strd	r0, r1, [sp, #32]
  1037e8:	980f      	ldr	r0, [sp, #60]	; 0x3c
  1037ea:	f00b f881 	bl	10e8f0 <__aeabi_f2d>
  1037ee:	e9cd 0106 	strd	r0, r1, [sp, #24]
  1037f2:	4b34      	ldr	r3, [pc, #208]	; (1038c4 <main+0x894>)
  1037f4:	980e      	ldr	r0, [sp, #56]	; 0x38
  1037f6:	681b      	ldr	r3, [r3, #0]
  1037f8:	f8cd 8010 	str.w	r8, [sp, #16]
  1037fc:	9305      	str	r3, [sp, #20]
  1037fe:	f00b f877 	bl	10e8f0 <__aeabi_f2d>
  103802:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103806:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103808:	f00b f872 	bl	10e8f0 <__aeabi_f2d>
  10380c:	4a2e      	ldr	r2, [pc, #184]	; (1038c8 <main+0x898>)
  10380e:	e9cd 0100 	strd	r0, r1, [sp]
  103812:	4939      	ldr	r1, [pc, #228]	; (1038f8 <main+0x8c8>)
  103814:	4628      	mov	r0, r5
  103816:	f00d ff21 	bl	11165c <siprintf>
  10381a:	2034      	movs	r0, #52	; 0x34
  10381c:	941f      	str	r4, [sp, #124]	; 0x7c
  10381e:	f009 ff7f 	bl	10d720 <operator new(unsigned int)>
  103822:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103826:	492a      	ldr	r1, [pc, #168]	; (1038d0 <main+0x8a0>)
  103828:	462b      	mov	r3, r5
  10382a:	463a      	mov	r2, r7
  10382c:	9401      	str	r4, [sp, #4]
  10382e:	f8cd 9000 	str.w	r9, [sp]
  103832:	4680      	mov	r8, r0
  103834:	f7ff f9d8 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103838:	4648      	mov	r0, r9
  10383a:	f7fe ff4d 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10383e:	492f      	ldr	r1, [pc, #188]	; (1038fc <main+0x8cc>)
  103840:	e1ba      	b.n	103bb8 <main+0xb88>
  103842:	2c00      	cmp	r4, #0
  103844:	d060      	beq.n	103908 <main+0x8d8>
  103846:	4649      	mov	r1, r9
  103848:	481d      	ldr	r0, [pc, #116]	; (1038c0 <main+0x890>)
  10384a:	f007 fbab 	bl	10afa4 <gpio_write>
  10384e:	9810      	ldr	r0, [sp, #64]	; 0x40
  103850:	f885 9000 	strb.w	r9, [r5]
  103854:	f00b f84c 	bl	10e8f0 <__aeabi_f2d>
  103858:	e9cd 0108 	strd	r0, r1, [sp, #32]
  10385c:	980f      	ldr	r0, [sp, #60]	; 0x3c
  10385e:	f00b f847 	bl	10e8f0 <__aeabi_f2d>
  103862:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103864:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103868:	9305      	str	r3, [sp, #20]
  10386a:	4b16      	ldr	r3, [pc, #88]	; (1038c4 <main+0x894>)
  10386c:	9813      	ldr	r0, [sp, #76]	; 0x4c
  10386e:	681b      	ldr	r3, [r3, #0]
  103870:	f8cd 800c 	str.w	r8, [sp, #12]
  103874:	9304      	str	r3, [sp, #16]
  103876:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103878:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  10387c:	9302      	str	r3, [sp, #8]
  10387e:	f00b f837 	bl	10e8f0 <__aeabi_f2d>
  103882:	4a11      	ldr	r2, [pc, #68]	; (1038c8 <main+0x898>)
  103884:	e9cd 0100 	strd	r0, r1, [sp]
  103888:	491d      	ldr	r1, [pc, #116]	; (103900 <main+0x8d0>)
  10388a:	4628      	mov	r0, r5
  10388c:	f00d fee6 	bl	11165c <siprintf>
  103890:	2034      	movs	r0, #52	; 0x34
  103892:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  103896:	f009 ff43 	bl	10d720 <operator new(unsigned int)>
  10389a:	462b      	mov	r3, r5
  10389c:	463a      	mov	r2, r7
  10389e:	490c      	ldr	r1, [pc, #48]	; (1038d0 <main+0x8a0>)
  1038a0:	e88d 0300 	stmia.w	sp, {r8, r9}
  1038a4:	4604      	mov	r4, r0
  1038a6:	f7ff f99f 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1038aa:	4640      	mov	r0, r8
  1038ac:	f7fe ff14 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1038b0:	4914      	ldr	r1, [pc, #80]	; (103904 <main+0x8d4>)
  1038b2:	4809      	ldr	r0, [pc, #36]	; (1038d8 <main+0x8a8>)
  1038b4:	f00a f8c6 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1038b8:	4908      	ldr	r1, [pc, #32]	; (1038dc <main+0x8ac>)
  1038ba:	e3bb      	b.n	104034 <main+0x1004>
  1038bc:	3fff4781 	.word	0x3fff4781
  1038c0:	3fff8144 	.word	0x3fff8144
  1038c4:	3fff8260 	.word	0x3fff8260
  1038c8:	0011650b 	.word	0x0011650b
  1038cc:	0011651c 	.word	0x0011651c
  1038d0:	3fff4894 	.word	0x3fff4894
  1038d4:	001165a4 	.word	0x001165a4
  1038d8:	3fff8184 	.word	0x3fff8184
  1038dc:	001165ba 	.word	0x001165ba
  1038e0:	001165d4 	.word	0x001165d4
  1038e4:	001165ee 	.word	0x001165ee
  1038e8:	001165f6 	.word	0x001165f6
  1038ec:	0011666a 	.word	0x0011666a
  1038f0:	0011668c 	.word	0x0011668c
  1038f4:	0011670a 	.word	0x0011670a
  1038f8:	00116730 	.word	0x00116730
  1038fc:	00116799 	.word	0x00116799
  103900:	001167cb 	.word	0x001167cb
  103904:	0011683f 	.word	0x0011683f
  103908:	2e00      	cmp	r6, #0
  10390a:	f000 817f 	beq.w	103c0c <main+0xbdc>
  10390e:	4621      	mov	r1, r4
  103910:	48ac      	ldr	r0, [pc, #688]	; (103bc4 <main+0xb94>)
  103912:	f007 fb47 	bl	10afa4 <gpio_write>
  103916:	9810      	ldr	r0, [sp, #64]	; 0x40
  103918:	702c      	strb	r4, [r5, #0]
  10391a:	f00a ffe9 	bl	10e8f0 <__aeabi_f2d>
  10391e:	e9cd 0108 	strd	r0, r1, [sp, #32]
  103922:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103924:	f00a ffe4 	bl	10e8f0 <__aeabi_f2d>
  103928:	e9cd 0106 	strd	r0, r1, [sp, #24]
  10392c:	4ba6      	ldr	r3, [pc, #664]	; (103bc8 <main+0xb98>)
  10392e:	f8cd b010 	str.w	r11, [sp, #16]
  103932:	681b      	ldr	r3, [r3, #0]
  103934:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103936:	9303      	str	r3, [sp, #12]
  103938:	f8cd 8008 	str.w	r8, [sp, #8]
  10393c:	f00a ffd8 	bl	10e8f0 <__aeabi_f2d>
  103940:	4aa2      	ldr	r2, [pc, #648]	; (103bcc <main+0xb9c>)
  103942:	e9cd 0100 	strd	r0, r1, [sp]
  103946:	49a2      	ldr	r1, [pc, #648]	; (103bd0 <main+0xba0>)
  103948:	4628      	mov	r0, r5
  10394a:	f00d fe87 	bl	11165c <siprintf>
  10394e:	2034      	movs	r0, #52	; 0x34
  103950:	941f      	str	r4, [sp, #124]	; 0x7c
  103952:	f009 fee5 	bl	10d720 <operator new(unsigned int)>
  103956:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  10395a:	499e      	ldr	r1, [pc, #632]	; (103bd4 <main+0xba4>)
  10395c:	462b      	mov	r3, r5
  10395e:	463a      	mov	r2, r7
  103960:	9401      	str	r4, [sp, #4]
  103962:	f8cd 9000 	str.w	r9, [sp]
  103966:	4680      	mov	r8, r0
  103968:	f7ff f93e 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10396c:	4648      	mov	r0, r9
  10396e:	f7fe feb3 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103972:	4999      	ldr	r1, [pc, #612]	; (103bd8 <main+0xba8>)
  103974:	e69d      	b.n	1036b2 <main+0x682>
  103976:	f1b9 0f00 	cmp.w	r9, #0
  10397a:	f000 80ad 	beq.w	103ad8 <main+0xaa8>
  10397e:	2e00      	cmp	r6, #0
  103980:	d072      	beq.n	103a68 <main+0xa38>
  103982:	2c00      	cmp	r4, #0
  103984:	d03c      	beq.n	103a00 <main+0x9d0>
  103986:	4651      	mov	r1, r10
  103988:	488e      	ldr	r0, [pc, #568]	; (103bc4 <main+0xb94>)
  10398a:	f007 fb0b 	bl	10afa4 <gpio_write>
  10398e:	9810      	ldr	r0, [sp, #64]	; 0x40
  103990:	f885 a000 	strb.w	r10, [r5]
  103994:	f00a ffac 	bl	10e8f0 <__aeabi_f2d>
  103998:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  10399c:	980f      	ldr	r0, [sp, #60]	; 0x3c
  10399e:	f00a ffa7 	bl	10e8f0 <__aeabi_f2d>
  1039a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  1039a4:	e9cd 0108 	strd	r0, r1, [sp, #32]
  1039a8:	9306      	str	r3, [sp, #24]
  1039aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  1039ac:	f8cd b010 	str.w	r11, [sp, #16]
  1039b0:	9305      	str	r3, [sp, #20]
  1039b2:	4b85      	ldr	r3, [pc, #532]	; (103bc8 <main+0xb98>)
  1039b4:	980e      	ldr	r0, [sp, #56]	; 0x38
  1039b6:	681b      	ldr	r3, [r3, #0]
  1039b8:	f8cd 8008 	str.w	r8, [sp, #8]
  1039bc:	9303      	str	r3, [sp, #12]
  1039be:	f00a ff97 	bl	10e8f0 <__aeabi_f2d>
  1039c2:	4a82      	ldr	r2, [pc, #520]	; (103bcc <main+0xb9c>)
  1039c4:	e9cd 0100 	strd	r0, r1, [sp]
  1039c8:	4984      	ldr	r1, [pc, #528]	; (103bdc <main+0xbac>)
  1039ca:	4628      	mov	r0, r5
  1039cc:	f00d fe46 	bl	11165c <siprintf>
  1039d0:	2034      	movs	r0, #52	; 0x34
  1039d2:	f8cd a07c 	str.w	r10, [sp, #124]	; 0x7c
  1039d6:	f009 fea3 	bl	10d720 <operator new(unsigned int)>
  1039da:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  1039de:	462b      	mov	r3, r5
  1039e0:	463a      	mov	r2, r7
  1039e2:	497c      	ldr	r1, [pc, #496]	; (103bd4 <main+0xba4>)
  1039e4:	e88d 0500 	stmia.w	sp, {r8, r10}
  1039e8:	4604      	mov	r4, r0
  1039ea:	f7ff f8fd 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1039ee:	4640      	mov	r0, r8
  1039f0:	f7fe fe72 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1039f4:	497a      	ldr	r1, [pc, #488]	; (103be0 <main+0xbb0>)
  1039f6:	487b      	ldr	r0, [pc, #492]	; (103be4 <main+0xbb4>)
  1039f8:	f00a f824 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1039fc:	497a      	ldr	r1, [pc, #488]	; (103be8 <main+0xbb8>)
  1039fe:	e38e      	b.n	10411e <main+0x10ee>
  103a00:	4621      	mov	r1, r4
  103a02:	4870      	ldr	r0, [pc, #448]	; (103bc4 <main+0xb94>)
  103a04:	f007 face 	bl	10afa4 <gpio_write>
  103a08:	9810      	ldr	r0, [sp, #64]	; 0x40
  103a0a:	702c      	strb	r4, [r5, #0]
  103a0c:	f00a ff70 	bl	10e8f0 <__aeabi_f2d>
  103a10:	e9cd 0108 	strd	r0, r1, [sp, #32]
  103a14:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103a16:	f00a ff6b 	bl	10e8f0 <__aeabi_f2d>
  103a1a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103a1e:	4b6a      	ldr	r3, [pc, #424]	; (103bc8 <main+0xb98>)
  103a20:	f8cd b010 	str.w	r11, [sp, #16]
  103a24:	681b      	ldr	r3, [r3, #0]
  103a26:	980e      	ldr	r0, [sp, #56]	; 0x38
  103a28:	9303      	str	r3, [sp, #12]
  103a2a:	f8cd 8008 	str.w	r8, [sp, #8]
  103a2e:	f00a ff5f 	bl	10e8f0 <__aeabi_f2d>
  103a32:	4a66      	ldr	r2, [pc, #408]	; (103bcc <main+0xb9c>)
  103a34:	e9cd 0100 	strd	r0, r1, [sp]
  103a38:	496c      	ldr	r1, [pc, #432]	; (103bec <main+0xbbc>)
  103a3a:	4628      	mov	r0, r5
  103a3c:	f00d fe0e 	bl	11165c <siprintf>
  103a40:	2034      	movs	r0, #52	; 0x34
  103a42:	941f      	str	r4, [sp, #124]	; 0x7c
  103a44:	f009 fe6c 	bl	10d720 <operator new(unsigned int)>
  103a48:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103a4c:	4961      	ldr	r1, [pc, #388]	; (103bd4 <main+0xba4>)
  103a4e:	462b      	mov	r3, r5
  103a50:	463a      	mov	r2, r7
  103a52:	9401      	str	r4, [sp, #4]
  103a54:	f8cd 9000 	str.w	r9, [sp]
  103a58:	4680      	mov	r8, r0
  103a5a:	f7ff f8c5 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103a5e:	4648      	mov	r0, r9
  103a60:	f7fe fe3a 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103a64:	4962      	ldr	r1, [pc, #392]	; (103bf0 <main+0xbc0>)
  103a66:	e0a7      	b.n	103bb8 <main+0xb88>
  103a68:	2c00      	cmp	r4, #0
  103a6a:	d074      	beq.n	103b56 <main+0xb26>
  103a6c:	4631      	mov	r1, r6
  103a6e:	4855      	ldr	r0, [pc, #340]	; (103bc4 <main+0xb94>)
  103a70:	f007 fa98 	bl	10afa4 <gpio_write>
  103a74:	9810      	ldr	r0, [sp, #64]	; 0x40
  103a76:	702e      	strb	r6, [r5, #0]
  103a78:	f00a ff3a 	bl	10e8f0 <__aeabi_f2d>
  103a7c:	e9cd 0108 	strd	r0, r1, [sp, #32]
  103a80:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103a82:	f00a ff35 	bl	10e8f0 <__aeabi_f2d>
  103a86:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103a88:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103a8c:	9305      	str	r3, [sp, #20]
  103a8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103a90:	980e      	ldr	r0, [sp, #56]	; 0x38
  103a92:	9304      	str	r3, [sp, #16]
  103a94:	4b4c      	ldr	r3, [pc, #304]	; (103bc8 <main+0xb98>)
  103a96:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103a9a:	681b      	ldr	r3, [r3, #0]
  103a9c:	f8cd 8008 	str.w	r8, [sp, #8]
  103aa0:	9303      	str	r3, [sp, #12]
  103aa2:	f00a ff25 	bl	10e8f0 <__aeabi_f2d>
  103aa6:	4a49      	ldr	r2, [pc, #292]	; (103bcc <main+0xb9c>)
  103aa8:	e9cd 0100 	strd	r0, r1, [sp]
  103aac:	4951      	ldr	r1, [pc, #324]	; (103bf4 <main+0xbc4>)
  103aae:	4628      	mov	r0, r5
  103ab0:	f00d fdd4 	bl	11165c <siprintf>
  103ab4:	2034      	movs	r0, #52	; 0x34
  103ab6:	961f      	str	r6, [sp, #124]	; 0x7c
  103ab8:	f009 fe32 	bl	10d720 <operator new(unsigned int)>
  103abc:	4945      	ldr	r1, [pc, #276]	; (103bd4 <main+0xba4>)
  103abe:	462b      	mov	r3, r5
  103ac0:	463a      	mov	r2, r7
  103ac2:	9601      	str	r6, [sp, #4]
  103ac4:	f8cd 9000 	str.w	r9, [sp]
  103ac8:	4680      	mov	r8, r0
  103aca:	f7ff f88d 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103ace:	4648      	mov	r0, r9
  103ad0:	f7fe fe02 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103ad4:	4948      	ldr	r1, [pc, #288]	; (103bf8 <main+0xbc8>)
  103ad6:	e0ca      	b.n	103c6e <main+0xc3e>
  103ad8:	2c00      	cmp	r4, #0
  103ada:	f000 80cd 	beq.w	103c78 <main+0xc48>
  103ade:	2e00      	cmp	r6, #0
  103ae0:	f000 80fa 	beq.w	103cd8 <main+0xca8>
  103ae4:	4649      	mov	r1, r9
  103ae6:	4837      	ldr	r0, [pc, #220]	; (103bc4 <main+0xb94>)
  103ae8:	f007 fa5c 	bl	10afa4 <gpio_write>
  103aec:	9810      	ldr	r0, [sp, #64]	; 0x40
  103aee:	f885 9000 	strb.w	r9, [r5]
  103af2:	f00a fefd 	bl	10e8f0 <__aeabi_f2d>
  103af6:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103afa:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103afc:	f00a fef8 	bl	10e8f0 <__aeabi_f2d>
  103b00:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103b02:	e9cd 0104 	strd	r0, r1, [sp, #16]
  103b06:	9303      	str	r3, [sp, #12]
  103b08:	4b2f      	ldr	r3, [pc, #188]	; (103bc8 <main+0xb98>)
  103b0a:	f8cd b008 	str.w	r11, [sp, #8]
  103b0e:	681b      	ldr	r3, [r3, #0]
  103b10:	4a2e      	ldr	r2, [pc, #184]	; (103bcc <main+0xb9c>)
  103b12:	493a      	ldr	r1, [pc, #232]	; (103bfc <main+0xbcc>)
  103b14:	9301      	str	r3, [sp, #4]
  103b16:	f8cd 8000 	str.w	r8, [sp]
  103b1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103b1c:	4628      	mov	r0, r5
  103b1e:	f00d fd9d 	bl	11165c <siprintf>
  103b22:	2034      	movs	r0, #52	; 0x34
  103b24:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  103b28:	f009 fdfa 	bl	10d720 <operator new(unsigned int)>
  103b2c:	f10d 0a70 	add.w	r10, sp, #112	; 0x70
  103b30:	462b      	mov	r3, r5
  103b32:	463a      	mov	r2, r7
  103b34:	4927      	ldr	r1, [pc, #156]	; (103bd4 <main+0xba4>)
  103b36:	f8cd 9004 	str.w	r9, [sp, #4]
  103b3a:	f8cd a000 	str.w	r10, [sp]
  103b3e:	4680      	mov	r8, r0
  103b40:	f7ff f852 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103b44:	4650      	mov	r0, r10
  103b46:	f7fe fdc7 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103b4a:	492d      	ldr	r1, [pc, #180]	; (103c00 <main+0xbd0>)
  103b4c:	4825      	ldr	r0, [pc, #148]	; (103be4 <main+0xbb4>)
  103b4e:	f009 ff79 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103b52:	4925      	ldr	r1, [pc, #148]	; (103be8 <main+0xbb8>)
  103b54:	e3a4      	b.n	1042a0 <main+0x1270>
  103b56:	4621      	mov	r1, r4
  103b58:	481a      	ldr	r0, [pc, #104]	; (103bc4 <main+0xb94>)
  103b5a:	f007 fa23 	bl	10afa4 <gpio_write>
  103b5e:	9810      	ldr	r0, [sp, #64]	; 0x40
  103b60:	702c      	strb	r4, [r5, #0]
  103b62:	f00a fec5 	bl	10e8f0 <__aeabi_f2d>
  103b66:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103b6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103b6c:	f00a fec0 	bl	10e8f0 <__aeabi_f2d>
  103b70:	e9cd 0104 	strd	r0, r1, [sp, #16]
  103b74:	4b14      	ldr	r3, [pc, #80]	; (103bc8 <main+0xb98>)
  103b76:	980e      	ldr	r0, [sp, #56]	; 0x38
  103b78:	681b      	ldr	r3, [r3, #0]
  103b7a:	f8cd 8008 	str.w	r8, [sp, #8]
  103b7e:	9303      	str	r3, [sp, #12]
  103b80:	f00a feb6 	bl	10e8f0 <__aeabi_f2d>
  103b84:	4a11      	ldr	r2, [pc, #68]	; (103bcc <main+0xb9c>)
  103b86:	e9cd 0100 	strd	r0, r1, [sp]
  103b8a:	491e      	ldr	r1, [pc, #120]	; (103c04 <main+0xbd4>)
  103b8c:	4628      	mov	r0, r5
  103b8e:	f00d fd65 	bl	11165c <siprintf>
  103b92:	2034      	movs	r0, #52	; 0x34
  103b94:	941f      	str	r4, [sp, #124]	; 0x7c
  103b96:	f009 fdc3 	bl	10d720 <operator new(unsigned int)>
  103b9a:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103b9e:	490d      	ldr	r1, [pc, #52]	; (103bd4 <main+0xba4>)
  103ba0:	462b      	mov	r3, r5
  103ba2:	463a      	mov	r2, r7
  103ba4:	9401      	str	r4, [sp, #4]
  103ba6:	f8cd 9000 	str.w	r9, [sp]
  103baa:	4680      	mov	r8, r0
  103bac:	f7ff f81c 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103bb0:	4648      	mov	r0, r9
  103bb2:	f7fe fd91 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103bb6:	4914      	ldr	r1, [pc, #80]	; (103c08 <main+0xbd8>)
  103bb8:	480a      	ldr	r0, [pc, #40]	; (103be4 <main+0xbb4>)
  103bba:	f009 ff43 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103bbe:	490a      	ldr	r1, [pc, #40]	; (103be8 <main+0xbb8>)
  103bc0:	e1ff      	b.n	103fc2 <main+0xf92>
  103bc2:	bf00      	nop
  103bc4:	3fff8144 	.word	0x3fff8144
  103bc8:	3fff8260 	.word	0x3fff8260
  103bcc:	0011650b 	.word	0x0011650b
  103bd0:	00116871 	.word	0x00116871
  103bd4:	3fff4894 	.word	0x3fff4894
  103bd8:	001168db 	.word	0x001168db
  103bdc:	00116909 	.word	0x00116909
  103be0:	00116987 	.word	0x00116987
  103be4:	3fff8184 	.word	0x3fff8184
  103be8:	001165ba 	.word	0x001165ba
  103bec:	001169a6 	.word	0x001169a6
  103bf0:	00116a10 	.word	0x00116a10
  103bf4:	00116a3b 	.word	0x00116a3b
  103bf8:	00116aaf 	.word	0x00116aaf
  103bfc:	00116add 	.word	0x00116add
  103c00:	00116b51 	.word	0x00116b51
  103c04:	00116b7c 	.word	0x00116b7c
  103c08:	00116bdc 	.word	0x00116bdc
  103c0c:	4631      	mov	r1, r6
  103c0e:	48a5      	ldr	r0, [pc, #660]	; (103ea4 <main+0xe74>)
  103c10:	f007 f9c8 	bl	10afa4 <gpio_write>
  103c14:	9810      	ldr	r0, [sp, #64]	; 0x40
  103c16:	702e      	strb	r6, [r5, #0]
  103c18:	f00a fe6a 	bl	10e8f0 <__aeabi_f2d>
  103c1c:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103c20:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103c22:	f00a fe65 	bl	10e8f0 <__aeabi_f2d>
  103c26:	e9cd 0104 	strd	r0, r1, [sp, #16]
  103c2a:	4b9f      	ldr	r3, [pc, #636]	; (103ea8 <main+0xe78>)
  103c2c:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103c2e:	681b      	ldr	r3, [r3, #0]
  103c30:	f8cd 8008 	str.w	r8, [sp, #8]
  103c34:	9303      	str	r3, [sp, #12]
  103c36:	f00a fe5b 	bl	10e8f0 <__aeabi_f2d>
  103c3a:	4a9c      	ldr	r2, [pc, #624]	; (103eac <main+0xe7c>)
  103c3c:	e9cd 0100 	strd	r0, r1, [sp]
  103c40:	499b      	ldr	r1, [pc, #620]	; (103eb0 <main+0xe80>)
  103c42:	4628      	mov	r0, r5
  103c44:	f00d fd0a 	bl	11165c <siprintf>
  103c48:	2034      	movs	r0, #52	; 0x34
  103c4a:	961f      	str	r6, [sp, #124]	; 0x7c
  103c4c:	f009 fd68 	bl	10d720 <operator new(unsigned int)>
  103c50:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103c54:	4997      	ldr	r1, [pc, #604]	; (103eb4 <main+0xe84>)
  103c56:	462b      	mov	r3, r5
  103c58:	463a      	mov	r2, r7
  103c5a:	9601      	str	r6, [sp, #4]
  103c5c:	f8cd 9000 	str.w	r9, [sp]
  103c60:	4680      	mov	r8, r0
  103c62:	f7fe ffc1 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103c66:	4648      	mov	r0, r9
  103c68:	f7fe fd36 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103c6c:	4992      	ldr	r1, [pc, #584]	; (103eb8 <main+0xe88>)
  103c6e:	4893      	ldr	r0, [pc, #588]	; (103ebc <main+0xe8c>)
  103c70:	f009 fee8 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103c74:	4992      	ldr	r1, [pc, #584]	; (103ec0 <main+0xe90>)
  103c76:	e372      	b.n	10435e <main+0x132e>
  103c78:	2e00      	cmp	r6, #0
  103c7a:	d061      	beq.n	103d40 <main+0xd10>
  103c7c:	4621      	mov	r1, r4
  103c7e:	4889      	ldr	r0, [pc, #548]	; (103ea4 <main+0xe74>)
  103c80:	f007 f990 	bl	10afa4 <gpio_write>
  103c84:	9810      	ldr	r0, [sp, #64]	; 0x40
  103c86:	702c      	strb	r4, [r5, #0]
  103c88:	f00a fe32 	bl	10e8f0 <__aeabi_f2d>
  103c8c:	e9cd 0104 	strd	r0, r1, [sp, #16]
  103c90:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103c92:	f00a fe2d 	bl	10e8f0 <__aeabi_f2d>
  103c96:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103c9a:	4b83      	ldr	r3, [pc, #524]	; (103ea8 <main+0xe78>)
  103c9c:	4a83      	ldr	r2, [pc, #524]	; (103eac <main+0xe7c>)
  103c9e:	681b      	ldr	r3, [r3, #0]
  103ca0:	4988      	ldr	r1, [pc, #544]	; (103ec4 <main+0xe94>)
  103ca2:	9301      	str	r3, [sp, #4]
  103ca4:	f8cd 8000 	str.w	r8, [sp]
  103ca8:	465b      	mov	r3, r11
  103caa:	4628      	mov	r0, r5
  103cac:	f00d fcd6 	bl	11165c <siprintf>
  103cb0:	2034      	movs	r0, #52	; 0x34
  103cb2:	941f      	str	r4, [sp, #124]	; 0x7c
  103cb4:	f009 fd34 	bl	10d720 <operator new(unsigned int)>
  103cb8:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103cbc:	497d      	ldr	r1, [pc, #500]	; (103eb4 <main+0xe84>)
  103cbe:	462b      	mov	r3, r5
  103cc0:	463a      	mov	r2, r7
  103cc2:	9401      	str	r4, [sp, #4]
  103cc4:	f8cd 9000 	str.w	r9, [sp]
  103cc8:	4680      	mov	r8, r0
  103cca:	f7fe ff8d 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103cce:	4648      	mov	r0, r9
  103cd0:	f7fe fd02 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103cd4:	497c      	ldr	r1, [pc, #496]	; (103ec8 <main+0xe98>)
  103cd6:	e76f      	b.n	103bb8 <main+0xb88>
  103cd8:	4631      	mov	r1, r6
  103cda:	4872      	ldr	r0, [pc, #456]	; (103ea4 <main+0xe74>)
  103cdc:	f007 f962 	bl	10afa4 <gpio_write>
  103ce0:	9810      	ldr	r0, [sp, #64]	; 0x40
  103ce2:	702e      	strb	r6, [r5, #0]
  103ce4:	f00a fe04 	bl	10e8f0 <__aeabi_f2d>
  103ce8:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103cec:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103cee:	f00a fdff 	bl	10e8f0 <__aeabi_f2d>
  103cf2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103cf4:	e9cd 0104 	strd	r0, r1, [sp, #16]
  103cf8:	9302      	str	r3, [sp, #8]
  103cfa:	4b6b      	ldr	r3, [pc, #428]	; (103ea8 <main+0xe78>)
  103cfc:	4a6b      	ldr	r2, [pc, #428]	; (103eac <main+0xe7c>)
  103cfe:	681b      	ldr	r3, [r3, #0]
  103d00:	4972      	ldr	r1, [pc, #456]	; (103ecc <main+0xe9c>)
  103d02:	9301      	str	r3, [sp, #4]
  103d04:	f8cd 8000 	str.w	r8, [sp]
  103d08:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103d0a:	4628      	mov	r0, r5
  103d0c:	f00d fca6 	bl	11165c <siprintf>
  103d10:	2034      	movs	r0, #52	; 0x34
  103d12:	961f      	str	r6, [sp, #124]	; 0x7c
  103d14:	f009 fd04 	bl	10d720 <operator new(unsigned int)>
  103d18:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  103d1c:	4965      	ldr	r1, [pc, #404]	; (103eb4 <main+0xe84>)
  103d1e:	462b      	mov	r3, r5
  103d20:	463a      	mov	r2, r7
  103d22:	9601      	str	r6, [sp, #4]
  103d24:	f8cd 8000 	str.w	r8, [sp]
  103d28:	4604      	mov	r4, r0
  103d2a:	f7fe ff5d 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103d2e:	4640      	mov	r0, r8
  103d30:	f7fe fcd2 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103d34:	4966      	ldr	r1, [pc, #408]	; (103ed0 <main+0xea0>)
  103d36:	4861      	ldr	r0, [pc, #388]	; (103ebc <main+0xe8c>)
  103d38:	f009 fe84 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103d3c:	4960      	ldr	r1, [pc, #384]	; (103ec0 <main+0xe90>)
  103d3e:	e369      	b.n	104414 <main+0x13e4>
  103d40:	4631      	mov	r1, r6
  103d42:	4858      	ldr	r0, [pc, #352]	; (103ea4 <main+0xe74>)
  103d44:	f007 f92e 	bl	10afa4 <gpio_write>
  103d48:	9810      	ldr	r0, [sp, #64]	; 0x40
  103d4a:	702e      	strb	r6, [r5, #0]
  103d4c:	f00a fdd0 	bl	10e8f0 <__aeabi_f2d>
  103d50:	e9cd 0104 	strd	r0, r1, [sp, #16]
  103d54:	980f      	ldr	r0, [sp, #60]	; 0x3c
  103d56:	f00a fdcb 	bl	10e8f0 <__aeabi_f2d>
  103d5a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103d5e:	4b52      	ldr	r3, [pc, #328]	; (103ea8 <main+0xe78>)
  103d60:	4a52      	ldr	r2, [pc, #328]	; (103eac <main+0xe7c>)
  103d62:	681b      	ldr	r3, [r3, #0]
  103d64:	495b      	ldr	r1, [pc, #364]	; (103ed4 <main+0xea4>)
  103d66:	9300      	str	r3, [sp, #0]
  103d68:	4628      	mov	r0, r5
  103d6a:	4643      	mov	r3, r8
  103d6c:	f00d fc76 	bl	11165c <siprintf>
  103d70:	2034      	movs	r0, #52	; 0x34
  103d72:	961f      	str	r6, [sp, #124]	; 0x7c
  103d74:	f009 fcd4 	bl	10d720 <operator new(unsigned int)>
  103d78:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103d7c:	462b      	mov	r3, r5
  103d7e:	463a      	mov	r2, r7
  103d80:	494c      	ldr	r1, [pc, #304]	; (103eb4 <main+0xe84>)
  103d82:	9601      	str	r6, [sp, #4]
  103d84:	f8cd 9000 	str.w	r9, [sp]
  103d88:	4680      	mov	r8, r0
  103d8a:	f7fe ff2d 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103d8e:	4648      	mov	r0, r9
  103d90:	f7fe fca2 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103d94:	4950      	ldr	r1, [pc, #320]	; (103ed8 <main+0xea8>)
  103d96:	4849      	ldr	r0, [pc, #292]	; (103ebc <main+0xe8c>)
  103d98:	f009 fe54 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103d9c:	4948      	ldr	r1, [pc, #288]	; (103ec0 <main+0xe90>)
  103d9e:	e365      	b.n	10446c <main+0x143c>
  103da0:	f1ba 0f00 	cmp.w	r10, #0
  103da4:	f000 817f 	beq.w	1040a6 <main+0x1076>
  103da8:	f1b9 0f00 	cmp.w	r9, #0
  103dac:	f000 810f 	beq.w	103fce <main+0xf9e>
  103db0:	2e00      	cmp	r6, #0
  103db2:	f000 809d 	beq.w	103ef0 <main+0xec0>
  103db6:	2c00      	cmp	r4, #0
  103db8:	d040      	beq.n	103e3c <main+0xe0c>
  103dba:	9914      	ldr	r1, [sp, #80]	; 0x50
  103dbc:	4839      	ldr	r0, [pc, #228]	; (103ea4 <main+0xe74>)
  103dbe:	f007 f8f1 	bl	10afa4 <gpio_write>
  103dc2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
  103dc6:	9810      	ldr	r0, [sp, #64]	; 0x40
  103dc8:	702b      	strb	r3, [r5, #0]
  103dca:	f00a fd91 	bl	10e8f0 <__aeabi_f2d>
  103dce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103dd0:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  103dd4:	9308      	str	r3, [sp, #32]
  103dd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103dd8:	f8cd b018 	str.w	r11, [sp, #24]
  103ddc:	9307      	str	r3, [sp, #28]
  103dde:	4b32      	ldr	r3, [pc, #200]	; (103ea8 <main+0xe78>)
  103de0:	980e      	ldr	r0, [sp, #56]	; 0x38
  103de2:	681b      	ldr	r3, [r3, #0]
  103de4:	f8cd 8010 	str.w	r8, [sp, #16]
  103de8:	9305      	str	r3, [sp, #20]
  103dea:	f00a fd81 	bl	10e8f0 <__aeabi_f2d>
  103dee:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103df2:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103df4:	f00a fd7c 	bl	10e8f0 <__aeabi_f2d>
  103df8:	4a2c      	ldr	r2, [pc, #176]	; (103eac <main+0xe7c>)
  103dfa:	e9cd 0100 	strd	r0, r1, [sp]
  103dfe:	4937      	ldr	r1, [pc, #220]	; (103edc <main+0xeac>)
  103e00:	4628      	mov	r0, r5
  103e02:	f00d fc2b 	bl	11165c <siprintf>
  103e06:	9b14      	ldr	r3, [sp, #80]	; 0x50
  103e08:	2034      	movs	r0, #52	; 0x34
  103e0a:	931f      	str	r3, [sp, #124]	; 0x7c
  103e0c:	f009 fc88 	bl	10d720 <operator new(unsigned int)>
  103e10:	9b14      	ldr	r3, [sp, #80]	; 0x50
  103e12:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  103e16:	463a      	mov	r2, r7
  103e18:	4926      	ldr	r1, [pc, #152]	; (103eb4 <main+0xe84>)
  103e1a:	9301      	str	r3, [sp, #4]
  103e1c:	f8cd 8000 	str.w	r8, [sp]
  103e20:	462b      	mov	r3, r5
  103e22:	4604      	mov	r4, r0
  103e24:	f7fe fee0 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103e28:	4640      	mov	r0, r8
  103e2a:	f7fe fc55 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103e2e:	492c      	ldr	r1, [pc, #176]	; (103ee0 <main+0xeb0>)
  103e30:	4822      	ldr	r0, [pc, #136]	; (103ebc <main+0xe8c>)
  103e32:	f009 fe07 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103e36:	492b      	ldr	r1, [pc, #172]	; (103ee4 <main+0xeb4>)
  103e38:	f000 bf12 	b.w	104c60 <main+0x1c30>
  103e3c:	4621      	mov	r1, r4
  103e3e:	4819      	ldr	r0, [pc, #100]	; (103ea4 <main+0xe74>)
  103e40:	f007 f8b0 	bl	10afa4 <gpio_write>
  103e44:	9810      	ldr	r0, [sp, #64]	; 0x40
  103e46:	702c      	strb	r4, [r5, #0]
  103e48:	f00a fd52 	bl	10e8f0 <__aeabi_f2d>
  103e4c:	e9cd 0108 	strd	r0, r1, [sp, #32]
  103e50:	4b15      	ldr	r3, [pc, #84]	; (103ea8 <main+0xe78>)
  103e52:	f8cd b018 	str.w	r11, [sp, #24]
  103e56:	681b      	ldr	r3, [r3, #0]
  103e58:	980e      	ldr	r0, [sp, #56]	; 0x38
  103e5a:	9305      	str	r3, [sp, #20]
  103e5c:	f8cd 8010 	str.w	r8, [sp, #16]
  103e60:	f00a fd46 	bl	10e8f0 <__aeabi_f2d>
  103e64:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103e68:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103e6a:	f00a fd41 	bl	10e8f0 <__aeabi_f2d>
  103e6e:	4a0f      	ldr	r2, [pc, #60]	; (103eac <main+0xe7c>)
  103e70:	e9cd 0100 	strd	r0, r1, [sp]
  103e74:	491c      	ldr	r1, [pc, #112]	; (103ee8 <main+0xeb8>)
  103e76:	4628      	mov	r0, r5
  103e78:	f00d fbf0 	bl	11165c <siprintf>
  103e7c:	2034      	movs	r0, #52	; 0x34
  103e7e:	941f      	str	r4, [sp, #124]	; 0x7c
  103e80:	f009 fc4e 	bl	10d720 <operator new(unsigned int)>
  103e84:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103e88:	490a      	ldr	r1, [pc, #40]	; (103eb4 <main+0xe84>)
  103e8a:	462b      	mov	r3, r5
  103e8c:	463a      	mov	r2, r7
  103e8e:	9401      	str	r4, [sp, #4]
  103e90:	f8cd 9000 	str.w	r9, [sp]
  103e94:	4680      	mov	r8, r0
  103e96:	f7fe fea7 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103e9a:	4648      	mov	r0, r9
  103e9c:	f7fe fc1c 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103ea0:	4912      	ldr	r1, [pc, #72]	; (103eec <main+0xebc>)
  103ea2:	e08e      	b.n	103fc2 <main+0xf92>
  103ea4:	3fff8144 	.word	0x3fff8144
  103ea8:	3fff8260 	.word	0x3fff8260
  103eac:	0011650b 	.word	0x0011650b
  103eb0:	00116c17 	.word	0x00116c17
  103eb4:	3fff4894 	.word	0x3fff4894
  103eb8:	00116c77 	.word	0x00116c77
  103ebc:	3fff8184 	.word	0x3fff8184
  103ec0:	001165ba 	.word	0x001165ba
  103ec4:	00116cb5 	.word	0x00116cb5
  103ec8:	00116d15 	.word	0x00116d15
  103ecc:	00116d4c 	.word	0x00116d4c
  103ed0:	00116db6 	.word	0x00116db6
  103ed4:	00116df1 	.word	0x00116df1
  103ed8:	00116e47 	.word	0x00116e47
  103edc:	00116e8e 	.word	0x00116e8e
  103ee0:	001165a4 	.word	0x001165a4
  103ee4:	001165d4 	.word	0x001165d4
  103ee8:	00116f0c 	.word	0x00116f0c
  103eec:	0011666a 	.word	0x0011666a
  103ef0:	2c00      	cmp	r4, #0
  103ef2:	d035      	beq.n	103f60 <main+0xf30>
  103ef4:	4631      	mov	r1, r6
  103ef6:	48a4      	ldr	r0, [pc, #656]	; (104188 <main+0x1158>)
  103ef8:	f007 f854 	bl	10afa4 <gpio_write>
  103efc:	9810      	ldr	r0, [sp, #64]	; 0x40
  103efe:	702e      	strb	r6, [r5, #0]
  103f00:	f00a fcf6 	bl	10e8f0 <__aeabi_f2d>
  103f04:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103f06:	e9cd 0108 	strd	r0, r1, [sp, #32]
  103f0a:	9307      	str	r3, [sp, #28]
  103f0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103f0e:	980e      	ldr	r0, [sp, #56]	; 0x38
  103f10:	9306      	str	r3, [sp, #24]
  103f12:	4b9e      	ldr	r3, [pc, #632]	; (10418c <main+0x115c>)
  103f14:	681b      	ldr	r3, [r3, #0]
  103f16:	f8cd 8010 	str.w	r8, [sp, #16]
  103f1a:	9305      	str	r3, [sp, #20]
  103f1c:	f00a fce8 	bl	10e8f0 <__aeabi_f2d>
  103f20:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103f24:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103f26:	f00a fce3 	bl	10e8f0 <__aeabi_f2d>
  103f2a:	4a99      	ldr	r2, [pc, #612]	; (104190 <main+0x1160>)
  103f2c:	e9cd 0100 	strd	r0, r1, [sp]
  103f30:	4998      	ldr	r1, [pc, #608]	; (104194 <main+0x1164>)
  103f32:	4628      	mov	r0, r5
  103f34:	f00d fb92 	bl	11165c <siprintf>
  103f38:	2034      	movs	r0, #52	; 0x34
  103f3a:	961f      	str	r6, [sp, #124]	; 0x7c
  103f3c:	f009 fbf0 	bl	10d720 <operator new(unsigned int)>
  103f40:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  103f44:	4994      	ldr	r1, [pc, #592]	; (104198 <main+0x1168>)
  103f46:	462b      	mov	r3, r5
  103f48:	463a      	mov	r2, r7
  103f4a:	9601      	str	r6, [sp, #4]
  103f4c:	f8cd 8000 	str.w	r8, [sp]
  103f50:	4604      	mov	r4, r0
  103f52:	f7fe fe49 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103f56:	4640      	mov	r0, r8
  103f58:	f7fe fbbe 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103f5c:	498f      	ldr	r1, [pc, #572]	; (10419c <main+0x116c>)
  103f5e:	e259      	b.n	104414 <main+0x13e4>
  103f60:	4621      	mov	r1, r4
  103f62:	4889      	ldr	r0, [pc, #548]	; (104188 <main+0x1158>)
  103f64:	f007 f81e 	bl	10afa4 <gpio_write>
  103f68:	9810      	ldr	r0, [sp, #64]	; 0x40
  103f6a:	702c      	strb	r4, [r5, #0]
  103f6c:	f00a fcc0 	bl	10e8f0 <__aeabi_f2d>
  103f70:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103f74:	4b85      	ldr	r3, [pc, #532]	; (10418c <main+0x115c>)
  103f76:	980e      	ldr	r0, [sp, #56]	; 0x38
  103f78:	681b      	ldr	r3, [r3, #0]
  103f7a:	f8cd 8010 	str.w	r8, [sp, #16]
  103f7e:	9305      	str	r3, [sp, #20]
  103f80:	f00a fcb6 	bl	10e8f0 <__aeabi_f2d>
  103f84:	e9cd 0102 	strd	r0, r1, [sp, #8]
  103f88:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103f8a:	f00a fcb1 	bl	10e8f0 <__aeabi_f2d>
  103f8e:	4a80      	ldr	r2, [pc, #512]	; (104190 <main+0x1160>)
  103f90:	e9cd 0100 	strd	r0, r1, [sp]
  103f94:	4982      	ldr	r1, [pc, #520]	; (1041a0 <main+0x1170>)
  103f96:	4628      	mov	r0, r5
  103f98:	f00d fb60 	bl	11165c <siprintf>
  103f9c:	2034      	movs	r0, #52	; 0x34
  103f9e:	941f      	str	r4, [sp, #124]	; 0x7c
  103fa0:	f009 fbbe 	bl	10d720 <operator new(unsigned int)>
  103fa4:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  103fa8:	497b      	ldr	r1, [pc, #492]	; (104198 <main+0x1168>)
  103faa:	462b      	mov	r3, r5
  103fac:	463a      	mov	r2, r7
  103fae:	9401      	str	r4, [sp, #4]
  103fb0:	f8cd 9000 	str.w	r9, [sp]
  103fb4:	4680      	mov	r8, r0
  103fb6:	f7fe fe17 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  103fba:	4648      	mov	r0, r9
  103fbc:	f7fe fb8c 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  103fc0:	4978      	ldr	r1, [pc, #480]	; (1041a4 <main+0x1174>)
  103fc2:	4879      	ldr	r0, [pc, #484]	; (1041a8 <main+0x1178>)
  103fc4:	f009 fd3e 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  103fc8:	4978      	ldr	r1, [pc, #480]	; (1041ac <main+0x117c>)
  103fca:	f001 b907 	b.w	1051dc <main+0x21ac>
  103fce:	2c00      	cmp	r4, #0
  103fd0:	d036      	beq.n	104040 <main+0x1010>
  103fd2:	4649      	mov	r1, r9
  103fd4:	486c      	ldr	r0, [pc, #432]	; (104188 <main+0x1158>)
  103fd6:	f006 ffe5 	bl	10afa4 <gpio_write>
  103fda:	9810      	ldr	r0, [sp, #64]	; 0x40
  103fdc:	f885 9000 	strb.w	r9, [r5]
  103fe0:	f00a fc86 	bl	10e8f0 <__aeabi_f2d>
  103fe4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  103fe6:	e9cd 0106 	strd	r0, r1, [sp, #24]
  103fea:	9305      	str	r3, [sp, #20]
  103fec:	4b67      	ldr	r3, [pc, #412]	; (10418c <main+0x115c>)
  103fee:	9813      	ldr	r0, [sp, #76]	; 0x4c
  103ff0:	681b      	ldr	r3, [r3, #0]
  103ff2:	f8cd 800c 	str.w	r8, [sp, #12]
  103ff6:	9304      	str	r3, [sp, #16]
  103ff8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  103ffa:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  103ffe:	9302      	str	r3, [sp, #8]
  104000:	f00a fc76 	bl	10e8f0 <__aeabi_f2d>
  104004:	4a62      	ldr	r2, [pc, #392]	; (104190 <main+0x1160>)
  104006:	e9cd 0100 	strd	r0, r1, [sp]
  10400a:	4969      	ldr	r1, [pc, #420]	; (1041b0 <main+0x1180>)
  10400c:	4628      	mov	r0, r5
  10400e:	f00d fb25 	bl	11165c <siprintf>
  104012:	2034      	movs	r0, #52	; 0x34
  104014:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  104018:	f009 fb82 	bl	10d720 <operator new(unsigned int)>
  10401c:	495e      	ldr	r1, [pc, #376]	; (104198 <main+0x1168>)
  10401e:	462b      	mov	r3, r5
  104020:	463a      	mov	r2, r7
  104022:	e88d 0300 	stmia.w	sp, {r8, r9}
  104026:	4604      	mov	r4, r0
  104028:	f7fe fdde 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10402c:	4640      	mov	r0, r8
  10402e:	f7fe fb53 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104032:	4960      	ldr	r1, [pc, #384]	; (1041b4 <main+0x1184>)
  104034:	485c      	ldr	r0, [pc, #368]	; (1041a8 <main+0x1178>)
  104036:	f009 fd05 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10403a:	495c      	ldr	r1, [pc, #368]	; (1041ac <main+0x117c>)
  10403c:	f000 bf0d 	b.w	104e5a <main+0x1e2a>
  104040:	2e00      	cmp	r6, #0
  104042:	f000 8160 	beq.w	104306 <main+0x12d6>
  104046:	4621      	mov	r1, r4
  104048:	484f      	ldr	r0, [pc, #316]	; (104188 <main+0x1158>)
  10404a:	f006 ffab 	bl	10afa4 <gpio_write>
  10404e:	9810      	ldr	r0, [sp, #64]	; 0x40
  104050:	702c      	strb	r4, [r5, #0]
  104052:	f00a fc4d 	bl	10e8f0 <__aeabi_f2d>
  104056:	e9cd 0106 	strd	r0, r1, [sp, #24]
  10405a:	4b4c      	ldr	r3, [pc, #304]	; (10418c <main+0x115c>)
  10405c:	f8cd b010 	str.w	r11, [sp, #16]
  104060:	681b      	ldr	r3, [r3, #0]
  104062:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104064:	9303      	str	r3, [sp, #12]
  104066:	f8cd 8008 	str.w	r8, [sp, #8]
  10406a:	f00a fc41 	bl	10e8f0 <__aeabi_f2d>
  10406e:	4a48      	ldr	r2, [pc, #288]	; (104190 <main+0x1160>)
  104070:	e9cd 0100 	strd	r0, r1, [sp]
  104074:	4950      	ldr	r1, [pc, #320]	; (1041b8 <main+0x1188>)
  104076:	4628      	mov	r0, r5
  104078:	f00d faf0 	bl	11165c <siprintf>
  10407c:	2034      	movs	r0, #52	; 0x34
  10407e:	941f      	str	r4, [sp, #124]	; 0x7c
  104080:	f009 fb4e 	bl	10d720 <operator new(unsigned int)>
  104084:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104088:	4943      	ldr	r1, [pc, #268]	; (104198 <main+0x1168>)
  10408a:	462b      	mov	r3, r5
  10408c:	463a      	mov	r2, r7
  10408e:	9401      	str	r4, [sp, #4]
  104090:	f8cd 9000 	str.w	r9, [sp]
  104094:	4680      	mov	r8, r0
  104096:	f7fe fda7 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10409a:	4648      	mov	r0, r9
  10409c:	f7fe fb1c 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1040a0:	4946      	ldr	r1, [pc, #280]	; (1041bc <main+0x118c>)
  1040a2:	f7ff bb0a 	b.w	1036ba <main+0x68a>
  1040a6:	f1b9 0f00 	cmp.w	r9, #0
  1040aa:	f000 80c4 	beq.w	104236 <main+0x1206>
  1040ae:	2e00      	cmp	r6, #0
  1040b0:	f000 808e 	beq.w	1041d0 <main+0x11a0>
  1040b4:	2c00      	cmp	r4, #0
  1040b6:	d038      	beq.n	10412a <main+0x10fa>
  1040b8:	4651      	mov	r1, r10
  1040ba:	4833      	ldr	r0, [pc, #204]	; (104188 <main+0x1158>)
  1040bc:	f006 ff72 	bl	10afa4 <gpio_write>
  1040c0:	9810      	ldr	r0, [sp, #64]	; 0x40
  1040c2:	f885 a000 	strb.w	r10, [r5]
  1040c6:	f00a fc13 	bl	10e8f0 <__aeabi_f2d>
  1040ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
  1040cc:	e9cd 0108 	strd	r0, r1, [sp, #32]
  1040d0:	9306      	str	r3, [sp, #24]
  1040d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  1040d4:	f8cd b010 	str.w	r11, [sp, #16]
  1040d8:	9305      	str	r3, [sp, #20]
  1040da:	4b2c      	ldr	r3, [pc, #176]	; (10418c <main+0x115c>)
  1040dc:	980e      	ldr	r0, [sp, #56]	; 0x38
  1040de:	681b      	ldr	r3, [r3, #0]
  1040e0:	f8cd 8008 	str.w	r8, [sp, #8]
  1040e4:	9303      	str	r3, [sp, #12]
  1040e6:	f00a fc03 	bl	10e8f0 <__aeabi_f2d>
  1040ea:	4a29      	ldr	r2, [pc, #164]	; (104190 <main+0x1160>)
  1040ec:	e9cd 0100 	strd	r0, r1, [sp]
  1040f0:	4933      	ldr	r1, [pc, #204]	; (1041c0 <main+0x1190>)
  1040f2:	4628      	mov	r0, r5
  1040f4:	f00d fab2 	bl	11165c <siprintf>
  1040f8:	2034      	movs	r0, #52	; 0x34
  1040fa:	f8cd a07c 	str.w	r10, [sp, #124]	; 0x7c
  1040fe:	f009 fb0f 	bl	10d720 <operator new(unsigned int)>
  104102:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104106:	4924      	ldr	r1, [pc, #144]	; (104198 <main+0x1168>)
  104108:	462b      	mov	r3, r5
  10410a:	463a      	mov	r2, r7
  10410c:	e88d 0500 	stmia.w	sp, {r8, r10}
  104110:	4604      	mov	r4, r0
  104112:	f7fe fd69 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104116:	4640      	mov	r0, r8
  104118:	f7fe fade 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10411c:	4929      	ldr	r1, [pc, #164]	; (1041c4 <main+0x1194>)
  10411e:	4822      	ldr	r0, [pc, #136]	; (1041a8 <main+0x1178>)
  104120:	f009 fc90 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104124:	4921      	ldr	r1, [pc, #132]	; (1041ac <main+0x117c>)
  104126:	f000 bf14 	b.w	104f52 <main+0x1f22>
  10412a:	4621      	mov	r1, r4
  10412c:	4816      	ldr	r0, [pc, #88]	; (104188 <main+0x1158>)
  10412e:	f006 ff39 	bl	10afa4 <gpio_write>
  104132:	9810      	ldr	r0, [sp, #64]	; 0x40
  104134:	702c      	strb	r4, [r5, #0]
  104136:	f00a fbdb 	bl	10e8f0 <__aeabi_f2d>
  10413a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  10413e:	4b13      	ldr	r3, [pc, #76]	; (10418c <main+0x115c>)
  104140:	f8cd b010 	str.w	r11, [sp, #16]
  104144:	681b      	ldr	r3, [r3, #0]
  104146:	980e      	ldr	r0, [sp, #56]	; 0x38
  104148:	9303      	str	r3, [sp, #12]
  10414a:	f8cd 8008 	str.w	r8, [sp, #8]
  10414e:	f00a fbcf 	bl	10e8f0 <__aeabi_f2d>
  104152:	4a0f      	ldr	r2, [pc, #60]	; (104190 <main+0x1160>)
  104154:	e9cd 0100 	strd	r0, r1, [sp]
  104158:	491b      	ldr	r1, [pc, #108]	; (1041c8 <main+0x1198>)
  10415a:	4628      	mov	r0, r5
  10415c:	f00d fa7e 	bl	11165c <siprintf>
  104160:	2034      	movs	r0, #52	; 0x34
  104162:	941f      	str	r4, [sp, #124]	; 0x7c
  104164:	f009 fadc 	bl	10d720 <operator new(unsigned int)>
  104168:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  10416c:	490a      	ldr	r1, [pc, #40]	; (104198 <main+0x1168>)
  10416e:	462b      	mov	r3, r5
  104170:	463a      	mov	r2, r7
  104172:	9401      	str	r4, [sp, #4]
  104174:	f8cd 9000 	str.w	r9, [sp]
  104178:	4680      	mov	r8, r0
  10417a:	f7fe fd35 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10417e:	4648      	mov	r0, r9
  104180:	f7fe faaa 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104184:	4911      	ldr	r1, [pc, #68]	; (1041cc <main+0x119c>)
  104186:	e71c      	b.n	103fc2 <main+0xf92>
  104188:	3fff8144 	.word	0x3fff8144
  10418c:	3fff8260 	.word	0x3fff8260
  104190:	0011650b 	.word	0x0011650b
  104194:	00116f76 	.word	0x00116f76
  104198:	3fff4894 	.word	0x3fff4894
  10419c:	0011670a 	.word	0x0011670a
  1041a0:	00116fea 	.word	0x00116fea
  1041a4:	00116799 	.word	0x00116799
  1041a8:	3fff8184 	.word	0x3fff8184
  1041ac:	001165d4 	.word	0x001165d4
  1041b0:	0011704a 	.word	0x0011704a
  1041b4:	0011683f 	.word	0x0011683f
  1041b8:	001170b4 	.word	0x001170b4
  1041bc:	001168db 	.word	0x001168db
  1041c0:	00117114 	.word	0x00117114
  1041c4:	00116987 	.word	0x00116987
  1041c8:	00117188 	.word	0x00117188
  1041cc:	00116a10 	.word	0x00116a10
  1041d0:	2c00      	cmp	r4, #0
  1041d2:	d06b      	beq.n	1042ac <main+0x127c>
  1041d4:	4631      	mov	r1, r6
  1041d6:	48a8      	ldr	r0, [pc, #672]	; (104478 <main+0x1448>)
  1041d8:	f006 fee4 	bl	10afa4 <gpio_write>
  1041dc:	9810      	ldr	r0, [sp, #64]	; 0x40
  1041de:	702e      	strb	r6, [r5, #0]
  1041e0:	f00a fb86 	bl	10e8f0 <__aeabi_f2d>
  1041e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  1041e6:	e9cd 0106 	strd	r0, r1, [sp, #24]
  1041ea:	9305      	str	r3, [sp, #20]
  1041ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
  1041ee:	980e      	ldr	r0, [sp, #56]	; 0x38
  1041f0:	9304      	str	r3, [sp, #16]
  1041f2:	4ba2      	ldr	r3, [pc, #648]	; (10447c <main+0x144c>)
  1041f4:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1041f8:	681b      	ldr	r3, [r3, #0]
  1041fa:	f8cd 8008 	str.w	r8, [sp, #8]
  1041fe:	9303      	str	r3, [sp, #12]
  104200:	f00a fb76 	bl	10e8f0 <__aeabi_f2d>
  104204:	4a9e      	ldr	r2, [pc, #632]	; (104480 <main+0x1450>)
  104206:	e9cd 0100 	strd	r0, r1, [sp]
  10420a:	499e      	ldr	r1, [pc, #632]	; (104484 <main+0x1454>)
  10420c:	4628      	mov	r0, r5
  10420e:	f00d fa25 	bl	11165c <siprintf>
  104212:	2034      	movs	r0, #52	; 0x34
  104214:	961f      	str	r6, [sp, #124]	; 0x7c
  104216:	f009 fa83 	bl	10d720 <operator new(unsigned int)>
  10421a:	499b      	ldr	r1, [pc, #620]	; (104488 <main+0x1458>)
  10421c:	462b      	mov	r3, r5
  10421e:	463a      	mov	r2, r7
  104220:	9601      	str	r6, [sp, #4]
  104222:	f8cd 9000 	str.w	r9, [sp]
  104226:	4680      	mov	r8, r0
  104228:	f7fe fcde 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10422c:	4648      	mov	r0, r9
  10422e:	f7fe fa53 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104232:	4996      	ldr	r1, [pc, #600]	; (10448c <main+0x145c>)
  104234:	e093      	b.n	10435e <main+0x132e>
  104236:	2c00      	cmp	r4, #0
  104238:	f000 8097 	beq.w	10436a <main+0x133a>
  10423c:	2e00      	cmp	r6, #0
  10423e:	f000 80bf 	beq.w	1043c0 <main+0x1390>
  104242:	4649      	mov	r1, r9
  104244:	488c      	ldr	r0, [pc, #560]	; (104478 <main+0x1448>)
  104246:	f006 fead 	bl	10afa4 <gpio_write>
  10424a:	9810      	ldr	r0, [sp, #64]	; 0x40
  10424c:	f885 9000 	strb.w	r9, [r5]
  104250:	f00a fb4e 	bl	10e8f0 <__aeabi_f2d>
  104254:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104256:	e9cd 0104 	strd	r0, r1, [sp, #16]
  10425a:	9303      	str	r3, [sp, #12]
  10425c:	4b87      	ldr	r3, [pc, #540]	; (10447c <main+0x144c>)
  10425e:	f8cd b008 	str.w	r11, [sp, #8]
  104262:	681b      	ldr	r3, [r3, #0]
  104264:	4a86      	ldr	r2, [pc, #536]	; (104480 <main+0x1450>)
  104266:	498a      	ldr	r1, [pc, #552]	; (104490 <main+0x1460>)
  104268:	9301      	str	r3, [sp, #4]
  10426a:	f8cd 8000 	str.w	r8, [sp]
  10426e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104270:	4628      	mov	r0, r5
  104272:	f00d f9f3 	bl	11165c <siprintf>
  104276:	2034      	movs	r0, #52	; 0x34
  104278:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  10427c:	f009 fa50 	bl	10d720 <operator new(unsigned int)>
  104280:	f10d 0a70 	add.w	r10, sp, #112	; 0x70
  104284:	4980      	ldr	r1, [pc, #512]	; (104488 <main+0x1458>)
  104286:	462b      	mov	r3, r5
  104288:	463a      	mov	r2, r7
  10428a:	f8cd 9004 	str.w	r9, [sp, #4]
  10428e:	f8cd a000 	str.w	r10, [sp]
  104292:	4680      	mov	r8, r0
  104294:	f7fe fca8 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104298:	4650      	mov	r0, r10
  10429a:	f7fe fa1d 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10429e:	497d      	ldr	r1, [pc, #500]	; (104494 <main+0x1464>)
  1042a0:	487d      	ldr	r0, [pc, #500]	; (104498 <main+0x1468>)
  1042a2:	f009 fbcf 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1042a6:	497d      	ldr	r1, [pc, #500]	; (10449c <main+0x146c>)
  1042a8:	f000 bef1 	b.w	10508e <main+0x205e>
  1042ac:	4621      	mov	r1, r4
  1042ae:	4872      	ldr	r0, [pc, #456]	; (104478 <main+0x1448>)
  1042b0:	f006 fe78 	bl	10afa4 <gpio_write>
  1042b4:	9810      	ldr	r0, [sp, #64]	; 0x40
  1042b6:	702c      	strb	r4, [r5, #0]
  1042b8:	f00a fb1a 	bl	10e8f0 <__aeabi_f2d>
  1042bc:	e9cd 0104 	strd	r0, r1, [sp, #16]
  1042c0:	4b6e      	ldr	r3, [pc, #440]	; (10447c <main+0x144c>)
  1042c2:	980e      	ldr	r0, [sp, #56]	; 0x38
  1042c4:	681b      	ldr	r3, [r3, #0]
  1042c6:	f8cd 8008 	str.w	r8, [sp, #8]
  1042ca:	9303      	str	r3, [sp, #12]
  1042cc:	f00a fb10 	bl	10e8f0 <__aeabi_f2d>
  1042d0:	4a6b      	ldr	r2, [pc, #428]	; (104480 <main+0x1450>)
  1042d2:	e9cd 0100 	strd	r0, r1, [sp]
  1042d6:	4972      	ldr	r1, [pc, #456]	; (1044a0 <main+0x1470>)
  1042d8:	4628      	mov	r0, r5
  1042da:	f00d f9bf 	bl	11165c <siprintf>
  1042de:	2034      	movs	r0, #52	; 0x34
  1042e0:	941f      	str	r4, [sp, #124]	; 0x7c
  1042e2:	f009 fa1d 	bl	10d720 <operator new(unsigned int)>
  1042e6:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1042ea:	4967      	ldr	r1, [pc, #412]	; (104488 <main+0x1458>)
  1042ec:	462b      	mov	r3, r5
  1042ee:	463a      	mov	r2, r7
  1042f0:	9401      	str	r4, [sp, #4]
  1042f2:	f8cd 9000 	str.w	r9, [sp]
  1042f6:	4680      	mov	r8, r0
  1042f8:	f7fe fc76 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1042fc:	4648      	mov	r0, r9
  1042fe:	f7fe f9eb 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104302:	4968      	ldr	r1, [pc, #416]	; (1044a4 <main+0x1474>)
  104304:	e65d      	b.n	103fc2 <main+0xf92>
  104306:	4631      	mov	r1, r6
  104308:	485b      	ldr	r0, [pc, #364]	; (104478 <main+0x1448>)
  10430a:	f006 fe4b 	bl	10afa4 <gpio_write>
  10430e:	9810      	ldr	r0, [sp, #64]	; 0x40
  104310:	702e      	strb	r6, [r5, #0]
  104312:	f00a faed 	bl	10e8f0 <__aeabi_f2d>
  104316:	e9cd 0104 	strd	r0, r1, [sp, #16]
  10431a:	4b58      	ldr	r3, [pc, #352]	; (10447c <main+0x144c>)
  10431c:	9813      	ldr	r0, [sp, #76]	; 0x4c
  10431e:	681b      	ldr	r3, [r3, #0]
  104320:	f8cd 8008 	str.w	r8, [sp, #8]
  104324:	9303      	str	r3, [sp, #12]
  104326:	f00a fae3 	bl	10e8f0 <__aeabi_f2d>
  10432a:	4a55      	ldr	r2, [pc, #340]	; (104480 <main+0x1450>)
  10432c:	e9cd 0100 	strd	r0, r1, [sp]
  104330:	495d      	ldr	r1, [pc, #372]	; (1044a8 <main+0x1478>)
  104332:	4628      	mov	r0, r5
  104334:	f00d f992 	bl	11165c <siprintf>
  104338:	2034      	movs	r0, #52	; 0x34
  10433a:	961f      	str	r6, [sp, #124]	; 0x7c
  10433c:	f009 f9f0 	bl	10d720 <operator new(unsigned int)>
  104340:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104344:	4950      	ldr	r1, [pc, #320]	; (104488 <main+0x1458>)
  104346:	462b      	mov	r3, r5
  104348:	463a      	mov	r2, r7
  10434a:	9601      	str	r6, [sp, #4]
  10434c:	f8cd 9000 	str.w	r9, [sp]
  104350:	4680      	mov	r8, r0
  104352:	f7fe fc49 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104356:	4648      	mov	r0, r9
  104358:	f7fe f9be 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10435c:	4953      	ldr	r1, [pc, #332]	; (1044ac <main+0x147c>)
  10435e:	484e      	ldr	r0, [pc, #312]	; (104498 <main+0x1468>)
  104360:	f009 fb70 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104364:	494d      	ldr	r1, [pc, #308]	; (10449c <main+0x146c>)
  104366:	f000 bf0e 	b.w	105186 <main+0x2156>
  10436a:	2e00      	cmp	r6, #0
  10436c:	d058      	beq.n	104420 <main+0x13f0>
  10436e:	4621      	mov	r1, r4
  104370:	4841      	ldr	r0, [pc, #260]	; (104478 <main+0x1448>)
  104372:	f006 fe17 	bl	10afa4 <gpio_write>
  104376:	9810      	ldr	r0, [sp, #64]	; 0x40
  104378:	702c      	strb	r4, [r5, #0]
  10437a:	f00a fab9 	bl	10e8f0 <__aeabi_f2d>
  10437e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104382:	4b3e      	ldr	r3, [pc, #248]	; (10447c <main+0x144c>)
  104384:	4a3e      	ldr	r2, [pc, #248]	; (104480 <main+0x1450>)
  104386:	681b      	ldr	r3, [r3, #0]
  104388:	4949      	ldr	r1, [pc, #292]	; (1044b0 <main+0x1480>)
  10438a:	9301      	str	r3, [sp, #4]
  10438c:	f8cd 8000 	str.w	r8, [sp]
  104390:	465b      	mov	r3, r11
  104392:	4628      	mov	r0, r5
  104394:	f00d f962 	bl	11165c <siprintf>
  104398:	2034      	movs	r0, #52	; 0x34
  10439a:	941f      	str	r4, [sp, #124]	; 0x7c
  10439c:	f009 f9c0 	bl	10d720 <operator new(unsigned int)>
  1043a0:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1043a4:	4938      	ldr	r1, [pc, #224]	; (104488 <main+0x1458>)
  1043a6:	462b      	mov	r3, r5
  1043a8:	463a      	mov	r2, r7
  1043aa:	9401      	str	r4, [sp, #4]
  1043ac:	f8cd 9000 	str.w	r9, [sp]
  1043b0:	4680      	mov	r8, r0
  1043b2:	f7fe fc19 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1043b6:	4648      	mov	r0, r9
  1043b8:	f7fe f98e 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1043bc:	493d      	ldr	r1, [pc, #244]	; (1044b4 <main+0x1484>)
  1043be:	e600      	b.n	103fc2 <main+0xf92>
  1043c0:	4631      	mov	r1, r6
  1043c2:	482d      	ldr	r0, [pc, #180]	; (104478 <main+0x1448>)
  1043c4:	f006 fdee 	bl	10afa4 <gpio_write>
  1043c8:	9810      	ldr	r0, [sp, #64]	; 0x40
  1043ca:	702e      	strb	r6, [r5, #0]
  1043cc:	f00a fa90 	bl	10e8f0 <__aeabi_f2d>
  1043d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  1043d2:	e9cd 0104 	strd	r0, r1, [sp, #16]
  1043d6:	9302      	str	r3, [sp, #8]
  1043d8:	4b28      	ldr	r3, [pc, #160]	; (10447c <main+0x144c>)
  1043da:	4a29      	ldr	r2, [pc, #164]	; (104480 <main+0x1450>)
  1043dc:	681b      	ldr	r3, [r3, #0]
  1043de:	4936      	ldr	r1, [pc, #216]	; (1044b8 <main+0x1488>)
  1043e0:	9301      	str	r3, [sp, #4]
  1043e2:	f8cd 8000 	str.w	r8, [sp]
  1043e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  1043e8:	4628      	mov	r0, r5
  1043ea:	f00d f937 	bl	11165c <siprintf>
  1043ee:	2034      	movs	r0, #52	; 0x34
  1043f0:	961f      	str	r6, [sp, #124]	; 0x7c
  1043f2:	f009 f995 	bl	10d720 <operator new(unsigned int)>
  1043f6:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  1043fa:	4923      	ldr	r1, [pc, #140]	; (104488 <main+0x1458>)
  1043fc:	462b      	mov	r3, r5
  1043fe:	463a      	mov	r2, r7
  104400:	9601      	str	r6, [sp, #4]
  104402:	f8cd 8000 	str.w	r8, [sp]
  104406:	4604      	mov	r4, r0
  104408:	f7fe fbee 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10440c:	4640      	mov	r0, r8
  10440e:	f7fe f963 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104412:	492a      	ldr	r1, [pc, #168]	; (1044bc <main+0x148c>)
  104414:	4820      	ldr	r0, [pc, #128]	; (104498 <main+0x1468>)
  104416:	f009 fb15 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10441a:	4920      	ldr	r1, [pc, #128]	; (10449c <main+0x146c>)
  10441c:	f000 bf13 	b.w	105246 <main+0x2216>
  104420:	4631      	mov	r1, r6
  104422:	4815      	ldr	r0, [pc, #84]	; (104478 <main+0x1448>)
  104424:	f006 fdbe 	bl	10afa4 <gpio_write>
  104428:	9810      	ldr	r0, [sp, #64]	; 0x40
  10442a:	702e      	strb	r6, [r5, #0]
  10442c:	f00a fa60 	bl	10e8f0 <__aeabi_f2d>
  104430:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104434:	4b11      	ldr	r3, [pc, #68]	; (10447c <main+0x144c>)
  104436:	4a12      	ldr	r2, [pc, #72]	; (104480 <main+0x1450>)
  104438:	681b      	ldr	r3, [r3, #0]
  10443a:	4921      	ldr	r1, [pc, #132]	; (1044c0 <main+0x1490>)
  10443c:	9300      	str	r3, [sp, #0]
  10443e:	4628      	mov	r0, r5
  104440:	4643      	mov	r3, r8
  104442:	f00d f90b 	bl	11165c <siprintf>
  104446:	2034      	movs	r0, #52	; 0x34
  104448:	961f      	str	r6, [sp, #124]	; 0x7c
  10444a:	f009 f969 	bl	10d720 <operator new(unsigned int)>
  10444e:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104452:	490d      	ldr	r1, [pc, #52]	; (104488 <main+0x1458>)
  104454:	462b      	mov	r3, r5
  104456:	463a      	mov	r2, r7
  104458:	9601      	str	r6, [sp, #4]
  10445a:	f8cd 9000 	str.w	r9, [sp]
  10445e:	4680      	mov	r8, r0
  104460:	f7fe fbc2 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104464:	4648      	mov	r0, r9
  104466:	f7fe f937 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10446a:	4916      	ldr	r1, [pc, #88]	; (1044c4 <main+0x1494>)
  10446c:	480a      	ldr	r0, [pc, #40]	; (104498 <main+0x1468>)
  10446e:	f009 fae9 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104472:	490a      	ldr	r1, [pc, #40]	; (10449c <main+0x146c>)
  104474:	f000 bf1f 	b.w	1052b6 <main+0x2286>
  104478:	3fff8144 	.word	0x3fff8144
  10447c:	3fff8260 	.word	0x3fff8260
  104480:	0011650b 	.word	0x0011650b
  104484:	001171e8 	.word	0x001171e8
  104488:	3fff4894 	.word	0x3fff4894
  10448c:	00116aaf 	.word	0x00116aaf
  104490:	00117252 	.word	0x00117252
  104494:	00116b51 	.word	0x00116b51
  104498:	3fff8184 	.word	0x3fff8184
  10449c:	001165d4 	.word	0x001165d4
  1044a0:	001172bc 	.word	0x001172bc
  1044a4:	00116bdc 	.word	0x00116bdc
  1044a8:	00117312 	.word	0x00117312
  1044ac:	00116c77 	.word	0x00116c77
  1044b0:	00117368 	.word	0x00117368
  1044b4:	00116d15 	.word	0x00116d15
  1044b8:	001173be 	.word	0x001173be
  1044bc:	00116db6 	.word	0x00116db6
  1044c0:	0011741e 	.word	0x0011741e
  1044c4:	00116e47 	.word	0x00116e47
  1044c8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  1044ca:	2b00      	cmp	r3, #0
  1044cc:	f000 8384 	beq.w	104bd8 <main+0x1ba8>
  1044d0:	f1ba 0f00 	cmp.w	r10, #0
  1044d4:	f000 8194 	beq.w	104800 <main+0x17d0>
  1044d8:	f1b9 0f00 	cmp.w	r9, #0
  1044dc:	f000 80fa 	beq.w	1046d4 <main+0x16a4>
  1044e0:	2e00      	cmp	r6, #0
  1044e2:	f000 808d 	beq.w	104600 <main+0x15d0>
  1044e6:	2c00      	cmp	r4, #0
  1044e8:	d056      	beq.n	104598 <main+0x1568>
  1044ea:	9915      	ldr	r1, [sp, #84]	; 0x54
  1044ec:	48b1      	ldr	r0, [pc, #708]	; (1047b4 <main+0x1784>)
  1044ee:	f006 fd59 	bl	10afa4 <gpio_write>
  1044f2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
  1044f6:	980f      	ldr	r0, [sp, #60]	; 0x3c
  1044f8:	702b      	strb	r3, [r5, #0]
  1044fa:	f00a f9f9 	bl	10e8f0 <__aeabi_f2d>
  1044fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104500:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  104504:	9308      	str	r3, [sp, #32]
  104506:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104508:	f8cd b018 	str.w	r11, [sp, #24]
  10450c:	9307      	str	r3, [sp, #28]
  10450e:	4baa      	ldr	r3, [pc, #680]	; (1047b8 <main+0x1788>)
  104510:	980e      	ldr	r0, [sp, #56]	; 0x38
  104512:	681b      	ldr	r3, [r3, #0]
  104514:	f8cd 8010 	str.w	r8, [sp, #16]
  104518:	9305      	str	r3, [sp, #20]
  10451a:	f00a f9e9 	bl	10e8f0 <__aeabi_f2d>
  10451e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104522:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104524:	f00a f9e4 	bl	10e8f0 <__aeabi_f2d>
  104528:	4aa4      	ldr	r2, [pc, #656]	; (1047bc <main+0x178c>)
  10452a:	e9cd 0100 	strd	r0, r1, [sp]
  10452e:	49a4      	ldr	r1, [pc, #656]	; (1047c0 <main+0x1790>)
  104530:	4628      	mov	r0, r5
  104532:	f00d f893 	bl	11165c <siprintf>
  104536:	9b15      	ldr	r3, [sp, #84]	; 0x54
  104538:	2034      	movs	r0, #52	; 0x34
  10453a:	931f      	str	r3, [sp, #124]	; 0x7c
  10453c:	f009 f8f0 	bl	10d720 <operator new(unsigned int)>
  104540:	4604      	mov	r4, r0
  104542:	9b15      	ldr	r3, [sp, #84]	; 0x54
  104544:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104548:	463a      	mov	r2, r7
  10454a:	499e      	ldr	r1, [pc, #632]	; (1047c4 <main+0x1794>)
  10454c:	9301      	str	r3, [sp, #4]
  10454e:	f8cd 8000 	str.w	r8, [sp]
  104552:	462b      	mov	r3, r5
  104554:	f7fe fb48 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104558:	4640      	mov	r0, r8
  10455a:	f7fe f8bd 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10455e:	499a      	ldr	r1, [pc, #616]	; (1047c8 <main+0x1798>)
  104560:	489a      	ldr	r0, [pc, #616]	; (1047cc <main+0x179c>)
  104562:	f009 fa6f 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104566:	499a      	ldr	r1, [pc, #616]	; (1047d0 <main+0x17a0>)
  104568:	4898      	ldr	r0, [pc, #608]	; (1047cc <main+0x179c>)
  10456a:	f009 fa6b 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10456e:	9a15      	ldr	r2, [sp, #84]	; 0x54
  104570:	4620      	mov	r0, r4
  104572:	4611      	mov	r1, r2
  104574:	f7fe fc3e 	bl	102df4 <HttpRequest::send(void const*, unsigned int)>
  104578:	4996      	ldr	r1, [pc, #600]	; (1047d4 <main+0x17a4>)
  10457a:	4894      	ldr	r0, [pc, #592]	; (1047cc <main+0x179c>)
  10457c:	f009 fa62 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104580:	2c00      	cmp	r4, #0
  104582:	f43f a8ae 	beq.w	1036e2 <main+0x6b2>
  104586:	4620      	mov	r0, r4
  104588:	f7fe f8c6 	bl	102718 <HttpRequest::~HttpRequest()>
  10458c:	4620      	mov	r0, r4
  10458e:	f009 f8e3 	bl	10d758 <operator delete(void*)>
  104592:	9c15      	ldr	r4, [sp, #84]	; 0x54
  104594:	f000 be9e 	b.w	1052d4 <main+0x22a4>
  104598:	4621      	mov	r1, r4
  10459a:	4886      	ldr	r0, [pc, #536]	; (1047b4 <main+0x1784>)
  10459c:	f006 fd02 	bl	10afa4 <gpio_write>
  1045a0:	980f      	ldr	r0, [sp, #60]	; 0x3c
  1045a2:	702c      	strb	r4, [r5, #0]
  1045a4:	f00a f9a4 	bl	10e8f0 <__aeabi_f2d>
  1045a8:	e9cd 0108 	strd	r0, r1, [sp, #32]
  1045ac:	4b82      	ldr	r3, [pc, #520]	; (1047b8 <main+0x1788>)
  1045ae:	f8cd b018 	str.w	r11, [sp, #24]
  1045b2:	681b      	ldr	r3, [r3, #0]
  1045b4:	980e      	ldr	r0, [sp, #56]	; 0x38
  1045b6:	9305      	str	r3, [sp, #20]
  1045b8:	f8cd 8010 	str.w	r8, [sp, #16]
  1045bc:	f00a f998 	bl	10e8f0 <__aeabi_f2d>
  1045c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  1045c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
  1045c6:	f00a f993 	bl	10e8f0 <__aeabi_f2d>
  1045ca:	4a7c      	ldr	r2, [pc, #496]	; (1047bc <main+0x178c>)
  1045cc:	e9cd 0100 	strd	r0, r1, [sp]
  1045d0:	4981      	ldr	r1, [pc, #516]	; (1047d8 <main+0x17a8>)
  1045d2:	4628      	mov	r0, r5
  1045d4:	f00d f842 	bl	11165c <siprintf>
  1045d8:	2034      	movs	r0, #52	; 0x34
  1045da:	941f      	str	r4, [sp, #124]	; 0x7c
  1045dc:	f009 f8a0 	bl	10d720 <operator new(unsigned int)>
  1045e0:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1045e4:	4977      	ldr	r1, [pc, #476]	; (1047c4 <main+0x1794>)
  1045e6:	462b      	mov	r3, r5
  1045e8:	463a      	mov	r2, r7
  1045ea:	9401      	str	r4, [sp, #4]
  1045ec:	f8cd 9000 	str.w	r9, [sp]
  1045f0:	4680      	mov	r8, r0
  1045f2:	f7fe faf9 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1045f6:	4648      	mov	r0, r9
  1045f8:	f7fe f86e 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1045fc:	4977      	ldr	r1, [pc, #476]	; (1047dc <main+0x17ac>)
  1045fe:	e264      	b.n	104aca <main+0x1a9a>
  104600:	2c00      	cmp	r4, #0
  104602:	d035      	beq.n	104670 <main+0x1640>
  104604:	4631      	mov	r1, r6
  104606:	486b      	ldr	r0, [pc, #428]	; (1047b4 <main+0x1784>)
  104608:	f006 fccc 	bl	10afa4 <gpio_write>
  10460c:	980f      	ldr	r0, [sp, #60]	; 0x3c
  10460e:	702e      	strb	r6, [r5, #0]
  104610:	f00a f96e 	bl	10e8f0 <__aeabi_f2d>
  104614:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104616:	e9cd 0108 	strd	r0, r1, [sp, #32]
  10461a:	9307      	str	r3, [sp, #28]
  10461c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  10461e:	980e      	ldr	r0, [sp, #56]	; 0x38
  104620:	9306      	str	r3, [sp, #24]
  104622:	4b65      	ldr	r3, [pc, #404]	; (1047b8 <main+0x1788>)
  104624:	681b      	ldr	r3, [r3, #0]
  104626:	f8cd 8010 	str.w	r8, [sp, #16]
  10462a:	9305      	str	r3, [sp, #20]
  10462c:	f00a f960 	bl	10e8f0 <__aeabi_f2d>
  104630:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104634:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104636:	f00a f95b 	bl	10e8f0 <__aeabi_f2d>
  10463a:	4a60      	ldr	r2, [pc, #384]	; (1047bc <main+0x178c>)
  10463c:	e9cd 0100 	strd	r0, r1, [sp]
  104640:	4967      	ldr	r1, [pc, #412]	; (1047e0 <main+0x17b0>)
  104642:	4628      	mov	r0, r5
  104644:	f00d f80a 	bl	11165c <siprintf>
  104648:	2034      	movs	r0, #52	; 0x34
  10464a:	961f      	str	r6, [sp, #124]	; 0x7c
  10464c:	f009 f868 	bl	10d720 <operator new(unsigned int)>
  104650:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104654:	495b      	ldr	r1, [pc, #364]	; (1047c4 <main+0x1794>)
  104656:	462b      	mov	r3, r5
  104658:	463a      	mov	r2, r7
  10465a:	9601      	str	r6, [sp, #4]
  10465c:	f8cd 8000 	str.w	r8, [sp]
  104660:	4604      	mov	r4, r0
  104662:	f7fe fac1 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104666:	4640      	mov	r0, r8
  104668:	f7fe f836 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10466c:	495d      	ldr	r1, [pc, #372]	; (1047e4 <main+0x17b4>)
  10466e:	e283      	b.n	104b78 <main+0x1b48>
  104670:	4621      	mov	r1, r4
  104672:	4850      	ldr	r0, [pc, #320]	; (1047b4 <main+0x1784>)
  104674:	f006 fc96 	bl	10afa4 <gpio_write>
  104678:	980f      	ldr	r0, [sp, #60]	; 0x3c
  10467a:	702c      	strb	r4, [r5, #0]
  10467c:	f00a f938 	bl	10e8f0 <__aeabi_f2d>
  104680:	e9cd 0106 	strd	r0, r1, [sp, #24]
  104684:	4b4c      	ldr	r3, [pc, #304]	; (1047b8 <main+0x1788>)
  104686:	980e      	ldr	r0, [sp, #56]	; 0x38
  104688:	681b      	ldr	r3, [r3, #0]
  10468a:	f8cd 8010 	str.w	r8, [sp, #16]
  10468e:	9305      	str	r3, [sp, #20]
  104690:	f00a f92e 	bl	10e8f0 <__aeabi_f2d>
  104694:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104698:	9813      	ldr	r0, [sp, #76]	; 0x4c
  10469a:	f00a f929 	bl	10e8f0 <__aeabi_f2d>
  10469e:	4a47      	ldr	r2, [pc, #284]	; (1047bc <main+0x178c>)
  1046a0:	e9cd 0100 	strd	r0, r1, [sp]
  1046a4:	4950      	ldr	r1, [pc, #320]	; (1047e8 <main+0x17b8>)
  1046a6:	4628      	mov	r0, r5
  1046a8:	f00c ffd8 	bl	11165c <siprintf>
  1046ac:	2034      	movs	r0, #52	; 0x34
  1046ae:	941f      	str	r4, [sp, #124]	; 0x7c
  1046b0:	f009 f836 	bl	10d720 <operator new(unsigned int)>
  1046b4:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1046b8:	4942      	ldr	r1, [pc, #264]	; (1047c4 <main+0x1794>)
  1046ba:	462b      	mov	r3, r5
  1046bc:	463a      	mov	r2, r7
  1046be:	9401      	str	r4, [sp, #4]
  1046c0:	f8cd 9000 	str.w	r9, [sp]
  1046c4:	4680      	mov	r8, r0
  1046c6:	f7fe fa8f 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1046ca:	4648      	mov	r0, r9
  1046cc:	f7fe f804 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1046d0:	4946      	ldr	r1, [pc, #280]	; (1047ec <main+0x17bc>)
  1046d2:	e1fa      	b.n	104aca <main+0x1a9a>
  1046d4:	2c00      	cmp	r4, #0
  1046d6:	d035      	beq.n	104744 <main+0x1714>
  1046d8:	4649      	mov	r1, r9
  1046da:	4836      	ldr	r0, [pc, #216]	; (1047b4 <main+0x1784>)
  1046dc:	f006 fc62 	bl	10afa4 <gpio_write>
  1046e0:	980f      	ldr	r0, [sp, #60]	; 0x3c
  1046e2:	f885 9000 	strb.w	r9, [r5]
  1046e6:	f00a f903 	bl	10e8f0 <__aeabi_f2d>
  1046ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
  1046ec:	e9cd 0106 	strd	r0, r1, [sp, #24]
  1046f0:	9305      	str	r3, [sp, #20]
  1046f2:	4b31      	ldr	r3, [pc, #196]	; (1047b8 <main+0x1788>)
  1046f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
  1046f6:	681b      	ldr	r3, [r3, #0]
  1046f8:	f8cd 800c 	str.w	r8, [sp, #12]
  1046fc:	9304      	str	r3, [sp, #16]
  1046fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104700:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104704:	9302      	str	r3, [sp, #8]
  104706:	f00a f8f3 	bl	10e8f0 <__aeabi_f2d>
  10470a:	4a2c      	ldr	r2, [pc, #176]	; (1047bc <main+0x178c>)
  10470c:	e9cd 0100 	strd	r0, r1, [sp]
  104710:	4937      	ldr	r1, [pc, #220]	; (1047f0 <main+0x17c0>)
  104712:	4628      	mov	r0, r5
  104714:	f00c ffa2 	bl	11165c <siprintf>
  104718:	2034      	movs	r0, #52	; 0x34
  10471a:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  10471e:	f008 ffff 	bl	10d720 <operator new(unsigned int)>
  104722:	462b      	mov	r3, r5
  104724:	463a      	mov	r2, r7
  104726:	4927      	ldr	r1, [pc, #156]	; (1047c4 <main+0x1794>)
  104728:	e88d 0300 	stmia.w	sp, {r8, r9}
  10472c:	4604      	mov	r4, r0
  10472e:	f7fe fa5b 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104732:	4640      	mov	r0, r8
  104734:	f7fd ffd0 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104738:	492e      	ldr	r1, [pc, #184]	; (1047f4 <main+0x17c4>)
  10473a:	4824      	ldr	r0, [pc, #144]	; (1047cc <main+0x179c>)
  10473c:	f009 f982 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104740:	4923      	ldr	r1, [pc, #140]	; (1047d0 <main+0x17a0>)
  104742:	e38a      	b.n	104e5a <main+0x1e2a>
  104744:	2e00      	cmp	r6, #0
  104746:	f000 8164 	beq.w	104a12 <main+0x19e2>
  10474a:	4621      	mov	r1, r4
  10474c:	4819      	ldr	r0, [pc, #100]	; (1047b4 <main+0x1784>)
  10474e:	f006 fc29 	bl	10afa4 <gpio_write>
  104752:	980f      	ldr	r0, [sp, #60]	; 0x3c
  104754:	702c      	strb	r4, [r5, #0]
  104756:	f00a f8cb 	bl	10e8f0 <__aeabi_f2d>
  10475a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  10475e:	4b16      	ldr	r3, [pc, #88]	; (1047b8 <main+0x1788>)
  104760:	f8cd b010 	str.w	r11, [sp, #16]
  104764:	681b      	ldr	r3, [r3, #0]
  104766:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104768:	9303      	str	r3, [sp, #12]
  10476a:	f8cd 8008 	str.w	r8, [sp, #8]
  10476e:	f00a f8bf 	bl	10e8f0 <__aeabi_f2d>
  104772:	4a12      	ldr	r2, [pc, #72]	; (1047bc <main+0x178c>)
  104774:	e9cd 0100 	strd	r0, r1, [sp]
  104778:	491f      	ldr	r1, [pc, #124]	; (1047f8 <main+0x17c8>)
  10477a:	4628      	mov	r0, r5
  10477c:	f00c ff6e 	bl	11165c <siprintf>
  104780:	2034      	movs	r0, #52	; 0x34
  104782:	941f      	str	r4, [sp, #124]	; 0x7c
  104784:	f008 ffcc 	bl	10d720 <operator new(unsigned int)>
  104788:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  10478c:	462b      	mov	r3, r5
  10478e:	463a      	mov	r2, r7
  104790:	490c      	ldr	r1, [pc, #48]	; (1047c4 <main+0x1794>)
  104792:	9401      	str	r4, [sp, #4]
  104794:	f8cd 9000 	str.w	r9, [sp]
  104798:	4680      	mov	r8, r0
  10479a:	f7fe fa25 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10479e:	4648      	mov	r0, r9
  1047a0:	f7fd ff9a 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1047a4:	4915      	ldr	r1, [pc, #84]	; (1047fc <main+0x17cc>)
  1047a6:	4809      	ldr	r0, [pc, #36]	; (1047cc <main+0x179c>)
  1047a8:	f009 f94c 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1047ac:	4908      	ldr	r1, [pc, #32]	; (1047d0 <main+0x17a0>)
  1047ae:	f7fe bf88 	b.w	1036c2 <main+0x692>
  1047b2:	bf00      	nop
  1047b4:	3fff8144 	.word	0x3fff8144
  1047b8:	3fff8260 	.word	0x3fff8260
  1047bc:	0011650b 	.word	0x0011650b
  1047c0:	0011746a 	.word	0x0011746a
  1047c4:	3fff4894 	.word	0x3fff4894
  1047c8:	001165a4 	.word	0x001165a4
  1047cc:	3fff8184 	.word	0x3fff8184
  1047d0:	001165ba 	.word	0x001165ba
  1047d4:	001165ee 	.word	0x001165ee
  1047d8:	001174e8 	.word	0x001174e8
  1047dc:	0011666a 	.word	0x0011666a
  1047e0:	00117552 	.word	0x00117552
  1047e4:	0011670a 	.word	0x0011670a
  1047e8:	001175c6 	.word	0x001175c6
  1047ec:	00116799 	.word	0x00116799
  1047f0:	00117625 	.word	0x00117625
  1047f4:	0011683f 	.word	0x0011683f
  1047f8:	0011768f 	.word	0x0011768f
  1047fc:	001168db 	.word	0x001168db
  104800:	f1b9 0f00 	cmp.w	r9, #0
  104804:	f000 809e 	beq.w	104944 <main+0x1914>
  104808:	2e00      	cmp	r6, #0
  10480a:	d068      	beq.n	1048de <main+0x18ae>
  10480c:	2c00      	cmp	r4, #0
  10480e:	d037      	beq.n	104880 <main+0x1850>
  104810:	4651      	mov	r1, r10
  104812:	48b0      	ldr	r0, [pc, #704]	; (104ad4 <main+0x1aa4>)
  104814:	f006 fbc6 	bl	10afa4 <gpio_write>
  104818:	980f      	ldr	r0, [sp, #60]	; 0x3c
  10481a:	f885 a000 	strb.w	r10, [r5]
  10481e:	f00a f867 	bl	10e8f0 <__aeabi_f2d>
  104822:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104824:	e9cd 0108 	strd	r0, r1, [sp, #32]
  104828:	9306      	str	r3, [sp, #24]
  10482a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  10482c:	f8cd b010 	str.w	r11, [sp, #16]
  104830:	9305      	str	r3, [sp, #20]
  104832:	4ba9      	ldr	r3, [pc, #676]	; (104ad8 <main+0x1aa8>)
  104834:	980e      	ldr	r0, [sp, #56]	; 0x38
  104836:	681b      	ldr	r3, [r3, #0]
  104838:	f8cd 8008 	str.w	r8, [sp, #8]
  10483c:	9303      	str	r3, [sp, #12]
  10483e:	f00a f857 	bl	10e8f0 <__aeabi_f2d>
  104842:	4aa6      	ldr	r2, [pc, #664]	; (104adc <main+0x1aac>)
  104844:	e9cd 0100 	strd	r0, r1, [sp]
  104848:	49a5      	ldr	r1, [pc, #660]	; (104ae0 <main+0x1ab0>)
  10484a:	4628      	mov	r0, r5
  10484c:	f00c ff06 	bl	11165c <siprintf>
  104850:	2034      	movs	r0, #52	; 0x34
  104852:	f8cd a07c 	str.w	r10, [sp, #124]	; 0x7c
  104856:	f008 ff63 	bl	10d720 <operator new(unsigned int)>
  10485a:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  10485e:	462b      	mov	r3, r5
  104860:	463a      	mov	r2, r7
  104862:	49a0      	ldr	r1, [pc, #640]	; (104ae4 <main+0x1ab4>)
  104864:	e88d 0500 	stmia.w	sp, {r8, r10}
  104868:	4604      	mov	r4, r0
  10486a:	f7fe f9bd 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10486e:	4640      	mov	r0, r8
  104870:	f7fd ff32 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104874:	499c      	ldr	r1, [pc, #624]	; (104ae8 <main+0x1ab8>)
  104876:	489d      	ldr	r0, [pc, #628]	; (104aec <main+0x1abc>)
  104878:	f009 f8e4 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10487c:	499c      	ldr	r1, [pc, #624]	; (104af0 <main+0x1ac0>)
  10487e:	e368      	b.n	104f52 <main+0x1f22>
  104880:	4621      	mov	r1, r4
  104882:	4894      	ldr	r0, [pc, #592]	; (104ad4 <main+0x1aa4>)
  104884:	f006 fb8e 	bl	10afa4 <gpio_write>
  104888:	980f      	ldr	r0, [sp, #60]	; 0x3c
  10488a:	702c      	strb	r4, [r5, #0]
  10488c:	f00a f830 	bl	10e8f0 <__aeabi_f2d>
  104890:	e9cd 0106 	strd	r0, r1, [sp, #24]
  104894:	4b90      	ldr	r3, [pc, #576]	; (104ad8 <main+0x1aa8>)
  104896:	f8cd b010 	str.w	r11, [sp, #16]
  10489a:	681b      	ldr	r3, [r3, #0]
  10489c:	980e      	ldr	r0, [sp, #56]	; 0x38
  10489e:	9303      	str	r3, [sp, #12]
  1048a0:	f8cd 8008 	str.w	r8, [sp, #8]
  1048a4:	f00a f824 	bl	10e8f0 <__aeabi_f2d>
  1048a8:	4a8c      	ldr	r2, [pc, #560]	; (104adc <main+0x1aac>)
  1048aa:	e9cd 0100 	strd	r0, r1, [sp]
  1048ae:	4991      	ldr	r1, [pc, #580]	; (104af4 <main+0x1ac4>)
  1048b0:	4628      	mov	r0, r5
  1048b2:	f00c fed3 	bl	11165c <siprintf>
  1048b6:	2034      	movs	r0, #52	; 0x34
  1048b8:	941f      	str	r4, [sp, #124]	; 0x7c
  1048ba:	f008 ff31 	bl	10d720 <operator new(unsigned int)>
  1048be:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1048c2:	4988      	ldr	r1, [pc, #544]	; (104ae4 <main+0x1ab4>)
  1048c4:	462b      	mov	r3, r5
  1048c6:	463a      	mov	r2, r7
  1048c8:	9401      	str	r4, [sp, #4]
  1048ca:	f8cd 9000 	str.w	r9, [sp]
  1048ce:	4680      	mov	r8, r0
  1048d0:	f7fe f98a 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1048d4:	4648      	mov	r0, r9
  1048d6:	f7fd feff 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1048da:	4987      	ldr	r1, [pc, #540]	; (104af8 <main+0x1ac8>)
  1048dc:	e0f5      	b.n	104aca <main+0x1a9a>
  1048de:	2c00      	cmp	r4, #0
  1048e0:	d06a      	beq.n	1049b8 <main+0x1988>
  1048e2:	4631      	mov	r1, r6
  1048e4:	487b      	ldr	r0, [pc, #492]	; (104ad4 <main+0x1aa4>)
  1048e6:	f006 fb5d 	bl	10afa4 <gpio_write>
  1048ea:	980f      	ldr	r0, [sp, #60]	; 0x3c
  1048ec:	702e      	strb	r6, [r5, #0]
  1048ee:	f009 ffff 	bl	10e8f0 <__aeabi_f2d>
  1048f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  1048f4:	e9cd 0106 	strd	r0, r1, [sp, #24]
  1048f8:	9305      	str	r3, [sp, #20]
  1048fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  1048fc:	980e      	ldr	r0, [sp, #56]	; 0x38
  1048fe:	9304      	str	r3, [sp, #16]
  104900:	4b75      	ldr	r3, [pc, #468]	; (104ad8 <main+0x1aa8>)
  104902:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104906:	681b      	ldr	r3, [r3, #0]
  104908:	f8cd 8008 	str.w	r8, [sp, #8]
  10490c:	9303      	str	r3, [sp, #12]
  10490e:	f009 ffef 	bl	10e8f0 <__aeabi_f2d>
  104912:	4a72      	ldr	r2, [pc, #456]	; (104adc <main+0x1aac>)
  104914:	e9cd 0100 	strd	r0, r1, [sp]
  104918:	4978      	ldr	r1, [pc, #480]	; (104afc <main+0x1acc>)
  10491a:	4628      	mov	r0, r5
  10491c:	f00c fe9e 	bl	11165c <siprintf>
  104920:	2034      	movs	r0, #52	; 0x34
  104922:	961f      	str	r6, [sp, #124]	; 0x7c
  104924:	f008 fefc 	bl	10d720 <operator new(unsigned int)>
  104928:	496e      	ldr	r1, [pc, #440]	; (104ae4 <main+0x1ab4>)
  10492a:	462b      	mov	r3, r5
  10492c:	463a      	mov	r2, r7
  10492e:	9601      	str	r6, [sp, #4]
  104930:	f8cd 9000 	str.w	r9, [sp]
  104934:	4680      	mov	r8, r0
  104936:	f7fe f957 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10493a:	4648      	mov	r0, r9
  10493c:	f7fd fecc 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104940:	496f      	ldr	r1, [pc, #444]	; (104b00 <main+0x1ad0>)
  104942:	e092      	b.n	104a6a <main+0x1a3a>
  104944:	2c00      	cmp	r4, #0
  104946:	f000 8095 	beq.w	104a74 <main+0x1a44>
  10494a:	2e00      	cmp	r6, #0
  10494c:	f000 80ea 	beq.w	104b24 <main+0x1af4>
  104950:	4649      	mov	r1, r9
  104952:	4860      	ldr	r0, [pc, #384]	; (104ad4 <main+0x1aa4>)
  104954:	f006 fb26 	bl	10afa4 <gpio_write>
  104958:	980f      	ldr	r0, [sp, #60]	; 0x3c
  10495a:	f885 9000 	strb.w	r9, [r5]
  10495e:	f009 ffc7 	bl	10e8f0 <__aeabi_f2d>
  104962:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104964:	e9cd 0104 	strd	r0, r1, [sp, #16]
  104968:	9303      	str	r3, [sp, #12]
  10496a:	4b5b      	ldr	r3, [pc, #364]	; (104ad8 <main+0x1aa8>)
  10496c:	f8cd b008 	str.w	r11, [sp, #8]
  104970:	681b      	ldr	r3, [r3, #0]
  104972:	4a5a      	ldr	r2, [pc, #360]	; (104adc <main+0x1aac>)
  104974:	4963      	ldr	r1, [pc, #396]	; (104b04 <main+0x1ad4>)
  104976:	9301      	str	r3, [sp, #4]
  104978:	f8cd 8000 	str.w	r8, [sp]
  10497c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  10497e:	4628      	mov	r0, r5
  104980:	f00c fe6c 	bl	11165c <siprintf>
  104984:	2034      	movs	r0, #52	; 0x34
  104986:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  10498a:	f008 fec9 	bl	10d720 <operator new(unsigned int)>
  10498e:	f10d 0a70 	add.w	r10, sp, #112	; 0x70
  104992:	462b      	mov	r3, r5
  104994:	463a      	mov	r2, r7
  104996:	4953      	ldr	r1, [pc, #332]	; (104ae4 <main+0x1ab4>)
  104998:	f8cd 9004 	str.w	r9, [sp, #4]
  10499c:	f8cd a000 	str.w	r10, [sp]
  1049a0:	4680      	mov	r8, r0
  1049a2:	f7fe f921 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1049a6:	4650      	mov	r0, r10
  1049a8:	f7fd fe96 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1049ac:	4956      	ldr	r1, [pc, #344]	; (104b08 <main+0x1ad8>)
  1049ae:	484f      	ldr	r0, [pc, #316]	; (104aec <main+0x1abc>)
  1049b0:	f009 f848 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1049b4:	494e      	ldr	r1, [pc, #312]	; (104af0 <main+0x1ac0>)
  1049b6:	e36a      	b.n	10508e <main+0x205e>
  1049b8:	4621      	mov	r1, r4
  1049ba:	4846      	ldr	r0, [pc, #280]	; (104ad4 <main+0x1aa4>)
  1049bc:	f006 faf2 	bl	10afa4 <gpio_write>
  1049c0:	980f      	ldr	r0, [sp, #60]	; 0x3c
  1049c2:	702c      	strb	r4, [r5, #0]
  1049c4:	f009 ff94 	bl	10e8f0 <__aeabi_f2d>
  1049c8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  1049cc:	4b42      	ldr	r3, [pc, #264]	; (104ad8 <main+0x1aa8>)
  1049ce:	980e      	ldr	r0, [sp, #56]	; 0x38
  1049d0:	681b      	ldr	r3, [r3, #0]
  1049d2:	f8cd 8008 	str.w	r8, [sp, #8]
  1049d6:	9303      	str	r3, [sp, #12]
  1049d8:	f009 ff8a 	bl	10e8f0 <__aeabi_f2d>
  1049dc:	4a3f      	ldr	r2, [pc, #252]	; (104adc <main+0x1aac>)
  1049de:	e9cd 0100 	strd	r0, r1, [sp]
  1049e2:	494a      	ldr	r1, [pc, #296]	; (104b0c <main+0x1adc>)
  1049e4:	4628      	mov	r0, r5
  1049e6:	f00c fe39 	bl	11165c <siprintf>
  1049ea:	2034      	movs	r0, #52	; 0x34
  1049ec:	941f      	str	r4, [sp, #124]	; 0x7c
  1049ee:	f008 fe97 	bl	10d720 <operator new(unsigned int)>
  1049f2:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1049f6:	493b      	ldr	r1, [pc, #236]	; (104ae4 <main+0x1ab4>)
  1049f8:	462b      	mov	r3, r5
  1049fa:	463a      	mov	r2, r7
  1049fc:	9401      	str	r4, [sp, #4]
  1049fe:	f8cd 9000 	str.w	r9, [sp]
  104a02:	4680      	mov	r8, r0
  104a04:	f7fe f8f0 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104a08:	4648      	mov	r0, r9
  104a0a:	f7fd fe65 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104a0e:	4940      	ldr	r1, [pc, #256]	; (104b10 <main+0x1ae0>)
  104a10:	e05b      	b.n	104aca <main+0x1a9a>
  104a12:	4631      	mov	r1, r6
  104a14:	482f      	ldr	r0, [pc, #188]	; (104ad4 <main+0x1aa4>)
  104a16:	f006 fac5 	bl	10afa4 <gpio_write>
  104a1a:	980f      	ldr	r0, [sp, #60]	; 0x3c
  104a1c:	702e      	strb	r6, [r5, #0]
  104a1e:	f009 ff67 	bl	10e8f0 <__aeabi_f2d>
  104a22:	e9cd 0104 	strd	r0, r1, [sp, #16]
  104a26:	4b2c      	ldr	r3, [pc, #176]	; (104ad8 <main+0x1aa8>)
  104a28:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104a2a:	681b      	ldr	r3, [r3, #0]
  104a2c:	f8cd 8008 	str.w	r8, [sp, #8]
  104a30:	9303      	str	r3, [sp, #12]
  104a32:	f009 ff5d 	bl	10e8f0 <__aeabi_f2d>
  104a36:	4a29      	ldr	r2, [pc, #164]	; (104adc <main+0x1aac>)
  104a38:	e9cd 0100 	strd	r0, r1, [sp]
  104a3c:	4935      	ldr	r1, [pc, #212]	; (104b14 <main+0x1ae4>)
  104a3e:	4628      	mov	r0, r5
  104a40:	f00c fe0c 	bl	11165c <siprintf>
  104a44:	2034      	movs	r0, #52	; 0x34
  104a46:	961f      	str	r6, [sp, #124]	; 0x7c
  104a48:	f008 fe6a 	bl	10d720 <operator new(unsigned int)>
  104a4c:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104a50:	4924      	ldr	r1, [pc, #144]	; (104ae4 <main+0x1ab4>)
  104a52:	462b      	mov	r3, r5
  104a54:	463a      	mov	r2, r7
  104a56:	9601      	str	r6, [sp, #4]
  104a58:	f8cd 9000 	str.w	r9, [sp]
  104a5c:	4680      	mov	r8, r0
  104a5e:	f7fe f8c3 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104a62:	4648      	mov	r0, r9
  104a64:	f7fd fe38 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104a68:	492b      	ldr	r1, [pc, #172]	; (104b18 <main+0x1ae8>)
  104a6a:	4820      	ldr	r0, [pc, #128]	; (104aec <main+0x1abc>)
  104a6c:	f008 ffea 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104a70:	491f      	ldr	r1, [pc, #124]	; (104af0 <main+0x1ac0>)
  104a72:	e388      	b.n	105186 <main+0x2156>
  104a74:	2e00      	cmp	r6, #0
  104a76:	f000 8084 	beq.w	104b82 <main+0x1b52>
  104a7a:	4621      	mov	r1, r4
  104a7c:	4815      	ldr	r0, [pc, #84]	; (104ad4 <main+0x1aa4>)
  104a7e:	f006 fa91 	bl	10afa4 <gpio_write>
  104a82:	980f      	ldr	r0, [sp, #60]	; 0x3c
  104a84:	702c      	strb	r4, [r5, #0]
  104a86:	f009 ff33 	bl	10e8f0 <__aeabi_f2d>
  104a8a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104a8e:	4b12      	ldr	r3, [pc, #72]	; (104ad8 <main+0x1aa8>)
  104a90:	4a12      	ldr	r2, [pc, #72]	; (104adc <main+0x1aac>)
  104a92:	681b      	ldr	r3, [r3, #0]
  104a94:	4921      	ldr	r1, [pc, #132]	; (104b1c <main+0x1aec>)
  104a96:	9301      	str	r3, [sp, #4]
  104a98:	f8cd 8000 	str.w	r8, [sp]
  104a9c:	465b      	mov	r3, r11
  104a9e:	4628      	mov	r0, r5
  104aa0:	f00c fddc 	bl	11165c <siprintf>
  104aa4:	2034      	movs	r0, #52	; 0x34
  104aa6:	941f      	str	r4, [sp, #124]	; 0x7c
  104aa8:	f008 fe3a 	bl	10d720 <operator new(unsigned int)>
  104aac:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104ab0:	490c      	ldr	r1, [pc, #48]	; (104ae4 <main+0x1ab4>)
  104ab2:	462b      	mov	r3, r5
  104ab4:	463a      	mov	r2, r7
  104ab6:	9401      	str	r4, [sp, #4]
  104ab8:	f8cd 9000 	str.w	r9, [sp]
  104abc:	4680      	mov	r8, r0
  104abe:	f7fe f893 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104ac2:	4648      	mov	r0, r9
  104ac4:	f7fd fe08 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104ac8:	4915      	ldr	r1, [pc, #84]	; (104b20 <main+0x1af0>)
  104aca:	4808      	ldr	r0, [pc, #32]	; (104aec <main+0x1abc>)
  104acc:	f008 ffba 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104ad0:	4907      	ldr	r1, [pc, #28]	; (104af0 <main+0x1ac0>)
  104ad2:	e383      	b.n	1051dc <main+0x21ac>
  104ad4:	3fff8144 	.word	0x3fff8144
  104ad8:	3fff8260 	.word	0x3fff8260
  104adc:	0011650b 	.word	0x0011650b
  104ae0:	001176ef 	.word	0x001176ef
  104ae4:	3fff4894 	.word	0x3fff4894
  104ae8:	00116987 	.word	0x00116987
  104aec:	3fff8184 	.word	0x3fff8184
  104af0:	001165ba 	.word	0x001165ba
  104af4:	00117763 	.word	0x00117763
  104af8:	00116a10 	.word	0x00116a10
  104afc:	001177c3 	.word	0x001177c3
  104b00:	00116aaf 	.word	0x00116aaf
  104b04:	0011782d 	.word	0x0011782d
  104b08:	00116b51 	.word	0x00116b51
  104b0c:	00117897 	.word	0x00117897
  104b10:	00116bdc 	.word	0x00116bdc
  104b14:	001178ed 	.word	0x001178ed
  104b18:	00116c77 	.word	0x00116c77
  104b1c:	00117943 	.word	0x00117943
  104b20:	00116d15 	.word	0x00116d15
  104b24:	4631      	mov	r1, r6
  104b26:	48a2      	ldr	r0, [pc, #648]	; (104db0 <main+0x1d80>)
  104b28:	f006 fa3c 	bl	10afa4 <gpio_write>
  104b2c:	980f      	ldr	r0, [sp, #60]	; 0x3c
  104b2e:	702e      	strb	r6, [r5, #0]
  104b30:	f009 fede 	bl	10e8f0 <__aeabi_f2d>
  104b34:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104b36:	e9cd 0104 	strd	r0, r1, [sp, #16]
  104b3a:	9302      	str	r3, [sp, #8]
  104b3c:	4b9d      	ldr	r3, [pc, #628]	; (104db4 <main+0x1d84>)
  104b3e:	4a9e      	ldr	r2, [pc, #632]	; (104db8 <main+0x1d88>)
  104b40:	681b      	ldr	r3, [r3, #0]
  104b42:	499e      	ldr	r1, [pc, #632]	; (104dbc <main+0x1d8c>)
  104b44:	9301      	str	r3, [sp, #4]
  104b46:	f8cd 8000 	str.w	r8, [sp]
  104b4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104b4c:	4628      	mov	r0, r5
  104b4e:	f00c fd85 	bl	11165c <siprintf>
  104b52:	2034      	movs	r0, #52	; 0x34
  104b54:	961f      	str	r6, [sp, #124]	; 0x7c
  104b56:	f008 fde3 	bl	10d720 <operator new(unsigned int)>
  104b5a:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104b5e:	4998      	ldr	r1, [pc, #608]	; (104dc0 <main+0x1d90>)
  104b60:	462b      	mov	r3, r5
  104b62:	463a      	mov	r2, r7
  104b64:	9601      	str	r6, [sp, #4]
  104b66:	f8cd 8000 	str.w	r8, [sp]
  104b6a:	4604      	mov	r4, r0
  104b6c:	f7fe f83c 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104b70:	4640      	mov	r0, r8
  104b72:	f7fd fdb1 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104b76:	4993      	ldr	r1, [pc, #588]	; (104dc4 <main+0x1d94>)
  104b78:	4893      	ldr	r0, [pc, #588]	; (104dc8 <main+0x1d98>)
  104b7a:	f008 ff63 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104b7e:	4993      	ldr	r1, [pc, #588]	; (104dcc <main+0x1d9c>)
  104b80:	e361      	b.n	105246 <main+0x2216>
  104b82:	4631      	mov	r1, r6
  104b84:	488a      	ldr	r0, [pc, #552]	; (104db0 <main+0x1d80>)
  104b86:	f006 fa0d 	bl	10afa4 <gpio_write>
  104b8a:	980f      	ldr	r0, [sp, #60]	; 0x3c
  104b8c:	702e      	strb	r6, [r5, #0]
  104b8e:	f009 feaf 	bl	10e8f0 <__aeabi_f2d>
  104b92:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104b96:	4b87      	ldr	r3, [pc, #540]	; (104db4 <main+0x1d84>)
  104b98:	4a87      	ldr	r2, [pc, #540]	; (104db8 <main+0x1d88>)
  104b9a:	681b      	ldr	r3, [r3, #0]
  104b9c:	498c      	ldr	r1, [pc, #560]	; (104dd0 <main+0x1da0>)
  104b9e:	9300      	str	r3, [sp, #0]
  104ba0:	4628      	mov	r0, r5
  104ba2:	4643      	mov	r3, r8
  104ba4:	f00c fd5a 	bl	11165c <siprintf>
  104ba8:	2034      	movs	r0, #52	; 0x34
  104baa:	961f      	str	r6, [sp, #124]	; 0x7c
  104bac:	f008 fdb8 	bl	10d720 <operator new(unsigned int)>
  104bb0:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104bb4:	462b      	mov	r3, r5
  104bb6:	463a      	mov	r2, r7
  104bb8:	4981      	ldr	r1, [pc, #516]	; (104dc0 <main+0x1d90>)
  104bba:	9601      	str	r6, [sp, #4]
  104bbc:	f8cd 9000 	str.w	r9, [sp]
  104bc0:	4680      	mov	r8, r0
  104bc2:	f7fe f811 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104bc6:	4648      	mov	r0, r9
  104bc8:	f7fd fd86 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104bcc:	4981      	ldr	r1, [pc, #516]	; (104dd4 <main+0x1da4>)
  104bce:	487e      	ldr	r0, [pc, #504]	; (104dc8 <main+0x1d98>)
  104bd0:	f008 ff38 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104bd4:	497d      	ldr	r1, [pc, #500]	; (104dcc <main+0x1d9c>)
  104bd6:	e36e      	b.n	1052b6 <main+0x2286>
  104bd8:	4b76      	ldr	r3, [pc, #472]	; (104db4 <main+0x1d84>)
  104bda:	f1ba 0f00 	cmp.w	r10, #0
  104bde:	f000 8181 	beq.w	104ee4 <main+0x1eb4>
  104be2:	f1b9 0f00 	cmp.w	r9, #0
  104be6:	f000 8109 	beq.w	104dfc <main+0x1dcc>
  104bea:	2e00      	cmp	r6, #0
  104bec:	d07f      	beq.n	104cee <main+0x1cbe>
  104bee:	2c00      	cmp	r4, #0
  104bf0:	d04d      	beq.n	104c8e <main+0x1c5e>
  104bf2:	9914      	ldr	r1, [sp, #80]	; 0x50
  104bf4:	486e      	ldr	r0, [pc, #440]	; (104db0 <main+0x1d80>)
  104bf6:	9315      	str	r3, [sp, #84]	; 0x54
  104bf8:	f006 f9d4 	bl	10afa4 <gpio_write>
  104bfc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
  104c00:	980e      	ldr	r0, [sp, #56]	; 0x38
  104c02:	702b      	strb	r3, [r5, #0]
  104c04:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104c06:	f8cd b018 	str.w	r11, [sp, #24]
  104c0a:	9308      	str	r3, [sp, #32]
  104c0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104c0e:	9307      	str	r3, [sp, #28]
  104c10:	9b15      	ldr	r3, [sp, #84]	; 0x54
  104c12:	681b      	ldr	r3, [r3, #0]
  104c14:	f8cd 8010 	str.w	r8, [sp, #16]
  104c18:	9305      	str	r3, [sp, #20]
  104c1a:	f009 fe69 	bl	10e8f0 <__aeabi_f2d>
  104c1e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104c22:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104c24:	f009 fe64 	bl	10e8f0 <__aeabi_f2d>
  104c28:	4a63      	ldr	r2, [pc, #396]	; (104db8 <main+0x1d88>)
  104c2a:	e9cd 0100 	strd	r0, r1, [sp]
  104c2e:	496a      	ldr	r1, [pc, #424]	; (104dd8 <main+0x1da8>)
  104c30:	4628      	mov	r0, r5
  104c32:	f00c fd13 	bl	11165c <siprintf>
  104c36:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104c38:	2034      	movs	r0, #52	; 0x34
  104c3a:	931f      	str	r3, [sp, #124]	; 0x7c
  104c3c:	f008 fd70 	bl	10d720 <operator new(unsigned int)>
  104c40:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104c42:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104c46:	495e      	ldr	r1, [pc, #376]	; (104dc0 <main+0x1d90>)
  104c48:	9301      	str	r3, [sp, #4]
  104c4a:	463a      	mov	r2, r7
  104c4c:	462b      	mov	r3, r5
  104c4e:	f8cd 8000 	str.w	r8, [sp]
  104c52:	4604      	mov	r4, r0
  104c54:	f7fd ffc8 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104c58:	4640      	mov	r0, r8
  104c5a:	f7fd fd3d 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104c5e:	495f      	ldr	r1, [pc, #380]	; (104ddc <main+0x1dac>)
  104c60:	4859      	ldr	r0, [pc, #356]	; (104dc8 <main+0x1d98>)
  104c62:	f008 feef 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104c66:	9a14      	ldr	r2, [sp, #80]	; 0x50
  104c68:	4620      	mov	r0, r4
  104c6a:	4611      	mov	r1, r2
  104c6c:	f7fe f8c2 	bl	102df4 <HttpRequest::send(void const*, unsigned int)>
  104c70:	495b      	ldr	r1, [pc, #364]	; (104de0 <main+0x1db0>)
  104c72:	4855      	ldr	r0, [pc, #340]	; (104dc8 <main+0x1d98>)
  104c74:	f008 fee6 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104c78:	2c00      	cmp	r4, #0
  104c7a:	f43e ad32 	beq.w	1036e2 <main+0x6b2>
  104c7e:	4620      	mov	r0, r4
  104c80:	f7fd fd4a 	bl	102718 <HttpRequest::~HttpRequest()>
  104c84:	4620      	mov	r0, r4
  104c86:	f008 fd67 	bl	10d758 <operator delete(void*)>
  104c8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
  104c8c:	e322      	b.n	1052d4 <main+0x22a4>
  104c8e:	4621      	mov	r1, r4
  104c90:	4847      	ldr	r0, [pc, #284]	; (104db0 <main+0x1d80>)
  104c92:	9314      	str	r3, [sp, #80]	; 0x50
  104c94:	f006 f986 	bl	10afa4 <gpio_write>
  104c98:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104c9a:	702c      	strb	r4, [r5, #0]
  104c9c:	f8cd b018 	str.w	r11, [sp, #24]
  104ca0:	681b      	ldr	r3, [r3, #0]
  104ca2:	980e      	ldr	r0, [sp, #56]	; 0x38
  104ca4:	9305      	str	r3, [sp, #20]
  104ca6:	f8cd 8010 	str.w	r8, [sp, #16]
  104caa:	f009 fe21 	bl	10e8f0 <__aeabi_f2d>
  104cae:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104cb2:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104cb4:	f009 fe1c 	bl	10e8f0 <__aeabi_f2d>
  104cb8:	4a3f      	ldr	r2, [pc, #252]	; (104db8 <main+0x1d88>)
  104cba:	e9cd 0100 	strd	r0, r1, [sp]
  104cbe:	4949      	ldr	r1, [pc, #292]	; (104de4 <main+0x1db4>)
  104cc0:	4628      	mov	r0, r5
  104cc2:	f00c fccb 	bl	11165c <siprintf>
  104cc6:	2034      	movs	r0, #52	; 0x34
  104cc8:	941f      	str	r4, [sp, #124]	; 0x7c
  104cca:	f008 fd29 	bl	10d720 <operator new(unsigned int)>
  104cce:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104cd2:	493b      	ldr	r1, [pc, #236]	; (104dc0 <main+0x1d90>)
  104cd4:	462b      	mov	r3, r5
  104cd6:	463a      	mov	r2, r7
  104cd8:	9401      	str	r4, [sp, #4]
  104cda:	f8cd 9000 	str.w	r9, [sp]
  104cde:	4680      	mov	r8, r0
  104ce0:	f7fd ff82 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104ce4:	4648      	mov	r0, r9
  104ce6:	f7fd fcf7 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104cea:	493f      	ldr	r1, [pc, #252]	; (104de8 <main+0x1db8>)
  104cec:	e276      	b.n	1051dc <main+0x21ac>
  104cee:	9314      	str	r3, [sp, #80]	; 0x50
  104cf0:	2c00      	cmp	r4, #0
  104cf2:	d030      	beq.n	104d56 <main+0x1d26>
  104cf4:	4631      	mov	r1, r6
  104cf6:	482e      	ldr	r0, [pc, #184]	; (104db0 <main+0x1d80>)
  104cf8:	f006 f954 	bl	10afa4 <gpio_write>
  104cfc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104cfe:	702e      	strb	r6, [r5, #0]
  104d00:	9307      	str	r3, [sp, #28]
  104d02:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104d04:	980e      	ldr	r0, [sp, #56]	; 0x38
  104d06:	9306      	str	r3, [sp, #24]
  104d08:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104d0a:	681b      	ldr	r3, [r3, #0]
  104d0c:	f8cd 8010 	str.w	r8, [sp, #16]
  104d10:	9305      	str	r3, [sp, #20]
  104d12:	f009 fded 	bl	10e8f0 <__aeabi_f2d>
  104d16:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104d1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104d1c:	f009 fde8 	bl	10e8f0 <__aeabi_f2d>
  104d20:	4a25      	ldr	r2, [pc, #148]	; (104db8 <main+0x1d88>)
  104d22:	e9cd 0100 	strd	r0, r1, [sp]
  104d26:	4931      	ldr	r1, [pc, #196]	; (104dec <main+0x1dbc>)
  104d28:	4628      	mov	r0, r5
  104d2a:	f00c fc97 	bl	11165c <siprintf>
  104d2e:	2034      	movs	r0, #52	; 0x34
  104d30:	961f      	str	r6, [sp, #124]	; 0x7c
  104d32:	f008 fcf5 	bl	10d720 <operator new(unsigned int)>
  104d36:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104d3a:	4921      	ldr	r1, [pc, #132]	; (104dc0 <main+0x1d90>)
  104d3c:	462b      	mov	r3, r5
  104d3e:	463a      	mov	r2, r7
  104d40:	9601      	str	r6, [sp, #4]
  104d42:	f8cd 8000 	str.w	r8, [sp]
  104d46:	4604      	mov	r4, r0
  104d48:	f7fd ff4e 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104d4c:	4640      	mov	r0, r8
  104d4e:	f7fd fcc3 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104d52:	4927      	ldr	r1, [pc, #156]	; (104df0 <main+0x1dc0>)
  104d54:	e277      	b.n	105246 <main+0x2216>
  104d56:	4621      	mov	r1, r4
  104d58:	4815      	ldr	r0, [pc, #84]	; (104db0 <main+0x1d80>)
  104d5a:	f006 f923 	bl	10afa4 <gpio_write>
  104d5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104d60:	702c      	strb	r4, [r5, #0]
  104d62:	681b      	ldr	r3, [r3, #0]
  104d64:	980e      	ldr	r0, [sp, #56]	; 0x38
  104d66:	9305      	str	r3, [sp, #20]
  104d68:	f8cd 8010 	str.w	r8, [sp, #16]
  104d6c:	f009 fdc0 	bl	10e8f0 <__aeabi_f2d>
  104d70:	e9cd 0102 	strd	r0, r1, [sp, #8]
  104d74:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104d76:	f009 fdbb 	bl	10e8f0 <__aeabi_f2d>
  104d7a:	4a0f      	ldr	r2, [pc, #60]	; (104db8 <main+0x1d88>)
  104d7c:	e9cd 0100 	strd	r0, r1, [sp]
  104d80:	491c      	ldr	r1, [pc, #112]	; (104df4 <main+0x1dc4>)
  104d82:	4628      	mov	r0, r5
  104d84:	f00c fc6a 	bl	11165c <siprintf>
  104d88:	2034      	movs	r0, #52	; 0x34
  104d8a:	941f      	str	r4, [sp, #124]	; 0x7c
  104d8c:	f008 fcc8 	bl	10d720 <operator new(unsigned int)>
  104d90:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104d94:	490a      	ldr	r1, [pc, #40]	; (104dc0 <main+0x1d90>)
  104d96:	462b      	mov	r3, r5
  104d98:	463a      	mov	r2, r7
  104d9a:	9401      	str	r4, [sp, #4]
  104d9c:	f8cd 9000 	str.w	r9, [sp]
  104da0:	4680      	mov	r8, r0
  104da2:	f7fd ff21 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104da6:	4648      	mov	r0, r9
  104da8:	f7fd fc96 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104dac:	4912      	ldr	r1, [pc, #72]	; (104df8 <main+0x1dc8>)
  104dae:	e215      	b.n	1051dc <main+0x21ac>
  104db0:	3fff8144 	.word	0x3fff8144
  104db4:	3fff8260 	.word	0x3fff8260
  104db8:	0011650b 	.word	0x0011650b
  104dbc:	00117999 	.word	0x00117999
  104dc0:	3fff4894 	.word	0x3fff4894
  104dc4:	00116db6 	.word	0x00116db6
  104dc8:	3fff8184 	.word	0x3fff8184
  104dcc:	001165ba 	.word	0x001165ba
  104dd0:	001179f9 	.word	0x001179f9
  104dd4:	00116e47 	.word	0x00116e47
  104dd8:	00117a45 	.word	0x00117a45
  104ddc:	001165a4 	.word	0x001165a4
  104de0:	001165ee 	.word	0x001165ee
  104de4:	00117ab9 	.word	0x00117ab9
  104de8:	0011666a 	.word	0x0011666a
  104dec:	00117b19 	.word	0x00117b19
  104df0:	0011670a 	.word	0x0011670a
  104df4:	00117b83 	.word	0x00117b83
  104df8:	00116799 	.word	0x00116799
  104dfc:	9314      	str	r3, [sp, #80]	; 0x50
  104dfe:	2c00      	cmp	r4, #0
  104e00:	d042      	beq.n	104e88 <main+0x1e58>
  104e02:	4649      	mov	r1, r9
  104e04:	48b9      	ldr	r0, [pc, #740]	; (1050ec <main+0x20bc>)
  104e06:	f006 f8cd 	bl	10afa4 <gpio_write>
  104e0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104e0c:	f885 9000 	strb.w	r9, [r5]
  104e10:	9305      	str	r3, [sp, #20]
  104e12:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104e14:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104e16:	681b      	ldr	r3, [r3, #0]
  104e18:	f8cd 800c 	str.w	r8, [sp, #12]
  104e1c:	9304      	str	r3, [sp, #16]
  104e1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104e20:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104e24:	9302      	str	r3, [sp, #8]
  104e26:	f009 fd63 	bl	10e8f0 <__aeabi_f2d>
  104e2a:	4ab1      	ldr	r2, [pc, #708]	; (1050f0 <main+0x20c0>)
  104e2c:	e9cd 0100 	strd	r0, r1, [sp]
  104e30:	49b0      	ldr	r1, [pc, #704]	; (1050f4 <main+0x20c4>)
  104e32:	4628      	mov	r0, r5
  104e34:	f00c fc12 	bl	11165c <siprintf>
  104e38:	2034      	movs	r0, #52	; 0x34
  104e3a:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  104e3e:	f008 fc6f 	bl	10d720 <operator new(unsigned int)>
  104e42:	49ad      	ldr	r1, [pc, #692]	; (1050f8 <main+0x20c8>)
  104e44:	462b      	mov	r3, r5
  104e46:	463a      	mov	r2, r7
  104e48:	e88d 0300 	stmia.w	sp, {r8, r9}
  104e4c:	4604      	mov	r4, r0
  104e4e:	f7fd fecb 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104e52:	4640      	mov	r0, r8
  104e54:	f7fd fc40 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104e58:	49a8      	ldr	r1, [pc, #672]	; (1050fc <main+0x20cc>)
  104e5a:	48a9      	ldr	r0, [pc, #676]	; (105100 <main+0x20d0>)
  104e5c:	f008 fdf2 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104e60:	4649      	mov	r1, r9
  104e62:	464a      	mov	r2, r9
  104e64:	4620      	mov	r0, r4
  104e66:	f7fd ffc5 	bl	102df4 <HttpRequest::send(void const*, unsigned int)>
  104e6a:	49a6      	ldr	r1, [pc, #664]	; (105104 <main+0x20d4>)
  104e6c:	48a4      	ldr	r0, [pc, #656]	; (105100 <main+0x20d0>)
  104e6e:	f008 fde9 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104e72:	2c00      	cmp	r4, #0
  104e74:	f43e ac35 	beq.w	1036e2 <main+0x6b2>
  104e78:	4620      	mov	r0, r4
  104e7a:	f7fd fc4d 	bl	102718 <HttpRequest::~HttpRequest()>
  104e7e:	4620      	mov	r0, r4
  104e80:	f008 fc6a 	bl	10d758 <operator delete(void*)>
  104e84:	464c      	mov	r4, r9
  104e86:	e225      	b.n	1052d4 <main+0x22a4>
  104e88:	2e00      	cmp	r6, #0
  104e8a:	f000 8155 	beq.w	105138 <main+0x2108>
  104e8e:	4621      	mov	r1, r4
  104e90:	4896      	ldr	r0, [pc, #600]	; (1050ec <main+0x20bc>)
  104e92:	f006 f887 	bl	10afa4 <gpio_write>
  104e96:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104e98:	702c      	strb	r4, [r5, #0]
  104e9a:	f8cd b010 	str.w	r11, [sp, #16]
  104e9e:	681b      	ldr	r3, [r3, #0]
  104ea0:	9813      	ldr	r0, [sp, #76]	; 0x4c
  104ea2:	9303      	str	r3, [sp, #12]
  104ea4:	f8cd 8008 	str.w	r8, [sp, #8]
  104ea8:	f009 fd22 	bl	10e8f0 <__aeabi_f2d>
  104eac:	4a90      	ldr	r2, [pc, #576]	; (1050f0 <main+0x20c0>)
  104eae:	e9cd 0100 	strd	r0, r1, [sp]
  104eb2:	4995      	ldr	r1, [pc, #596]	; (105108 <main+0x20d8>)
  104eb4:	4628      	mov	r0, r5
  104eb6:	f00c fbd1 	bl	11165c <siprintf>
  104eba:	2034      	movs	r0, #52	; 0x34
  104ebc:	941f      	str	r4, [sp, #124]	; 0x7c
  104ebe:	f008 fc2f 	bl	10d720 <operator new(unsigned int)>
  104ec2:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104ec6:	498c      	ldr	r1, [pc, #560]	; (1050f8 <main+0x20c8>)
  104ec8:	462b      	mov	r3, r5
  104eca:	463a      	mov	r2, r7
  104ecc:	9401      	str	r4, [sp, #4]
  104ece:	f8cd 9000 	str.w	r9, [sp]
  104ed2:	4680      	mov	r8, r0
  104ed4:	f7fd fe88 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104ed8:	4648      	mov	r0, r9
  104eda:	f7fd fbfd 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104ede:	498b      	ldr	r1, [pc, #556]	; (10510c <main+0x20dc>)
  104ee0:	f7fe bbef 	b.w	1036c2 <main+0x692>
  104ee4:	9314      	str	r3, [sp, #80]	; 0x50
  104ee6:	f1b9 0f00 	cmp.w	r9, #0
  104eea:	f000 80a0 	beq.w	10502e <main+0x1ffe>
  104eee:	2e00      	cmp	r6, #0
  104ef0:	d06f      	beq.n	104fd2 <main+0x1fa2>
  104ef2:	2c00      	cmp	r4, #0
  104ef4:	d043      	beq.n	104f7e <main+0x1f4e>
  104ef6:	4651      	mov	r1, r10
  104ef8:	487c      	ldr	r0, [pc, #496]	; (1050ec <main+0x20bc>)
  104efa:	f006 f853 	bl	10afa4 <gpio_write>
  104efe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104f00:	f885 a000 	strb.w	r10, [r5]
  104f04:	9306      	str	r3, [sp, #24]
  104f06:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104f08:	f8cd b010 	str.w	r11, [sp, #16]
  104f0c:	9305      	str	r3, [sp, #20]
  104f0e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104f10:	980e      	ldr	r0, [sp, #56]	; 0x38
  104f12:	681b      	ldr	r3, [r3, #0]
  104f14:	f8cd 8008 	str.w	r8, [sp, #8]
  104f18:	9303      	str	r3, [sp, #12]
  104f1a:	f009 fce9 	bl	10e8f0 <__aeabi_f2d>
  104f1e:	4a74      	ldr	r2, [pc, #464]	; (1050f0 <main+0x20c0>)
  104f20:	e9cd 0100 	strd	r0, r1, [sp]
  104f24:	497a      	ldr	r1, [pc, #488]	; (105110 <main+0x20e0>)
  104f26:	4628      	mov	r0, r5
  104f28:	f00c fb98 	bl	11165c <siprintf>
  104f2c:	2034      	movs	r0, #52	; 0x34
  104f2e:	f8cd a07c 	str.w	r10, [sp, #124]	; 0x7c
  104f32:	f008 fbf5 	bl	10d720 <operator new(unsigned int)>
  104f36:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  104f3a:	496f      	ldr	r1, [pc, #444]	; (1050f8 <main+0x20c8>)
  104f3c:	462b      	mov	r3, r5
  104f3e:	463a      	mov	r2, r7
  104f40:	e88d 0500 	stmia.w	sp, {r8, r10}
  104f44:	4604      	mov	r4, r0
  104f46:	f7fd fe4f 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104f4a:	4640      	mov	r0, r8
  104f4c:	f7fd fbc4 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104f50:	4970      	ldr	r1, [pc, #448]	; (105114 <main+0x20e4>)
  104f52:	486b      	ldr	r0, [pc, #428]	; (105100 <main+0x20d0>)
  104f54:	f008 fd76 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104f58:	4651      	mov	r1, r10
  104f5a:	4652      	mov	r2, r10
  104f5c:	4620      	mov	r0, r4
  104f5e:	f7fd ff49 	bl	102df4 <HttpRequest::send(void const*, unsigned int)>
  104f62:	4968      	ldr	r1, [pc, #416]	; (105104 <main+0x20d4>)
  104f64:	4866      	ldr	r0, [pc, #408]	; (105100 <main+0x20d0>)
  104f66:	f008 fd6d 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  104f6a:	2c00      	cmp	r4, #0
  104f6c:	f000 81b1 	beq.w	1052d2 <main+0x22a2>
  104f70:	4620      	mov	r0, r4
  104f72:	f7fd fbd1 	bl	102718 <HttpRequest::~HttpRequest()>
  104f76:	4620      	mov	r0, r4
  104f78:	f008 fbee 	bl	10d758 <operator delete(void*)>
  104f7c:	e1a9      	b.n	1052d2 <main+0x22a2>
  104f7e:	4621      	mov	r1, r4
  104f80:	485a      	ldr	r0, [pc, #360]	; (1050ec <main+0x20bc>)
  104f82:	f006 f80f 	bl	10afa4 <gpio_write>
  104f86:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104f88:	702c      	strb	r4, [r5, #0]
  104f8a:	f8cd b010 	str.w	r11, [sp, #16]
  104f8e:	681b      	ldr	r3, [r3, #0]
  104f90:	980e      	ldr	r0, [sp, #56]	; 0x38
  104f92:	9303      	str	r3, [sp, #12]
  104f94:	f8cd 8008 	str.w	r8, [sp, #8]
  104f98:	f009 fcaa 	bl	10e8f0 <__aeabi_f2d>
  104f9c:	4a54      	ldr	r2, [pc, #336]	; (1050f0 <main+0x20c0>)
  104f9e:	e9cd 0100 	strd	r0, r1, [sp]
  104fa2:	495d      	ldr	r1, [pc, #372]	; (105118 <main+0x20e8>)
  104fa4:	4628      	mov	r0, r5
  104fa6:	f00c fb59 	bl	11165c <siprintf>
  104faa:	2034      	movs	r0, #52	; 0x34
  104fac:	941f      	str	r4, [sp, #124]	; 0x7c
  104fae:	f008 fbb7 	bl	10d720 <operator new(unsigned int)>
  104fb2:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104fb6:	4950      	ldr	r1, [pc, #320]	; (1050f8 <main+0x20c8>)
  104fb8:	462b      	mov	r3, r5
  104fba:	463a      	mov	r2, r7
  104fbc:	9401      	str	r4, [sp, #4]
  104fbe:	f8cd 9000 	str.w	r9, [sp]
  104fc2:	4680      	mov	r8, r0
  104fc4:	f7fd fe10 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  104fc8:	4648      	mov	r0, r9
  104fca:	f7fd fb85 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  104fce:	4953      	ldr	r1, [pc, #332]	; (10511c <main+0x20ec>)
  104fd0:	e104      	b.n	1051dc <main+0x21ac>
  104fd2:	2c00      	cmp	r4, #0
  104fd4:	d061      	beq.n	10509a <main+0x206a>
  104fd6:	4631      	mov	r1, r6
  104fd8:	4844      	ldr	r0, [pc, #272]	; (1050ec <main+0x20bc>)
  104fda:	f005 ffe3 	bl	10afa4 <gpio_write>
  104fde:	9b12      	ldr	r3, [sp, #72]	; 0x48
  104fe0:	702e      	strb	r6, [r5, #0]
  104fe2:	9305      	str	r3, [sp, #20]
  104fe4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  104fe6:	980e      	ldr	r0, [sp, #56]	; 0x38
  104fe8:	9304      	str	r3, [sp, #16]
  104fea:	9b14      	ldr	r3, [sp, #80]	; 0x50
  104fec:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  104ff0:	681b      	ldr	r3, [r3, #0]
  104ff2:	f8cd 8008 	str.w	r8, [sp, #8]
  104ff6:	9303      	str	r3, [sp, #12]
  104ff8:	f009 fc7a 	bl	10e8f0 <__aeabi_f2d>
  104ffc:	4a3c      	ldr	r2, [pc, #240]	; (1050f0 <main+0x20c0>)
  104ffe:	e9cd 0100 	strd	r0, r1, [sp]
  105002:	4947      	ldr	r1, [pc, #284]	; (105120 <main+0x20f0>)
  105004:	4628      	mov	r0, r5
  105006:	f00c fb29 	bl	11165c <siprintf>
  10500a:	2034      	movs	r0, #52	; 0x34
  10500c:	961f      	str	r6, [sp, #124]	; 0x7c
  10500e:	f008 fb87 	bl	10d720 <operator new(unsigned int)>
  105012:	4939      	ldr	r1, [pc, #228]	; (1050f8 <main+0x20c8>)
  105014:	462b      	mov	r3, r5
  105016:	463a      	mov	r2, r7
  105018:	9601      	str	r6, [sp, #4]
  10501a:	f8cd 9000 	str.w	r9, [sp]
  10501e:	4680      	mov	r8, r0
  105020:	f7fd fde2 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  105024:	4648      	mov	r0, r9
  105026:	f7fd fb57 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10502a:	493e      	ldr	r1, [pc, #248]	; (105124 <main+0x20f4>)
  10502c:	e0ab      	b.n	105186 <main+0x2156>
  10502e:	2c00      	cmp	r4, #0
  105030:	f000 80af 	beq.w	105192 <main+0x2162>
  105034:	2e00      	cmp	r6, #0
  105036:	f000 80e1 	beq.w	1051fc <main+0x21cc>
  10503a:	4649      	mov	r1, r9
  10503c:	482b      	ldr	r0, [pc, #172]	; (1050ec <main+0x20bc>)
  10503e:	f005 ffb1 	bl	10afa4 <gpio_write>
  105042:	9b12      	ldr	r3, [sp, #72]	; 0x48
  105044:	f885 9000 	strb.w	r9, [r5]
  105048:	9303      	str	r3, [sp, #12]
  10504a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  10504c:	f8cd b008 	str.w	r11, [sp, #8]
  105050:	681b      	ldr	r3, [r3, #0]
  105052:	4a27      	ldr	r2, [pc, #156]	; (1050f0 <main+0x20c0>)
  105054:	4934      	ldr	r1, [pc, #208]	; (105128 <main+0x20f8>)
  105056:	9301      	str	r3, [sp, #4]
  105058:	f8cd 8000 	str.w	r8, [sp]
  10505c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  10505e:	4628      	mov	r0, r5
  105060:	f00c fafc 	bl	11165c <siprintf>
  105064:	2034      	movs	r0, #52	; 0x34
  105066:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  10506a:	f008 fb59 	bl	10d720 <operator new(unsigned int)>
  10506e:	f10d 0a70 	add.w	r10, sp, #112	; 0x70
  105072:	4921      	ldr	r1, [pc, #132]	; (1050f8 <main+0x20c8>)
  105074:	462b      	mov	r3, r5
  105076:	463a      	mov	r2, r7
  105078:	f8cd 9004 	str.w	r9, [sp, #4]
  10507c:	f8cd a000 	str.w	r10, [sp]
  105080:	4680      	mov	r8, r0
  105082:	f7fd fdb1 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  105086:	4650      	mov	r0, r10
  105088:	f7fd fb26 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  10508c:	4927      	ldr	r1, [pc, #156]	; (10512c <main+0x20fc>)
  10508e:	481c      	ldr	r0, [pc, #112]	; (105100 <main+0x20d0>)
  105090:	f008 fcd8 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  105094:	464a      	mov	r2, r9
  105096:	4649      	mov	r1, r9
  105098:	e0a5      	b.n	1051e6 <main+0x21b6>
  10509a:	4621      	mov	r1, r4
  10509c:	4813      	ldr	r0, [pc, #76]	; (1050ec <main+0x20bc>)
  10509e:	f005 ff81 	bl	10afa4 <gpio_write>
  1050a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  1050a4:	702c      	strb	r4, [r5, #0]
  1050a6:	681b      	ldr	r3, [r3, #0]
  1050a8:	980e      	ldr	r0, [sp, #56]	; 0x38
  1050aa:	9303      	str	r3, [sp, #12]
  1050ac:	f8cd 8008 	str.w	r8, [sp, #8]
  1050b0:	f009 fc1e 	bl	10e8f0 <__aeabi_f2d>
  1050b4:	4a0e      	ldr	r2, [pc, #56]	; (1050f0 <main+0x20c0>)
  1050b6:	e9cd 0100 	strd	r0, r1, [sp]
  1050ba:	491d      	ldr	r1, [pc, #116]	; (105130 <main+0x2100>)
  1050bc:	4628      	mov	r0, r5
  1050be:	f00c facd 	bl	11165c <siprintf>
  1050c2:	2034      	movs	r0, #52	; 0x34
  1050c4:	941f      	str	r4, [sp, #124]	; 0x7c
  1050c6:	f008 fb2b 	bl	10d720 <operator new(unsigned int)>
  1050ca:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1050ce:	490a      	ldr	r1, [pc, #40]	; (1050f8 <main+0x20c8>)
  1050d0:	462b      	mov	r3, r5
  1050d2:	463a      	mov	r2, r7
  1050d4:	9401      	str	r4, [sp, #4]
  1050d6:	f8cd 9000 	str.w	r9, [sp]
  1050da:	4680      	mov	r8, r0
  1050dc:	f7fd fd84 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1050e0:	4648      	mov	r0, r9
  1050e2:	f7fd faf9 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1050e6:	4913      	ldr	r1, [pc, #76]	; (105134 <main+0x2104>)
  1050e8:	e078      	b.n	1051dc <main+0x21ac>
  1050ea:	bf00      	nop
  1050ec:	3fff8144 	.word	0x3fff8144
  1050f0:	0011650b 	.word	0x0011650b
  1050f4:	00117bd9 	.word	0x00117bd9
  1050f8:	3fff4894 	.word	0x3fff4894
  1050fc:	0011683f 	.word	0x0011683f
  105100:	3fff8184 	.word	0x3fff8184
  105104:	001165ee 	.word	0x001165ee
  105108:	00117c39 	.word	0x00117c39
  10510c:	001168db 	.word	0x001168db
  105110:	00117c8f 	.word	0x00117c8f
  105114:	00116987 	.word	0x00116987
  105118:	00117cf9 	.word	0x00117cf9
  10511c:	00116a10 	.word	0x00116a10
  105120:	00117d4f 	.word	0x00117d4f
  105124:	00116aaf 	.word	0x00116aaf
  105128:	00117daf 	.word	0x00117daf
  10512c:	00116b51 	.word	0x00116b51
  105130:	00117e0f 	.word	0x00117e0f
  105134:	00116bdc 	.word	0x00116bdc
  105138:	4631      	mov	r1, r6
  10513a:	486e      	ldr	r0, [pc, #440]	; (1052f4 <main+0x22c4>)
  10513c:	f005 ff32 	bl	10afa4 <gpio_write>
  105140:	9b14      	ldr	r3, [sp, #80]	; 0x50
  105142:	702e      	strb	r6, [r5, #0]
  105144:	681b      	ldr	r3, [r3, #0]
  105146:	9813      	ldr	r0, [sp, #76]	; 0x4c
  105148:	9303      	str	r3, [sp, #12]
  10514a:	f8cd 8008 	str.w	r8, [sp, #8]
  10514e:	f009 fbcf 	bl	10e8f0 <__aeabi_f2d>
  105152:	4a69      	ldr	r2, [pc, #420]	; (1052f8 <main+0x22c8>)
  105154:	e9cd 0100 	strd	r0, r1, [sp]
  105158:	4968      	ldr	r1, [pc, #416]	; (1052fc <main+0x22cc>)
  10515a:	4628      	mov	r0, r5
  10515c:	f00c fa7e 	bl	11165c <siprintf>
  105160:	2034      	movs	r0, #52	; 0x34
  105162:	961f      	str	r6, [sp, #124]	; 0x7c
  105164:	f008 fadc 	bl	10d720 <operator new(unsigned int)>
  105168:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  10516c:	4964      	ldr	r1, [pc, #400]	; (105300 <main+0x22d0>)
  10516e:	462b      	mov	r3, r5
  105170:	463a      	mov	r2, r7
  105172:	9601      	str	r6, [sp, #4]
  105174:	f8cd 9000 	str.w	r9, [sp]
  105178:	4680      	mov	r8, r0
  10517a:	f7fd fd35 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10517e:	4648      	mov	r0, r9
  105180:	f7fd faaa 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  105184:	495f      	ldr	r1, [pc, #380]	; (105304 <main+0x22d4>)
  105186:	4860      	ldr	r0, [pc, #384]	; (105308 <main+0x22d8>)
  105188:	f008 fc5c 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10518c:	4632      	mov	r2, r6
  10518e:	4631      	mov	r1, r6
  105190:	e029      	b.n	1051e6 <main+0x21b6>
  105192:	2e00      	cmp	r6, #0
  105194:	d06e      	beq.n	105274 <main+0x2244>
  105196:	4621      	mov	r1, r4
  105198:	4856      	ldr	r0, [pc, #344]	; (1052f4 <main+0x22c4>)
  10519a:	f005 ff03 	bl	10afa4 <gpio_write>
  10519e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  1051a0:	702c      	strb	r4, [r5, #0]
  1051a2:	681b      	ldr	r3, [r3, #0]
  1051a4:	4a54      	ldr	r2, [pc, #336]	; (1052f8 <main+0x22c8>)
  1051a6:	4959      	ldr	r1, [pc, #356]	; (10530c <main+0x22dc>)
  1051a8:	9301      	str	r3, [sp, #4]
  1051aa:	f8cd 8000 	str.w	r8, [sp]
  1051ae:	465b      	mov	r3, r11
  1051b0:	4628      	mov	r0, r5
  1051b2:	f00c fa53 	bl	11165c <siprintf>
  1051b6:	2034      	movs	r0, #52	; 0x34
  1051b8:	941f      	str	r4, [sp, #124]	; 0x7c
  1051ba:	f008 fab1 	bl	10d720 <operator new(unsigned int)>
  1051be:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  1051c2:	494f      	ldr	r1, [pc, #316]	; (105300 <main+0x22d0>)
  1051c4:	462b      	mov	r3, r5
  1051c6:	463a      	mov	r2, r7
  1051c8:	9401      	str	r4, [sp, #4]
  1051ca:	f8cd 9000 	str.w	r9, [sp]
  1051ce:	4680      	mov	r8, r0
  1051d0:	f7fd fd0a 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1051d4:	4648      	mov	r0, r9
  1051d6:	f7fd fa7f 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1051da:	494d      	ldr	r1, [pc, #308]	; (105310 <main+0x22e0>)
  1051dc:	484a      	ldr	r0, [pc, #296]	; (105308 <main+0x22d8>)
  1051de:	f008 fc31 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1051e2:	4622      	mov	r2, r4
  1051e4:	4621      	mov	r1, r4
  1051e6:	4640      	mov	r0, r8
  1051e8:	f7fd fe04 	bl	102df4 <HttpRequest::send(void const*, unsigned int)>
  1051ec:	4949      	ldr	r1, [pc, #292]	; (105314 <main+0x22e4>)
  1051ee:	4846      	ldr	r0, [pc, #280]	; (105308 <main+0x22d8>)
  1051f0:	f008 fc28 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1051f4:	f1b8 0f00 	cmp.w	r8, #0
  1051f8:	d164      	bne.n	1052c4 <main+0x2294>
  1051fa:	e06b      	b.n	1052d4 <main+0x22a4>
  1051fc:	4631      	mov	r1, r6
  1051fe:	483d      	ldr	r0, [pc, #244]	; (1052f4 <main+0x22c4>)
  105200:	f005 fed0 	bl	10afa4 <gpio_write>
  105204:	9b12      	ldr	r3, [sp, #72]	; 0x48
  105206:	702e      	strb	r6, [r5, #0]
  105208:	9302      	str	r3, [sp, #8]
  10520a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  10520c:	4a3a      	ldr	r2, [pc, #232]	; (1052f8 <main+0x22c8>)
  10520e:	681b      	ldr	r3, [r3, #0]
  105210:	4941      	ldr	r1, [pc, #260]	; (105318 <main+0x22e8>)
  105212:	9301      	str	r3, [sp, #4]
  105214:	f8cd 8000 	str.w	r8, [sp]
  105218:	9b11      	ldr	r3, [sp, #68]	; 0x44
  10521a:	4628      	mov	r0, r5
  10521c:	f00c fa1e 	bl	11165c <siprintf>
  105220:	2034      	movs	r0, #52	; 0x34
  105222:	961f      	str	r6, [sp, #124]	; 0x7c
  105224:	f008 fa7c 	bl	10d720 <operator new(unsigned int)>
  105228:	f10d 0870 	add.w	r8, sp, #112	; 0x70
  10522c:	4934      	ldr	r1, [pc, #208]	; (105300 <main+0x22d0>)
  10522e:	462b      	mov	r3, r5
  105230:	463a      	mov	r2, r7
  105232:	9601      	str	r6, [sp, #4]
  105234:	f8cd 8000 	str.w	r8, [sp]
  105238:	4604      	mov	r4, r0
  10523a:	f7fd fcd5 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  10523e:	4640      	mov	r0, r8
  105240:	f7fd fa4a 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  105244:	4935      	ldr	r1, [pc, #212]	; (10531c <main+0x22ec>)
  105246:	4830      	ldr	r0, [pc, #192]	; (105308 <main+0x22d8>)
  105248:	f008 fbfc 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10524c:	4631      	mov	r1, r6
  10524e:	4632      	mov	r2, r6
  105250:	4620      	mov	r0, r4
  105252:	f7fd fdcf 	bl	102df4 <HttpRequest::send(void const*, unsigned int)>
  105256:	492f      	ldr	r1, [pc, #188]	; (105314 <main+0x22e4>)
  105258:	482b      	ldr	r0, [pc, #172]	; (105308 <main+0x22d8>)
  10525a:	f008 fbf3 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  10525e:	2c00      	cmp	r4, #0
  105260:	f43e aa3f 	beq.w	1036e2 <main+0x6b2>
  105264:	4620      	mov	r0, r4
  105266:	f7fd fa57 	bl	102718 <HttpRequest::~HttpRequest()>
  10526a:	4620      	mov	r0, r4
  10526c:	f008 fa74 	bl	10d758 <operator delete(void*)>
  105270:	4634      	mov	r4, r6
  105272:	e02f      	b.n	1052d4 <main+0x22a4>
  105274:	4631      	mov	r1, r6
  105276:	481f      	ldr	r0, [pc, #124]	; (1052f4 <main+0x22c4>)
  105278:	f005 fe94 	bl	10afa4 <gpio_write>
  10527c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  10527e:	4a1e      	ldr	r2, [pc, #120]	; (1052f8 <main+0x22c8>)
  105280:	681b      	ldr	r3, [r3, #0]
  105282:	4927      	ldr	r1, [pc, #156]	; (105320 <main+0x22f0>)
  105284:	702e      	strb	r6, [r5, #0]
  105286:	4628      	mov	r0, r5
  105288:	9300      	str	r3, [sp, #0]
  10528a:	4643      	mov	r3, r8
  10528c:	f00c f9e6 	bl	11165c <siprintf>
  105290:	2034      	movs	r0, #52	; 0x34
  105292:	961f      	str	r6, [sp, #124]	; 0x7c
  105294:	f008 fa44 	bl	10d720 <operator new(unsigned int)>
  105298:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  10529c:	4918      	ldr	r1, [pc, #96]	; (105300 <main+0x22d0>)
  10529e:	462b      	mov	r3, r5
  1052a0:	463a      	mov	r2, r7
  1052a2:	9601      	str	r6, [sp, #4]
  1052a4:	f8cd 9000 	str.w	r9, [sp]
  1052a8:	4680      	mov	r8, r0
  1052aa:	f7fd fc9d 	bl	102be8 <HttpRequest::HttpRequest(NetworkInterface*, http_method, char const*, mbed::Callback<void (char const*, unsigned int)>, unsigned int)>
  1052ae:	4648      	mov	r0, r9
  1052b0:	f7fd fa12 	bl	1026d8 <mbed::Callback<void (char const*, unsigned int)>::~Callback()>
  1052b4:	491b      	ldr	r1, [pc, #108]	; (105324 <main+0x22f4>)
  1052b6:	4814      	ldr	r0, [pc, #80]	; (105308 <main+0x22d8>)
  1052b8:	f008 fbc4 	bl	10da44 <mbed::Stream::printf(char const*, ...)>
  1052bc:	4632      	mov	r2, r6
  1052be:	4631      	mov	r1, r6
  1052c0:	f7fe ba04 	b.w	1036cc <main+0x69c>
  1052c4:	4640      	mov	r0, r8
  1052c6:	f7fd fa27 	bl	102718 <HttpRequest::~HttpRequest()>
  1052ca:	4640      	mov	r0, r8
  1052cc:	f008 fa44 	bl	10d758 <operator delete(void*)>
  1052d0:	e000      	b.n	1052d4 <main+0x22a4>
  1052d2:	4654      	mov	r4, r10
  1052d4:	4a14      	ldr	r2, [pc, #80]	; (105328 <main+0x22f8>)
  1052d6:	2300      	movs	r3, #0
  1052d8:	6013      	str	r3, [r2, #0]
  1052da:	4a14      	ldr	r2, [pc, #80]	; (10532c <main+0x22fc>)
  1052dc:	469a      	mov	r10, r3
  1052de:	6013      	str	r3, [r2, #0]
  1052e0:	9315      	str	r3, [sp, #84]	; 0x54
  1052e2:	9314      	str	r3, [sp, #80]	; 0x50
  1052e4:	4699      	mov	r9, r3
  1052e6:	f7fd bf88 	b.w	1031fa <main+0x1ca>
  1052ea:	f50d 7d69 	add.w	sp, sp, #932	; 0x3a4
  1052ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  1052f2:	bf00      	nop
  1052f4:	3fff8144 	.word	0x3fff8144
  1052f8:	0011650b 	.word	0x0011650b
  1052fc:	00117e5b 	.word	0x00117e5b
  105300:	3fff4894 	.word	0x3fff4894
  105304:	00116c77 	.word	0x00116c77
  105308:	3fff8184 	.word	0x3fff8184
  10530c:	00117ea7 	.word	0x00117ea7
  105310:	00116d15 	.word	0x00116d15
  105314:	001165ee 	.word	0x001165ee
  105318:	00117ef3 	.word	0x00117ef3
  10531c:	00116db6 	.word	0x00116db6
  105320:	00117f49 	.word	0x00117f49
  105324:	00116e47 	.word	0x00116e47
  105328:	3fff8244 	.word	0x3fff8244
  10532c:	3fff8260 	.word	0x3fff8260

00105330 <mbed::Serial::~Serial()>:
  105330:	b510      	push	{r4, lr}
  105332:	4604      	mov	r4, r0
  105334:	f7fd f99a 	bl	10266c <mbed::Serial::~Serial()>
  105338:	4620      	mov	r0, r4
  10533a:	f008 fa0d 	bl	10d758 <operator delete(void*)>
  10533e:	4620      	mov	r0, r4
  105340:	bd10      	pop	{r4, pc}

00105342 <non-virtual thunk to mbed::Serial::~Serial()>:
  105342:	f1a0 0034 	sub.w	r0, r0, #52	; 0x34
  105346:	e7f3      	b.n	105330 <mbed::Serial::~Serial()>

00105348 <non-virtual thunk to mbed::Serial::~Serial()>:
  105348:	f1a0 0038 	sub.w	r0, r0, #56	; 0x38
  10534c:	e7f0      	b.n	105330 <mbed::Serial::~Serial()>
	...

00105350 <_GLOBAL__sub_I_TOUCH_LC717A00_mode>:
  105350:	b530      	push	{r4, r5, lr}
  105352:	4953      	ldr	r1, [pc, #332]	; (1054a0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x150>)
  105354:	b087      	sub	sp, #28
  105356:	4853      	ldr	r0, [pc, #332]	; (1054a4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x154>)
  105358:	f7fd f816 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  10535c:	4a52      	ldr	r2, [pc, #328]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  10535e:	4953      	ldr	r1, [pc, #332]	; (1054ac <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x15c>)
  105360:	4850      	ldr	r0, [pc, #320]	; (1054a4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x154>)
  105362:	f008 f9b8 	bl	10d6d6 <__aeabi_atexit>
  105366:	4b52      	ldr	r3, [pc, #328]	; (1054b0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x160>)
  105368:	2200      	movs	r2, #0
  10536a:	f503 70c0 	add.w	r0, r3, #384	; 0x180
  10536e:	4619      	mov	r1, r3
  105370:	f843 2c04 	str.w	r2, [r3, #-4]
  105374:	f843 3c08 	str.w	r3, [r3, #-8]
  105378:	f801 2b18 	strb.w	r2, [r1], #24
  10537c:	6119      	str	r1, [r3, #16]
  10537e:	615a      	str	r2, [r3, #20]
  105380:	761a      	strb	r2, [r3, #24]
  105382:	3330      	adds	r3, #48	; 0x30
  105384:	4283      	cmp	r3, r0
  105386:	f04f 0500 	mov.w	r5, #0
  10538a:	d1f0      	bne.n	10536e <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1e>
  10538c:	4a46      	ldr	r2, [pc, #280]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  10538e:	4949      	ldr	r1, [pc, #292]	; (1054b4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x164>)
  105390:	4628      	mov	r0, r5
  105392:	f008 f9a0 	bl	10d6d6 <__aeabi_atexit>
  105396:	4942      	ldr	r1, [pc, #264]	; (1054a0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x150>)
  105398:	4847      	ldr	r0, [pc, #284]	; (1054b8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x168>)
  10539a:	f7fc fff5 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  10539e:	4a42      	ldr	r2, [pc, #264]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  1053a0:	4942      	ldr	r1, [pc, #264]	; (1054ac <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x15c>)
  1053a2:	4845      	ldr	r0, [pc, #276]	; (1054b8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x168>)
  1053a4:	f008 f997 	bl	10d6d6 <__aeabi_atexit>
  1053a8:	493d      	ldr	r1, [pc, #244]	; (1054a0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x150>)
  1053aa:	4844      	ldr	r0, [pc, #272]	; (1054bc <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x16c>)
  1053ac:	f7fc ffec 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  1053b0:	4a3d      	ldr	r2, [pc, #244]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  1053b2:	493e      	ldr	r1, [pc, #248]	; (1054ac <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x15c>)
  1053b4:	4841      	ldr	r0, [pc, #260]	; (1054bc <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x16c>)
  1053b6:	f008 f98e 	bl	10d6d6 <__aeabi_atexit>
  1053ba:	4939      	ldr	r1, [pc, #228]	; (1054a0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x150>)
  1053bc:	4840      	ldr	r0, [pc, #256]	; (1054c0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x170>)
  1053be:	f7fc ffe3 	bl	102388 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.54]>
  1053c2:	4a39      	ldr	r2, [pc, #228]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  1053c4:	4939      	ldr	r1, [pc, #228]	; (1054ac <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x15c>)
  1053c6:	483e      	ldr	r0, [pc, #248]	; (1054c0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x170>)
  1053c8:	f008 f985 	bl	10d6d6 <__aeabi_atexit>
  1053cc:	483d      	ldr	r0, [pc, #244]	; (1054c4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x174>)
  1053ce:	f008 fb85 	bl	10dadc <rtos::Mutex::Mutex()>
  1053d2:	4a35      	ldr	r2, [pc, #212]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  1053d4:	493c      	ldr	r1, [pc, #240]	; (1054c8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x178>)
  1053d6:	483b      	ldr	r0, [pc, #236]	; (1054c4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x174>)
  1053d8:	f008 f97d 	bl	10d6d6 <__aeabi_atexit>
  1053dc:	2107      	movs	r1, #7
  1053de:	483b      	ldr	r0, [pc, #236]	; (1054cc <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x17c>)
  1053e0:	f7fd f821 	bl	102426 <mbed::DigitalOut::DigitalOut(PinName)>
  1053e4:	2110      	movs	r1, #16
  1053e6:	483a      	ldr	r0, [pc, #232]	; (1054d0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x180>)
  1053e8:	f7fd f81d 	bl	102426 <mbed::DigitalOut::DigitalOut(PinName)>
  1053ec:	f04f 34ff 	mov.w	r4, #4294967295
  1053f0:	210e      	movs	r1, #14
  1053f2:	4838      	ldr	r0, [pc, #224]	; (1054d4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x184>)
  1053f4:	f7fd f817 	bl	102426 <mbed::DigitalOut::DigitalOut(PinName)>
  1053f8:	9400      	str	r4, [sp, #0]
  1053fa:	2304      	movs	r3, #4
  1053fc:	2206      	movs	r2, #6
  1053fe:	2105      	movs	r1, #5
  105400:	4835      	ldr	r0, [pc, #212]	; (1054d8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x188>)
  105402:	f007 f9f7 	bl	10c7f4 <mbed::SPI::SPI(PinName, PinName, PinName, PinName)>
  105406:	4621      	mov	r1, r4
  105408:	4834      	ldr	r0, [pc, #208]	; (1054dc <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x18c>)
  10540a:	f7fd f80c 	bl	102426 <mbed::DigitalOut::DigitalOut(PinName)>
  10540e:	9400      	str	r4, [sp, #0]
  105410:	2320      	movs	r3, #32
  105412:	2202      	movs	r2, #2
  105414:	2103      	movs	r1, #3
  105416:	4832      	ldr	r0, [pc, #200]	; (1054e0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x190>)
  105418:	f002 fb48 	bl	107aac <PCA9655E::PCA9655E(PinName, PinName, unsigned char, PinName)>
  10541c:	4a22      	ldr	r2, [pc, #136]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  10541e:	4931      	ldr	r1, [pc, #196]	; (1054e4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x194>)
  105420:	482d      	ldr	r0, [pc, #180]	; (1054d8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x188>)
  105422:	f008 f958 	bl	10d6d6 <__aeabi_atexit>
  105426:	9400      	str	r4, [sp, #0]
  105428:	2304      	movs	r3, #4
  10542a:	2206      	movs	r2, #6
  10542c:	2105      	movs	r1, #5
  10542e:	482e      	ldr	r0, [pc, #184]	; (1054e8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x198>)
  105430:	f000 fa58 	bl	1058e4 <mbed::SPI2::SPI2(PinName, PinName, PinName, PinName)>
  105434:	4a1c      	ldr	r2, [pc, #112]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  105436:	492d      	ldr	r1, [pc, #180]	; (1054ec <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x19c>)
  105438:	482b      	ldr	r0, [pc, #172]	; (1054e8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x198>)
  10543a:	f008 f94c 	bl	10d6d6 <__aeabi_atexit>
  10543e:	4b2c      	ldr	r3, [pc, #176]	; (1054f0 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1a0>)
  105440:	2408      	movs	r4, #8
  105442:	9304      	str	r3, [sp, #16]
  105444:	220e      	movs	r2, #14
  105446:	230f      	movs	r3, #15
  105448:	e88d 000c 	stmia.w	sp, {r2, r3}
  10544c:	9403      	str	r4, [sp, #12]
  10544e:	2304      	movs	r3, #4
  105450:	9502      	str	r5, [sp, #8]
  105452:	2206      	movs	r2, #6
  105454:	2105      	movs	r1, #5
  105456:	4827      	ldr	r0, [pc, #156]	; (1054f4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1a4>)
  105458:	f003 f820 	bl	10849c <WizFi250Interface::WizFi250Interface(PinName, PinName, PinName, PinName, PinName, int, int, int)>
  10545c:	4a12      	ldr	r2, [pc, #72]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  10545e:	4926      	ldr	r1, [pc, #152]	; (1054f8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1a8>)
  105460:	4824      	ldr	r0, [pc, #144]	; (1054f4 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1a4>)
  105462:	f008 f938 	bl	10d6d6 <__aeabi_atexit>
  105466:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  10546a:	9300      	str	r3, [sp, #0]
  10546c:	4621      	mov	r1, r4
  10546e:	462b      	mov	r3, r5
  105470:	4c22      	ldr	r4, [pc, #136]	; (1054fc <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1ac>)
  105472:	2209      	movs	r2, #9
  105474:	4822      	ldr	r0, [pc, #136]	; (105500 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1b0>)
  105476:	f007 f915 	bl	10c6a4 <mbed::Serial::Serial(PinName, PinName, char const*, int)>
  10547a:	4a0b      	ldr	r2, [pc, #44]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  10547c:	4921      	ldr	r1, [pc, #132]	; (105504 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1b4>)
  10547e:	4820      	ldr	r0, [pc, #128]	; (105500 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1b0>)
  105480:	f008 f929 	bl	10d6d6 <__aeabi_atexit>
  105484:	4620      	mov	r0, r4
  105486:	f007 fb25 	bl	10cad4 <mbed::TimerEvent::TimerEvent()>
  10548a:	4620      	mov	r0, r4
  10548c:	4b1e      	ldr	r3, [pc, #120]	; (105508 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1b8>)
  10548e:	4a06      	ldr	r2, [pc, #24]	; (1054a8 <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x158>)
  105490:	491e      	ldr	r1, [pc, #120]	; (10550c <_GLOBAL__sub_I_TOUCH_LC717A00_mode+0x1bc>)
  105492:	6023      	str	r3, [r4, #0]
  105494:	6365      	str	r5, [r4, #52]	; 0x34
  105496:	b007      	add	sp, #28
  105498:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  10549c:	f008 b91b 	b.w	10d6d6 <__aeabi_atexit>
  1054a0:	001164ed 	.word	0x001164ed
  1054a4:	3fff4750 	.word	0x3fff4750
  1054a8:	3fff40a0 	.word	0x3fff40a0
  1054ac:	0010e1e5 	.word	0x0010e1e5
  1054b0:	3fff45d8 	.word	0x3fff45d8
  1054b4:	001022ed 	.word	0x001022ed
  1054b8:	3fff812c 	.word	0x3fff812c
  1054bc:	3fff4768 	.word	0x3fff4768
  1054c0:	3fff8248 	.word	0x3fff8248
  1054c4:	3fff8214 	.word	0x3fff8214
  1054c8:	0010daf7 	.word	0x0010daf7
  1054cc:	3fff4884 	.word	0x3fff4884
  1054d0:	3fff8208 	.word	0x3fff8208
  1054d4:	3fff8144 	.word	0x3fff8144
  1054d8:	3fff4534 	.word	0x3fff4534
  1054dc:	3fff4560 	.word	0x3fff4560
  1054e0:	3fff4574 	.word	0x3fff4574
  1054e4:	00102331 	.word	0x00102331
  1054e8:	3fff8100 	.word	0x3fff8100
  1054ec:	0010230d 	.word	0x0010230d
  1054f0:	000f4240 	.word	0x000f4240
  1054f4:	3fff4890 	.word	0x3fff4890
  1054f8:	00105511 	.word	0x00105511
  1054fc:	3fff81d0 	.word	0x3fff81d0
  105500:	3fff8150 	.word	0x3fff8150
  105504:	0010266d 	.word	0x0010266d
  105508:	001197a8 	.word	0x001197a8
  10550c:	001025f9 	.word	0x001025f9

00105510 <WizFi250Interface::~WizFi250Interface()>:
  105510:	b510      	push	{r4, lr}
  105512:	4604      	mov	r4, r0
  105514:	4b07      	ldr	r3, [pc, #28]	; (105534 <WizFi250Interface::~WizFi250Interface()+0x24>)
  105516:	3070      	adds	r0, #112	; 0x70
  105518:	f840 3c70 	str.w	r3, [r0, #-112]
  10551c:	337c      	adds	r3, #124	; 0x7c
  10551e:	f840 3c6c 	str.w	r3, [r0, #-108]
  105522:	f002 fba3 	bl	107c6c <PCA9655E::~PCA9655E()>
  105526:	f104 0034 	add.w	r0, r4, #52	; 0x34
  10552a:	f006 ffb7 	bl	10c49c <mbed::InterruptIn::~InterruptIn()>
  10552e:	4620      	mov	r0, r4
  105530:	bd10      	pop	{r4, pc}
  105532:	bf00      	nop
  105534:	00118cc4 	.word	0x00118cc4

00105538 <non-virtual thunk to WizFi250Interface::~WizFi250Interface()>:
  105538:	f1a0 0004 	sub.w	r0, r0, #4
  10553c:	e7e8      	b.n	105510 <WizFi250Interface::~WizFi250Interface()>
  10553e:	bf00      	nop

00105540 <WizFi250Interface::~WizFi250Interface()>:
  105540:	b510      	push	{r4, lr}
  105542:	4604      	mov	r4, r0
  105544:	f7ff ffe4 	bl	105510 <WizFi250Interface::~WizFi250Interface()>
  105548:	4620      	mov	r0, r4
  10554a:	f008 f905 	bl	10d758 <operator delete(void*)>
  10554e:	4620      	mov	r0, r4
  105550:	bd10      	pop	{r4, pc}

00105552 <non-virtual thunk to WizFi250Interface::~WizFi250Interface()>:
  105552:	f1a0 0004 	sub.w	r0, r0, #4
  105556:	e7f3      	b.n	105540 <WizFi250Interface::~WizFi250Interface()>

00105558 <NRF24L01P::CsEnable()>:
  105558:	b508      	push	{r3, lr}
  10555a:	2007      	movs	r0, #7
  10555c:	f008 f9b6 	bl	10d8cc <wait_us>
  105560:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  105564:	2100      	movs	r1, #0
  105566:	4801      	ldr	r0, [pc, #4]	; (10556c <NRF24L01P::CsEnable()+0x14>)
  105568:	f005 bd1c 	b.w	10afa4 <gpio_write>
  10556c:	3fff8270 	.word	0x3fff8270

00105570 <NRF24L01P::CsDisable()>:
  105570:	b508      	push	{r3, lr}
  105572:	4804      	ldr	r0, [pc, #16]	; (105584 <NRF24L01P::CsDisable()+0x14>)
  105574:	2101      	movs	r1, #1
  105576:	f005 fd15 	bl	10afa4 <gpio_write>
  10557a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10557e:	2007      	movs	r0, #7
  105580:	f008 b9a4 	b.w	10d8cc <wait_us>
  105584:	3fff8270 	.word	0x3fff8270

00105588 <NRF24L01P::resetSpiParams()>:
  105588:	b510      	push	{r4, lr}
  10558a:	4604      	mov	r4, r0
  10558c:	2108      	movs	r1, #8
  10558e:	2200      	movs	r2, #0
  105590:	f000 f9d2 	bl	105938 <mbed::SPI2::format(int, int)>
  105594:	4620      	mov	r0, r4
  105596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10559a:	4901      	ldr	r1, [pc, #4]	; (1055a0 <NRF24L01P::resetSpiParams()+0x18>)
  10559c:	f000 b9e4 	b.w	105968 <mbed::SPI2::frequency(int)>
  1055a0:	000f4240 	.word	0x000f4240

001055a4 <_GLOBAL__sub_I_CSN>:
  1055a4:	480c      	ldr	r0, [pc, #48]	; (1055d8 <_GLOBAL__sub_I_CSN+0x34>)
  1055a6:	b510      	push	{r4, lr}
  1055a8:	2107      	movs	r1, #7
  1055aa:	2400      	movs	r4, #0
  1055ac:	6004      	str	r4, [r0, #0]
  1055ae:	7104      	strb	r4, [r0, #4]
  1055b0:	6084      	str	r4, [r0, #8]
  1055b2:	f002 ffd1 	bl	108558 <gpio_init_out>
  1055b6:	4809      	ldr	r0, [pc, #36]	; (1055dc <_GLOBAL__sub_I_CSN+0x38>)
  1055b8:	2110      	movs	r1, #16
  1055ba:	6004      	str	r4, [r0, #0]
  1055bc:	7104      	strb	r4, [r0, #4]
  1055be:	6084      	str	r4, [r0, #8]
  1055c0:	f002 ffca 	bl	108558 <gpio_init_out>
  1055c4:	4806      	ldr	r0, [pc, #24]	; (1055e0 <_GLOBAL__sub_I_CSN+0x3c>)
  1055c6:	210e      	movs	r1, #14
  1055c8:	6004      	str	r4, [r0, #0]
  1055ca:	7104      	strb	r4, [r0, #4]
  1055cc:	6084      	str	r4, [r0, #8]
  1055ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  1055d2:	f002 bfc1 	b.w	108558 <gpio_init_out>
  1055d6:	bf00      	nop
  1055d8:	3fff8270 	.word	0x3fff8270
  1055dc:	3fff827c 	.word	0x3fff827c
  1055e0:	3fff8264 	.word	0x3fff8264

001055e4 <NRF24L01P::WriteCommand(unsigned char)>:
  1055e4:	b538      	push	{r3, r4, r5, lr}
  1055e6:	4604      	mov	r4, r0
  1055e8:	460d      	mov	r5, r1
  1055ea:	f7ff ffcd 	bl	105588 <NRF24L01P::resetSpiParams()>
  1055ee:	4620      	mov	r0, r4
  1055f0:	f7ff ffbe 	bl	105570 <NRF24L01P::CsDisable()>
  1055f4:	4620      	mov	r0, r4
  1055f6:	f7ff ffaf 	bl	105558 <NRF24L01P::CsEnable()>
  1055fa:	4629      	mov	r1, r5
  1055fc:	4620      	mov	r0, r4
  1055fe:	f000 f9c9 	bl	105994 <mbed::SPI2::write(int)>
  105602:	4620      	mov	r0, r4
  105604:	f7ff ffb4 	bl	105570 <NRF24L01P::CsDisable()>
  105608:	2004      	movs	r0, #4
  10560a:	f008 f95f 	bl	10d8cc <wait_us>
  10560e:	4620      	mov	r0, r4
  105610:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  105614:	f7ff bfb8 	b.w	105588 <NRF24L01P::resetSpiParams()>

00105618 <NRF24L01P::WriteAddress(unsigned char, unsigned char, unsigned char*)>:
  105618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10561a:	4604      	mov	r4, r0
  10561c:	460d      	mov	r5, r1
  10561e:	461e      	mov	r6, r3
  105620:	4617      	mov	r7, r2
  105622:	f7ff ffb1 	bl	105588 <NRF24L01P::resetSpiParams()>
  105626:	4620      	mov	r0, r4
  105628:	f7ff ffa2 	bl	105570 <NRF24L01P::CsDisable()>
  10562c:	4620      	mov	r0, r4
  10562e:	f7ff ff93 	bl	105558 <NRF24L01P::CsEnable()>
  105632:	f045 0120 	orr.w	r1, r5, #32
  105636:	4620      	mov	r0, r4
  105638:	f000 f9ac 	bl	105994 <mbed::SPI2::write(int)>
  10563c:	4635      	mov	r5, r6
  10563e:	1bab      	subs	r3, r5, r6
  105640:	429f      	cmp	r7, r3
  105642:	dd05      	ble.n	105650 <NRF24L01P::WriteAddress(unsigned char, unsigned char, unsigned char*)+0x38>
  105644:	f815 1b01 	ldrb.w	r1, [r5], #1
  105648:	4620      	mov	r0, r4
  10564a:	f000 f9a3 	bl	105994 <mbed::SPI2::write(int)>
  10564e:	e7f6      	b.n	10563e <NRF24L01P::WriteAddress(unsigned char, unsigned char, unsigned char*)+0x26>
  105650:	4620      	mov	r0, r4
  105652:	f7ff ff8d 	bl	105570 <NRF24L01P::CsDisable()>
  105656:	2004      	movs	r0, #4
  105658:	f008 f938 	bl	10d8cc <wait_us>
  10565c:	4620      	mov	r0, r4
  10565e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  105662:	f7ff bf91 	b.w	105588 <NRF24L01P::resetSpiParams()>

00105666 <NRF24L01P::registerRead(unsigned char)>:
  105666:	b538      	push	{r3, r4, r5, lr}
  105668:	4604      	mov	r4, r0
  10566a:	460d      	mov	r5, r1
  10566c:	f7ff ff8c 	bl	105588 <NRF24L01P::resetSpiParams()>
  105670:	4620      	mov	r0, r4
  105672:	f7ff ff7d 	bl	105570 <NRF24L01P::CsDisable()>
  105676:	4620      	mov	r0, r4
  105678:	f7ff ff6e 	bl	105558 <NRF24L01P::CsEnable()>
  10567c:	4629      	mov	r1, r5
  10567e:	4620      	mov	r0, r4
  105680:	f000 f988 	bl	105994 <mbed::SPI2::write(int)>
  105684:	21ff      	movs	r1, #255	; 0xff
  105686:	4620      	mov	r0, r4
  105688:	f000 f984 	bl	105994 <mbed::SPI2::write(int)>
  10568c:	4605      	mov	r5, r0
  10568e:	4620      	mov	r0, r4
  105690:	f7ff ff6e 	bl	105570 <NRF24L01P::CsDisable()>
  105694:	4620      	mov	r0, r4
  105696:	f7ff ff77 	bl	105588 <NRF24L01P::resetSpiParams()>
  10569a:	b2e8      	uxtb	r0, r5
  10569c:	bd38      	pop	{r3, r4, r5, pc}

0010569e <NRF24L01P::writeRx(unsigned char, unsigned char)>:
  10569e:	b570      	push	{r4, r5, r6, lr}
  1056a0:	4604      	mov	r4, r0
  1056a2:	460e      	mov	r6, r1
  1056a4:	4615      	mov	r5, r2
  1056a6:	f7ff ff6f 	bl	105588 <NRF24L01P::resetSpiParams()>
  1056aa:	4620      	mov	r0, r4
  1056ac:	f7ff ff60 	bl	105570 <NRF24L01P::CsDisable()>
  1056b0:	4620      	mov	r0, r4
  1056b2:	f7ff ff51 	bl	105558 <NRF24L01P::CsEnable()>
  1056b6:	f046 0120 	orr.w	r1, r6, #32
  1056ba:	4620      	mov	r0, r4
  1056bc:	f000 f96a 	bl	105994 <mbed::SPI2::write(int)>
  1056c0:	4629      	mov	r1, r5
  1056c2:	4620      	mov	r0, r4
  1056c4:	f000 f966 	bl	105994 <mbed::SPI2::write(int)>
  1056c8:	4620      	mov	r0, r4
  1056ca:	f7ff ff51 	bl	105570 <NRF24L01P::CsDisable()>
  1056ce:	2004      	movs	r0, #4
  1056d0:	f008 f8fc 	bl	10d8cc <wait_us>
  1056d4:	4620      	mov	r0, r4
  1056d6:	f7ff ff57 	bl	105588 <NRF24L01P::resetSpiParams()>
  1056da:	4631      	mov	r1, r6
  1056dc:	4620      	mov	r0, r4
  1056de:	f7ff ffc2 	bl	105666 <NRF24L01P::registerRead(unsigned char)>
  1056e2:	b2c0      	uxtb	r0, r0
  1056e4:	4285      	cmp	r5, r0
  1056e6:	bf14      	ite	ne
  1056e8:	f06f 0001 	mvnne.w	r0, #1
  1056ec:	2000      	moveq	r0, #0
  1056ee:	bd70      	pop	{r4, r5, r6, pc}

001056f0 <NRF24L01P::init()>:
  1056f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
  1056f2:	4605      	mov	r5, r0
  1056f4:	2101      	movs	r1, #1
  1056f6:	4837      	ldr	r0, [pc, #220]	; (1057d4 <NRF24L01P::init()+0xe4>)
  1056f8:	f005 fc54 	bl	10afa4 <gpio_write>
  1056fc:	4628      	mov	r0, r5
  1056fe:	f7ff ff37 	bl	105570 <NRF24L01P::CsDisable()>
  105702:	4628      	mov	r0, r5
  105704:	f7ff ff40 	bl	105588 <NRF24L01P::resetSpiParams()>
  105708:	23ab      	movs	r3, #171	; 0xab
  10570a:	f88d 3004 	strb.w	r3, [sp, #4]
  10570e:	23ac      	movs	r3, #172	; 0xac
  105710:	f88d 3003 	strb.w	r3, [sp, #3]
  105714:	23ad      	movs	r3, #173	; 0xad
  105716:	f88d 3002 	strb.w	r3, [sp, #2]
  10571a:	2201      	movs	r2, #1
  10571c:	23ae      	movs	r3, #174	; 0xae
  10571e:	f88d 3001 	strb.w	r3, [sp, #1]
  105722:	4611      	mov	r1, r2
  105724:	23af      	movs	r3, #175	; 0xaf
  105726:	4628      	mov	r0, r5
  105728:	f88d 3000 	strb.w	r3, [sp]
  10572c:	f7ff ffb7 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  105730:	2800      	cmp	r0, #0
  105732:	d14d      	bne.n	1057d0 <NRF24L01P::init()+0xe0>
  105734:	2201      	movs	r2, #1
  105736:	2102      	movs	r1, #2
  105738:	4628      	mov	r0, r5
  10573a:	f7ff ffb0 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  10573e:	2800      	cmp	r0, #0
  105740:	d146      	bne.n	1057d0 <NRF24L01P::init()+0xe0>
  105742:	2203      	movs	r2, #3
  105744:	4611      	mov	r1, r2
  105746:	4628      	mov	r0, r5
  105748:	f7ff ffa9 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  10574c:	2800      	cmp	r0, #0
  10574e:	d13f      	bne.n	1057d0 <NRF24L01P::init()+0xe0>
  105750:	222f      	movs	r2, #47	; 0x2f
  105752:	2104      	movs	r1, #4
  105754:	4628      	mov	r0, r5
  105756:	f7ff ffa2 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  10575a:	bbc8      	cbnz	r0, 1057d0 <NRF24L01P::init()+0xe0>
  10575c:	222c      	movs	r2, #44	; 0x2c
  10575e:	2105      	movs	r1, #5
  105760:	4628      	mov	r0, r5
  105762:	f7ff ff9c 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  105766:	bb98      	cbnz	r0, 1057d0 <NRF24L01P::init()+0xe0>
  105768:	2206      	movs	r2, #6
  10576a:	4611      	mov	r1, r2
  10576c:	4628      	mov	r0, r5
  10576e:	f7ff ff96 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  105772:	bb68      	cbnz	r0, 1057d0 <NRF24L01P::init()+0xe0>
  105774:	2205      	movs	r2, #5
  105776:	2111      	movs	r1, #17
  105778:	4628      	mov	r0, r5
  10577a:	f7ff ff90 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  10577e:	bb38      	cbnz	r0, 1057d0 <NRF24L01P::init()+0xe0>
  105780:	4601      	mov	r1, r0
  105782:	227b      	movs	r2, #123	; 0x7b
  105784:	4628      	mov	r0, r5
  105786:	f7ff ff8a 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  10578a:	4604      	mov	r4, r0
  10578c:	b9f8      	cbnz	r0, 1057ce <NRF24L01P::init()+0xde>
  10578e:	2270      	movs	r2, #112	; 0x70
  105790:	2107      	movs	r1, #7
  105792:	4628      	mov	r0, r5
  105794:	f7ff ff83 	bl	10569e <NRF24L01P::writeRx(unsigned char, unsigned char)>
  105798:	466b      	mov	r3, sp
  10579a:	2205      	movs	r2, #5
  10579c:	210a      	movs	r1, #10
  10579e:	4628      	mov	r0, r5
  1057a0:	f7ff ff3a 	bl	105618 <NRF24L01P::WriteAddress(unsigned char, unsigned char, unsigned char*)>
  1057a4:	466b      	mov	r3, sp
  1057a6:	2205      	movs	r2, #5
  1057a8:	2110      	movs	r1, #16
  1057aa:	4628      	mov	r0, r5
  1057ac:	f7ff ff34 	bl	105618 <NRF24L01P::WriteAddress(unsigned char, unsigned char, unsigned char*)>
  1057b0:	21e2      	movs	r1, #226	; 0xe2
  1057b2:	4628      	mov	r0, r5
  1057b4:	f7ff ff16 	bl	1055e4 <NRF24L01P::WriteCommand(unsigned char)>
  1057b8:	21e1      	movs	r1, #225	; 0xe1
  1057ba:	4628      	mov	r0, r5
  1057bc:	f7ff ff12 	bl	1055e4 <NRF24L01P::WriteCommand(unsigned char)>
  1057c0:	4804      	ldr	r0, [pc, #16]	; (1057d4 <NRF24L01P::init()+0xe4>)
  1057c2:	2101      	movs	r1, #1
  1057c4:	f005 fbee 	bl	10afa4 <gpio_write>
  1057c8:	2002      	movs	r0, #2
  1057ca:	f008 f8a3 	bl	10d914 <wait_ms>
  1057ce:	4620      	mov	r0, r4
  1057d0:	b003      	add	sp, #12
  1057d2:	bd30      	pop	{r4, r5, pc}
  1057d4:	3fff827c 	.word	0x3fff827c

001057d8 <NRF24L01P::ReadPayload(unsigned char, unsigned char*)>:
  1057d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  1057da:	4604      	mov	r4, r0
  1057dc:	4617      	mov	r7, r2
  1057de:	460d      	mov	r5, r1
  1057e0:	f7ff fed2 	bl	105588 <NRF24L01P::resetSpiParams()>
  1057e4:	4620      	mov	r0, r4
  1057e6:	f7ff fec3 	bl	105570 <NRF24L01P::CsDisable()>
  1057ea:	4620      	mov	r0, r4
  1057ec:	f7ff feb4 	bl	105558 <NRF24L01P::CsEnable()>
  1057f0:	2161      	movs	r1, #97	; 0x61
  1057f2:	4620      	mov	r0, r4
  1057f4:	f000 f8ce 	bl	105994 <mbed::SPI2::write(int)>
  1057f8:	3d01      	subs	r5, #1
  1057fa:	1e7e      	subs	r6, r7, #1
  1057fc:	443d      	add	r5, r7
  1057fe:	42ae      	cmp	r6, r5
  105800:	d006      	beq.n	105810 <NRF24L01P::ReadPayload(unsigned char, unsigned char*)+0x38>
  105802:	21ff      	movs	r1, #255	; 0xff
  105804:	4620      	mov	r0, r4
  105806:	f000 f8c5 	bl	105994 <mbed::SPI2::write(int)>
  10580a:	f806 0f01 	strb.w	r0, [r6, #1]!
  10580e:	e7f6      	b.n	1057fe <NRF24L01P::ReadPayload(unsigned char, unsigned char*)+0x26>
  105810:	4620      	mov	r0, r4
  105812:	f7ff fead 	bl	105570 <NRF24L01P::CsDisable()>
  105816:	2004      	movs	r0, #4
  105818:	f008 f858 	bl	10d8cc <wait_us>
  10581c:	4620      	mov	r0, r4
  10581e:	f7ff feb3 	bl	105588 <NRF24L01P::resetSpiParams()>
  105822:	4804      	ldr	r0, [pc, #16]	; (105834 <NRF24L01P::ReadPayload(unsigned char, unsigned char*)+0x5c>)
  105824:	2101      	movs	r1, #1
  105826:	f005 fbbd 	bl	10afa4 <gpio_write>
  10582a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  10582e:	200a      	movs	r0, #10
  105830:	f008 b870 	b.w	10d914 <wait_ms>
  105834:	3fff827c 	.word	0x3fff827c

00105838 <NRF24L01P::WritePayload(unsigned char, unsigned char*)>:
  105838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10583a:	4604      	mov	r4, r0
  10583c:	4617      	mov	r7, r2
  10583e:	460d      	mov	r5, r1
  105840:	f7ff fea2 	bl	105588 <NRF24L01P::resetSpiParams()>
  105844:	4620      	mov	r0, r4
  105846:	f7ff fe93 	bl	105570 <NRF24L01P::CsDisable()>
  10584a:	4620      	mov	r0, r4
  10584c:	f7ff fe84 	bl	105558 <NRF24L01P::CsEnable()>
  105850:	21a0      	movs	r1, #160	; 0xa0
  105852:	4620      	mov	r0, r4
  105854:	f000 f89e 	bl	105994 <mbed::SPI2::write(int)>
  105858:	3d01      	subs	r5, #1
  10585a:	1e7e      	subs	r6, r7, #1
  10585c:	443d      	add	r5, r7
  10585e:	42ae      	cmp	r6, r5
  105860:	d005      	beq.n	10586e <NRF24L01P::WritePayload(unsigned char, unsigned char*)+0x36>
  105862:	f816 1f01 	ldrb.w	r1, [r6, #1]!
  105866:	4620      	mov	r0, r4
  105868:	f000 f894 	bl	105994 <mbed::SPI2::write(int)>
  10586c:	e7f7      	b.n	10585e <NRF24L01P::WritePayload(unsigned char, unsigned char*)+0x26>
  10586e:	4620      	mov	r0, r4
  105870:	f7ff fe7e 	bl	105570 <NRF24L01P::CsDisable()>
  105874:	2101      	movs	r1, #1
  105876:	4807      	ldr	r0, [pc, #28]	; (105894 <NRF24L01P::WritePayload(unsigned char, unsigned char*)+0x5c>)
  105878:	f005 fb94 	bl	10afa4 <gpio_write>
  10587c:	200c      	movs	r0, #12
  10587e:	f008 f825 	bl	10d8cc <wait_us>
  105882:	4804      	ldr	r0, [pc, #16]	; (105894 <NRF24L01P::WritePayload(unsigned char, unsigned char*)+0x5c>)
  105884:	2100      	movs	r1, #0
  105886:	f005 fb8d 	bl	10afa4 <gpio_write>
  10588a:	4620      	mov	r0, r4
  10588c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  105890:	f7ff be7a 	b.w	105588 <NRF24L01P::resetSpiParams()>
  105894:	3fff827c 	.word	0x3fff827c

00105898 <mbed::SPI2::~SPI2()>:
  105898:	4770      	bx	lr

0010589a <mbed::SPI2::~SPI2()>:
  10589a:	b510      	push	{r4, lr}
  10589c:	4604      	mov	r4, r0
  10589e:	f007 ff5b 	bl	10d758 <operator delete(void*)>
  1058a2:	4620      	mov	r0, r4
  1058a4:	bd10      	pop	{r4, pc}
	...

001058a8 <mbed::SPI2::aquire()>:
  1058a8:	b570      	push	{r4, r5, r6, lr}
  1058aa:	4604      	mov	r4, r0
  1058ac:	6803      	ldr	r3, [r0, #0]
  1058ae:	4e0c      	ldr	r6, [pc, #48]	; (1058e0 <mbed::SPI2::aquire()+0x38>)
  1058b0:	689b      	ldr	r3, [r3, #8]
  1058b2:	4798      	blx	r3
  1058b4:	6833      	ldr	r3, [r6, #0]
  1058b6:	429c      	cmp	r4, r3
  1058b8:	d00b      	beq.n	1058d2 <mbed::SPI2::aquire()+0x2a>
  1058ba:	1d25      	adds	r5, r4, #4
  1058bc:	2300      	movs	r3, #0
  1058be:	6a62      	ldr	r2, [r4, #36]	; 0x24
  1058c0:	6a21      	ldr	r1, [r4, #32]
  1058c2:	4628      	mov	r0, r5
  1058c4:	f006 fca4 	bl	10c210 <spi_format>
  1058c8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
  1058ca:	4628      	mov	r0, r5
  1058cc:	f006 fcfa 	bl	10c2c4 <spi_frequency>
  1058d0:	6034      	str	r4, [r6, #0]
  1058d2:	6823      	ldr	r3, [r4, #0]
  1058d4:	4620      	mov	r0, r4
  1058d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  1058da:	68db      	ldr	r3, [r3, #12]
  1058dc:	4718      	bx	r3
  1058de:	bf00      	nop
  1058e0:	3fff82bc 	.word	0x3fff82bc

001058e4 <mbed::SPI2::SPI2(PinName, PinName, PinName, PinName)>:
  1058e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  1058e8:	4605      	mov	r5, r0
  1058ea:	4604      	mov	r4, r0
  1058ec:	460e      	mov	r6, r1
  1058ee:	4617      	mov	r7, r2
  1058f0:	4698      	mov	r8, r3
  1058f2:	4b0f      	ldr	r3, [pc, #60]	; (105930 <mbed::SPI2::SPI2(PinName, PinName, PinName, PinName)+0x4c>)
  1058f4:	221c      	movs	r2, #28
  1058f6:	f845 3b04 	str.w	r3, [r5], #4
  1058fa:	2100      	movs	r1, #0
  1058fc:	4628      	mov	r0, r5
  1058fe:	f00a fb12 	bl	10ff26 <memset>
  105902:	2308      	movs	r3, #8
  105904:	6223      	str	r3, [r4, #32]
  105906:	2300      	movs	r3, #0
  105908:	6263      	str	r3, [r4, #36]	; 0x24
  10590a:	4b0a      	ldr	r3, [pc, #40]	; (105934 <mbed::SPI2::SPI2(PinName, PinName, PinName, PinName)+0x50>)
  10590c:	463a      	mov	r2, r7
  10590e:	62a3      	str	r3, [r4, #40]	; 0x28
  105910:	f99d 3020 	ldrsb.w	r3, [sp, #32]
  105914:	4631      	mov	r1, r6
  105916:	9300      	str	r3, [sp, #0]
  105918:	4628      	mov	r0, r5
  10591a:	4643      	mov	r3, r8
  10591c:	f006 fc70 	bl	10c200 <spi_init>
  105920:	4620      	mov	r0, r4
  105922:	f7ff ffc1 	bl	1058a8 <mbed::SPI2::aquire()>
  105926:	4620      	mov	r0, r4
  105928:	b002      	add	sp, #8
  10592a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10592e:	bf00      	nop
  105930:	00117fe4 	.word	0x00117fe4
  105934:	000f4240 	.word	0x000f4240

00105938 <mbed::SPI2::format(int, int)>:
  105938:	b570      	push	{r4, r5, r6, lr}
  10593a:	4604      	mov	r4, r0
  10593c:	460e      	mov	r6, r1
  10593e:	4615      	mov	r5, r2
  105940:	6803      	ldr	r3, [r0, #0]
  105942:	689b      	ldr	r3, [r3, #8]
  105944:	4798      	blx	r3
  105946:	4b07      	ldr	r3, [pc, #28]	; (105964 <mbed::SPI2::format(int, int)+0x2c>)
  105948:	4620      	mov	r0, r4
  10594a:	6226      	str	r6, [r4, #32]
  10594c:	6265      	str	r5, [r4, #36]	; 0x24
  10594e:	2200      	movs	r2, #0
  105950:	601a      	str	r2, [r3, #0]
  105952:	f7ff ffa9 	bl	1058a8 <mbed::SPI2::aquire()>
  105956:	6823      	ldr	r3, [r4, #0]
  105958:	4620      	mov	r0, r4
  10595a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10595e:	68db      	ldr	r3, [r3, #12]
  105960:	4718      	bx	r3
  105962:	bf00      	nop
  105964:	3fff82bc 	.word	0x3fff82bc

00105968 <mbed::SPI2::frequency(int)>:
  105968:	b570      	push	{r4, r5, r6, lr}
  10596a:	4604      	mov	r4, r0
  10596c:	460d      	mov	r5, r1
  10596e:	6803      	ldr	r3, [r0, #0]
  105970:	689b      	ldr	r3, [r3, #8]
  105972:	4798      	blx	r3
  105974:	4b06      	ldr	r3, [pc, #24]	; (105990 <mbed::SPI2::frequency(int)+0x28>)
  105976:	4620      	mov	r0, r4
  105978:	62a5      	str	r5, [r4, #40]	; 0x28
  10597a:	2200      	movs	r2, #0
  10597c:	601a      	str	r2, [r3, #0]
  10597e:	f7ff ff93 	bl	1058a8 <mbed::SPI2::aquire()>
  105982:	6823      	ldr	r3, [r4, #0]
  105984:	4620      	mov	r0, r4
  105986:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10598a:	68db      	ldr	r3, [r3, #12]
  10598c:	4718      	bx	r3
  10598e:	bf00      	nop
  105990:	3fff82bc 	.word	0x3fff82bc

00105994 <mbed::SPI2::write(int)>:
  105994:	b538      	push	{r3, r4, r5, lr}
  105996:	4604      	mov	r4, r0
  105998:	460d      	mov	r5, r1
  10599a:	6803      	ldr	r3, [r0, #0]
  10599c:	689b      	ldr	r3, [r3, #8]
  10599e:	4798      	blx	r3
  1059a0:	4620      	mov	r0, r4
  1059a2:	f7ff ff81 	bl	1058a8 <mbed::SPI2::aquire()>
  1059a6:	4629      	mov	r1, r5
  1059a8:	1d20      	adds	r0, r4, #4
  1059aa:	f006 fc9d 	bl	10c2e8 <spi_master_write>
  1059ae:	4605      	mov	r5, r0
  1059b0:	6823      	ldr	r3, [r4, #0]
  1059b2:	4620      	mov	r0, r4
  1059b4:	68db      	ldr	r3, [r3, #12]
  1059b6:	4798      	blx	r3
  1059b8:	4628      	mov	r0, r5
  1059ba:	bd38      	pop	{r3, r4, r5, pc}

001059bc <mbed::SPI2::write(char const*, int, char*, int)>:
  1059bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  1059be:	4604      	mov	r4, r0
  1059c0:	460d      	mov	r5, r1
  1059c2:	4616      	mov	r6, r2
  1059c4:	461f      	mov	r7, r3
  1059c6:	6803      	ldr	r3, [r0, #0]
  1059c8:	689b      	ldr	r3, [r3, #8]
  1059ca:	4798      	blx	r3
  1059cc:	4620      	mov	r0, r4
  1059ce:	f7ff ff6b 	bl	1058a8 <mbed::SPI2::aquire()>
  1059d2:	9b08      	ldr	r3, [sp, #32]
  1059d4:	4629      	mov	r1, r5
  1059d6:	9300      	str	r3, [sp, #0]
  1059d8:	4632      	mov	r2, r6
  1059da:	463b      	mov	r3, r7
  1059dc:	1d20      	adds	r0, r4, #4
  1059de:	f006 fc90 	bl	10c302 <spi_master_block_write>
  1059e2:	4605      	mov	r5, r0
  1059e4:	6823      	ldr	r3, [r4, #0]
  1059e6:	4620      	mov	r0, r4
  1059e8:	68db      	ldr	r3, [r3, #12]
  1059ea:	4798      	blx	r3
  1059ec:	4628      	mov	r0, r5
  1059ee:	b003      	add	sp, #12
  1059f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

001059f4 <SingletonPtr<rtos::Mutex>::get()>:
  1059f4:	b570      	push	{r4, r5, r6, lr}
  1059f6:	4604      	mov	r4, r0
  1059f8:	f854 3b04 	ldr.w	r3, [r4], #4
  1059fc:	4605      	mov	r5, r0
  1059fe:	b97b      	cbnz	r3, 105a20 <SingletonPtr<rtos::Mutex>::get()+0x2c>
  105a00:	4e0c      	ldr	r6, [pc, #48]	; (105a34 <SingletonPtr<rtos::Mutex>::get()+0x40>)
  105a02:	f04f 31ff 	mov.w	r1, #4294967295
  105a06:	6830      	ldr	r0, [r6, #0]
  105a08:	f004 f8de 	bl	109bc8 <osMutexAcquire>
  105a0c:	682b      	ldr	r3, [r5, #0]
  105a0e:	b923      	cbnz	r3, 105a1a <SingletonPtr<rtos::Mutex>::get()+0x26>
  105a10:	b114      	cbz	r4, 105a18 <SingletonPtr<rtos::Mutex>::get()+0x24>
  105a12:	4620      	mov	r0, r4
  105a14:	f008 f862 	bl	10dadc <rtos::Mutex::Mutex()>
  105a18:	602c      	str	r4, [r5, #0]
  105a1a:	6830      	ldr	r0, [r6, #0]
  105a1c:	f004 f8f2 	bl	109c04 <osMutexRelease>
  105a20:	682b      	ldr	r3, [r5, #0]
  105a22:	42a3      	cmp	r3, r4
  105a24:	d004      	beq.n	105a30 <SingletonPtr<rtos::Mutex>::get()+0x3c>
  105a26:	225b      	movs	r2, #91	; 0x5b
  105a28:	4903      	ldr	r1, [pc, #12]	; (105a38 <SingletonPtr<rtos::Mutex>::get()+0x44>)
  105a2a:	4804      	ldr	r0, [pc, #16]	; (105a3c <SingletonPtr<rtos::Mutex>::get()+0x48>)
  105a2c:	f002 feb8 	bl	1087a0 <mbed_assert_internal>
  105a30:	6828      	ldr	r0, [r5, #0]
  105a32:	bd70      	pop	{r4, r5, r6, pc}
  105a34:	3fff8e80 	.word	0x3fff8e80
  105a38:	00117f8b 	.word	0x00117f8b
  105a3c:	00117fc7 	.word	0x00117fc7

00105a40 <mbed::SPI2::lock()>:
  105a40:	b508      	push	{r3, lr}
  105a42:	4804      	ldr	r0, [pc, #16]	; (105a54 <mbed::SPI2::lock()+0x14>)
  105a44:	f7ff ffd6 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  105a48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  105a4c:	f04f 31ff 	mov.w	r1, #4294967295
  105a50:	f008 b84b 	b.w	10daea <rtos::Mutex::lock(unsigned long)>
  105a54:	3fff8288 	.word	0x3fff8288

00105a58 <mbed::SPI2::unlock()>:
  105a58:	b508      	push	{r3, lr}
  105a5a:	4803      	ldr	r0, [pc, #12]	; (105a68 <mbed::SPI2::unlock()+0x10>)
  105a5c:	f7ff ffca 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  105a60:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  105a64:	f008 b844 	b.w	10daf0 <rtos::Mutex::unlock()>
  105a68:	3fff8288 	.word	0x3fff8288

00105a6c <_start>:
  105a6c:	4808      	ldr	r0, [pc, #32]	; (105a90 <_start+0x24>)
  105a6e:	4a09      	ldr	r2, [pc, #36]	; (105a94 <_start+0x28>)
  105a70:	b508      	push	{r3, lr}
  105a72:	1a12      	subs	r2, r2, r0
  105a74:	2100      	movs	r1, #0
  105a76:	f00a fa56 	bl	10ff26 <memset>
  105a7a:	f002 ffdd 	bl	108a38 <software_init_hook>
  105a7e:	f00a f989 	bl	10fd94 <__libc_init_array>
  105a82:	f005 fc61 	bl	10b348 <expReset_AppLedON>
  105a86:	f002 ffcf 	bl	108a28 <__wrap_main>
  105a8a:	f007 fe26 	bl	10d6da <__wrap_exit>
  105a8e:	bf00      	nop
  105a90:	3fff42e0 	.word	0x3fff42e0
  105a94:	3fff9f1c 	.word	0x3fff9f1c

00105a98 <__wrap__isatty>:
  105a98:	2802      	cmp	r0, #2
  105a9a:	dd01      	ble.n	105aa0 <__wrap__isatty+0x8>
  105a9c:	f007 bda2 	b.w	10d5e4 <_isatty>
  105aa0:	2001      	movs	r0, #1
  105aa2:	4770      	bx	lr

00105aa4 <abort>:
  105aa4:	b508      	push	{r3, lr}
  105aa6:	2001      	movs	r0, #1
  105aa8:	f007 fe17 	bl	10d6da <__wrap_exit>

00105aac <__cxa_pure_virtual>:
  105aac:	b508      	push	{r3, lr}
  105aae:	f7ff fff9 	bl	105aa4 <abort>
	...

00105ab4 <parse_url_char(state, char)>:
  105ab4:	f1a1 0309 	sub.w	r3, r1, #9
  105ab8:	b2db      	uxtb	r3, r3
  105aba:	2b17      	cmp	r3, #23
  105abc:	d805      	bhi.n	105aca <parse_url_char(state, char)+0x16>
  105abe:	4a53      	ldr	r2, [pc, #332]	; (105c0c <parse_url_char(state, char)+0x158>)
  105ac0:	fa22 f303 	lsr.w	r3, r2, r3
  105ac4:	07da      	lsls	r2, r3, #31
  105ac6:	f100 808e 	bmi.w	105be6 <parse_url_char(state, char)+0x132>
  105aca:	3814      	subs	r0, #20
  105acc:	280b      	cmp	r0, #11
  105ace:	f200 808a 	bhi.w	105be6 <parse_url_char(state, char)+0x132>
  105ad2:	e8df f000 	tbb	[pc, r0]
  105ad6:	1406      	.short	0x1406
  105ad8:	2a2a231e 	.word	0x2a2a231e
  105adc:	57574828 	.word	0x57574828
  105ae0:	7766      	.short	0x7766
  105ae2:	292f      	cmp	r1, #47	; 0x2f
  105ae4:	f000 8085 	beq.w	105bf2 <parse_url_char(state, char)+0x13e>
  105ae8:	292a      	cmp	r1, #42	; 0x2a
  105aea:	f000 8082 	beq.w	105bf2 <parse_url_char(state, char)+0x13e>
  105aee:	f041 0120 	orr.w	r1, r1, #32
  105af2:	3961      	subs	r1, #97	; 0x61
  105af4:	2919      	cmp	r1, #25
  105af6:	bf8c      	ite	hi
  105af8:	2001      	movhi	r0, #1
  105afa:	2015      	movls	r0, #21
  105afc:	4770      	bx	lr
  105afe:	f041 0320 	orr.w	r3, r1, #32
  105b02:	3b61      	subs	r3, #97	; 0x61
  105b04:	2b19      	cmp	r3, #25
  105b06:	d96c      	bls.n	105be2 <parse_url_char(state, char)+0x12e>
  105b08:	293a      	cmp	r1, #58	; 0x3a
  105b0a:	bf14      	ite	ne
  105b0c:	2001      	movne	r0, #1
  105b0e:	2016      	moveq	r0, #22
  105b10:	4770      	bx	lr
  105b12:	292f      	cmp	r1, #47	; 0x2f
  105b14:	bf14      	ite	ne
  105b16:	2001      	movne	r0, #1
  105b18:	2017      	moveq	r0, #23
  105b1a:	4770      	bx	lr
  105b1c:	292f      	cmp	r1, #47	; 0x2f
  105b1e:	bf14      	ite	ne
  105b20:	2001      	movne	r0, #1
  105b22:	2018      	moveq	r0, #24
  105b24:	4770      	bx	lr
  105b26:	2940      	cmp	r1, #64	; 0x40
  105b28:	d05d      	beq.n	105be6 <parse_url_char(state, char)+0x132>
  105b2a:	292f      	cmp	r1, #47	; 0x2f
  105b2c:	d061      	beq.n	105bf2 <parse_url_char(state, char)+0x13e>
  105b2e:	293f      	cmp	r1, #63	; 0x3f
  105b30:	d05b      	beq.n	105bea <parse_url_char(state, char)+0x136>
  105b32:	2940      	cmp	r1, #64	; 0x40
  105b34:	d05b      	beq.n	105bee <parse_url_char(state, char)+0x13a>
  105b36:	f041 0320 	orr.w	r3, r1, #32
  105b3a:	3b61      	subs	r3, #97	; 0x61
  105b3c:	2b19      	cmp	r3, #25
  105b3e:	d962      	bls.n	105c06 <parse_url_char(state, char)+0x152>
  105b40:	f1a1 0321 	sub.w	r3, r1, #33	; 0x21
  105b44:	b2db      	uxtb	r3, r3
  105b46:	2b1c      	cmp	r3, #28
  105b48:	d85b      	bhi.n	105c02 <parse_url_char(state, char)+0x14e>
  105b4a:	4a31      	ldr	r2, [pc, #196]	; (105c10 <parse_url_char(state, char)+0x15c>)
  105b4c:	fa22 f303 	lsr.w	r3, r2, r3
  105b50:	07db      	lsls	r3, r3, #31
  105b52:	d458      	bmi.n	105c06 <parse_url_char(state, char)+0x152>
  105b54:	f001 03fb 	and.w	r3, r1, #251	; 0xfb
  105b58:	2b5b      	cmp	r3, #91	; 0x5b
  105b5a:	d054      	beq.n	105c06 <parse_url_char(state, char)+0x152>
  105b5c:	295d      	cmp	r1, #93	; 0x5d
  105b5e:	bf14      	ite	ne
  105b60:	2001      	movne	r0, #1
  105b62:	2019      	moveq	r0, #25
  105b64:	4770      	bx	lr
  105b66:	4a2b      	ldr	r2, [pc, #172]	; (105c14 <parse_url_char(state, char)+0x160>)
  105b68:	08cb      	lsrs	r3, r1, #3
  105b6a:	5cd2      	ldrb	r2, [r2, r3]
  105b6c:	f001 0007 	and.w	r0, r1, #7
  105b70:	2301      	movs	r3, #1
  105b72:	4083      	lsls	r3, r0
  105b74:	421a      	tst	r2, r3
  105b76:	d13c      	bne.n	105bf2 <parse_url_char(state, char)+0x13e>
  105b78:	2923      	cmp	r1, #35	; 0x23
  105b7a:	d03e      	beq.n	105bfa <parse_url_char(state, char)+0x146>
  105b7c:	293f      	cmp	r1, #63	; 0x3f
  105b7e:	bf08      	it	eq
  105b80:	201c      	moveq	r0, #28
  105b82:	e01c      	b.n	105bbe <parse_url_char(state, char)+0x10a>
  105b84:	4a23      	ldr	r2, [pc, #140]	; (105c14 <parse_url_char(state, char)+0x160>)
  105b86:	08cb      	lsrs	r3, r1, #3
  105b88:	5cd2      	ldrb	r2, [r2, r3]
  105b8a:	f001 0007 	and.w	r0, r1, #7
  105b8e:	2301      	movs	r3, #1
  105b90:	4083      	lsls	r3, r0
  105b92:	421a      	tst	r2, r3
  105b94:	d12f      	bne.n	105bf6 <parse_url_char(state, char)+0x142>
  105b96:	2923      	cmp	r1, #35	; 0x23
  105b98:	d02f      	beq.n	105bfa <parse_url_char(state, char)+0x146>
  105b9a:	293f      	cmp	r1, #63	; 0x3f
  105b9c:	bf08      	it	eq
  105b9e:	201d      	moveq	r0, #29
  105ba0:	e00d      	b.n	105bbe <parse_url_char(state, char)+0x10a>
  105ba2:	4a1c      	ldr	r2, [pc, #112]	; (105c14 <parse_url_char(state, char)+0x160>)
  105ba4:	08cb      	lsrs	r3, r1, #3
  105ba6:	5cd2      	ldrb	r2, [r2, r3]
  105ba8:	f001 0007 	and.w	r0, r1, #7
  105bac:	2301      	movs	r3, #1
  105bae:	4083      	lsls	r3, r0
  105bb0:	421a      	tst	r2, r3
  105bb2:	d124      	bne.n	105bfe <parse_url_char(state, char)+0x14a>
  105bb4:	2923      	cmp	r1, #35	; 0x23
  105bb6:	d020      	beq.n	105bfa <parse_url_char(state, char)+0x146>
  105bb8:	293f      	cmp	r1, #63	; 0x3f
  105bba:	bf08      	it	eq
  105bbc:	201f      	moveq	r0, #31
  105bbe:	bf18      	it	ne
  105bc0:	2001      	movne	r0, #1
  105bc2:	4770      	bx	lr
  105bc4:	4a13      	ldr	r2, [pc, #76]	; (105c14 <parse_url_char(state, char)+0x160>)
  105bc6:	08cb      	lsrs	r3, r1, #3
  105bc8:	5cd2      	ldrb	r2, [r2, r3]
  105bca:	2001      	movs	r0, #1
  105bcc:	f001 0307 	and.w	r3, r1, #7
  105bd0:	fa00 f303 	lsl.w	r3, r0, r3
  105bd4:	421a      	tst	r2, r3
  105bd6:	d112      	bne.n	105bfe <parse_url_char(state, char)+0x14a>
  105bd8:	2923      	cmp	r1, #35	; 0x23
  105bda:	d010      	beq.n	105bfe <parse_url_char(state, char)+0x14a>
  105bdc:	293f      	cmp	r1, #63	; 0x3f
  105bde:	d114      	bne.n	105c0a <parse_url_char(state, char)+0x156>
  105be0:	e00d      	b.n	105bfe <parse_url_char(state, char)+0x14a>
  105be2:	2015      	movs	r0, #21
  105be4:	4770      	bx	lr
  105be6:	2001      	movs	r0, #1
  105be8:	4770      	bx	lr
  105bea:	201c      	movs	r0, #28
  105bec:	4770      	bx	lr
  105bee:	201a      	movs	r0, #26
  105bf0:	4770      	bx	lr
  105bf2:	201b      	movs	r0, #27
  105bf4:	4770      	bx	lr
  105bf6:	201d      	movs	r0, #29
  105bf8:	4770      	bx	lr
  105bfa:	201e      	movs	r0, #30
  105bfc:	4770      	bx	lr
  105bfe:	201f      	movs	r0, #31
  105c00:	4770      	bx	lr
  105c02:	297e      	cmp	r1, #126	; 0x7e
  105c04:	d1a6      	bne.n	105b54 <parse_url_char(state, char)+0xa0>
  105c06:	2019      	movs	r0, #25
  105c08:	4770      	bx	lr
  105c0a:	4770      	bx	lr
  105c0c:	0080001b 	.word	0x0080001b
  105c10:	17ffbff9 	.word	0x17ffbff9
  105c14:	001180fc 	.word	0x001180fc

00105c18 <http_message_needs_eof(http_parser const*)>:
  105c18:	7803      	ldrb	r3, [r0, #0]
  105c1a:	f013 0303 	ands.w	r3, r3, #3
  105c1e:	d017      	beq.n	105c50 <http_message_needs_eof(http_parser const*)+0x38>
  105c20:	8a83      	ldrh	r3, [r0, #20]
  105c22:	f1a3 0264 	sub.w	r2, r3, #100	; 0x64
  105c26:	2a63      	cmp	r2, #99	; 0x63
  105c28:	d914      	bls.n	105c54 <http_message_needs_eof(http_parser const*)+0x3c>
  105c2a:	2bcc      	cmp	r3, #204	; 0xcc
  105c2c:	d012      	beq.n	105c54 <http_message_needs_eof(http_parser const*)+0x3c>
  105c2e:	f5b3 7f98 	cmp.w	r3, #304	; 0x130
  105c32:	d00f      	beq.n	105c54 <http_message_needs_eof(http_parser const*)+0x3c>
  105c34:	8803      	ldrh	r3, [r0, #0]
  105c36:	f3c3 0387 	ubfx	r3, r3, #2, #8
  105c3a:	f003 0341 	and.w	r3, r3, #65	; 0x41
  105c3e:	b94b      	cbnz	r3, 105c54 <http_message_needs_eof(http_parser const*)+0x3c>
  105c40:	68c3      	ldr	r3, [r0, #12]
  105c42:	6882      	ldr	r2, [r0, #8]
  105c44:	ea02 0003 	and.w	r0, r2, r3
  105c48:	1c43      	adds	r3, r0, #1
  105c4a:	4258      	negs	r0, r3
  105c4c:	4158      	adcs	r0, r3
  105c4e:	4770      	bx	lr
  105c50:	4618      	mov	r0, r3
  105c52:	4770      	bx	lr
  105c54:	2000      	movs	r0, #0
  105c56:	4770      	bx	lr

00105c58 <http_should_keep_alive>:
  105c58:	b508      	push	{r3, lr}
  105c5a:	8a03      	ldrh	r3, [r0, #16]
  105c5c:	8802      	ldrh	r2, [r0, #0]
  105c5e:	b123      	cbz	r3, 105c6a <http_should_keep_alive+0x12>
  105c60:	8a43      	ldrh	r3, [r0, #18]
  105c62:	b113      	cbz	r3, 105c6a <http_should_keep_alive+0x12>
  105c64:	06d3      	lsls	r3, r2, #27
  105c66:	d507      	bpl.n	105c78 <http_should_keep_alive+0x20>
  105c68:	e00c      	b.n	105c84 <http_should_keep_alive+0x2c>
  105c6a:	f3c2 0287 	ubfx	r2, r2, #2, #8
  105c6e:	f002 0202 	and.w	r2, r2, #2
  105c72:	f002 03ff 	and.w	r3, r2, #255	; 0xff
  105c76:	b13a      	cbz	r2, 105c88 <http_should_keep_alive+0x30>
  105c78:	f7ff ffce 	bl	105c18 <http_message_needs_eof(http_parser const*)>
  105c7c:	fab0 f080 	clz	r0, r0
  105c80:	0940      	lsrs	r0, r0, #5
  105c82:	bd08      	pop	{r3, pc}
  105c84:	2000      	movs	r0, #0
  105c86:	bd08      	pop	{r3, pc}
  105c88:	4618      	mov	r0, r3
  105c8a:	bd08      	pop	{r3, pc}
  105c8c:	0000      	movs	r0, r0
	...

00105c90 <http_parser_execute>:
  105c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  105c94:	4693      	mov	r11, r2
  105c96:	7dc2      	ldrb	r2, [r0, #23]
  105c98:	b091      	sub	sp, #68	; 0x44
  105c9a:	f012 027f 	ands.w	r2, r2, #127	; 0x7f
  105c9e:	4604      	mov	r4, r0
  105ca0:	4689      	mov	r9, r1
  105ca2:	930c      	str	r3, [sp, #48]	; 0x30
  105ca4:	f041 8562 	bne.w	10776c <http_parser_execute+0x1adc>
  105ca8:	6803      	ldr	r3, [r0, #0]
  105caa:	990c      	ldr	r1, [sp, #48]	; 0x30
  105cac:	f3c3 2386 	ubfx	r3, r3, #10, #7
  105cb0:	bb29      	cbnz	r1, 105cfe <http_parser_execute+0x6e>
  105cb2:	2b04      	cmp	r3, #4
  105cb4:	f001 855a 	beq.w	10776c <http_parser_execute+0x1adc>
  105cb8:	d804      	bhi.n	105cc4 <http_parser_execute+0x34>
  105cba:	3b01      	subs	r3, #1
  105cbc:	2b01      	cmp	r3, #1
  105cbe:	d816      	bhi.n	105cee <http_parser_execute+0x5e>
  105cc0:	f001 bd54 	b.w	10776c <http_parser_execute+0x1adc>
  105cc4:	2b12      	cmp	r3, #18
  105cc6:	f001 8551 	beq.w	10776c <http_parser_execute+0x1adc>
  105cca:	2b3d      	cmp	r3, #61	; 0x3d
  105ccc:	d10f      	bne.n	105cee <http_parser_execute+0x5e>
  105cce:	f8d9 301c 	ldr.w	r3, [r9, #28]
  105cd2:	2b00      	cmp	r3, #0
  105cd4:	f001 854c 	beq.w	107770 <http_parser_execute+0x1ae0>
  105cd8:	4798      	blx	r3
  105cda:	2800      	cmp	r0, #0
  105cdc:	f001 8546 	beq.w	10776c <http_parser_execute+0x1adc>
  105ce0:	7de3      	ldrb	r3, [r4, #23]
  105ce2:	2207      	movs	r2, #7
  105ce4:	f362 0306 	bfi	r3, r2, #0, #7
  105ce8:	75e3      	strb	r3, [r4, #23]
  105cea:	f001 bd3f 	b.w	10776c <http_parser_execute+0x1adc>
  105cee:	7de3      	ldrb	r3, [r4, #23]
  105cf0:	220b      	movs	r2, #11
  105cf2:	f362 0306 	bfi	r3, r2, #0, #7
  105cf6:	75e3      	strb	r3, [r4, #23]
  105cf8:	2001      	movs	r0, #1
  105cfa:	f001 bd3a 	b.w	107772 <http_parser_execute+0x1ae2>
  105cfe:	2b2b      	cmp	r3, #43	; 0x2b
  105d00:	461d      	mov	r5, r3
  105d02:	d003      	beq.n	105d0c <http_parser_execute+0x7c>
  105d04:	2b30      	cmp	r3, #48	; 0x30
  105d06:	d008      	beq.n	105d1a <http_parser_execute+0x8a>
  105d08:	9207      	str	r2, [sp, #28]
  105d0a:	e001      	b.n	105d10 <http_parser_execute+0x80>
  105d0c:	f8cd b01c 	str.w	r11, [sp, #28]
  105d10:	2200      	movs	r2, #0
  105d12:	2b10      	cmp	r3, #16
  105d14:	9201      	str	r2, [sp, #4]
  105d16:	d104      	bne.n	105d22 <http_parser_execute+0x92>
  105d18:	e016      	b.n	105d48 <http_parser_execute+0xb8>
  105d1a:	f8cd b004 	str.w	r11, [sp, #4]
  105d1e:	9207      	str	r2, [sp, #28]
  105d20:	2b10      	cmp	r3, #16
  105d22:	d307      	bcc.n	105d34 <http_parser_execute+0xa4>
  105d24:	3b15      	subs	r3, #21
  105d26:	2b0a      	cmp	r3, #10
  105d28:	d804      	bhi.n	105d34 <http_parser_execute+0xa4>
  105d2a:	2300      	movs	r3, #0
  105d2c:	f8cd b018 	str.w	r11, [sp, #24]
  105d30:	9303      	str	r3, [sp, #12]
  105d32:	e002      	b.n	105d3a <http_parser_execute+0xaa>
  105d34:	2300      	movs	r3, #0
  105d36:	9303      	str	r3, [sp, #12]
  105d38:	9306      	str	r3, [sp, #24]
  105d3a:	78e3      	ldrb	r3, [r4, #3]
  105d3c:	46da      	mov	r10, r11
  105d3e:	09db      	lsrs	r3, r3, #7
  105d40:	930d      	str	r3, [sp, #52]	; 0x34
  105d42:	2300      	movs	r3, #0
  105d44:	9302      	str	r3, [sp, #8]
  105d46:	e009      	b.n	105d5c <http_parser_execute+0xcc>
  105d48:	f8cd b00c 	str.w	r11, [sp, #12]
  105d4c:	9b01      	ldr	r3, [sp, #4]
  105d4e:	e7f3      	b.n	105d38 <http_parser_execute+0xa8>
  105d50:	f1b8 0f0d 	cmp.w	r8, #13
  105d54:	f040 80a2 	bne.w	105e9c <http_parser_execute+0x20c>
  105d58:	f10a 0a01 	add.w	r10, r10, #1
  105d5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  105d5e:	445b      	add	r3, r11
  105d60:	459a      	cmp	r10, r3
  105d62:	9304      	str	r3, [sp, #16]
  105d64:	f001 8422 	beq.w	1075ac <http_parser_execute+0x191c>
  105d68:	2d38      	cmp	r5, #56	; 0x38
  105d6a:	f89a 8000 	ldrb.w	r8, [r10]
  105d6e:	d812      	bhi.n	105d96 <http_parser_execute+0x106>
  105d70:	6863      	ldr	r3, [r4, #4]
  105d72:	3301      	adds	r3, #1
  105d74:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
  105d78:	6063      	str	r3, [r4, #4]
  105d7a:	d90c      	bls.n	105d96 <http_parser_execute+0x106>
  105d7c:	7de3      	ldrb	r3, [r4, #23]
  105d7e:	220c      	movs	r2, #12
  105d80:	f001 bb36 	b.w	1073f0 <http_parser_execute+0x1760>
  105d84:	f1b8 0f0d 	cmp.w	r8, #13
  105d88:	f001 83cd 	beq.w	107526 <http_parser_execute+0x1896>
  105d8c:	f1b8 0f0a 	cmp.w	r8, #10
  105d90:	f040 83fa 	bne.w	106588 <http_parser_execute+0x8f8>
  105d94:	2537      	movs	r5, #55	; 0x37
  105d96:	1e6b      	subs	r3, r5, #1
  105d98:	2b3d      	cmp	r3, #61	; 0x3d
  105d9a:	f201 8355 	bhi.w	107448 <http_parser_execute+0x17b8>
  105d9e:	a201      	add	r2, pc, #4	; (adr r2, 105da4 <http_parser_execute+0x114>)
  105da0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  105da4:	00105d51 	.word	0x00105d51
  105da8:	00105ead 	.word	0x00105ead
  105dac:	00105efb 	.word	0x00105efb
  105db0:	00105f2f 	.word	0x00105f2f
  105db4:	00105f75 	.word	0x00105f75
  105db8:	00105f81 	.word	0x00105f81
  105dbc:	00105f8d 	.word	0x00105f8d
  105dc0:	00105f99 	.word	0x00105f99
  105dc4:	00105fa5 	.word	0x00105fa5
  105dc8:	00105fbb 	.word	0x00105fbb
  105dcc:	00105fc7 	.word	0x00105fc7
  105dd0:	00105fdd 	.word	0x00105fdd
  105dd4:	00105fe9 	.word	0x00105fe9
  105dd8:	00106003 	.word	0x00106003
  105ddc:	0010604d 	.word	0x0010604d
  105de0:	00106073 	.word	0x00106073
  105de4:	00106131 	.word	0x00106131
  105de8:	0010613d 	.word	0x0010613d
  105dec:	00106217 	.word	0x00106217
  105df0:	0010633d 	.word	0x0010633d
  105df4:	0010635d 	.word	0x0010635d
  105df8:	0010635d 	.word	0x0010635d
  105dfc:	0010635d 	.word	0x0010635d
  105e00:	0010635d 	.word	0x0010635d
  105e04:	00106377 	.word	0x00106377
  105e08:	00106377 	.word	0x00106377
  105e0c:	00106377 	.word	0x00106377
  105e10:	00106377 	.word	0x00106377
  105e14:	00106377 	.word	0x00106377
  105e18:	00106377 	.word	0x00106377
  105e1c:	00106377 	.word	0x00106377
  105e20:	00106461 	.word	0x00106461
  105e24:	0010647b 	.word	0x0010647b
  105e28:	00106487 	.word	0x00106487
  105e2c:	00106493 	.word	0x00106493
  105e30:	0010649f 	.word	0x0010649f
  105e34:	001064f1 	.word	0x001064f1
  105e38:	00106505 	.word	0x00106505
  105e3c:	0010652d 	.word	0x0010652d
  105e40:	00106541 	.word	0x00106541
  105e44:	0010657f 	.word	0x0010657f
  105e48:	00105d85 	.word	0x00105d85
  105e4c:	00106605 	.word	0x00106605
  105e50:	0010682d 	.word	0x0010682d
  105e54:	00106d35 	.word	0x00106d35
  105e58:	00106d3f 	.word	0x00106d3f
  105e5c:	0010684d 	.word	0x0010684d
  105e60:	00106939 	.word	0x00106939
  105e64:	00106ceb 	.word	0x00106ceb
  105e68:	00106cdd 	.word	0x00106cdd
  105e6c:	0010716f 	.word	0x0010716f
  105e70:	001071c5 	.word	0x001071c5
  105e74:	0010723d 	.word	0x0010723d
  105e78:	0010725b 	.word	0x0010725b
  105e7c:	00106dd5 	.word	0x00106dd5
  105e80:	00106ea3 	.word	0x00106ea3
  105e84:	001072cf 	.word	0x001072cf
  105e88:	00107351 	.word	0x00107351
  105e8c:	001073d5 	.word	0x001073d5
  105e90:	00107027 	.word	0x00107027
  105e94:	001070f1 	.word	0x001070f1
  105e98:	00107107 	.word	0x00107107
  105e9c:	f1b8 0f0a 	cmp.w	r8, #10
  105ea0:	f43f af5a 	beq.w	105d58 <http_parser_execute+0xc8>
  105ea4:	7de3      	ldrb	r3, [r4, #23]
  105ea6:	220d      	movs	r2, #13
  105ea8:	f001 baa2 	b.w	1073f0 <http_parser_execute+0x1760>
  105eac:	f1b8 0f0d 	cmp.w	r8, #13
  105eb0:	f43f af52 	beq.w	105d58 <http_parser_execute+0xc8>
  105eb4:	f1b8 0f0a 	cmp.w	r8, #10
  105eb8:	f43f af4e 	beq.w	105d58 <http_parser_execute+0xc8>
  105ebc:	8823      	ldrh	r3, [r4, #0]
  105ebe:	f04f 32ff 	mov.w	r2, #4294967295
  105ec2:	f36f 0389 	bfc	r3, #2, #8
  105ec6:	8023      	strh	r3, [r4, #0]
  105ec8:	f1b8 0f48 	cmp.w	r8, #72	; 0x48
  105ecc:	f04f 33ff 	mov.w	r3, #4294967295
  105ed0:	e9c4 2302 	strd	r2, r3, [r4, #8]
  105ed4:	d10b      	bne.n	105eee <http_parser_execute+0x25e>
  105ed6:	7de3      	ldrb	r3, [r4, #23]
  105ed8:	065f      	lsls	r7, r3, #25
  105eda:	d004      	beq.n	105ee6 <http_parser_execute+0x256>
  105edc:	4bb8      	ldr	r3, [pc, #736]	; (1061c0 <http_parser_execute+0x530>)
  105ede:	4ab9      	ldr	r2, [pc, #740]	; (1061c4 <http_parser_execute+0x534>)
  105ee0:	f240 21df 	movw	r1, #735	; 0x2df
  105ee4:	e040      	b.n	105f68 <http_parser_execute+0x2d8>
  105ee6:	f8d9 3000 	ldr.w	r3, [r9]
  105eea:	2503      	movs	r5, #3
  105eec:	e183      	b.n	1061f6 <http_parser_execute+0x566>
  105eee:	7823      	ldrb	r3, [r4, #0]
  105ef0:	2512      	movs	r5, #18
  105ef2:	f36f 0301 	bfc	r3, #0, #2
  105ef6:	7023      	strb	r3, [r4, #0]
  105ef8:	e74d      	b.n	105d96 <http_parser_execute+0x106>
  105efa:	f1b8 0f54 	cmp.w	r8, #84	; 0x54
  105efe:	d106      	bne.n	105f0e <http_parser_execute+0x27e>
  105f00:	7823      	ldrb	r3, [r4, #0]
  105f02:	2201      	movs	r2, #1
  105f04:	f362 0301 	bfi	r3, r2, #0, #2
  105f08:	7023      	strb	r3, [r4, #0]
  105f0a:	2506      	movs	r5, #6
  105f0c:	e724      	b.n	105d58 <http_parser_execute+0xc8>
  105f0e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
  105f12:	f040 82ae 	bne.w	106472 <http_parser_execute+0x7e2>
  105f16:	7823      	ldrb	r3, [r4, #0]
  105f18:	2202      	movs	r2, #2
  105f1a:	f36f 0301 	bfc	r3, #0, #2
  105f1e:	7023      	strb	r3, [r4, #0]
  105f20:	78e3      	ldrb	r3, [r4, #3]
  105f22:	75a2      	strb	r2, [r4, #22]
  105f24:	f362 0306 	bfi	r3, r2, #0, #7
  105f28:	70e3      	strb	r3, [r4, #3]
  105f2a:	2513      	movs	r5, #19
  105f2c:	e714      	b.n	105d58 <http_parser_execute+0xc8>
  105f2e:	8823      	ldrh	r3, [r4, #0]
  105f30:	f04f 32ff 	mov.w	r2, #4294967295
  105f34:	f36f 0389 	bfc	r3, #2, #8
  105f38:	8023      	strh	r3, [r4, #0]
  105f3a:	f1b8 0f0d 	cmp.w	r8, #13
  105f3e:	f04f 33ff 	mov.w	r3, #4294967295
  105f42:	e9c4 2302 	strd	r2, r3, [r4, #8]
  105f46:	d008      	beq.n	105f5a <http_parser_execute+0x2ca>
  105f48:	f1b8 0f48 	cmp.w	r8, #72	; 0x48
  105f4c:	d004      	beq.n	105f58 <http_parser_execute+0x2c8>
  105f4e:	f1b8 0f0a 	cmp.w	r8, #10
  105f52:	f040 828e 	bne.w	106472 <http_parser_execute+0x7e2>
  105f56:	e000      	b.n	105f5a <http_parser_execute+0x2ca>
  105f58:	2505      	movs	r5, #5
  105f5a:	7de3      	ldrb	r3, [r4, #23]
  105f5c:	065e      	lsls	r6, r3, #25
  105f5e:	d006      	beq.n	105f6e <http_parser_execute+0x2de>
  105f60:	f240 310d 	movw	r1, #781	; 0x30d
  105f64:	4b96      	ldr	r3, [pc, #600]	; (1061c0 <http_parser_execute+0x530>)
  105f66:	4a97      	ldr	r2, [pc, #604]	; (1061c4 <http_parser_execute+0x534>)
  105f68:	4897      	ldr	r0, [pc, #604]	; (1061c8 <http_parser_execute+0x538>)
  105f6a:	f009 fc13 	bl	10f794 <__assert_func>
  105f6e:	f8d9 3000 	ldr.w	r3, [r9]
  105f72:	e140      	b.n	1061f6 <http_parser_execute+0x566>
  105f74:	f1b8 0f54 	cmp.w	r8, #84	; 0x54
  105f78:	f001 826c 	beq.w	107454 <http_parser_execute+0x17c4>
  105f7c:	f001 ba36 	b.w	1073ec <http_parser_execute+0x175c>
  105f80:	f1b8 0f54 	cmp.w	r8, #84	; 0x54
  105f84:	f001 8269 	beq.w	10745a <http_parser_execute+0x17ca>
  105f88:	f001 ba30 	b.w	1073ec <http_parser_execute+0x175c>
  105f8c:	f1b8 0f50 	cmp.w	r8, #80	; 0x50
  105f90:	f001 8266 	beq.w	107460 <http_parser_execute+0x17d0>
  105f94:	f001 ba2a 	b.w	1073ec <http_parser_execute+0x175c>
  105f98:	f1b8 0f2f 	cmp.w	r8, #47	; 0x2f
  105f9c:	f001 8263 	beq.w	107466 <http_parser_execute+0x17d6>
  105fa0:	f001 ba24 	b.w	1073ec <http_parser_execute+0x175c>
  105fa4:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  105fa8:	fa5f f388 	uxtb.w	r3, r8
  105fac:	2b09      	cmp	r3, #9
  105fae:	f200 82e2 	bhi.w	106576 <http_parser_execute+0x8e6>
  105fb2:	f8a4 8010 	strh.w	r8, [r4, #16]
  105fb6:	250a      	movs	r5, #10
  105fb8:	e6ce      	b.n	105d58 <http_parser_execute+0xc8>
  105fba:	f1b8 0f2e 	cmp.w	r8, #46	; 0x2e
  105fbe:	f040 82a5 	bne.w	10650c <http_parser_execute+0x87c>
  105fc2:	f001 ba53 	b.w	10746c <http_parser_execute+0x17dc>
  105fc6:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  105fca:	fa5f f388 	uxtb.w	r3, r8
  105fce:	2b09      	cmp	r3, #9
  105fd0:	f200 82d1 	bhi.w	106576 <http_parser_execute+0x8e6>
  105fd4:	f8a4 8012 	strh.w	r8, [r4, #18]
  105fd8:	250c      	movs	r5, #12
  105fda:	e6bd      	b.n	105d58 <http_parser_execute+0xc8>
  105fdc:	f1b8 0f20 	cmp.w	r8, #32
  105fe0:	f040 82b6 	bne.w	106550 <http_parser_execute+0x8c0>
  105fe4:	f001 ba45 	b.w	107472 <http_parser_execute+0x17e2>
  105fe8:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  105fec:	b2da      	uxtb	r2, r3
  105fee:	2a09      	cmp	r2, #9
  105ff0:	d904      	bls.n	105ffc <http_parser_execute+0x36c>
  105ff2:	f1b8 0f20 	cmp.w	r8, #32
  105ff6:	f43f aeaf 	beq.w	105d58 <http_parser_execute+0xc8>
  105ffa:	e023      	b.n	106044 <http_parser_execute+0x3b4>
  105ffc:	82a3      	strh	r3, [r4, #20]
  105ffe:	250e      	movs	r5, #14
  106000:	e6aa      	b.n	105d58 <http_parser_execute+0xc8>
  106002:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  106006:	2b09      	cmp	r3, #9
  106008:	d90d      	bls.n	106026 <http_parser_execute+0x396>
  10600a:	f1b8 0f0d 	cmp.w	r8, #13
  10600e:	d008      	beq.n	106022 <http_parser_execute+0x392>
  106010:	f1b8 0f20 	cmp.w	r8, #32
  106014:	f001 8230 	beq.w	107478 <http_parser_execute+0x17e8>
  106018:	f1b8 0f0a 	cmp.w	r8, #10
  10601c:	d112      	bne.n	106044 <http_parser_execute+0x3b4>
  10601e:	252a      	movs	r5, #42	; 0x2a
  106020:	e69a      	b.n	105d58 <http_parser_execute+0xc8>
  106022:	2511      	movs	r5, #17
  106024:	e698      	b.n	105d58 <http_parser_execute+0xc8>
  106026:	8aa3      	ldrh	r3, [r4, #20]
  106028:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  10602c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
  106030:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  106034:	fa1f f888 	uxth.w	r8, r8
  106038:	f5b8 7f7a 	cmp.w	r8, #1000	; 0x3e8
  10603c:	f8a4 8014 	strh.w	r8, [r4, #20]
  106040:	f4ff ae8a 	bcc.w	105d58 <http_parser_execute+0xc8>
  106044:	7de3      	ldrb	r3, [r4, #23]
  106046:	220f      	movs	r2, #15
  106048:	f001 b9d2 	b.w	1073f0 <http_parser_execute+0x1760>
  10604c:	f1b8 0f0d 	cmp.w	r8, #13
  106050:	f001 8215 	beq.w	10747e <http_parser_execute+0x17ee>
  106054:	f1b8 0f0a 	cmp.w	r8, #10
  106058:	f001 8214 	beq.w	107484 <http_parser_execute+0x17f4>
  10605c:	9b03      	ldr	r3, [sp, #12]
  10605e:	2510      	movs	r5, #16
  106060:	2b00      	cmp	r3, #0
  106062:	bf08      	it	eq
  106064:	4653      	moveq	r3, r10
  106066:	9303      	str	r3, [sp, #12]
  106068:	78e3      	ldrb	r3, [r4, #3]
  10606a:	f36f 0306 	bfc	r3, #0, #7
  10606e:	70e3      	strb	r3, [r4, #3]
  106070:	e672      	b.n	105d58 <http_parser_execute+0xc8>
  106072:	f1b8 0f0d 	cmp.w	r8, #13
  106076:	d12b      	bne.n	1060d0 <http_parser_execute+0x440>
  106078:	7de3      	ldrb	r3, [r4, #23]
  10607a:	0659      	lsls	r1, r3, #25
  10607c:	d004      	beq.n	106088 <http_parser_execute+0x3f8>
  10607e:	4b50      	ldr	r3, [pc, #320]	; (1061c0 <http_parser_execute+0x530>)
  106080:	4a50      	ldr	r2, [pc, #320]	; (1061c4 <http_parser_execute+0x534>)
  106082:	f240 31ad 	movw	r1, #941	; 0x3ad
  106086:	e76f      	b.n	105f68 <http_parser_execute+0x2d8>
  106088:	9b03      	ldr	r3, [sp, #12]
  10608a:	2b00      	cmp	r3, #0
  10608c:	f001 81fd 	beq.w	10748a <http_parser_execute+0x17fa>
  106090:	f8d9 3008 	ldr.w	r3, [r9, #8]
  106094:	2b00      	cmp	r3, #0
  106096:	f001 81fb 	beq.w	107490 <http_parser_execute+0x1800>
  10609a:	6822      	ldr	r2, [r4, #0]
  10609c:	2111      	movs	r1, #17
  10609e:	f361 2290 	bfi	r2, r1, #10, #7
  1060a2:	6022      	str	r2, [r4, #0]
  1060a4:	9a03      	ldr	r2, [sp, #12]
  1060a6:	9903      	ldr	r1, [sp, #12]
  1060a8:	ebc2 020a 	rsb	r2, r2, r10
  1060ac:	4620      	mov	r0, r4
  1060ae:	4798      	blx	r3
  1060b0:	b120      	cbz	r0, 1060bc <http_parser_execute+0x42c>
  1060b2:	7de3      	ldrb	r3, [r4, #23]
  1060b4:	2208      	movs	r2, #8
  1060b6:	f362 0306 	bfi	r3, r2, #0, #7
  1060ba:	75e3      	strb	r3, [r4, #23]
  1060bc:	7de3      	ldrb	r3, [r4, #23]
  1060be:	6825      	ldr	r5, [r4, #0]
  1060c0:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  1060c4:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1060c8:	f001 81e6 	beq.w	107498 <http_parser_execute+0x1808>
  1060cc:	f001 b9b7 	b.w	10743e <http_parser_execute+0x17ae>
  1060d0:	f1b8 0f0a 	cmp.w	r8, #10
  1060d4:	f47f ae40 	bne.w	105d58 <http_parser_execute+0xc8>
  1060d8:	7de3      	ldrb	r3, [r4, #23]
  1060da:	065a      	lsls	r2, r3, #25
  1060dc:	d004      	beq.n	1060e8 <http_parser_execute+0x458>
  1060de:	4b38      	ldr	r3, [pc, #224]	; (1061c0 <http_parser_execute+0x530>)
  1060e0:	4a38      	ldr	r2, [pc, #224]	; (1061c4 <http_parser_execute+0x534>)
  1060e2:	f240 31b3 	movw	r1, #947	; 0x3b3
  1060e6:	e73f      	b.n	105f68 <http_parser_execute+0x2d8>
  1060e8:	9b03      	ldr	r3, [sp, #12]
  1060ea:	2b00      	cmp	r3, #0
  1060ec:	f001 81e6 	beq.w	1074bc <http_parser_execute+0x182c>
  1060f0:	f8d9 3008 	ldr.w	r3, [r9, #8]
  1060f4:	2b00      	cmp	r3, #0
  1060f6:	f001 81e4 	beq.w	1074c2 <http_parser_execute+0x1832>
  1060fa:	6822      	ldr	r2, [r4, #0]
  1060fc:	212a      	movs	r1, #42	; 0x2a
  1060fe:	f361 2290 	bfi	r2, r1, #10, #7
  106102:	6022      	str	r2, [r4, #0]
  106104:	9a03      	ldr	r2, [sp, #12]
  106106:	9903      	ldr	r1, [sp, #12]
  106108:	ebc2 020a 	rsb	r2, r2, r10
  10610c:	4620      	mov	r0, r4
  10610e:	4798      	blx	r3
  106110:	b120      	cbz	r0, 10611c <http_parser_execute+0x48c>
  106112:	7de3      	ldrb	r3, [r4, #23]
  106114:	2208      	movs	r2, #8
  106116:	f362 0306 	bfi	r3, r2, #0, #7
  10611a:	75e3      	strb	r3, [r4, #23]
  10611c:	7de3      	ldrb	r3, [r4, #23]
  10611e:	6825      	ldr	r5, [r4, #0]
  106120:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  106124:	f3c5 2586 	ubfx	r5, r5, #10, #7
  106128:	f001 81cf 	beq.w	1074ca <http_parser_execute+0x183a>
  10612c:	f001 b987 	b.w	10743e <http_parser_execute+0x17ae>
  106130:	f1b8 0f0a 	cmp.w	r8, #10
  106134:	f001 81cc 	beq.w	1074d0 <http_parser_execute+0x1840>
  106138:	f001 b958 	b.w	1073ec <http_parser_execute+0x175c>
  10613c:	f1b8 0f0d 	cmp.w	r8, #13
  106140:	f43f ae0a 	beq.w	105d58 <http_parser_execute+0xc8>
  106144:	f1b8 0f0a 	cmp.w	r8, #10
  106148:	f43f ae06 	beq.w	105d58 <http_parser_execute+0xc8>
  10614c:	8823      	ldrh	r3, [r4, #0]
  10614e:	f04f 32ff 	mov.w	r2, #4294967295
  106152:	f36f 0389 	bfc	r3, #2, #8
  106156:	8023      	strh	r3, [r4, #0]
  106158:	f04f 33ff 	mov.w	r3, #4294967295
  10615c:	e9c4 2302 	strd	r2, r3, [r4, #8]
  106160:	f048 0320 	orr.w	r3, r8, #32
  106164:	3b61      	subs	r3, #97	; 0x61
  106166:	2b19      	cmp	r3, #25
  106168:	f200 80dd 	bhi.w	106326 <http_parser_execute+0x696>
  10616c:	2300      	movs	r3, #0
  10616e:	78e2      	ldrb	r2, [r4, #3]
  106170:	75a3      	strb	r3, [r4, #22]
  106172:	2301      	movs	r3, #1
  106174:	f363 0206 	bfi	r2, r3, #0, #7
  106178:	f1a8 0841 	sub.w	r8, r8, #65	; 0x41
  10617c:	70e2      	strb	r2, [r4, #3]
  10617e:	f1b8 0f14 	cmp.w	r8, #20
  106182:	f200 80d0 	bhi.w	106326 <http_parser_execute+0x696>
  106186:	e8df f008 	tbb	[pc, r8]
  10618a:	0d0b      	.short	0x0d0b
  10618c:	cece2b0f 	.word	0xcece2b0f
  106190:	cece112a 	.word	0xcece112a
  106194:	171513ce 	.word	0x171513ce
  106198:	23ce2119 	.word	0x23ce2119
  10619c:	2725      	.short	0x2725
  10619e:	29          	.byte	0x29
  10619f:	00          	.byte	0x00
  1061a0:	2313      	movs	r3, #19
  1061a2:	e01c      	b.n	1061de <http_parser_execute+0x54e>
  1061a4:	2310      	movs	r3, #16
  1061a6:	e01a      	b.n	1061de <http_parser_execute+0x54e>
  1061a8:	2305      	movs	r3, #5
  1061aa:	e018      	b.n	1061de <http_parser_execute+0x54e>
  1061ac:	2302      	movs	r3, #2
  1061ae:	e016      	b.n	1061de <http_parser_execute+0x54e>
  1061b0:	2309      	movs	r3, #9
  1061b2:	e014      	b.n	1061de <http_parser_execute+0x54e>
  1061b4:	230a      	movs	r3, #10
  1061b6:	e012      	b.n	1061de <http_parser_execute+0x54e>
  1061b8:	2319      	movs	r3, #25
  1061ba:	e010      	b.n	1061de <http_parser_execute+0x54e>
  1061bc:	2306      	movs	r3, #6
  1061be:	e00e      	b.n	1061de <http_parser_execute+0x54e>
  1061c0:	0011821c 	.word	0x0011821c
  1061c4:	00118b56 	.word	0x00118b56
  1061c8:	00118240 	.word	0x00118240
  1061cc:	2303      	movs	r3, #3
  1061ce:	e006      	b.n	1061de <http_parser_execute+0x54e>
  1061d0:	2314      	movs	r3, #20
  1061d2:	e004      	b.n	1061de <http_parser_execute+0x54e>
  1061d4:	231a      	movs	r3, #26
  1061d6:	e002      	b.n	1061de <http_parser_execute+0x54e>
  1061d8:	2307      	movs	r3, #7
  1061da:	e000      	b.n	1061de <http_parser_execute+0x54e>
  1061dc:	230f      	movs	r3, #15
  1061de:	75a3      	strb	r3, [r4, #22]
  1061e0:	7de3      	ldrb	r3, [r4, #23]
  1061e2:	065b      	lsls	r3, r3, #25
  1061e4:	d004      	beq.n	1061f0 <http_parser_execute+0x560>
  1061e6:	4bb1      	ldr	r3, [pc, #708]	; (1064ac <http_parser_execute+0x81c>)
  1061e8:	4ab1      	ldr	r2, [pc, #708]	; (1064b0 <http_parser_execute+0x820>)
  1061ea:	f44f 7179 	mov.w	r1, #996	; 0x3e4
  1061ee:	e6bb      	b.n	105f68 <http_parser_execute+0x2d8>
  1061f0:	f8d9 3000 	ldr.w	r3, [r9]
  1061f4:	2513      	movs	r5, #19
  1061f6:	2b00      	cmp	r3, #0
  1061f8:	f43f adae 	beq.w	105d58 <http_parser_execute+0xc8>
  1061fc:	6822      	ldr	r2, [r4, #0]
  1061fe:	4620      	mov	r0, r4
  106200:	f365 2290 	bfi	r2, r5, #10, #7
  106204:	6022      	str	r2, [r4, #0]
  106206:	4798      	blx	r3
  106208:	2800      	cmp	r0, #0
  10620a:	f001 8111 	beq.w	107430 <http_parser_execute+0x17a0>
  10620e:	7de3      	ldrb	r3, [r4, #23]
  106210:	2201      	movs	r2, #1
  106212:	f001 b859 	b.w	1072c8 <http_parser_execute+0x1638>
  106216:	f1b8 0f00 	cmp.w	r8, #0
  10621a:	f000 8084 	beq.w	106326 <http_parser_execute+0x696>
  10621e:	7da1      	ldrb	r1, [r4, #22]
  106220:	4ba4      	ldr	r3, [pc, #656]	; (1064b4 <http_parser_execute+0x824>)
  106222:	f1b8 0f20 	cmp.w	r8, #32
  106226:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
  10622a:	d105      	bne.n	106238 <http_parser_execute+0x5a8>
  10622c:	78e3      	ldrb	r3, [r4, #3]
  10622e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  106232:	5cc3      	ldrb	r3, [r0, r3]
  106234:	2b00      	cmp	r3, #0
  106236:	d07a      	beq.n	10632e <http_parser_execute+0x69e>
  106238:	78e2      	ldrb	r2, [r4, #3]
  10623a:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  10623e:	5cc0      	ldrb	r0, [r0, r3]
  106240:	4540      	cmp	r0, r8
  106242:	d075      	beq.n	106330 <http_parser_execute+0x6a0>
  106244:	f048 0020 	orr.w	r0, r8, #32
  106248:	3861      	subs	r0, #97	; 0x61
  10624a:	2819      	cmp	r0, #25
  10624c:	d860      	bhi.n	106310 <http_parser_execute+0x680>
  10624e:	021b      	lsls	r3, r3, #8
  106250:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  106254:	ea43 0808 	orr.w	r8, r3, r8
  106258:	4b97      	ldr	r3, [pc, #604]	; (1064b8 <http_parser_execute+0x828>)
  10625a:	4598      	cmp	r8, r3
  10625c:	d045      	beq.n	1062ea <http_parser_execute+0x65a>
  10625e:	dc20      	bgt.n	1062a2 <http_parser_execute+0x612>
  106260:	4b96      	ldr	r3, [pc, #600]	; (1064bc <http_parser_execute+0x82c>)
  106262:	4598      	cmp	r8, r3
  106264:	d04b      	beq.n	1062fe <http_parser_execute+0x66e>
  106266:	dc0a      	bgt.n	10627e <http_parser_execute+0x5ee>
  106268:	4b95      	ldr	r3, [pc, #596]	; (1064c0 <http_parser_execute+0x830>)
  10626a:	4598      	cmp	r8, r3
  10626c:	d043      	beq.n	1062f6 <http_parser_execute+0x666>
  10626e:	3303      	adds	r3, #3
  106270:	4598      	cmp	r8, r3
  106272:	d036      	beq.n	1062e2 <http_parser_execute+0x652>
  106274:	3b14      	subs	r3, #20
  106276:	4598      	cmp	r8, r3
  106278:	d155      	bne.n	106326 <http_parser_execute+0x696>
  10627a:	231c      	movs	r3, #28
  10627c:	e046      	b.n	10630c <http_parser_execute+0x67c>
  10627e:	4b91      	ldr	r3, [pc, #580]	; (1064c4 <http_parser_execute+0x834>)
  106280:	4598      	cmp	r8, r3
  106282:	d030      	beq.n	1062e6 <http_parser_execute+0x656>
  106284:	dc05      	bgt.n	106292 <http_parser_execute+0x602>
  106286:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
  10628a:	4598      	cmp	r8, r3
  10628c:	d14b      	bne.n	106326 <http_parser_execute+0x696>
  10628e:	2316      	movs	r3, #22
  106290:	e03c      	b.n	10630c <http_parser_execute+0x67c>
  106292:	4b8d      	ldr	r3, [pc, #564]	; (1064c8 <http_parser_execute+0x838>)
  106294:	4598      	cmp	r8, r3
  106296:	d034      	beq.n	106302 <http_parser_execute+0x672>
  106298:	4b8c      	ldr	r3, [pc, #560]	; (1064cc <http_parser_execute+0x83c>)
  10629a:	4598      	cmp	r8, r3
  10629c:	d143      	bne.n	106326 <http_parser_execute+0x696>
  10629e:	2317      	movs	r3, #23
  1062a0:	e034      	b.n	10630c <http_parser_execute+0x67c>
  1062a2:	4b8b      	ldr	r3, [pc, #556]	; (1064d0 <http_parser_execute+0x840>)
  1062a4:	4598      	cmp	r8, r3
  1062a6:	d02e      	beq.n	106306 <http_parser_execute+0x676>
  1062a8:	dc0a      	bgt.n	1062c0 <http_parser_execute+0x630>
  1062aa:	4b8a      	ldr	r3, [pc, #552]	; (1064d4 <http_parser_execute+0x844>)
  1062ac:	4598      	cmp	r8, r3
  1062ae:	d01e      	beq.n	1062ee <http_parser_execute+0x65e>
  1062b0:	4b89      	ldr	r3, [pc, #548]	; (1064d8 <http_parser_execute+0x848>)
  1062b2:	4598      	cmp	r8, r3
  1062b4:	d021      	beq.n	1062fa <http_parser_execute+0x66a>
  1062b6:	4b89      	ldr	r3, [pc, #548]	; (1064dc <http_parser_execute+0x84c>)
  1062b8:	4598      	cmp	r8, r3
  1062ba:	d134      	bne.n	106326 <http_parser_execute+0x696>
  1062bc:	2315      	movs	r3, #21
  1062be:	e025      	b.n	10630c <http_parser_execute+0x67c>
  1062c0:	4b87      	ldr	r3, [pc, #540]	; (1064e0 <http_parser_execute+0x850>)
  1062c2:	4598      	cmp	r8, r3
  1062c4:	d021      	beq.n	10630a <http_parser_execute+0x67a>
  1062c6:	dc04      	bgt.n	1062d2 <http_parser_execute+0x642>
  1062c8:	3bf6      	subs	r3, #246	; 0xf6
  1062ca:	4598      	cmp	r8, r3
  1062cc:	d12b      	bne.n	106326 <http_parser_execute+0x696>
  1062ce:	231b      	movs	r3, #27
  1062d0:	e01c      	b.n	10630c <http_parser_execute+0x67c>
  1062d2:	4b84      	ldr	r3, [pc, #528]	; (1064e4 <http_parser_execute+0x854>)
  1062d4:	4598      	cmp	r8, r3
  1062d6:	d00c      	beq.n	1062f2 <http_parser_execute+0x662>
  1062d8:	4b83      	ldr	r3, [pc, #524]	; (1064e8 <http_parser_execute+0x858>)
  1062da:	4598      	cmp	r8, r3
  1062dc:	d123      	bne.n	106326 <http_parser_execute+0x696>
  1062de:	230e      	movs	r3, #14
  1062e0:	e014      	b.n	10630c <http_parser_execute+0x67c>
  1062e2:	2304      	movs	r3, #4
  1062e4:	e012      	b.n	10630c <http_parser_execute+0x67c>
  1062e6:	2308      	movs	r3, #8
  1062e8:	e010      	b.n	10630c <http_parser_execute+0x67c>
  1062ea:	230b      	movs	r3, #11
  1062ec:	e00e      	b.n	10630c <http_parser_execute+0x67c>
  1062ee:	231e      	movs	r3, #30
  1062f0:	e00c      	b.n	10630c <http_parser_execute+0x67c>
  1062f2:	2311      	movs	r3, #17
  1062f4:	e00a      	b.n	10630c <http_parser_execute+0x67c>
  1062f6:	230c      	movs	r3, #12
  1062f8:	e008      	b.n	10630c <http_parser_execute+0x67c>
  1062fa:	230d      	movs	r3, #13
  1062fc:	e006      	b.n	10630c <http_parser_execute+0x67c>
  1062fe:	231d      	movs	r3, #29
  106300:	e004      	b.n	10630c <http_parser_execute+0x67c>
  106302:	231f      	movs	r3, #31
  106304:	e002      	b.n	10630c <http_parser_execute+0x67c>
  106306:	2312      	movs	r3, #18
  106308:	e000      	b.n	10630c <http_parser_execute+0x67c>
  10630a:	2320      	movs	r3, #32
  10630c:	75a3      	strb	r3, [r4, #22]
  10630e:	e00f      	b.n	106330 <http_parser_execute+0x6a0>
  106310:	f1b8 0f2d 	cmp.w	r8, #45	; 0x2d
  106314:	d107      	bne.n	106326 <http_parser_execute+0x696>
  106316:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  10631a:	2a01      	cmp	r2, #1
  10631c:	d103      	bne.n	106326 <http_parser_execute+0x696>
  10631e:	290a      	cmp	r1, #10
  106320:	d101      	bne.n	106326 <http_parser_execute+0x696>
  106322:	2318      	movs	r3, #24
  106324:	e7f2      	b.n	10630c <http_parser_execute+0x67c>
  106326:	7de3      	ldrb	r3, [r4, #23]
  106328:	2210      	movs	r2, #16
  10632a:	f001 b861 	b.w	1073f0 <http_parser_execute+0x1760>
  10632e:	2514      	movs	r5, #20
  106330:	78e3      	ldrb	r3, [r4, #3]
  106332:	1c5a      	adds	r2, r3, #1
  106334:	f362 0306 	bfi	r3, r2, #0, #7
  106338:	70e3      	strb	r3, [r4, #3]
  10633a:	e50d      	b.n	105d58 <http_parser_execute+0xc8>
  10633c:	f1b8 0f20 	cmp.w	r8, #32
  106340:	f43f ad0a 	beq.w	105d58 <http_parser_execute+0xc8>
  106344:	9b06      	ldr	r3, [sp, #24]
  106346:	4641      	mov	r1, r8
  106348:	2b00      	cmp	r3, #0
  10634a:	bf08      	it	eq
  10634c:	4653      	moveq	r3, r10
  10634e:	9306      	str	r3, [sp, #24]
  106350:	7da3      	ldrb	r3, [r4, #22]
  106352:	2b05      	cmp	r3, #5
  106354:	bf14      	ite	ne
  106356:	4628      	movne	r0, r5
  106358:	2018      	moveq	r0, #24
  10635a:	e077      	b.n	10644c <http_parser_execute+0x7bc>
  10635c:	f1a8 030a 	sub.w	r3, r8, #10
  106360:	b2db      	uxtb	r3, r3
  106362:	2b16      	cmp	r3, #22
  106364:	d870      	bhi.n	106448 <http_parser_execute+0x7b8>
  106366:	2201      	movs	r2, #1
  106368:	fa02 f303 	lsl.w	r3, r2, r3
  10636c:	4a5f      	ldr	r2, [pc, #380]	; (1064ec <http_parser_execute+0x85c>)
  10636e:	401a      	ands	r2, r3
  106370:	2a00      	cmp	r2, #0
  106372:	d069      	beq.n	106448 <http_parser_execute+0x7b8>
  106374:	e070      	b.n	106458 <http_parser_execute+0x7c8>
  106376:	f1b8 0f0d 	cmp.w	r8, #13
  10637a:	d031      	beq.n	1063e0 <http_parser_execute+0x750>
  10637c:	f1b8 0f20 	cmp.w	r8, #32
  106380:	d003      	beq.n	10638a <http_parser_execute+0x6fa>
  106382:	f1b8 0f0a 	cmp.w	r8, #10
  106386:	d15f      	bne.n	106448 <http_parser_execute+0x7b8>
  106388:	e02a      	b.n	1063e0 <http_parser_execute+0x750>
  10638a:	7de3      	ldrb	r3, [r4, #23]
  10638c:	065f      	lsls	r7, r3, #25
  10638e:	d004      	beq.n	10639a <http_parser_execute+0x70a>
  106390:	4b46      	ldr	r3, [pc, #280]	; (1064ac <http_parser_execute+0x81c>)
  106392:	4a47      	ldr	r2, [pc, #284]	; (1064b0 <http_parser_execute+0x820>)
  106394:	f240 4155 	movw	r1, #1109	; 0x455
  106398:	e5e6      	b.n	105f68 <http_parser_execute+0x2d8>
  10639a:	9b06      	ldr	r3, [sp, #24]
  10639c:	2b00      	cmp	r3, #0
  10639e:	f001 809a 	beq.w	1074d6 <http_parser_execute+0x1846>
  1063a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  1063a6:	2b00      	cmp	r3, #0
  1063a8:	f001 8098 	beq.w	1074dc <http_parser_execute+0x184c>
  1063ac:	6822      	ldr	r2, [r4, #0]
  1063ae:	9906      	ldr	r1, [sp, #24]
  1063b0:	f368 2290 	bfi	r2, r8, #10, #7
  1063b4:	6022      	str	r2, [r4, #0]
  1063b6:	9a06      	ldr	r2, [sp, #24]
  1063b8:	4620      	mov	r0, r4
  1063ba:	ebc2 020a 	rsb	r2, r2, r10
  1063be:	4798      	blx	r3
  1063c0:	b120      	cbz	r0, 1063cc <http_parser_execute+0x73c>
  1063c2:	7de3      	ldrb	r3, [r4, #23]
  1063c4:	2202      	movs	r2, #2
  1063c6:	f362 0306 	bfi	r3, r2, #0, #7
  1063ca:	75e3      	strb	r3, [r4, #23]
  1063cc:	7de3      	ldrb	r3, [r4, #23]
  1063ce:	6825      	ldr	r5, [r4, #0]
  1063d0:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  1063d4:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1063d8:	f001 8084 	beq.w	1074e4 <http_parser_execute+0x1854>
  1063dc:	f001 b82f 	b.w	10743e <http_parser_execute+0x17ae>
  1063e0:	2300      	movs	r3, #0
  1063e2:	8223      	strh	r3, [r4, #16]
  1063e4:	2309      	movs	r3, #9
  1063e6:	8263      	strh	r3, [r4, #18]
  1063e8:	7de3      	ldrb	r3, [r4, #23]
  1063ea:	f1b8 0f0d 	cmp.w	r8, #13
  1063ee:	bf0c      	ite	eq
  1063f0:	2529      	moveq	r5, #41	; 0x29
  1063f2:	252a      	movne	r5, #42	; 0x2a
  1063f4:	065e      	lsls	r6, r3, #25
  1063f6:	d004      	beq.n	106402 <http_parser_execute+0x772>
  1063f8:	4b2c      	ldr	r3, [pc, #176]	; (1064ac <http_parser_execute+0x81c>)
  1063fa:	4a2d      	ldr	r2, [pc, #180]	; (1064b0 <http_parser_execute+0x820>)
  1063fc:	f240 415e 	movw	r1, #1118	; 0x45e
  106400:	e5b2      	b.n	105f68 <http_parser_execute+0x2d8>
  106402:	9b06      	ldr	r3, [sp, #24]
  106404:	2b00      	cmp	r3, #0
  106406:	f43f aca7 	beq.w	105d58 <http_parser_execute+0xc8>
  10640a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  10640e:	2b00      	cmp	r3, #0
  106410:	f001 806b 	beq.w	1074ea <http_parser_execute+0x185a>
  106414:	6822      	ldr	r2, [r4, #0]
  106416:	9906      	ldr	r1, [sp, #24]
  106418:	f365 2290 	bfi	r2, r5, #10, #7
  10641c:	6022      	str	r2, [r4, #0]
  10641e:	9a06      	ldr	r2, [sp, #24]
  106420:	4620      	mov	r0, r4
  106422:	ebc2 020a 	rsb	r2, r2, r10
  106426:	4798      	blx	r3
  106428:	b120      	cbz	r0, 106434 <http_parser_execute+0x7a4>
  10642a:	7de3      	ldrb	r3, [r4, #23]
  10642c:	2202      	movs	r2, #2
  10642e:	f362 0306 	bfi	r3, r2, #0, #7
  106432:	75e3      	strb	r3, [r4, #23]
  106434:	7de3      	ldrb	r3, [r4, #23]
  106436:	6825      	ldr	r5, [r4, #0]
  106438:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  10643c:	f3c5 2586 	ubfx	r5, r5, #10, #7
  106440:	f001 8056 	beq.w	1074f0 <http_parser_execute+0x1860>
  106444:	f000 bffb 	b.w	10743e <http_parser_execute+0x17ae>
  106448:	4641      	mov	r1, r8
  10644a:	4628      	mov	r0, r5
  10644c:	f7ff fb32 	bl	105ab4 <parse_url_char(state, char)>
  106450:	2801      	cmp	r0, #1
  106452:	4605      	mov	r5, r0
  106454:	f47f ac80 	bne.w	105d58 <http_parser_execute+0xc8>
  106458:	7de3      	ldrb	r3, [r4, #23]
  10645a:	2211      	movs	r2, #17
  10645c:	f000 bfc8 	b.w	1073f0 <http_parser_execute+0x1760>
  106460:	f1b8 0f20 	cmp.w	r8, #32
  106464:	f43f ac78 	beq.w	105d58 <http_parser_execute+0xc8>
  106468:	f1b8 0f48 	cmp.w	r8, #72	; 0x48
  10646c:	d101      	bne.n	106472 <http_parser_execute+0x7e2>
  10646e:	2521      	movs	r5, #33	; 0x21
  106470:	e472      	b.n	105d58 <http_parser_execute+0xc8>
  106472:	7de3      	ldrb	r3, [r4, #23]
  106474:	221c      	movs	r2, #28
  106476:	f000 bfbb 	b.w	1073f0 <http_parser_execute+0x1760>
  10647a:	f1b8 0f54 	cmp.w	r8, #84	; 0x54
  10647e:	f001 803a 	beq.w	1074f6 <http_parser_execute+0x1866>
  106482:	f000 bfb3 	b.w	1073ec <http_parser_execute+0x175c>
  106486:	f1b8 0f54 	cmp.w	r8, #84	; 0x54
  10648a:	f001 8037 	beq.w	1074fc <http_parser_execute+0x186c>
  10648e:	f000 bfad 	b.w	1073ec <http_parser_execute+0x175c>
  106492:	f1b8 0f50 	cmp.w	r8, #80	; 0x50
  106496:	f001 8034 	beq.w	107502 <http_parser_execute+0x1872>
  10649a:	f000 bfa7 	b.w	1073ec <http_parser_execute+0x175c>
  10649e:	f1b8 0f2f 	cmp.w	r8, #47	; 0x2f
  1064a2:	f001 8031 	beq.w	107508 <http_parser_execute+0x1878>
  1064a6:	f000 bfa1 	b.w	1073ec <http_parser_execute+0x175c>
  1064aa:	bf00      	nop
  1064ac:	0011821c 	.word	0x0011821c
  1064b0:	00118b56 	.word	0x00118b56
  1064b4:	00118bf8 	.word	0x00118bf8
  1064b8:	000a014f 	.word	0x000a014f
  1064bc:	00040252 	.word	0x00040252
  1064c0:	00030152 	.word	0x00030152
  1064c4:	00050250 	.word	0x00050250
  1064c8:	00090149 	.word	0x00090149
  1064cc:	000a0145 	.word	0x000a0145
  1064d0:	000f0242 	.word	0x000f0242
  1064d4:	000a0341 	.word	0x000a0341
  1064d8:	000c0450 	.word	0x000c0450
  1064dc:	000a0241 	.word	0x000a0241
  1064e0:	000f0349 	.word	0x000f0349
  1064e4:	00140242 	.word	0x00140242
  1064e8:	001a0145 	.word	0x001a0145
  1064ec:	00400009 	.word	0x00400009
  1064f0:	f1a8 0331 	sub.w	r3, r8, #49	; 0x31
  1064f4:	2b08      	cmp	r3, #8
  1064f6:	d83e      	bhi.n	106576 <http_parser_execute+0x8e6>
  1064f8:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  1064fc:	f8a4 8010 	strh.w	r8, [r4, #16]
  106500:	2526      	movs	r5, #38	; 0x26
  106502:	e429      	b.n	105d58 <http_parser_execute+0xc8>
  106504:	f1b8 0f2e 	cmp.w	r8, #46	; 0x2e
  106508:	f001 8001 	beq.w	10750e <http_parser_execute+0x187e>
  10650c:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  106510:	2b09      	cmp	r3, #9
  106512:	d830      	bhi.n	106576 <http_parser_execute+0x8e6>
  106514:	8a23      	ldrh	r3, [r4, #16]
  106516:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  10651a:	eb08 0843 	add.w	r8, r8, r3, lsl #1
  10651e:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  106522:	fa1f f888 	uxth.w	r8, r8
  106526:	f8a4 8010 	strh.w	r8, [r4, #16]
  10652a:	e020      	b.n	10656e <http_parser_execute+0x8de>
  10652c:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  106530:	fa5f f388 	uxtb.w	r3, r8
  106534:	2b09      	cmp	r3, #9
  106536:	d81e      	bhi.n	106576 <http_parser_execute+0x8e6>
  106538:	f8a4 8012 	strh.w	r8, [r4, #18]
  10653c:	2528      	movs	r5, #40	; 0x28
  10653e:	e40b      	b.n	105d58 <http_parser_execute+0xc8>
  106540:	f1b8 0f0d 	cmp.w	r8, #13
  106544:	f000 87e6 	beq.w	107514 <http_parser_execute+0x1884>
  106548:	f1b8 0f0a 	cmp.w	r8, #10
  10654c:	f000 87e5 	beq.w	10751a <http_parser_execute+0x188a>
  106550:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  106554:	2b09      	cmp	r3, #9
  106556:	d80e      	bhi.n	106576 <http_parser_execute+0x8e6>
  106558:	8a63      	ldrh	r3, [r4, #18]
  10655a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  10655e:	eb08 0843 	add.w	r8, r8, r3, lsl #1
  106562:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  106566:	fa1f f888 	uxth.w	r8, r8
  10656a:	f8a4 8012 	strh.w	r8, [r4, #18]
  10656e:	f5b8 7f7a 	cmp.w	r8, #1000	; 0x3e8
  106572:	f4ff abf1 	bcc.w	105d58 <http_parser_execute+0xc8>
  106576:	7de3      	ldrb	r3, [r4, #23]
  106578:	220e      	movs	r2, #14
  10657a:	f000 bf39 	b.w	1073f0 <http_parser_execute+0x1760>
  10657e:	f1b8 0f0a 	cmp.w	r8, #10
  106582:	f000 87cd 	beq.w	107520 <http_parser_execute+0x1890>
  106586:	e3ad      	b.n	106ce4 <http_parser_execute+0x1054>
  106588:	4b9f      	ldr	r3, [pc, #636]	; (106808 <http_parser_execute+0xb78>)
  10658a:	f813 2008 	ldrb.w	r2, [r3, r8]
  10658e:	b91a      	cbnz	r2, 106598 <http_parser_execute+0x908>
  106590:	7de3      	ldrb	r3, [r4, #23]
  106592:	2218      	movs	r2, #24
  106594:	f000 bf2c 	b.w	1073f0 <http_parser_execute+0x1760>
  106598:	9b07      	ldr	r3, [sp, #28]
  10659a:	2b00      	cmp	r3, #0
  10659c:	bf08      	it	eq
  10659e:	4653      	moveq	r3, r10
  1065a0:	9307      	str	r3, [sp, #28]
  1065a2:	78e3      	ldrb	r3, [r4, #3]
  1065a4:	2a70      	cmp	r2, #112	; 0x70
  1065a6:	f36f 0306 	bfc	r3, #0, #7
  1065aa:	70e3      	strb	r3, [r4, #3]
  1065ac:	78a3      	ldrb	r3, [r4, #2]
  1065ae:	d014      	beq.n	1065da <http_parser_execute+0x94a>
  1065b0:	d808      	bhi.n	1065c4 <http_parser_execute+0x934>
  1065b2:	2a63      	cmp	r2, #99	; 0x63
  1065b4:	d11f      	bne.n	1065f6 <http_parser_execute+0x966>
  1065b6:	2201      	movs	r2, #1
  1065b8:	f362 0347 	bfi	r3, r2, #1, #7
  1065bc:	70a3      	strb	r3, [r4, #2]
  1065be:	252b      	movs	r5, #43	; 0x2b
  1065c0:	f7ff bbca 	b.w	105d58 <http_parser_execute+0xc8>
  1065c4:	2a74      	cmp	r2, #116	; 0x74
  1065c6:	d00f      	beq.n	1065e8 <http_parser_execute+0x958>
  1065c8:	2a75      	cmp	r2, #117	; 0x75
  1065ca:	d114      	bne.n	1065f6 <http_parser_execute+0x966>
  1065cc:	2208      	movs	r2, #8
  1065ce:	f362 0347 	bfi	r3, r2, #1, #7
  1065d2:	70a3      	strb	r3, [r4, #2]
  1065d4:	252b      	movs	r5, #43	; 0x2b
  1065d6:	f7ff bbbf 	b.w	105d58 <http_parser_execute+0xc8>
  1065da:	2205      	movs	r2, #5
  1065dc:	f362 0347 	bfi	r3, r2, #1, #7
  1065e0:	70a3      	strb	r3, [r4, #2]
  1065e2:	252b      	movs	r5, #43	; 0x2b
  1065e4:	f7ff bbb8 	b.w	105d58 <http_parser_execute+0xc8>
  1065e8:	2207      	movs	r2, #7
  1065ea:	f362 0347 	bfi	r3, r2, #1, #7
  1065ee:	70a3      	strb	r3, [r4, #2]
  1065f0:	252b      	movs	r5, #43	; 0x2b
  1065f2:	f7ff bbb1 	b.w	105d58 <http_parser_execute+0xc8>
  1065f6:	78a3      	ldrb	r3, [r4, #2]
  1065f8:	252b      	movs	r5, #43	; 0x2b
  1065fa:	f36f 0347 	bfc	r3, #1, #7
  1065fe:	70a3      	strb	r3, [r4, #2]
  106600:	f7ff bbaa 	b.w	105d58 <http_parser_execute+0xc8>
  106604:	4656      	mov	r6, r10
  106606:	4881      	ldr	r0, [pc, #516]	; (10680c <http_parser_execute+0xb7c>)
  106608:	4f81      	ldr	r7, [pc, #516]	; (106810 <http_parser_execute+0xb80>)
  10660a:	f04f 0c0c 	mov.w	r12, #12
  10660e:	f04f 0e0a 	mov.w	lr, #10
  106612:	9b04      	ldr	r3, [sp, #16]
  106614:	429e      	cmp	r6, r3
  106616:	f000 80ad 	beq.w	106774 <http_parser_execute+0xae4>
  10661a:	4631      	mov	r1, r6
  10661c:	4b7a      	ldr	r3, [pc, #488]	; (106808 <http_parser_execute+0xb78>)
  10661e:	f811 8b01 	ldrb.w	r8, [r1], #1
  106622:	f813 3008 	ldrb.w	r3, [r3, r8]
  106626:	2b00      	cmp	r3, #0
  106628:	f000 80a4 	beq.w	106774 <http_parser_execute+0xae4>
  10662c:	78a2      	ldrb	r2, [r4, #2]
  10662e:	0852      	lsrs	r2, r2, #1
  106630:	2a0c      	cmp	r2, #12
  106632:	f200 8097 	bhi.w	106764 <http_parser_execute+0xad4>
  106636:	e8df f002 	tbb	[pc, r2]
  10663a:	079b      	.short	0x079b
  10663c:	48331e11 	.word	0x48331e11
  106640:	917d6956 	.word	0x917d6956
  106644:	9191      	.short	0x9191
  106646:	91          	.byte	0x91
  106647:	00          	.byte	0x00
  106648:	78e2      	ldrb	r2, [r4, #3]
  10664a:	2b6f      	cmp	r3, #111	; 0x6f
  10664c:	f102 0601 	add.w	r6, r2, #1
  106650:	f366 0206 	bfi	r2, r6, #0, #7
  106654:	70e2      	strb	r2, [r4, #3]
  106656:	bf08      	it	eq
  106658:	2202      	moveq	r2, #2
  10665a:	e008      	b.n	10666e <http_parser_execute+0x9de>
  10665c:	78e2      	ldrb	r2, [r4, #3]
  10665e:	2b6e      	cmp	r3, #110	; 0x6e
  106660:	f102 0601 	add.w	r6, r2, #1
  106664:	f366 0206 	bfi	r2, r6, #0, #7
  106668:	70e2      	strb	r2, [r4, #3]
  10666a:	bf08      	it	eq
  10666c:	2203      	moveq	r2, #3
  10666e:	bf18      	it	ne
  106670:	2200      	movne	r2, #0
  106672:	78a3      	ldrb	r3, [r4, #2]
  106674:	e05b      	b.n	10672e <http_parser_execute+0xa9e>
  106676:	78e2      	ldrb	r2, [r4, #3]
  106678:	2b6e      	cmp	r3, #110	; 0x6e
  10667a:	f102 0601 	add.w	r6, r2, #1
  10667e:	f366 0206 	bfi	r2, r6, #0, #7
  106682:	70e2      	strb	r2, [r4, #3]
  106684:	78a2      	ldrb	r2, [r4, #2]
  106686:	d003      	beq.n	106690 <http_parser_execute+0xa00>
  106688:	2b74      	cmp	r3, #116	; 0x74
  10668a:	d105      	bne.n	106698 <http_parser_execute+0xa08>
  10668c:	2306      	movs	r3, #6
  10668e:	e000      	b.n	106692 <http_parser_execute+0xa02>
  106690:	2304      	movs	r3, #4
  106692:	f363 0247 	bfi	r2, r3, #1, #7
  106696:	e001      	b.n	10669c <http_parser_execute+0xa0c>
  106698:	f36f 0247 	bfc	r2, #1, #7
  10669c:	70a2      	strb	r2, [r4, #2]
  10669e:	e067      	b.n	106770 <http_parser_execute+0xae0>
  1066a0:	78e6      	ldrb	r6, [r4, #3]
  1066a2:	1c72      	adds	r2, r6, #1
  1066a4:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  1066a8:	f362 0606 	bfi	r6, r2, #0, #7
  1066ac:	2a0a      	cmp	r2, #10
  1066ae:	70e6      	strb	r6, [r4, #3]
  1066b0:	d802      	bhi.n	1066b8 <http_parser_execute+0xa28>
  1066b2:	5cbe      	ldrb	r6, [r7, r2]
  1066b4:	429e      	cmp	r6, r3
  1066b6:	d003      	beq.n	1066c0 <http_parser_execute+0xa30>
  1066b8:	78a3      	ldrb	r3, [r4, #2]
  1066ba:	f36f 0347 	bfc	r3, #1, #7
  1066be:	e04b      	b.n	106758 <http_parser_execute+0xac8>
  1066c0:	2a09      	cmp	r2, #9
  1066c2:	d155      	bne.n	106770 <http_parser_execute+0xae0>
  1066c4:	78a3      	ldrb	r3, [r4, #2]
  1066c6:	2209      	movs	r2, #9
  1066c8:	e031      	b.n	10672e <http_parser_execute+0xa9e>
  1066ca:	78e6      	ldrb	r6, [r4, #3]
  1066cc:	1c72      	adds	r2, r6, #1
  1066ce:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  1066d2:	f362 0606 	bfi	r6, r2, #0, #7
  1066d6:	2a10      	cmp	r2, #16
  1066d8:	70e6      	strb	r6, [r4, #3]
  1066da:	d8ed      	bhi.n	1066b8 <http_parser_execute+0xa28>
  1066dc:	5c86      	ldrb	r6, [r0, r2]
  1066de:	429e      	cmp	r6, r3
  1066e0:	d1ea      	bne.n	1066b8 <http_parser_execute+0xa28>
  1066e2:	2a0f      	cmp	r2, #15
  1066e4:	e7ed      	b.n	1066c2 <http_parser_execute+0xa32>
  1066e6:	78e6      	ldrb	r6, [r4, #3]
  1066e8:	1c72      	adds	r2, r6, #1
  1066ea:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  1066ee:	f362 0606 	bfi	r6, r2, #0, #7
  1066f2:	2a0e      	cmp	r2, #14
  1066f4:	70e6      	strb	r6, [r4, #3]
  1066f6:	d8df      	bhi.n	1066b8 <http_parser_execute+0xa28>
  1066f8:	4e46      	ldr	r6, [pc, #280]	; (106814 <http_parser_execute+0xb84>)
  1066fa:	5cb6      	ldrb	r6, [r6, r2]
  1066fc:	429e      	cmp	r6, r3
  1066fe:	d1db      	bne.n	1066b8 <http_parser_execute+0xa28>
  106700:	2a0d      	cmp	r2, #13
  106702:	d135      	bne.n	106770 <http_parser_execute+0xae0>
  106704:	78a3      	ldrb	r3, [r4, #2]
  106706:	f36e 0347 	bfi	r3, lr, #1, #7
  10670a:	e025      	b.n	106758 <http_parser_execute+0xac8>
  10670c:	78e6      	ldrb	r6, [r4, #3]
  10670e:	1c72      	adds	r2, r6, #1
  106710:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  106714:	f362 0606 	bfi	r6, r2, #0, #7
  106718:	2a11      	cmp	r2, #17
  10671a:	70e6      	strb	r6, [r4, #3]
  10671c:	d8cc      	bhi.n	1066b8 <http_parser_execute+0xa28>
  10671e:	4e3e      	ldr	r6, [pc, #248]	; (106818 <http_parser_execute+0xb88>)
  106720:	5cb6      	ldrb	r6, [r6, r2]
  106722:	429e      	cmp	r6, r3
  106724:	d1c8      	bne.n	1066b8 <http_parser_execute+0xa28>
  106726:	2a10      	cmp	r2, #16
  106728:	d122      	bne.n	106770 <http_parser_execute+0xae0>
  10672a:	78a3      	ldrb	r3, [r4, #2]
  10672c:	220b      	movs	r2, #11
  10672e:	f362 0347 	bfi	r3, r2, #1, #7
  106732:	e011      	b.n	106758 <http_parser_execute+0xac8>
  106734:	78e6      	ldrb	r6, [r4, #3]
  106736:	1c72      	adds	r2, r6, #1
  106738:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  10673c:	f362 0606 	bfi	r6, r2, #0, #7
  106740:	2a07      	cmp	r2, #7
  106742:	70e6      	strb	r6, [r4, #3]
  106744:	d8b8      	bhi.n	1066b8 <http_parser_execute+0xa28>
  106746:	4e35      	ldr	r6, [pc, #212]	; (10681c <http_parser_execute+0xb8c>)
  106748:	5cb6      	ldrb	r6, [r6, r2]
  10674a:	429e      	cmp	r6, r3
  10674c:	d1b4      	bne.n	1066b8 <http_parser_execute+0xa28>
  10674e:	2a06      	cmp	r2, #6
  106750:	d10e      	bne.n	106770 <http_parser_execute+0xae0>
  106752:	78a3      	ldrb	r3, [r4, #2]
  106754:	f36c 0347 	bfi	r3, r12, #1, #7
  106758:	70a3      	strb	r3, [r4, #2]
  10675a:	e009      	b.n	106770 <http_parser_execute+0xae0>
  10675c:	f1b8 0f20 	cmp.w	r8, #32
  106760:	d1aa      	bne.n	1066b8 <http_parser_execute+0xa28>
  106762:	e005      	b.n	106770 <http_parser_execute+0xae0>
  106764:	4b2e      	ldr	r3, [pc, #184]	; (106820 <http_parser_execute+0xb90>)
  106766:	4a2f      	ldr	r2, [pc, #188]	; (106824 <http_parser_execute+0xb94>)
  106768:	f240 5181 	movw	r1, #1409	; 0x581
  10676c:	f7ff bbfc 	b.w	105f68 <http_parser_execute+0x2d8>
  106770:	460e      	mov	r6, r1
  106772:	e74e      	b.n	106612 <http_parser_execute+0x982>
  106774:	6863      	ldr	r3, [r4, #4]
  106776:	ebca 0706 	rsb	r7, r10, r6
  10677a:	441f      	add	r7, r3
  10677c:	f5b7 5f00 	cmp.w	r7, #8192	; 0x2000
  106780:	6067      	str	r7, [r4, #4]
  106782:	d902      	bls.n	10678a <http_parser_execute+0xafa>
  106784:	7de3      	ldrb	r3, [r4, #23]
  106786:	220c      	movs	r2, #12
  106788:	e038      	b.n	1067fc <http_parser_execute+0xb6c>
  10678a:	9b04      	ldr	r3, [sp, #16]
  10678c:	429e      	cmp	r6, r3
  10678e:	d103      	bne.n	106798 <http_parser_execute+0xb08>
  106790:	f106 3aff 	add.w	r10, r6, #4294967295
  106794:	f7ff bae0 	b.w	105d58 <http_parser_execute+0xc8>
  106798:	f1b8 0f3a 	cmp.w	r8, #58	; 0x3a
  10679c:	7de3      	ldrb	r3, [r4, #23]
  10679e:	d12c      	bne.n	1067fa <http_parser_execute+0xb6a>
  1067a0:	065d      	lsls	r5, r3, #25
  1067a2:	d005      	beq.n	1067b0 <http_parser_execute+0xb20>
  1067a4:	4b20      	ldr	r3, [pc, #128]	; (106828 <http_parser_execute+0xb98>)
  1067a6:	4a1f      	ldr	r2, [pc, #124]	; (106824 <http_parser_execute+0xb94>)
  1067a8:	f240 518f 	movw	r1, #1423	; 0x58f
  1067ac:	f7ff bbdc 	b.w	105f68 <http_parser_execute+0x2d8>
  1067b0:	9b07      	ldr	r3, [sp, #28]
  1067b2:	2b00      	cmp	r3, #0
  1067b4:	f000 86ba 	beq.w	10752c <http_parser_execute+0x189c>
  1067b8:	f8d9 300c 	ldr.w	r3, [r9, #12]
  1067bc:	252c      	movs	r5, #44	; 0x2c
  1067be:	2b00      	cmp	r3, #0
  1067c0:	f000 86b8 	beq.w	107534 <http_parser_execute+0x18a4>
  1067c4:	6822      	ldr	r2, [r4, #0]
  1067c6:	9907      	ldr	r1, [sp, #28]
  1067c8:	f365 2290 	bfi	r2, r5, #10, #7
  1067cc:	6022      	str	r2, [r4, #0]
  1067ce:	9a07      	ldr	r2, [sp, #28]
  1067d0:	4620      	mov	r0, r4
  1067d2:	1ab2      	subs	r2, r6, r2
  1067d4:	4798      	blx	r3
  1067d6:	b120      	cbz	r0, 1067e2 <http_parser_execute+0xb52>
  1067d8:	7de3      	ldrb	r3, [r4, #23]
  1067da:	2203      	movs	r2, #3
  1067dc:	f362 0306 	bfi	r3, r2, #0, #7
  1067e0:	75e3      	strb	r3, [r4, #23]
  1067e2:	7de3      	ldrb	r3, [r4, #23]
  1067e4:	6825      	ldr	r5, [r4, #0]
  1067e6:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  1067ea:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1067ee:	f000 86a5 	beq.w	10753c <http_parser_execute+0x18ac>
  1067f2:	ebcb 0a06 	rsb	r10, r11, r6
  1067f6:	f000 be24 	b.w	107442 <http_parser_execute+0x17b2>
  1067fa:	2218      	movs	r2, #24
  1067fc:	f362 0306 	bfi	r3, r2, #0, #7
  106800:	75e3      	strb	r3, [r4, #23]
  106802:	46b2      	mov	r10, r6
  106804:	f000 bfa4 	b.w	107750 <http_parser_execute+0x1ac0>
  106808:	0011811c 	.word	0x0011811c
  10680c:	001183af 	.word	0x001183af
  106810:	001183b5 	.word	0x001183b5
  106814:	0011603e 	.word	0x0011603e
  106818:	001183c0 	.word	0x001183c0
  10681c:	001183d2 	.word	0x001183d2
  106820:	00118250 	.word	0x00118250
  106824:	00118b56 	.word	0x00118b56
  106828:	0011821c 	.word	0x0011821c
  10682c:	f1b8 0f20 	cmp.w	r8, #32
  106830:	f43f aa92 	beq.w	105d58 <http_parser_execute+0xc8>
  106834:	f1b8 0f09 	cmp.w	r8, #9
  106838:	f43f aa8e 	beq.w	105d58 <http_parser_execute+0xc8>
  10683c:	f1b8 0f0d 	cmp.w	r8, #13
  106840:	f000 8680 	beq.w	107544 <http_parser_execute+0x18b4>
  106844:	f1b8 0f0a 	cmp.w	r8, #10
  106848:	f000 867f 	beq.w	10754a <http_parser_execute+0x18ba>
  10684c:	9b01      	ldr	r3, [sp, #4]
  10684e:	f048 0220 	orr.w	r2, r8, #32
  106852:	2b00      	cmp	r3, #0
  106854:	bf08      	it	eq
  106856:	4653      	moveq	r3, r10
  106858:	9301      	str	r3, [sp, #4]
  10685a:	78e3      	ldrb	r3, [r4, #3]
  10685c:	f36f 0306 	bfc	r3, #0, #7
  106860:	70e3      	strb	r3, [r4, #3]
  106862:	78a3      	ldrb	r3, [r4, #2]
  106864:	085b      	lsrs	r3, r3, #1
  106866:	3b09      	subs	r3, #9
  106868:	2b05      	cmp	r3, #5
  10686a:	d85e      	bhi.n	10692a <http_parser_execute+0xc9a>
  10686c:	e8df f013 	tbh	[pc, r3, lsl #1]
  106870:	001d0040 	.word	0x001d0040
  106874:	00060011 	.word	0x00060011
  106878:	0670005d 	.word	0x0670005d
  10687c:	8823      	ldrh	r3, [r4, #0]
  10687e:	2530      	movs	r5, #48	; 0x30
  106880:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  106884:	8023      	strh	r3, [r4, #0]
  106886:	78a3      	ldrb	r3, [r4, #2]
  106888:	f36f 0347 	bfc	r3, #1, #7
  10688c:	70a3      	strb	r3, [r4, #2]
  10688e:	f7ff ba63 	b.w	105d58 <http_parser_execute+0xc8>
  106892:	2a63      	cmp	r2, #99	; 0x63
  106894:	78a3      	ldrb	r3, [r4, #2]
  106896:	bf06      	itte	eq
  106898:	220d      	moveq	r2, #13
  10689a:	f362 0347 	bfieq	r3, r2, #1, #7
  10689e:	f36f 0347 	bfcne	r3, #1, #7
  1068a2:	70a3      	strb	r3, [r4, #2]
  1068a4:	2530      	movs	r5, #48	; 0x30
  1068a6:	f7ff ba57 	b.w	105d58 <http_parser_execute+0xc8>
  1068aa:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  1068ae:	fa5f f388 	uxtb.w	r3, r8
  1068b2:	2b09      	cmp	r3, #9
  1068b4:	d902      	bls.n	1068bc <http_parser_execute+0xc2c>
  1068b6:	7de3      	ldrb	r3, [r4, #23]
  1068b8:	2219      	movs	r2, #25
  1068ba:	e007      	b.n	1068cc <http_parser_execute+0xc3c>
  1068bc:	8823      	ldrh	r3, [r4, #0]
  1068be:	f3c3 0187 	ubfx	r1, r3, #2, #8
  1068c2:	b2ca      	uxtb	r2, r1
  1068c4:	0609      	lsls	r1, r1, #24
  1068c6:	d507      	bpl.n	1068d8 <http_parser_execute+0xc48>
  1068c8:	7de3      	ldrb	r3, [r4, #23]
  1068ca:	221a      	movs	r2, #26
  1068cc:	f362 0306 	bfi	r3, r2, #0, #7
  1068d0:	75e3      	strb	r3, [r4, #23]
  1068d2:	2530      	movs	r5, #48	; 0x30
  1068d4:	f000 bf3c 	b.w	107750 <http_parser_execute+0x1ac0>
  1068d8:	f062 027f 	orn	r2, r2, #127	; 0x7f
  1068dc:	f362 0389 	bfi	r3, r2, #2, #8
  1068e0:	4642      	mov	r2, r8
  1068e2:	8023      	strh	r3, [r4, #0]
  1068e4:	17d3      	asrs	r3, r2, #31
  1068e6:	e9c4 2302 	strd	r2, r3, [r4, #8]
  1068ea:	2530      	movs	r5, #48	; 0x30
  1068ec:	f7ff ba34 	b.w	105d58 <http_parser_execute+0xc8>
  1068f0:	2a6b      	cmp	r2, #107	; 0x6b
  1068f2:	78a3      	ldrb	r3, [r4, #2]
  1068f4:	d106      	bne.n	106904 <http_parser_execute+0xc74>
  1068f6:	220f      	movs	r2, #15
  1068f8:	f362 0347 	bfi	r3, r2, #1, #7
  1068fc:	70a3      	strb	r3, [r4, #2]
  1068fe:	2530      	movs	r5, #48	; 0x30
  106900:	f7ff ba2a 	b.w	105d58 <http_parser_execute+0xc8>
  106904:	2a63      	cmp	r2, #99	; 0x63
  106906:	d106      	bne.n	106916 <http_parser_execute+0xc86>
  106908:	2210      	movs	r2, #16
  10690a:	f362 0347 	bfi	r3, r2, #1, #7
  10690e:	70a3      	strb	r3, [r4, #2]
  106910:	2530      	movs	r5, #48	; 0x30
  106912:	f7ff ba21 	b.w	105d58 <http_parser_execute+0xc8>
  106916:	2a75      	cmp	r2, #117	; 0x75
  106918:	bf0c      	ite	eq
  10691a:	2211      	moveq	r2, #17
  10691c:	2212      	movne	r2, #18
  10691e:	f362 0347 	bfi	r3, r2, #1, #7
  106922:	70a3      	strb	r3, [r4, #2]
  106924:	2530      	movs	r5, #48	; 0x30
  106926:	f7ff ba17 	b.w	105d58 <http_parser_execute+0xc8>
  10692a:	78a3      	ldrb	r3, [r4, #2]
  10692c:	2530      	movs	r5, #48	; 0x30
  10692e:	f36f 0347 	bfc	r3, #1, #7
  106932:	70a3      	strb	r3, [r4, #2]
  106934:	f7ff ba10 	b.w	105d58 <http_parser_execute+0xc8>
  106938:	4657      	mov	r7, r10
  10693a:	78a6      	ldrb	r6, [r4, #2]
  10693c:	0876      	lsrs	r6, r6, #1
  10693e:	9b04      	ldr	r3, [sp, #16]
  106940:	429f      	cmp	r7, r3
  106942:	f000 81af 	beq.w	106ca4 <http_parser_execute+0x1014>
  106946:	f897 8000 	ldrb.w	r8, [r7]
  10694a:	f1b8 0f0d 	cmp.w	r8, #13
  10694e:	d131      	bne.n	1069b4 <http_parser_execute+0xd24>
  106950:	78a3      	ldrb	r3, [r4, #2]
  106952:	f366 0347 	bfi	r3, r6, #1, #7
  106956:	70a3      	strb	r3, [r4, #2]
  106958:	7de3      	ldrb	r3, [r4, #23]
  10695a:	065b      	lsls	r3, r3, #25
  10695c:	d005      	beq.n	10696a <http_parser_execute+0xcda>
  10695e:	4ba8      	ldr	r3, [pc, #672]	; (106c00 <http_parser_execute+0xf70>)
  106960:	4aa8      	ldr	r2, [pc, #672]	; (106c04 <http_parser_execute+0xf74>)
  106962:	f240 51ef 	movw	r1, #1519	; 0x5ef
  106966:	f7ff baff 	b.w	105f68 <http_parser_execute+0x2d8>
  10696a:	9b01      	ldr	r3, [sp, #4]
  10696c:	2b00      	cmp	r3, #0
  10696e:	f000 8195 	beq.w	106c9c <http_parser_execute+0x100c>
  106972:	f8d9 3010 	ldr.w	r3, [r9, #16]
  106976:	2b00      	cmp	r3, #0
  106978:	f000 8192 	beq.w	106ca0 <http_parser_execute+0x1010>
  10697c:	6822      	ldr	r2, [r4, #0]
  10697e:	2132      	movs	r1, #50	; 0x32
  106980:	f361 2290 	bfi	r2, r1, #10, #7
  106984:	6022      	str	r2, [r4, #0]
  106986:	9a01      	ldr	r2, [sp, #4]
  106988:	9901      	ldr	r1, [sp, #4]
  10698a:	1aba      	subs	r2, r7, r2
  10698c:	4620      	mov	r0, r4
  10698e:	4798      	blx	r3
  106990:	b120      	cbz	r0, 10699c <http_parser_execute+0xd0c>
  106992:	7de3      	ldrb	r3, [r4, #23]
  106994:	2204      	movs	r2, #4
  106996:	f362 0306 	bfi	r3, r2, #0, #7
  10699a:	75e3      	strb	r3, [r4, #23]
  10699c:	7de3      	ldrb	r3, [r4, #23]
  10699e:	6825      	ldr	r5, [r4, #0]
  1069a0:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  1069a4:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1069a8:	f000 817b 	beq.w	106ca2 <http_parser_execute+0x1012>
  1069ac:	ebcb 0a07 	rsb	r10, r11, r7
  1069b0:	f000 bd47 	b.w	107442 <http_parser_execute+0x17b2>
  1069b4:	f1b8 0f0a 	cmp.w	r8, #10
  1069b8:	d150      	bne.n	106a5c <http_parser_execute+0xdcc>
  1069ba:	6863      	ldr	r3, [r4, #4]
  1069bc:	ebca 0007 	rsb	r0, r10, r7
  1069c0:	4418      	add	r0, r3
  1069c2:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
  1069c6:	6060      	str	r0, [r4, #4]
  1069c8:	d908      	bls.n	1069dc <http_parser_execute+0xd4c>
  1069ca:	7de3      	ldrb	r3, [r4, #23]
  1069cc:	220c      	movs	r2, #12
  1069ce:	f362 0306 	bfi	r3, r2, #0, #7
  1069d2:	75e3      	strb	r3, [r4, #23]
  1069d4:	46ba      	mov	r10, r7
  1069d6:	2532      	movs	r5, #50	; 0x32
  1069d8:	f000 beba 	b.w	107750 <http_parser_execute+0x1ac0>
  1069dc:	78a3      	ldrb	r3, [r4, #2]
  1069de:	f366 0347 	bfi	r3, r6, #1, #7
  1069e2:	70a3      	strb	r3, [r4, #2]
  1069e4:	7de3      	ldrb	r3, [r4, #23]
  1069e6:	065e      	lsls	r6, r3, #25
  1069e8:	d005      	beq.n	1069f6 <http_parser_execute+0xd66>
  1069ea:	4b85      	ldr	r3, [pc, #532]	; (106c00 <http_parser_execute+0xf70>)
  1069ec:	4a85      	ldr	r2, [pc, #532]	; (106c04 <http_parser_execute+0xf74>)
  1069ee:	f240 51f7 	movw	r1, #1527	; 0x5f7
  1069f2:	f7ff bab9 	b.w	105f68 <http_parser_execute+0x2d8>
  1069f6:	9b01      	ldr	r3, [sp, #4]
  1069f8:	b91b      	cbnz	r3, 106a02 <http_parser_execute+0xd72>
  1069fa:	46ba      	mov	r10, r7
  1069fc:	2532      	movs	r5, #50	; 0x32
  1069fe:	f7ff b9ca 	b.w	105d96 <http_parser_execute+0x106>
  106a02:	f8d9 3010 	ldr.w	r3, [r9, #16]
  106a06:	2532      	movs	r5, #50	; 0x32
  106a08:	b973      	cbnz	r3, 106a28 <http_parser_execute+0xd98>
  106a0a:	46ba      	mov	r10, r7
  106a0c:	e009      	b.n	106a22 <http_parser_execute+0xd92>
  106a0e:	9b01      	ldr	r3, [sp, #4]
  106a10:	2b00      	cmp	r3, #0
  106a12:	f000 818c 	beq.w	106d2e <http_parser_execute+0x109e>
  106a16:	f8d9 3010 	ldr.w	r3, [r9, #16]
  106a1a:	2b00      	cmp	r3, #0
  106a1c:	f040 81bf 	bne.w	106d9e <http_parser_execute+0x110e>
  106a20:	252a      	movs	r5, #42	; 0x2a
  106a22:	9301      	str	r3, [sp, #4]
  106a24:	f7ff b9b7 	b.w	105d96 <http_parser_execute+0x106>
  106a28:	6822      	ldr	r2, [r4, #0]
  106a2a:	9901      	ldr	r1, [sp, #4]
  106a2c:	f365 2290 	bfi	r2, r5, #10, #7
  106a30:	6022      	str	r2, [r4, #0]
  106a32:	9a01      	ldr	r2, [sp, #4]
  106a34:	4620      	mov	r0, r4
  106a36:	1aba      	subs	r2, r7, r2
  106a38:	4798      	blx	r3
  106a3a:	b120      	cbz	r0, 106a46 <http_parser_execute+0xdb6>
  106a3c:	7de3      	ldrb	r3, [r4, #23]
  106a3e:	2204      	movs	r2, #4
  106a40:	f362 0306 	bfi	r3, r2, #0, #7
  106a44:	75e3      	strb	r3, [r4, #23]
  106a46:	7de3      	ldrb	r3, [r4, #23]
  106a48:	6825      	ldr	r5, [r4, #0]
  106a4a:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  106a4e:	f3c5 2586 	ubfx	r5, r5, #10, #7
  106a52:	d0da      	beq.n	106a0a <http_parser_execute+0xd7a>
  106a54:	ebcb 0007 	rsb	r0, r11, r7
  106a58:	f000 be8b 	b.w	107772 <http_parser_execute+0x1ae2>
  106a5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  106a5e:	b95b      	cbnz	r3, 106a78 <http_parser_execute+0xde8>
  106a60:	f1b8 0f09 	cmp.w	r8, #9
  106a64:	d008      	beq.n	106a78 <http_parser_execute+0xde8>
  106a66:	f1b8 0f1f 	cmp.w	r8, #31
  106a6a:	d802      	bhi.n	106a72 <http_parser_execute+0xde2>
  106a6c:	7de3      	ldrb	r3, [r4, #23]
  106a6e:	2218      	movs	r2, #24
  106a70:	e126      	b.n	106cc0 <http_parser_execute+0x1030>
  106a72:	f1b8 0f7f 	cmp.w	r8, #127	; 0x7f
  106a76:	d0f9      	beq.n	106a6c <http_parser_execute+0xddc>
  106a78:	f048 0320 	orr.w	r3, r8, #32
  106a7c:	2e16      	cmp	r6, #22
  106a7e:	f200 8102 	bhi.w	106c86 <http_parser_execute+0xff6>
  106a82:	e8df f016 	tbh	[pc, r6, lsl #1]
  106a86:	0017      	.short	0x0017
  106a88:	01000100 	.word	0x01000100
  106a8c:	01000100 	.word	0x01000100
  106a90:	01000100 	.word	0x01000100
  106a94:	01000100 	.word	0x01000100
  106a98:	0041003b 	.word	0x0041003b
  106a9c:	0100003b 	.word	0x0100003b
  106aa0:	00880077 	.word	0x00880077
  106aa4:	00a50094 	.word	0x00a50094
  106aa8:	00dc00cb 	.word	0x00dc00cb
  106aac:	00e500e0 	.word	0x00e500e0
  106ab0:	00e500e5 	.word	0x00e500e5
  106ab4:	9b04      	ldr	r3, [sp, #16]
  106ab6:	210d      	movs	r1, #13
  106ab8:	1bdb      	subs	r3, r3, r7
  106aba:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
  106abe:	bf28      	it	cs
  106ac0:	f44f 5300 	movcs.w	r3, #8192	; 0x2000
  106ac4:	461a      	mov	r2, r3
  106ac6:	4638      	mov	r0, r7
  106ac8:	9308      	str	r3, [sp, #32]
  106aca:	f009 f9e9 	bl	10fea0 <memchr>
  106ace:	4680      	mov	r8, r0
  106ad0:	9b08      	ldr	r3, [sp, #32]
  106ad2:	210a      	movs	r1, #10
  106ad4:	461a      	mov	r2, r3
  106ad6:	4638      	mov	r0, r7
  106ad8:	f009 f9e2 	bl	10fea0 <memchr>
  106adc:	f1b8 0f00 	cmp.w	r8, #0
  106ae0:	d004      	beq.n	106aec <http_parser_execute+0xe5c>
  106ae2:	b140      	cbz	r0, 106af6 <http_parser_execute+0xe66>
  106ae4:	4580      	cmp	r8, r0
  106ae6:	bf28      	it	cs
  106ae8:	4680      	movcs	r8, r0
  106aea:	e004      	b.n	106af6 <http_parser_execute+0xe66>
  106aec:	9b04      	ldr	r3, [sp, #16]
  106aee:	2800      	cmp	r0, #0
  106af0:	bf18      	it	ne
  106af2:	4603      	movne	r3, r0
  106af4:	4698      	mov	r8, r3
  106af6:	f108 37ff 	add.w	r7, r8, #4294967295
  106afa:	e0cd      	b.n	106c98 <http_parser_execute+0x1008>
  106afc:	4b42      	ldr	r3, [pc, #264]	; (106c08 <http_parser_execute+0xf78>)
  106afe:	4a41      	ldr	r2, [pc, #260]	; (106c04 <http_parser_execute+0xf74>)
  106b00:	f240 611e 	movw	r1, #1566	; 0x61e
  106b04:	f7ff ba30 	b.w	105f68 <http_parser_execute+0x2d8>
  106b08:	f1b8 0f20 	cmp.w	r8, #32
  106b0c:	f000 80c4 	beq.w	106c98 <http_parser_execute+0x1008>
  106b10:	f1a8 0830 	sub.w	r8, r8, #48	; 0x30
  106b14:	fa5f f388 	uxtb.w	r3, r8
  106b18:	2b09      	cmp	r3, #9
  106b1a:	d90a      	bls.n	106b32 <http_parser_execute+0xea2>
  106b1c:	7de3      	ldrb	r3, [r4, #23]
  106b1e:	2219      	movs	r2, #25
  106b20:	f362 0306 	bfi	r3, r2, #0, #7
  106b24:	75e3      	strb	r3, [r4, #23]
  106b26:	78a3      	ldrb	r3, [r4, #2]
  106b28:	220a      	movs	r2, #10
  106b2a:	f362 0347 	bfi	r3, r2, #1, #7
  106b2e:	70a3      	strb	r3, [r4, #2]
  106b30:	e0c9      	b.n	106cc6 <http_parser_execute+0x1036>
  106b32:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
  106b36:	e9cd 2308 	strd	r2, r3, [sp, #32]
  106b3a:	9a08      	ldr	r2, [sp, #32]
  106b3c:	230a      	movs	r3, #10
  106b3e:	fba2 2303 	umull	r2, r3, r2, r3
  106b42:	9909      	ldr	r1, [sp, #36]	; 0x24
  106b44:	f04f 0e0a 	mov.w	lr, #10
  106b48:	fb0e 3301 	mla	r3, lr, r1, r3
  106b4c:	eb12 0008 	adds.w	r0, r2, r8
  106b50:	eb43 71e8 	adc.w	r1, r3, r8, asr #31
  106b54:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  106b58:	a327      	add	r3, pc, #156	; (adr r3, 106bf8 <http_parser_execute+0xf68>)
  106b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
  106b5e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  106b62:	428b      	cmp	r3, r1
  106b64:	bf08      	it	eq
  106b66:	4282      	cmpeq	r2, r0
  106b68:	d3d8      	bcc.n	106b1c <http_parser_execute+0xe8c>
  106b6a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  106b6e:	e9c4 2302 	strd	r2, r3, [r4, #8]
  106b72:	e091      	b.n	106c98 <http_parser_execute+0x1008>
  106b74:	78e1      	ldrb	r1, [r4, #3]
  106b76:	1c4a      	adds	r2, r1, #1
  106b78:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  106b7c:	f362 0106 	bfi	r1, r2, #0, #7
  106b80:	2a07      	cmp	r2, #7
  106b82:	70e1      	strb	r1, [r4, #3]
  106b84:	d87f      	bhi.n	106c86 <http_parser_execute+0xff6>
  106b86:	4921      	ldr	r1, [pc, #132]	; (106c0c <http_parser_execute+0xf7c>)
  106b88:	5c89      	ldrb	r1, [r1, r2]
  106b8a:	4299      	cmp	r1, r3
  106b8c:	d17b      	bne.n	106c86 <http_parser_execute+0xff6>
  106b8e:	2a06      	cmp	r2, #6
  106b90:	bf08      	it	eq
  106b92:	2613      	moveq	r6, #19
  106b94:	e080      	b.n	106c98 <http_parser_execute+0x1008>
  106b96:	2b6b      	cmp	r3, #107	; 0x6b
  106b98:	d077      	beq.n	106c8a <http_parser_execute+0xffa>
  106b9a:	2b63      	cmp	r3, #99	; 0x63
  106b9c:	d077      	beq.n	106c8e <http_parser_execute+0xffe>
  106b9e:	2b75      	cmp	r3, #117	; 0x75
  106ba0:	d077      	beq.n	106c92 <http_parser_execute+0x1002>
  106ba2:	4a1b      	ldr	r2, [pc, #108]	; (106c10 <http_parser_execute+0xf80>)
  106ba4:	5cd2      	ldrb	r2, [r2, r3]
  106ba6:	2a00      	cmp	r2, #0
  106ba8:	d175      	bne.n	106c96 <http_parser_execute+0x1006>
  106baa:	2b20      	cmp	r3, #32
  106bac:	e04d      	b.n	106c4a <http_parser_execute+0xfba>
  106bae:	78e1      	ldrb	r1, [r4, #3]
  106bb0:	1c4a      	adds	r2, r1, #1
  106bb2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  106bb6:	f362 0106 	bfi	r1, r2, #0, #7
  106bba:	2a0a      	cmp	r2, #10
  106bbc:	70e1      	strb	r1, [r4, #3]
  106bbe:	d86a      	bhi.n	106c96 <http_parser_execute+0x1006>
  106bc0:	4914      	ldr	r1, [pc, #80]	; (106c14 <http_parser_execute+0xf84>)
  106bc2:	5c89      	ldrb	r1, [r1, r2]
  106bc4:	4299      	cmp	r1, r3
  106bc6:	d166      	bne.n	106c96 <http_parser_execute+0x1006>
  106bc8:	2a09      	cmp	r2, #9
  106bca:	bf08      	it	eq
  106bcc:	2614      	moveq	r6, #20
  106bce:	e063      	b.n	106c98 <http_parser_execute+0x1008>
  106bd0:	78e1      	ldrb	r1, [r4, #3]
  106bd2:	1c4a      	adds	r2, r1, #1
  106bd4:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  106bd8:	f362 0106 	bfi	r1, r2, #0, #7
  106bdc:	2a05      	cmp	r2, #5
  106bde:	70e1      	strb	r1, [r4, #3]
  106be0:	d859      	bhi.n	106c96 <http_parser_execute+0x1006>
  106be2:	490d      	ldr	r1, [pc, #52]	; (106c18 <http_parser_execute+0xf88>)
  106be4:	5c89      	ldrb	r1, [r1, r2]
  106be6:	4299      	cmp	r1, r3
  106be8:	d155      	bne.n	106c96 <http_parser_execute+0x1006>
  106bea:	2a04      	cmp	r2, #4
  106bec:	bf08      	it	eq
  106bee:	2615      	moveq	r6, #21
  106bf0:	e052      	b.n	106c98 <http_parser_execute+0x1008>
  106bf2:	bf00      	nop
  106bf4:	f3af 8000 	nop.w
  106bf8:	99999998 	.word	0x99999998
  106bfc:	19999999 	.word	0x19999999
  106c00:	0011821c 	.word	0x0011821c
  106c04:	00118b56 	.word	0x00118b56
  106c08:	0011826c 	.word	0x0011826c
  106c0c:	001183da 	.word	0x001183da
  106c10:	0011811c 	.word	0x0011811c
  106c14:	001183e2 	.word	0x001183e2
  106c18:	001183ed 	.word	0x001183ed
  106c1c:	78e1      	ldrb	r1, [r4, #3]
  106c1e:	1c4a      	adds	r2, r1, #1
  106c20:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  106c24:	f362 0106 	bfi	r1, r2, #0, #7
  106c28:	2a07      	cmp	r2, #7
  106c2a:	70e1      	strb	r1, [r4, #3]
  106c2c:	d833      	bhi.n	106c96 <http_parser_execute+0x1006>
  106c2e:	49ab      	ldr	r1, [pc, #684]	; (106edc <http_parser_execute+0x124c>)
  106c30:	5c89      	ldrb	r1, [r1, r2]
  106c32:	4299      	cmp	r1, r3
  106c34:	d12f      	bne.n	106c96 <http_parser_execute+0x1006>
  106c36:	2a06      	cmp	r2, #6
  106c38:	bf08      	it	eq
  106c3a:	2616      	moveq	r6, #22
  106c3c:	e02c      	b.n	106c98 <http_parser_execute+0x1008>
  106c3e:	f1b8 0f2c 	cmp.w	r8, #44	; 0x2c
  106c42:	d129      	bne.n	106c98 <http_parser_execute+0x1008>
  106c44:	e014      	b.n	106c70 <http_parser_execute+0xfe0>
  106c46:	f1b8 0f20 	cmp.w	r8, #32
  106c4a:	bf18      	it	ne
  106c4c:	2600      	movne	r6, #0
  106c4e:	e023      	b.n	106c98 <http_parser_execute+0x1008>
  106c50:	f1b8 0f2c 	cmp.w	r8, #44	; 0x2c
  106c54:	d112      	bne.n	106c7c <http_parser_execute+0xfec>
  106c56:	2e14      	cmp	r6, #20
  106c58:	8823      	ldrh	r3, [r4, #0]
  106c5a:	d102      	bne.n	106c62 <http_parser_execute+0xfd2>
  106c5c:	f043 0308 	orr.w	r3, r3, #8
  106c60:	e005      	b.n	106c6e <http_parser_execute+0xfde>
  106c62:	2e15      	cmp	r6, #21
  106c64:	bf0c      	ite	eq
  106c66:	f043 0310 	orreq.w	r3, r3, #16
  106c6a:	f043 0320 	orrne.w	r3, r3, #32
  106c6e:	8023      	strh	r3, [r4, #0]
  106c70:	78e3      	ldrb	r3, [r4, #3]
  106c72:	260e      	movs	r6, #14
  106c74:	f36f 0306 	bfc	r3, #0, #7
  106c78:	70e3      	strb	r3, [r4, #3]
  106c7a:	e00d      	b.n	106c98 <http_parser_execute+0x1008>
  106c7c:	f1b8 0f20 	cmp.w	r8, #32
  106c80:	bf18      	it	ne
  106c82:	2612      	movne	r6, #18
  106c84:	e008      	b.n	106c98 <http_parser_execute+0x1008>
  106c86:	2600      	movs	r6, #0
  106c88:	e006      	b.n	106c98 <http_parser_execute+0x1008>
  106c8a:	260f      	movs	r6, #15
  106c8c:	e004      	b.n	106c98 <http_parser_execute+0x1008>
  106c8e:	2610      	movs	r6, #16
  106c90:	e002      	b.n	106c98 <http_parser_execute+0x1008>
  106c92:	2611      	movs	r6, #17
  106c94:	e000      	b.n	106c98 <http_parser_execute+0x1008>
  106c96:	2612      	movs	r6, #18
  106c98:	3701      	adds	r7, #1
  106c9a:	e650      	b.n	10693e <http_parser_execute+0xcae>
  106c9c:	2532      	movs	r5, #50	; 0x32
  106c9e:	e001      	b.n	106ca4 <http_parser_execute+0x1014>
  106ca0:	2532      	movs	r5, #50	; 0x32
  106ca2:	9301      	str	r3, [sp, #4]
  106ca4:	78a3      	ldrb	r3, [r4, #2]
  106ca6:	ebca 0007 	rsb	r0, r10, r7
  106caa:	f366 0347 	bfi	r3, r6, #1, #7
  106cae:	70a3      	strb	r3, [r4, #2]
  106cb0:	6863      	ldr	r3, [r4, #4]
  106cb2:	4418      	add	r0, r3
  106cb4:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
  106cb8:	6060      	str	r0, [r4, #4]
  106cba:	d907      	bls.n	106ccc <http_parser_execute+0x103c>
  106cbc:	7de3      	ldrb	r3, [r4, #23]
  106cbe:	220c      	movs	r2, #12
  106cc0:	f362 0306 	bfi	r3, r2, #0, #7
  106cc4:	75e3      	strb	r3, [r4, #23]
  106cc6:	46ba      	mov	r10, r7
  106cc8:	f000 bd42 	b.w	107750 <http_parser_execute+0x1ac0>
  106ccc:	9b04      	ldr	r3, [sp, #16]
  106cce:	42bb      	cmp	r3, r7
  106cd0:	f040 8441 	bne.w	107556 <http_parser_execute+0x18c6>
  106cd4:	f103 3aff 	add.w	r10, r3, #4294967295
  106cd8:	f7ff b83e 	b.w	105d58 <http_parser_execute+0xc8>
  106cdc:	f1b8 0f0a 	cmp.w	r8, #10
  106ce0:	f000 843c 	beq.w	10755c <http_parser_execute+0x18cc>
  106ce4:	7de3      	ldrb	r3, [r4, #23]
  106ce6:	2217      	movs	r2, #23
  106ce8:	e382      	b.n	1073f0 <http_parser_execute+0x1760>
  106cea:	f1b8 0f20 	cmp.w	r8, #32
  106cee:	d102      	bne.n	106cf6 <http_parser_execute+0x1066>
  106cf0:	252f      	movs	r5, #47	; 0x2f
  106cf2:	f7ff b850 	b.w	105d96 <http_parser_execute+0x106>
  106cf6:	f1b8 0f09 	cmp.w	r8, #9
  106cfa:	d0f9      	beq.n	106cf0 <http_parser_execute+0x1060>
  106cfc:	78a3      	ldrb	r3, [r4, #2]
  106cfe:	085b      	lsrs	r3, r3, #1
  106d00:	3b13      	subs	r3, #19
  106d02:	2b03      	cmp	r3, #3
  106d04:	d813      	bhi.n	106d2e <http_parser_execute+0x109e>
  106d06:	e8df f003 	tbb	[pc, r3]
  106d0a:	020a      	.short	0x020a
  106d0c:	0e06      	.short	0x0e06
  106d0e:	8823      	ldrh	r3, [r4, #0]
  106d10:	f043 0308 	orr.w	r3, r3, #8
  106d14:	e00a      	b.n	106d2c <http_parser_execute+0x109c>
  106d16:	8823      	ldrh	r3, [r4, #0]
  106d18:	f043 0310 	orr.w	r3, r3, #16
  106d1c:	e006      	b.n	106d2c <http_parser_execute+0x109c>
  106d1e:	8823      	ldrh	r3, [r4, #0]
  106d20:	f043 0304 	orr.w	r3, r3, #4
  106d24:	e002      	b.n	106d2c <http_parser_execute+0x109c>
  106d26:	8823      	ldrh	r3, [r4, #0]
  106d28:	f043 0320 	orr.w	r3, r3, #32
  106d2c:	8023      	strh	r3, [r4, #0]
  106d2e:	252a      	movs	r5, #42	; 0x2a
  106d30:	f7ff b831 	b.w	105d96 <http_parser_execute+0x106>
  106d34:	f1b8 0f0a 	cmp.w	r8, #10
  106d38:	f000 8413 	beq.w	107562 <http_parser_execute+0x18d2>
  106d3c:	e356      	b.n	1073ec <http_parser_execute+0x175c>
  106d3e:	f1b8 0f20 	cmp.w	r8, #32
  106d42:	f000 8411 	beq.w	107568 <http_parser_execute+0x18d8>
  106d46:	f1b8 0f09 	cmp.w	r8, #9
  106d4a:	f000 8410 	beq.w	10756e <http_parser_execute+0x18de>
  106d4e:	78a3      	ldrb	r3, [r4, #2]
  106d50:	085b      	lsrs	r3, r3, #1
  106d52:	3b13      	subs	r3, #19
  106d54:	2b03      	cmp	r3, #3
  106d56:	d813      	bhi.n	106d80 <http_parser_execute+0x10f0>
  106d58:	e8df f003 	tbb	[pc, r3]
  106d5c:	0a06020e 	.word	0x0a06020e
  106d60:	8823      	ldrh	r3, [r4, #0]
  106d62:	f043 0308 	orr.w	r3, r3, #8
  106d66:	e00a      	b.n	106d7e <http_parser_execute+0x10ee>
  106d68:	8823      	ldrh	r3, [r4, #0]
  106d6a:	f043 0310 	orr.w	r3, r3, #16
  106d6e:	e006      	b.n	106d7e <http_parser_execute+0x10ee>
  106d70:	8823      	ldrh	r3, [r4, #0]
  106d72:	f043 0320 	orr.w	r3, r3, #32
  106d76:	e002      	b.n	106d7e <http_parser_execute+0x10ee>
  106d78:	8823      	ldrh	r3, [r4, #0]
  106d7a:	f043 0304 	orr.w	r3, r3, #4
  106d7e:	8023      	strh	r3, [r4, #0]
  106d80:	9b01      	ldr	r3, [sp, #4]
  106d82:	2b00      	cmp	r3, #0
  106d84:	bf08      	it	eq
  106d86:	4653      	moveq	r3, r10
  106d88:	9301      	str	r3, [sp, #4]
  106d8a:	7de3      	ldrb	r3, [r4, #23]
  106d8c:	065d      	lsls	r5, r3, #25
  106d8e:	f43f ae3e 	beq.w	106a0e <http_parser_execute+0xd7e>
  106d92:	4b53      	ldr	r3, [pc, #332]	; (106ee0 <http_parser_execute+0x1250>)
  106d94:	4a53      	ldr	r2, [pc, #332]	; (106ee4 <http_parser_execute+0x1254>)
  106d96:	f240 61ee 	movw	r1, #1774	; 0x6ee
  106d9a:	f7ff b8e5 	b.w	105f68 <http_parser_execute+0x2d8>
  106d9e:	6822      	ldr	r2, [r4, #0]
  106da0:	212a      	movs	r1, #42	; 0x2a
  106da2:	f361 2290 	bfi	r2, r1, #10, #7
  106da6:	6022      	str	r2, [r4, #0]
  106da8:	9a01      	ldr	r2, [sp, #4]
  106daa:	9901      	ldr	r1, [sp, #4]
  106dac:	ebc2 020a 	rsb	r2, r2, r10
  106db0:	4620      	mov	r0, r4
  106db2:	4798      	blx	r3
  106db4:	b120      	cbz	r0, 106dc0 <http_parser_execute+0x1130>
  106db6:	7de3      	ldrb	r3, [r4, #23]
  106db8:	2204      	movs	r2, #4
  106dba:	f362 0306 	bfi	r3, r2, #0, #7
  106dbe:	75e3      	strb	r3, [r4, #23]
  106dc0:	7de3      	ldrb	r3, [r4, #23]
  106dc2:	6825      	ldr	r5, [r4, #0]
  106dc4:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  106dc8:	f3c5 2586 	ubfx	r5, r5, #10, #7
  106dcc:	f43f ae29 	beq.w	106a22 <http_parser_execute+0xd92>
  106dd0:	f000 bcc9 	b.w	107766 <http_parser_execute+0x1ad6>
  106dd4:	f1b8 0f0a 	cmp.w	r8, #10
  106dd8:	f040 8308 	bne.w	1073ec <http_parser_execute+0x175c>
  106ddc:	8822      	ldrh	r2, [r4, #0]
  106dde:	f3c2 0287 	ubfx	r2, r2, #2, #8
  106de2:	b2d3      	uxtb	r3, r2
  106de4:	06d9      	lsls	r1, r3, #27
  106de6:	d522      	bpl.n	106e2e <http_parser_execute+0x119e>
  106de8:	7de3      	ldrb	r3, [r4, #23]
  106dea:	065a      	lsls	r2, r3, #25
  106dec:	d005      	beq.n	106dfa <http_parser_execute+0x116a>
  106dee:	4b3c      	ldr	r3, [pc, #240]	; (106ee0 <http_parser_execute+0x1250>)
  106df0:	4a3c      	ldr	r2, [pc, #240]	; (106ee4 <http_parser_execute+0x1254>)
  106df2:	f240 61fa 	movw	r1, #1786	; 0x6fa
  106df6:	f7ff b8b7 	b.w	105f68 <http_parser_execute+0x2d8>
  106dfa:	f8d9 3024 	ldr.w	r3, [r9, #36]	; 0x24
  106dfe:	253e      	movs	r5, #62	; 0x3e
  106e00:	2b00      	cmp	r3, #0
  106e02:	f43e afc8 	beq.w	105d96 <http_parser_execute+0x106>
  106e06:	6822      	ldr	r2, [r4, #0]
  106e08:	4620      	mov	r0, r4
  106e0a:	f365 2290 	bfi	r2, r5, #10, #7
  106e0e:	6022      	str	r2, [r4, #0]
  106e10:	4798      	blx	r3
  106e12:	b118      	cbz	r0, 106e1c <http_parser_execute+0x118c>
  106e14:	7de3      	ldrb	r3, [r4, #23]
  106e16:	f368 0306 	bfi	r3, r8, #0, #7
  106e1a:	75e3      	strb	r3, [r4, #23]
  106e1c:	7de3      	ldrb	r3, [r4, #23]
  106e1e:	6825      	ldr	r5, [r4, #0]
  106e20:	065b      	lsls	r3, r3, #25
  106e22:	f3c5 2586 	ubfx	r5, r5, #10, #7
  106e26:	f43e afb6 	beq.w	105d96 <http_parser_execute+0x106>
  106e2a:	f000 bc9c 	b.w	107766 <http_parser_execute+0x1ad6>
  106e2e:	07df      	lsls	r7, r3, #31
  106e30:	d504      	bpl.n	106e3c <http_parser_execute+0x11ac>
  106e32:	0616      	lsls	r6, r2, #24
  106e34:	d502      	bpl.n	106e3c <http_parser_execute+0x11ac>
  106e36:	7de3      	ldrb	r3, [r4, #23]
  106e38:	221a      	movs	r2, #26
  106e3a:	e2d9      	b.n	1073f0 <http_parser_execute+0x1760>
  106e3c:	f003 0328 	and.w	r3, r3, #40	; 0x28
  106e40:	2b28      	cmp	r3, #40	; 0x28
  106e42:	d004      	beq.n	106e4e <http_parser_execute+0x11be>
  106e44:	7da3      	ldrb	r3, [r4, #22]
  106e46:	1f59      	subs	r1, r3, #5
  106e48:	424b      	negs	r3, r1
  106e4a:	414b      	adcs	r3, r1
  106e4c:	e000      	b.n	106e50 <http_parser_execute+0x11c0>
  106e4e:	2301      	movs	r3, #1
  106e50:	7de2      	ldrb	r2, [r4, #23]
  106e52:	f363 12c7 	bfi	r2, r3, #7, #1
  106e56:	75e2      	strb	r2, [r4, #23]
  106e58:	f8d9 3014 	ldr.w	r3, [r9, #20]
  106e5c:	b1cb      	cbz	r3, 106e92 <http_parser_execute+0x1202>
  106e5e:	4620      	mov	r0, r4
  106e60:	4798      	blx	r3
  106e62:	2801      	cmp	r0, #1
  106e64:	d011      	beq.n	106e8a <http_parser_execute+0x11fa>
  106e66:	2802      	cmp	r0, #2
  106e68:	d00b      	beq.n	106e82 <http_parser_execute+0x11f2>
  106e6a:	b190      	cbz	r0, 106e92 <http_parser_execute+0x1202>
  106e6c:	7de3      	ldrb	r3, [r4, #23]
  106e6e:	2205      	movs	r2, #5
  106e70:	f362 0306 	bfi	r3, r2, #0, #7
  106e74:	75e3      	strb	r3, [r4, #23]
  106e76:	6823      	ldr	r3, [r4, #0]
  106e78:	2238      	movs	r2, #56	; 0x38
  106e7a:	f362 2390 	bfi	r3, r2, #10, #7
  106e7e:	f000 bc71 	b.w	107764 <http_parser_execute+0x1ad4>
  106e82:	7de3      	ldrb	r3, [r4, #23]
  106e84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  106e88:	75e3      	strb	r3, [r4, #23]
  106e8a:	8823      	ldrh	r3, [r4, #0]
  106e8c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  106e90:	8023      	strh	r3, [r4, #0]
  106e92:	7de3      	ldrb	r3, [r4, #23]
  106e94:	2538      	movs	r5, #56	; 0x38
  106e96:	f013 0f7f 	tst.w	r3, #127	; 0x7f
  106e9a:	f43e af7c 	beq.w	105d96 <http_parser_execute+0x106>
  106e9e:	f000 bc5e 	b.w	10775e <http_parser_execute+0x1ace>
  106ea2:	f1b8 0f0a 	cmp.w	r8, #10
  106ea6:	f040 82a1 	bne.w	1073ec <http_parser_execute+0x175c>
  106eaa:	8825      	ldrh	r5, [r4, #0]
  106eac:	2300      	movs	r3, #0
  106eae:	f3c5 0587 	ubfx	r5, r5, #2, #8
  106eb2:	f015 0601 	ands.w	r6, r5, #1
  106eb6:	6063      	str	r3, [r4, #4]
  106eb8:	d116      	bne.n	106ee8 <http_parser_execute+0x1258>
  106eba:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
  106ebe:	f112 32ff 	adds.w	r2, r2, #4294967295
  106ec2:	f143 33ff 	adc.w	r3, r3, #4294967295
  106ec6:	f04f 31ff 	mov.w	r1, #4294967295
  106eca:	4299      	cmp	r1, r3
  106ecc:	f06f 0002 	mvn.w	r0, #2
  106ed0:	bf08      	it	eq
  106ed2:	4290      	cmpeq	r0, r2
  106ed4:	bf2c      	ite	cs
  106ed6:	2301      	movcs	r3, #1
  106ed8:	2300      	movcc	r3, #0
  106eda:	e006      	b.n	106eea <http_parser_execute+0x125a>
  106edc:	001183d2 	.word	0x001183d2
  106ee0:	0011821c 	.word	0x0011821c
  106ee4:	00118b56 	.word	0x00118b56
  106ee8:	2301      	movs	r3, #1
  106eea:	7de1      	ldrb	r1, [r4, #23]
  106eec:	060a      	lsls	r2, r1, #24
  106eee:	d537      	bpl.n	106f60 <http_parser_execute+0x12d0>
  106ef0:	7da2      	ldrb	r2, [r4, #22]
  106ef2:	2a05      	cmp	r2, #5
  106ef4:	d105      	bne.n	106f02 <http_parser_execute+0x1272>
  106ef6:	4620      	mov	r0, r4
  106ef8:	f7fe feae 	bl	105c58 <http_should_keep_alive>
  106efc:	b928      	cbnz	r0, 106f0a <http_parser_execute+0x127a>
  106efe:	2301      	movs	r3, #1
  106f00:	e009      	b.n	106f16 <http_parser_execute+0x1286>
  106f02:	066f      	lsls	r7, r5, #25
  106f04:	d4f7      	bmi.n	106ef6 <http_parser_execute+0x1266>
  106f06:	bb5b      	cbnz	r3, 106f60 <http_parser_execute+0x12d0>
  106f08:	e7f5      	b.n	106ef6 <http_parser_execute+0x1266>
  106f0a:	7823      	ldrb	r3, [r4, #0]
  106f0c:	f013 0f03 	tst.w	r3, #3
  106f10:	bf0c      	ite	eq
  106f12:	2312      	moveq	r3, #18
  106f14:	2304      	movne	r3, #4
  106f16:	0649      	lsls	r1, r1, #25
  106f18:	d005      	beq.n	106f26 <http_parser_execute+0x1296>
  106f1a:	4ba4      	ldr	r3, [pc, #656]	; (1071ac <http_parser_execute+0x151c>)
  106f1c:	4aa4      	ldr	r2, [pc, #656]	; (1071b0 <http_parser_execute+0x1520>)
  106f1e:	f240 713d 	movw	r1, #1853	; 0x73d
  106f22:	f7ff b821 	b.w	105f68 <http_parser_execute+0x2d8>
  106f26:	f8d9 201c 	ldr.w	r2, [r9, #28]
  106f2a:	ebcb 0a0a 	rsb	r10, r11, r10
  106f2e:	b192      	cbz	r2, 106f56 <http_parser_execute+0x12c6>
  106f30:	6821      	ldr	r1, [r4, #0]
  106f32:	4620      	mov	r0, r4
  106f34:	f363 2190 	bfi	r1, r3, #10, #7
  106f38:	6021      	str	r1, [r4, #0]
  106f3a:	4790      	blx	r2
  106f3c:	b120      	cbz	r0, 106f48 <http_parser_execute+0x12b8>
  106f3e:	7de3      	ldrb	r3, [r4, #23]
  106f40:	2207      	movs	r2, #7
  106f42:	f362 0306 	bfi	r3, r2, #0, #7
  106f46:	75e3      	strb	r3, [r4, #23]
  106f48:	7de2      	ldrb	r2, [r4, #23]
  106f4a:	6823      	ldr	r3, [r4, #0]
  106f4c:	0652      	lsls	r2, r2, #25
  106f4e:	f3c3 2386 	ubfx	r3, r3, #10, #7
  106f52:	f040 8276 	bne.w	107442 <http_parser_execute+0x17b2>
  106f56:	6822      	ldr	r2, [r4, #0]
  106f58:	f363 2290 	bfi	r2, r3, #10, #7
  106f5c:	6022      	str	r2, [r4, #0]
  106f5e:	e270      	b.n	107442 <http_parser_execute+0x17b2>
  106f60:	066f      	lsls	r7, r5, #25
  106f62:	d513      	bpl.n	106f8c <http_parser_execute+0x12fc>
  106f64:	4620      	mov	r0, r4
  106f66:	f7fe fe77 	bl	105c58 <http_should_keep_alive>
  106f6a:	b130      	cbz	r0, 106f7a <http_parser_execute+0x12ea>
  106f6c:	7823      	ldrb	r3, [r4, #0]
  106f6e:	f013 0f03 	tst.w	r3, #3
  106f72:	bf0c      	ite	eq
  106f74:	2512      	moveq	r5, #18
  106f76:	2504      	movne	r5, #4
  106f78:	e000      	b.n	106f7c <http_parser_execute+0x12ec>
  106f7a:	2501      	movs	r5, #1
  106f7c:	064e      	lsls	r6, r1, #25
  106f7e:	d041      	beq.n	107004 <http_parser_execute+0x1374>
  106f80:	4b8a      	ldr	r3, [pc, #552]	; (1071ac <http_parser_execute+0x151c>)
  106f82:	4a8b      	ldr	r2, [pc, #556]	; (1071b0 <http_parser_execute+0x1520>)
  106f84:	f240 7143 	movw	r1, #1859	; 0x743
  106f88:	f7fe bfee 	b.w	105f68 <http_parser_execute+0x2d8>
  106f8c:	2e00      	cmp	r6, #0
  106f8e:	f040 82f1 	bne.w	107574 <http_parser_execute+0x18e4>
  106f92:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
  106f96:	ea52 0003 	orrs.w	r0, r2, r3
  106f9a:	d113      	bne.n	106fc4 <http_parser_execute+0x1334>
  106f9c:	4620      	mov	r0, r4
  106f9e:	f7fe fe5b 	bl	105c58 <http_should_keep_alive>
  106fa2:	b130      	cbz	r0, 106fb2 <http_parser_execute+0x1322>
  106fa4:	7823      	ldrb	r3, [r4, #0]
  106fa6:	f013 0f03 	tst.w	r3, #3
  106faa:	bf0c      	ite	eq
  106fac:	2512      	moveq	r5, #18
  106fae:	2504      	movne	r5, #4
  106fb0:	e000      	b.n	106fb4 <http_parser_execute+0x1324>
  106fb2:	2501      	movs	r5, #1
  106fb4:	0649      	lsls	r1, r1, #25
  106fb6:	d025      	beq.n	107004 <http_parser_execute+0x1374>
  106fb8:	4b7c      	ldr	r3, [pc, #496]	; (1071ac <http_parser_execute+0x151c>)
  106fba:	4a7d      	ldr	r2, [pc, #500]	; (1071b0 <http_parser_execute+0x1520>)
  106fbc:	f240 714b 	movw	r1, #1867	; 0x74b
  106fc0:	f7fe bfd2 	b.w	105f68 <http_parser_execute+0x2d8>
  106fc4:	3301      	adds	r3, #1
  106fc6:	bf08      	it	eq
  106fc8:	f1b2 3fff 	cmpeq.w	r2, #4294967295
  106fcc:	f040 82d5 	bne.w	10757a <http_parser_execute+0x18ea>
  106fd0:	4620      	mov	r0, r4
  106fd2:	f7fe fe21 	bl	105c18 <http_message_needs_eof(http_parser const*)>
  106fd6:	2800      	cmp	r0, #0
  106fd8:	f040 82d2 	bne.w	107580 <http_parser_execute+0x18f0>
  106fdc:	4620      	mov	r0, r4
  106fde:	f7fe fe3b 	bl	105c58 <http_should_keep_alive>
  106fe2:	b130      	cbz	r0, 106ff2 <http_parser_execute+0x1362>
  106fe4:	7823      	ldrb	r3, [r4, #0]
  106fe6:	f013 0f03 	tst.w	r3, #3
  106fea:	bf0c      	ite	eq
  106fec:	2512      	moveq	r5, #18
  106fee:	2504      	movne	r5, #4
  106ff0:	e000      	b.n	106ff4 <http_parser_execute+0x1364>
  106ff2:	2501      	movs	r5, #1
  106ff4:	064a      	lsls	r2, r1, #25
  106ff6:	d005      	beq.n	107004 <http_parser_execute+0x1374>
  106ff8:	4b6c      	ldr	r3, [pc, #432]	; (1071ac <http_parser_execute+0x151c>)
  106ffa:	4a6d      	ldr	r2, [pc, #436]	; (1071b0 <http_parser_execute+0x1520>)
  106ffc:	f240 7153 	movw	r1, #1875	; 0x753
  107000:	f7fe bfb2 	b.w	105f68 <http_parser_execute+0x2d8>
  107004:	f8d9 301c 	ldr.w	r3, [r9, #28]
  107008:	2b00      	cmp	r3, #0
  10700a:	f43e aea5 	beq.w	105d58 <http_parser_execute+0xc8>
  10700e:	6822      	ldr	r2, [r4, #0]
  107010:	4620      	mov	r0, r4
  107012:	f365 2290 	bfi	r2, r5, #10, #7
  107016:	6022      	str	r2, [r4, #0]
  107018:	4798      	blx	r3
  10701a:	2800      	cmp	r0, #0
  10701c:	f000 8208 	beq.w	107430 <http_parser_execute+0x17a0>
  107020:	7de3      	ldrb	r3, [r4, #23]
  107022:	2207      	movs	r2, #7
  107024:	e150      	b.n	1072c8 <http_parser_execute+0x1638>
  107026:	9b04      	ldr	r3, [sp, #16]
  107028:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
  10702c:	ebca 0203 	rsb	r2, r10, r3
  107030:	4616      	mov	r6, r2
  107032:	17d7      	asrs	r7, r2, #31
  107034:	42b9      	cmp	r1, r7
  107036:	bf08      	it	eq
  107038:	4290      	cmpeq	r0, r2
  10703a:	e9cd 6708 	strd	r6, r7, [sp, #32]
  10703e:	d201      	bcs.n	107044 <http_parser_execute+0x13b4>
  107040:	e9cd 0108 	strd	r0, r1, [sp, #32]
  107044:	f110 36ff 	adds.w	r6, r0, #4294967295
  107048:	f141 37ff 	adc.w	r7, r1, #4294967295
  10704c:	f04f 33ff 	mov.w	r3, #4294967295
  107050:	f06f 0202 	mvn.w	r2, #2
  107054:	42bb      	cmp	r3, r7
  107056:	bf08      	it	eq
  107058:	42b2      	cmpeq	r2, r6
  10705a:	d205      	bcs.n	107068 <http_parser_execute+0x13d8>
  10705c:	4b55      	ldr	r3, [pc, #340]	; (1071b4 <http_parser_execute+0x1524>)
  10705e:	4a54      	ldr	r2, [pc, #336]	; (1071b0 <http_parser_execute+0x1520>)
  107060:	f240 7164 	movw	r1, #1892	; 0x764
  107064:	f7fe bf80 	b.w	105f68 <http_parser_execute+0x2d8>
  107068:	9e02      	ldr	r6, [sp, #8]
  10706a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  10706e:	2e00      	cmp	r6, #0
  107070:	bf08      	it	eq
  107072:	4656      	moveq	r6, r10
  107074:	1a82      	subs	r2, r0, r2
  107076:	eb61 0303 	sbc.w	r3, r1, r3
  10707a:	4610      	mov	r0, r2
  10707c:	4619      	mov	r1, r3
  10707e:	9b08      	ldr	r3, [sp, #32]
  107080:	9602      	str	r6, [sp, #8]
  107082:	1e5a      	subs	r2, r3, #1
  107084:	ea50 0301 	orrs.w	r3, r0, r1
  107088:	e9c4 0102 	strd	r0, r1, [r4, #8]
  10708c:	4492      	add	r10, r2
  10708e:	f47e ae63 	bne.w	105d58 <http_parser_execute+0xc8>
  107092:	7de3      	ldrb	r3, [r4, #23]
  107094:	065b      	lsls	r3, r3, #25
  107096:	d005      	beq.n	1070a4 <http_parser_execute+0x1414>
  107098:	4b44      	ldr	r3, [pc, #272]	; (1071ac <http_parser_execute+0x151c>)
  10709a:	4a45      	ldr	r2, [pc, #276]	; (1071b0 <http_parser_execute+0x1520>)
  10709c:	f240 717b 	movw	r1, #1915	; 0x77b
  1070a0:	f7fe bf62 	b.w	105f68 <http_parser_execute+0x2d8>
  1070a4:	9b02      	ldr	r3, [sp, #8]
  1070a6:	b913      	cbnz	r3, 1070ae <http_parser_execute+0x141e>
  1070a8:	253e      	movs	r5, #62	; 0x3e
  1070aa:	f7fe be74 	b.w	105d96 <http_parser_execute+0x106>
  1070ae:	f8d9 3018 	ldr.w	r3, [r9, #24]
  1070b2:	b91b      	cbnz	r3, 1070bc <http_parser_execute+0x142c>
  1070b4:	253e      	movs	r5, #62	; 0x3e
  1070b6:	9302      	str	r3, [sp, #8]
  1070b8:	f7fe be6d 	b.w	105d96 <http_parser_execute+0x106>
  1070bc:	6822      	ldr	r2, [r4, #0]
  1070be:	213e      	movs	r1, #62	; 0x3e
  1070c0:	f361 2290 	bfi	r2, r1, #10, #7
  1070c4:	6022      	str	r2, [r4, #0]
  1070c6:	9a02      	ldr	r2, [sp, #8]
  1070c8:	9902      	ldr	r1, [sp, #8]
  1070ca:	ebc2 020a 	rsb	r2, r2, r10
  1070ce:	3201      	adds	r2, #1
  1070d0:	4620      	mov	r0, r4
  1070d2:	4798      	blx	r3
  1070d4:	b120      	cbz	r0, 1070e0 <http_parser_execute+0x1450>
  1070d6:	7de3      	ldrb	r3, [r4, #23]
  1070d8:	2206      	movs	r2, #6
  1070da:	f362 0306 	bfi	r3, r2, #0, #7
  1070de:	75e3      	strb	r3, [r4, #23]
  1070e0:	7de3      	ldrb	r3, [r4, #23]
  1070e2:	6825      	ldr	r5, [r4, #0]
  1070e4:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  1070e8:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1070ec:	d0e3      	beq.n	1070b6 <http_parser_execute+0x1426>
  1070ee:	e33a      	b.n	107766 <http_parser_execute+0x1ad6>
  1070f0:	9b02      	ldr	r3, [sp, #8]
  1070f2:	2b00      	cmp	r3, #0
  1070f4:	bf08      	it	eq
  1070f6:	4653      	moveq	r3, r10
  1070f8:	9302      	str	r3, [sp, #8]
  1070fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  1070fc:	1e58      	subs	r0, r3, #1
  1070fe:	eb0b 0a00 	add.w	r10, r11, r0
  107102:	f7fe be29 	b.w	105d58 <http_parser_execute+0xc8>
  107106:	4620      	mov	r0, r4
  107108:	f7fe fda6 	bl	105c58 <http_should_keep_alive>
  10710c:	b130      	cbz	r0, 10711c <http_parser_execute+0x148c>
  10710e:	7823      	ldrb	r3, [r4, #0]
  107110:	f013 0f03 	tst.w	r3, #3
  107114:	bf0c      	ite	eq
  107116:	2512      	moveq	r5, #18
  107118:	2504      	movne	r5, #4
  10711a:	e000      	b.n	10711e <http_parser_execute+0x148e>
  10711c:	2501      	movs	r5, #1
  10711e:	7de3      	ldrb	r3, [r4, #23]
  107120:	065f      	lsls	r7, r3, #25
  107122:	d005      	beq.n	107130 <http_parser_execute+0x14a0>
  107124:	4b21      	ldr	r3, [pc, #132]	; (1071ac <http_parser_execute+0x151c>)
  107126:	4a22      	ldr	r2, [pc, #136]	; (1071b0 <http_parser_execute+0x1520>)
  107128:	f240 718b 	movw	r1, #1931	; 0x78b
  10712c:	f7fe bf1c 	b.w	105f68 <http_parser_execute+0x2d8>
  107130:	f8d9 301c 	ldr.w	r3, [r9, #28]
  107134:	b193      	cbz	r3, 10715c <http_parser_execute+0x14cc>
  107136:	6822      	ldr	r2, [r4, #0]
  107138:	4620      	mov	r0, r4
  10713a:	f365 2290 	bfi	r2, r5, #10, #7
  10713e:	6022      	str	r2, [r4, #0]
  107140:	4798      	blx	r3
  107142:	b120      	cbz	r0, 10714e <http_parser_execute+0x14be>
  107144:	7de3      	ldrb	r3, [r4, #23]
  107146:	2207      	movs	r2, #7
  107148:	f362 0306 	bfi	r3, r2, #0, #7
  10714c:	75e3      	strb	r3, [r4, #23]
  10714e:	7de3      	ldrb	r3, [r4, #23]
  107150:	6825      	ldr	r5, [r4, #0]
  107152:	065e      	lsls	r6, r3, #25
  107154:	f3c5 2586 	ubfx	r5, r5, #10, #7
  107158:	f040 8171 	bne.w	10743e <http_parser_execute+0x17ae>
  10715c:	7de3      	ldrb	r3, [r4, #23]
  10715e:	0619      	lsls	r1, r3, #24
  107160:	f57e adfa 	bpl.w	105d58 <http_parser_execute+0xc8>
  107164:	6823      	ldr	r3, [r4, #0]
  107166:	f365 2390 	bfi	r3, r5, #10, #7
  10716a:	6023      	str	r3, [r4, #0]
  10716c:	e167      	b.n	10743e <http_parser_execute+0x17ae>
  10716e:	6863      	ldr	r3, [r4, #4]
  107170:	2b01      	cmp	r3, #1
  107172:	d005      	beq.n	107180 <http_parser_execute+0x14f0>
  107174:	4b10      	ldr	r3, [pc, #64]	; (1071b8 <http_parser_execute+0x1528>)
  107176:	4a0e      	ldr	r2, [pc, #56]	; (1071b0 <http_parser_execute+0x1520>)
  107178:	f240 7194 	movw	r1, #1940	; 0x794
  10717c:	f7fe bef4 	b.w	105f68 <http_parser_execute+0x2d8>
  107180:	8823      	ldrh	r3, [r4, #0]
  107182:	075a      	lsls	r2, r3, #29
  107184:	d405      	bmi.n	107192 <http_parser_execute+0x1502>
  107186:	4b0d      	ldr	r3, [pc, #52]	; (1071bc <http_parser_execute+0x152c>)
  107188:	4a09      	ldr	r2, [pc, #36]	; (1071b0 <http_parser_execute+0x1520>)
  10718a:	f240 7195 	movw	r1, #1941	; 0x795
  10718e:	f7fe beeb 	b.w	105f68 <http_parser_execute+0x2d8>
  107192:	4b0b      	ldr	r3, [pc, #44]	; (1071c0 <http_parser_execute+0x1530>)
  107194:	f813 2008 	ldrb.w	r2, [r3, r8]
  107198:	2aff      	cmp	r2, #255	; 0xff
  10719a:	d02d      	beq.n	1071f8 <http_parser_execute+0x1568>
  10719c:	b252      	sxtb	r2, r2
  10719e:	17d3      	asrs	r3, r2, #31
  1071a0:	e9c4 2302 	strd	r2, r3, [r4, #8]
  1071a4:	2534      	movs	r5, #52	; 0x34
  1071a6:	f7fe bdd7 	b.w	105d58 <http_parser_execute+0xc8>
  1071aa:	bf00      	nop
  1071ac:	0011821c 	.word	0x0011821c
  1071b0:	00118b56 	.word	0x00118b56
  1071b4:	00118287 	.word	0x00118287
  1071b8:	001182cb 	.word	0x001182cb
  1071bc:	001182de 	.word	0x001182de
  1071c0:	00117ffc 	.word	0x00117ffc
  1071c4:	8823      	ldrh	r3, [r4, #0]
  1071c6:	075b      	lsls	r3, r3, #29
  1071c8:	d405      	bmi.n	1071d6 <http_parser_execute+0x1546>
  1071ca:	4bb5      	ldr	r3, [pc, #724]	; (1074a0 <http_parser_execute+0x1810>)
  1071cc:	4ab5      	ldr	r2, [pc, #724]	; (1074a4 <http_parser_execute+0x1814>)
  1071ce:	f240 71a6 	movw	r1, #1958	; 0x7a6
  1071d2:	f7fe bec9 	b.w	105f68 <http_parser_execute+0x2d8>
  1071d6:	f1b8 0f0d 	cmp.w	r8, #13
  1071da:	f000 81d4 	beq.w	107586 <http_parser_execute+0x18f6>
  1071de:	4bb2      	ldr	r3, [pc, #712]	; (1074a8 <http_parser_execute+0x1818>)
  1071e0:	f813 2008 	ldrb.w	r2, [r3, r8]
  1071e4:	2aff      	cmp	r2, #255	; 0xff
  1071e6:	d10a      	bne.n	1071fe <http_parser_execute+0x156e>
  1071e8:	f1b8 0f3b 	cmp.w	r8, #59	; 0x3b
  1071ec:	f000 81ce 	beq.w	10758c <http_parser_execute+0x18fc>
  1071f0:	f1b8 0f20 	cmp.w	r8, #32
  1071f4:	f000 81cd 	beq.w	107592 <http_parser_execute+0x1902>
  1071f8:	7de3      	ldrb	r3, [r4, #23]
  1071fa:	221b      	movs	r2, #27
  1071fc:	e0f8      	b.n	1073f0 <http_parser_execute+0x1760>
  1071fe:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
  107202:	010b      	lsls	r3, r1, #4
  107204:	ea43 7310 	orr.w	r3, r3, r0, lsr #28
  107208:	930b      	str	r3, [sp, #44]	; 0x2c
  10720a:	0103      	lsls	r3, r0, #4
  10720c:	b252      	sxtb	r2, r2
  10720e:	930a      	str	r3, [sp, #40]	; 0x28
  107210:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
  107214:	17d3      	asrs	r3, r2, #31
  107216:	18b6      	adds	r6, r6, r2
  107218:	415f      	adcs	r7, r3
  10721a:	463b      	mov	r3, r7
  10721c:	f06f 4770 	mvn.w	r7, #4026531840	; 0xf0000000
  107220:	4632      	mov	r2, r6
  107222:	428f      	cmp	r7, r1
  107224:	f06f 0601 	mvn.w	r6, #1
  107228:	bf08      	it	eq
  10722a:	4286      	cmpeq	r6, r0
  10722c:	d202      	bcs.n	107234 <http_parser_execute+0x15a4>
  10722e:	7de3      	ldrb	r3, [r4, #23]
  107230:	2219      	movs	r2, #25
  107232:	e0dd      	b.n	1073f0 <http_parser_execute+0x1760>
  107234:	e9c4 2302 	strd	r2, r3, [r4, #8]
  107238:	f7fe bd8e 	b.w	105d58 <http_parser_execute+0xc8>
  10723c:	8823      	ldrh	r3, [r4, #0]
  10723e:	075f      	lsls	r7, r3, #29
  107240:	d405      	bmi.n	10724e <http_parser_execute+0x15be>
  107242:	4b97      	ldr	r3, [pc, #604]	; (1074a0 <http_parser_execute+0x1810>)
  107244:	4a97      	ldr	r2, [pc, #604]	; (1074a4 <http_parser_execute+0x1814>)
  107246:	f240 71c9 	movw	r1, #1993	; 0x7c9
  10724a:	f7fe be8d 	b.w	105f68 <http_parser_execute+0x2d8>
  10724e:	f1b8 0f0d 	cmp.w	r8, #13
  107252:	bf08      	it	eq
  107254:	2536      	moveq	r5, #54	; 0x36
  107256:	f7fe bd7f 	b.w	105d58 <http_parser_execute+0xc8>
  10725a:	8821      	ldrh	r1, [r4, #0]
  10725c:	f3c1 0087 	ubfx	r0, r1, #2, #8
  107260:	07c6      	lsls	r6, r0, #31
  107262:	d405      	bmi.n	107270 <http_parser_execute+0x15e0>
  107264:	4b8e      	ldr	r3, [pc, #568]	; (1074a0 <http_parser_execute+0x1810>)
  107266:	4a8f      	ldr	r2, [pc, #572]	; (1074a4 <http_parser_execute+0x1814>)
  107268:	f240 71d4 	movw	r1, #2004	; 0x7d4
  10726c:	f7fe be7c 	b.w	105f68 <http_parser_execute+0x2d8>
  107270:	f1b8 0f0a 	cmp.w	r8, #10
  107274:	f040 80ba 	bne.w	1073ec <http_parser_execute+0x175c>
  107278:	2300      	movs	r3, #0
  10727a:	6063      	str	r3, [r4, #4]
  10727c:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
  107280:	4313      	orrs	r3, r2
  107282:	bf01      	itttt	eq
  107284:	460b      	moveq	r3, r1
  107286:	f040 0010 	orreq.w	r0, r0, #16
  10728a:	f360 0389 	bfieq	r3, r0, #2, #8
  10728e:	8023      	strheq	r3, [r4, #0]
  107290:	7de3      	ldrb	r3, [r4, #23]
  107292:	bf0c      	ite	eq
  107294:	252a      	moveq	r5, #42	; 0x2a
  107296:	2539      	movne	r5, #57	; 0x39
  107298:	065a      	lsls	r2, r3, #25
  10729a:	d005      	beq.n	1072a8 <http_parser_execute+0x1618>
  10729c:	4b83      	ldr	r3, [pc, #524]	; (1074ac <http_parser_execute+0x181c>)
  10729e:	4a81      	ldr	r2, [pc, #516]	; (1074a4 <http_parser_execute+0x1814>)
  1072a0:	f240 71df 	movw	r1, #2015	; 0x7df
  1072a4:	f7fe be60 	b.w	105f68 <http_parser_execute+0x2d8>
  1072a8:	f8d9 3020 	ldr.w	r3, [r9, #32]
  1072ac:	2b00      	cmp	r3, #0
  1072ae:	f43e ad53 	beq.w	105d58 <http_parser_execute+0xc8>
  1072b2:	6822      	ldr	r2, [r4, #0]
  1072b4:	4620      	mov	r0, r4
  1072b6:	f365 2290 	bfi	r2, r5, #10, #7
  1072ba:	6022      	str	r2, [r4, #0]
  1072bc:	4798      	blx	r3
  1072be:	2800      	cmp	r0, #0
  1072c0:	f000 80b6 	beq.w	107430 <http_parser_execute+0x17a0>
  1072c4:	7de3      	ldrb	r3, [r4, #23]
  1072c6:	2209      	movs	r2, #9
  1072c8:	f362 0306 	bfi	r3, r2, #0, #7
  1072cc:	e0af      	b.n	10742e <http_parser_execute+0x179e>
  1072ce:	9b04      	ldr	r3, [sp, #16]
  1072d0:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
  1072d4:	ebca 0203 	rsb	r2, r10, r3
  1072d8:	4610      	mov	r0, r2
  1072da:	17d1      	asrs	r1, r2, #31
  1072dc:	428f      	cmp	r7, r1
  1072de:	bf08      	it	eq
  1072e0:	4296      	cmpeq	r6, r2
  1072e2:	e9cd 0104 	strd	r0, r1, [sp, #16]
  1072e6:	d201      	bcs.n	1072ec <http_parser_execute+0x165c>
  1072e8:	e9cd 6704 	strd	r6, r7, [sp, #16]
  1072ec:	8821      	ldrh	r1, [r4, #0]
  1072ee:	074b      	lsls	r3, r1, #29
  1072f0:	d405      	bmi.n	1072fe <http_parser_execute+0x166e>
  1072f2:	4b6b      	ldr	r3, [pc, #428]	; (1074a0 <http_parser_execute+0x1810>)
  1072f4:	4a6b      	ldr	r2, [pc, #428]	; (1074a4 <http_parser_execute+0x1814>)
  1072f6:	f44f 61fd 	mov.w	r1, #2024	; 0x7e8
  1072fa:	f7fe be35 	b.w	105f68 <http_parser_execute+0x2d8>
  1072fe:	f116 30ff 	adds.w	r0, r6, #4294967295
  107302:	f147 31ff 	adc.w	r1, r7, #4294967295
  107306:	f04f 33ff 	mov.w	r3, #4294967295
  10730a:	f06f 0202 	mvn.w	r2, #2
  10730e:	428b      	cmp	r3, r1
  107310:	bf08      	it	eq
  107312:	4282      	cmpeq	r2, r0
  107314:	d205      	bcs.n	107322 <http_parser_execute+0x1692>
  107316:	4b66      	ldr	r3, [pc, #408]	; (1074b0 <http_parser_execute+0x1820>)
  107318:	4a62      	ldr	r2, [pc, #392]	; (1074a4 <http_parser_execute+0x1814>)
  10731a:	f240 71ea 	movw	r1, #2026	; 0x7ea
  10731e:	f7fe be23 	b.w	105f68 <http_parser_execute+0x2d8>
  107322:	9902      	ldr	r1, [sp, #8]
  107324:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  107328:	2900      	cmp	r1, #0
  10732a:	bf08      	it	eq
  10732c:	4651      	moveq	r1, r10
  10732e:	1ab2      	subs	r2, r6, r2
  107330:	eb67 0303 	sbc.w	r3, r7, r3
  107334:	4610      	mov	r0, r2
  107336:	9102      	str	r1, [sp, #8]
  107338:	4619      	mov	r1, r3
  10733a:	9b04      	ldr	r3, [sp, #16]
  10733c:	e9c4 0102 	strd	r0, r1, [r4, #8]
  107340:	1e5a      	subs	r2, r3, #1
  107342:	ea50 0301 	orrs.w	r3, r0, r1
  107346:	4492      	add	r10, r2
  107348:	bf08      	it	eq
  10734a:	253a      	moveq	r5, #58	; 0x3a
  10734c:	f7fe bd04 	b.w	105d58 <http_parser_execute+0xc8>
  107350:	8823      	ldrh	r3, [r4, #0]
  107352:	075e      	lsls	r6, r3, #29
  107354:	d405      	bmi.n	107362 <http_parser_execute+0x16d2>
  107356:	4b52      	ldr	r3, [pc, #328]	; (1074a0 <http_parser_execute+0x1810>)
  107358:	4a52      	ldr	r2, [pc, #328]	; (1074a4 <http_parser_execute+0x1814>)
  10735a:	f240 71fb 	movw	r1, #2043	; 0x7fb
  10735e:	f7fe be03 	b.w	105f68 <http_parser_execute+0x2d8>
  107362:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
  107366:	4313      	orrs	r3, r2
  107368:	d005      	beq.n	107376 <http_parser_execute+0x16e6>
  10736a:	4b52      	ldr	r3, [pc, #328]	; (1074b4 <http_parser_execute+0x1824>)
  10736c:	4a4d      	ldr	r2, [pc, #308]	; (1074a4 <http_parser_execute+0x1814>)
  10736e:	f240 71fc 	movw	r1, #2044	; 0x7fc
  107372:	f7fe bdf9 	b.w	105f68 <http_parser_execute+0x2d8>
  107376:	f1b8 0f0d 	cmp.w	r8, #13
  10737a:	7de3      	ldrb	r3, [r4, #23]
  10737c:	d137      	bne.n	1073ee <http_parser_execute+0x175e>
  10737e:	065d      	lsls	r5, r3, #25
  107380:	d005      	beq.n	10738e <http_parser_execute+0x16fe>
  107382:	4b4a      	ldr	r3, [pc, #296]	; (1074ac <http_parser_execute+0x181c>)
  107384:	4a47      	ldr	r2, [pc, #284]	; (1074a4 <http_parser_execute+0x1814>)
  107386:	f240 71ff 	movw	r1, #2047	; 0x7ff
  10738a:	f7fe bded 	b.w	105f68 <http_parser_execute+0x2d8>
  10738e:	9b02      	ldr	r3, [sp, #8]
  107390:	2b00      	cmp	r3, #0
  107392:	f000 8101 	beq.w	107598 <http_parser_execute+0x1908>
  107396:	f8d9 3018 	ldr.w	r3, [r9, #24]
  10739a:	2b00      	cmp	r3, #0
  10739c:	f000 80ff 	beq.w	10759e <http_parser_execute+0x190e>
  1073a0:	6822      	ldr	r2, [r4, #0]
  1073a2:	213b      	movs	r1, #59	; 0x3b
  1073a4:	f361 2290 	bfi	r2, r1, #10, #7
  1073a8:	6022      	str	r2, [r4, #0]
  1073aa:	9a02      	ldr	r2, [sp, #8]
  1073ac:	9902      	ldr	r1, [sp, #8]
  1073ae:	ebc2 020a 	rsb	r2, r2, r10
  1073b2:	4620      	mov	r0, r4
  1073b4:	4798      	blx	r3
  1073b6:	b120      	cbz	r0, 1073c2 <http_parser_execute+0x1732>
  1073b8:	7de3      	ldrb	r3, [r4, #23]
  1073ba:	2206      	movs	r2, #6
  1073bc:	f362 0306 	bfi	r3, r2, #0, #7
  1073c0:	75e3      	strb	r3, [r4, #23]
  1073c2:	7de3      	ldrb	r3, [r4, #23]
  1073c4:	6825      	ldr	r5, [r4, #0]
  1073c6:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
  1073ca:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1073ce:	f000 80ea 	beq.w	1075a6 <http_parser_execute+0x1916>
  1073d2:	e034      	b.n	10743e <http_parser_execute+0x17ae>
  1073d4:	8823      	ldrh	r3, [r4, #0]
  1073d6:	0759      	lsls	r1, r3, #29
  1073d8:	d405      	bmi.n	1073e6 <http_parser_execute+0x1756>
  1073da:	4b31      	ldr	r3, [pc, #196]	; (1074a0 <http_parser_execute+0x1810>)
  1073dc:	4a31      	ldr	r2, [pc, #196]	; (1074a4 <http_parser_execute+0x1814>)
  1073de:	f640 0103 	movw	r1, #2051	; 0x803
  1073e2:	f7fe bdc1 	b.w	105f68 <http_parser_execute+0x2d8>
  1073e6:	f1b8 0f0a 	cmp.w	r8, #10
  1073ea:	d005      	beq.n	1073f8 <http_parser_execute+0x1768>
  1073ec:	7de3      	ldrb	r3, [r4, #23]
  1073ee:	221e      	movs	r2, #30
  1073f0:	f362 0306 	bfi	r3, r2, #0, #7
  1073f4:	75e3      	strb	r3, [r4, #23]
  1073f6:	e1ab      	b.n	107750 <http_parser_execute+0x1ac0>
  1073f8:	2300      	movs	r3, #0
  1073fa:	6063      	str	r3, [r4, #4]
  1073fc:	7de3      	ldrb	r3, [r4, #23]
  1073fe:	065a      	lsls	r2, r3, #25
  107400:	d005      	beq.n	10740e <http_parser_execute+0x177e>
  107402:	4b2a      	ldr	r3, [pc, #168]	; (1074ac <http_parser_execute+0x181c>)
  107404:	4a27      	ldr	r2, [pc, #156]	; (1074a4 <http_parser_execute+0x1814>)
  107406:	f640 0107 	movw	r1, #2055	; 0x807
  10740a:	f7fe bdad 	b.w	105f68 <http_parser_execute+0x2d8>
  10740e:	f8d9 3024 	ldr.w	r3, [r9, #36]	; 0x24
  107412:	2533      	movs	r5, #51	; 0x33
  107414:	2b00      	cmp	r3, #0
  107416:	f43e ac9f 	beq.w	105d58 <http_parser_execute+0xc8>
  10741a:	6822      	ldr	r2, [r4, #0]
  10741c:	4620      	mov	r0, r4
  10741e:	f365 2290 	bfi	r2, r5, #10, #7
  107422:	6022      	str	r2, [r4, #0]
  107424:	4798      	blx	r3
  107426:	b118      	cbz	r0, 107430 <http_parser_execute+0x17a0>
  107428:	7de3      	ldrb	r3, [r4, #23]
  10742a:	f368 0306 	bfi	r3, r8, #0, #7
  10742e:	75e3      	strb	r3, [r4, #23]
  107430:	7de3      	ldrb	r3, [r4, #23]
  107432:	6825      	ldr	r5, [r4, #0]
  107434:	065b      	lsls	r3, r3, #25
  107436:	f3c5 2586 	ubfx	r5, r5, #10, #7
  10743a:	f43e ac8d 	beq.w	105d58 <http_parser_execute+0xc8>
  10743e:	ebcb 0a0a 	rsb	r10, r11, r10
  107442:	f10a 0001 	add.w	r0, r10, #1
  107446:	e194      	b.n	107772 <http_parser_execute+0x1ae2>
  107448:	4b1b      	ldr	r3, [pc, #108]	; (1074b8 <http_parser_execute+0x1828>)
  10744a:	4a16      	ldr	r2, [pc, #88]	; (1074a4 <http_parser_execute+0x1814>)
  10744c:	f640 010b 	movw	r1, #2059	; 0x80b
  107450:	f7fe bd8a 	b.w	105f68 <http_parser_execute+0x2d8>
  107454:	2506      	movs	r5, #6
  107456:	f7fe bc7f 	b.w	105d58 <http_parser_execute+0xc8>
  10745a:	2507      	movs	r5, #7
  10745c:	f7fe bc7c 	b.w	105d58 <http_parser_execute+0xc8>
  107460:	2508      	movs	r5, #8
  107462:	f7fe bc79 	b.w	105d58 <http_parser_execute+0xc8>
  107466:	2509      	movs	r5, #9
  107468:	f7fe bc76 	b.w	105d58 <http_parser_execute+0xc8>
  10746c:	250b      	movs	r5, #11
  10746e:	f7fe bc73 	b.w	105d58 <http_parser_execute+0xc8>
  107472:	250d      	movs	r5, #13
  107474:	f7fe bc70 	b.w	105d58 <http_parser_execute+0xc8>
  107478:	250f      	movs	r5, #15
  10747a:	f7fe bc6d 	b.w	105d58 <http_parser_execute+0xc8>
  10747e:	2511      	movs	r5, #17
  107480:	f7fe bc6a 	b.w	105d58 <http_parser_execute+0xc8>
  107484:	252a      	movs	r5, #42	; 0x2a
  107486:	f7fe bc67 	b.w	105d58 <http_parser_execute+0xc8>
  10748a:	2511      	movs	r5, #17
  10748c:	f7fe bc64 	b.w	105d58 <http_parser_execute+0xc8>
  107490:	2511      	movs	r5, #17
  107492:	9303      	str	r3, [sp, #12]
  107494:	f7fe bc60 	b.w	105d58 <http_parser_execute+0xc8>
  107498:	9303      	str	r3, [sp, #12]
  10749a:	f7fe bc5d 	b.w	105d58 <http_parser_execute+0xc8>
  10749e:	bf00      	nop
  1074a0:	001182de 	.word	0x001182de
  1074a4:	00118b56 	.word	0x00118b56
  1074a8:	00117ffc 	.word	0x00117ffc
  1074ac:	0011821c 	.word	0x0011821c
  1074b0:	00118287 	.word	0x00118287
  1074b4:	001182f8 	.word	0x001182f8
  1074b8:	00118314 	.word	0x00118314
  1074bc:	252a      	movs	r5, #42	; 0x2a
  1074be:	f7fe bc4b 	b.w	105d58 <http_parser_execute+0xc8>
  1074c2:	252a      	movs	r5, #42	; 0x2a
  1074c4:	9303      	str	r3, [sp, #12]
  1074c6:	f7fe bc47 	b.w	105d58 <http_parser_execute+0xc8>
  1074ca:	9303      	str	r3, [sp, #12]
  1074cc:	f7fe bc44 	b.w	105d58 <http_parser_execute+0xc8>
  1074d0:	252a      	movs	r5, #42	; 0x2a
  1074d2:	f7fe bc41 	b.w	105d58 <http_parser_execute+0xc8>
  1074d6:	4645      	mov	r5, r8
  1074d8:	f7fe bc3e 	b.w	105d58 <http_parser_execute+0xc8>
  1074dc:	4645      	mov	r5, r8
  1074de:	9306      	str	r3, [sp, #24]
  1074e0:	f7fe bc3a 	b.w	105d58 <http_parser_execute+0xc8>
  1074e4:	9306      	str	r3, [sp, #24]
  1074e6:	f7fe bc37 	b.w	105d58 <http_parser_execute+0xc8>
  1074ea:	9306      	str	r3, [sp, #24]
  1074ec:	f7fe bc34 	b.w	105d58 <http_parser_execute+0xc8>
  1074f0:	9306      	str	r3, [sp, #24]
  1074f2:	f7fe bc31 	b.w	105d58 <http_parser_execute+0xc8>
  1074f6:	2522      	movs	r5, #34	; 0x22
  1074f8:	f7fe bc2e 	b.w	105d58 <http_parser_execute+0xc8>
  1074fc:	2523      	movs	r5, #35	; 0x23
  1074fe:	f7fe bc2b 	b.w	105d58 <http_parser_execute+0xc8>
  107502:	2524      	movs	r5, #36	; 0x24
  107504:	f7fe bc28 	b.w	105d58 <http_parser_execute+0xc8>
  107508:	2525      	movs	r5, #37	; 0x25
  10750a:	f7fe bc25 	b.w	105d58 <http_parser_execute+0xc8>
  10750e:	2527      	movs	r5, #39	; 0x27
  107510:	f7fe bc22 	b.w	105d58 <http_parser_execute+0xc8>
  107514:	2529      	movs	r5, #41	; 0x29
  107516:	f7fe bc1f 	b.w	105d58 <http_parser_execute+0xc8>
  10751a:	252a      	movs	r5, #42	; 0x2a
  10751c:	f7fe bc1c 	b.w	105d58 <http_parser_execute+0xc8>
  107520:	252a      	movs	r5, #42	; 0x2a
  107522:	f7fe bc19 	b.w	105d58 <http_parser_execute+0xc8>
  107526:	2537      	movs	r5, #55	; 0x37
  107528:	f7fe bc16 	b.w	105d58 <http_parser_execute+0xc8>
  10752c:	46b2      	mov	r10, r6
  10752e:	252c      	movs	r5, #44	; 0x2c
  107530:	f7fe bc12 	b.w	105d58 <http_parser_execute+0xc8>
  107534:	46b2      	mov	r10, r6
  107536:	9307      	str	r3, [sp, #28]
  107538:	f7fe bc0e 	b.w	105d58 <http_parser_execute+0xc8>
  10753c:	46b2      	mov	r10, r6
  10753e:	9307      	str	r3, [sp, #28]
  107540:	f7fe bc0a 	b.w	105d58 <http_parser_execute+0xc8>
  107544:	252d      	movs	r5, #45	; 0x2d
  107546:	f7fe bc07 	b.w	105d58 <http_parser_execute+0xc8>
  10754a:	252e      	movs	r5, #46	; 0x2e
  10754c:	f7fe bc04 	b.w	105d58 <http_parser_execute+0xc8>
  107550:	2530      	movs	r5, #48	; 0x30
  107552:	f7fe bc01 	b.w	105d58 <http_parser_execute+0xc8>
  107556:	46ba      	mov	r10, r7
  107558:	f7fe bbfe 	b.w	105d58 <http_parser_execute+0xc8>
  10755c:	2531      	movs	r5, #49	; 0x31
  10755e:	f7fe bbfb 	b.w	105d58 <http_parser_execute+0xc8>
  107562:	252e      	movs	r5, #46	; 0x2e
  107564:	f7fe bbf8 	b.w	105d58 <http_parser_execute+0xc8>
  107568:	252c      	movs	r5, #44	; 0x2c
  10756a:	f7fe bbf5 	b.w	105d58 <http_parser_execute+0xc8>
  10756e:	252c      	movs	r5, #44	; 0x2c
  107570:	f7fe bbf2 	b.w	105d58 <http_parser_execute+0xc8>
  107574:	2533      	movs	r5, #51	; 0x33
  107576:	f7fe bbef 	b.w	105d58 <http_parser_execute+0xc8>
  10757a:	253c      	movs	r5, #60	; 0x3c
  10757c:	f7fe bbec 	b.w	105d58 <http_parser_execute+0xc8>
  107580:	253d      	movs	r5, #61	; 0x3d
  107582:	f7fe bbe9 	b.w	105d58 <http_parser_execute+0xc8>
  107586:	2536      	movs	r5, #54	; 0x36
  107588:	f7fe bbe6 	b.w	105d58 <http_parser_execute+0xc8>
  10758c:	2535      	movs	r5, #53	; 0x35
  10758e:	f7fe bbe3 	b.w	105d58 <http_parser_execute+0xc8>
  107592:	2535      	movs	r5, #53	; 0x35
  107594:	f7fe bbe0 	b.w	105d58 <http_parser_execute+0xc8>
  107598:	253b      	movs	r5, #59	; 0x3b
  10759a:	f7fe bbdd 	b.w	105d58 <http_parser_execute+0xc8>
  10759e:	253b      	movs	r5, #59	; 0x3b
  1075a0:	9302      	str	r3, [sp, #8]
  1075a2:	f7fe bbd9 	b.w	105d58 <http_parser_execute+0xc8>
  1075a6:	9302      	str	r3, [sp, #8]
  1075a8:	f7fe bbd6 	b.w	105d58 <http_parser_execute+0xc8>
  1075ac:	9b07      	ldr	r3, [sp, #28]
  1075ae:	9a01      	ldr	r2, [sp, #4]
  1075b0:	3300      	adds	r3, #0
  1075b2:	bf18      	it	ne
  1075b4:	2301      	movne	r3, #1
  1075b6:	2a00      	cmp	r2, #0
  1075b8:	bf18      	it	ne
  1075ba:	3301      	addne	r3, #1
  1075bc:	9a06      	ldr	r2, [sp, #24]
  1075be:	2a00      	cmp	r2, #0
  1075c0:	bf18      	it	ne
  1075c2:	3301      	addne	r3, #1
  1075c4:	9a02      	ldr	r2, [sp, #8]
  1075c6:	2a00      	cmp	r2, #0
  1075c8:	bf18      	it	ne
  1075ca:	3301      	addne	r3, #1
  1075cc:	9a03      	ldr	r2, [sp, #12]
  1075ce:	2a00      	cmp	r2, #0
  1075d0:	bf18      	it	ne
  1075d2:	3301      	addne	r3, #1
  1075d4:	2b01      	cmp	r3, #1
  1075d6:	dd05      	ble.n	1075e4 <http_parser_execute+0x1954>
  1075d8:	4b67      	ldr	r3, [pc, #412]	; (107778 <http_parser_execute+0x1ae8>)
  1075da:	4a68      	ldr	r2, [pc, #416]	; (10777c <http_parser_execute+0x1aec>)
  1075dc:	f640 011f 	movw	r1, #2079	; 0x81f
  1075e0:	f7fe bcc2 	b.w	105f68 <http_parser_execute+0x2d8>
  1075e4:	7de3      	ldrb	r3, [r4, #23]
  1075e6:	065f      	lsls	r7, r3, #25
  1075e8:	d005      	beq.n	1075f6 <http_parser_execute+0x1966>
  1075ea:	4b65      	ldr	r3, [pc, #404]	; (107780 <http_parser_execute+0x1af0>)
  1075ec:	4a63      	ldr	r2, [pc, #396]	; (10777c <http_parser_execute+0x1aec>)
  1075ee:	f640 0121 	movw	r1, #2081	; 0x821
  1075f2:	f7fe bcb9 	b.w	105f68 <http_parser_execute+0x2d8>
  1075f6:	9b07      	ldr	r3, [sp, #28]
  1075f8:	b1c3      	cbz	r3, 10762c <http_parser_execute+0x199c>
  1075fa:	f8d9 300c 	ldr.w	r3, [r9, #12]
  1075fe:	b1ab      	cbz	r3, 10762c <http_parser_execute+0x199c>
  107600:	6822      	ldr	r2, [r4, #0]
  107602:	9907      	ldr	r1, [sp, #28]
  107604:	f365 2290 	bfi	r2, r5, #10, #7
  107608:	6022      	str	r2, [r4, #0]
  10760a:	9a04      	ldr	r2, [sp, #16]
  10760c:	4620      	mov	r0, r4
  10760e:	1a52      	subs	r2, r2, r1
  107610:	4798      	blx	r3
  107612:	b120      	cbz	r0, 10761e <http_parser_execute+0x198e>
  107614:	7de3      	ldrb	r3, [r4, #23]
  107616:	2203      	movs	r2, #3
  107618:	f362 0306 	bfi	r3, r2, #0, #7
  10761c:	75e3      	strb	r3, [r4, #23]
  10761e:	7de3      	ldrb	r3, [r4, #23]
  107620:	6825      	ldr	r5, [r4, #0]
  107622:	065e      	lsls	r6, r3, #25
  107624:	f3c5 2586 	ubfx	r5, r5, #10, #7
  107628:	f040 8090 	bne.w	10774c <http_parser_execute+0x1abc>
  10762c:	7de3      	ldrb	r3, [r4, #23]
  10762e:	0658      	lsls	r0, r3, #25
  107630:	d005      	beq.n	10763e <http_parser_execute+0x19ae>
  107632:	4b53      	ldr	r3, [pc, #332]	; (107780 <http_parser_execute+0x1af0>)
  107634:	4a51      	ldr	r2, [pc, #324]	; (10777c <http_parser_execute+0x1aec>)
  107636:	f640 0122 	movw	r1, #2082	; 0x822
  10763a:	f7fe bc95 	b.w	105f68 <http_parser_execute+0x2d8>
  10763e:	9b01      	ldr	r3, [sp, #4]
  107640:	b1bb      	cbz	r3, 107672 <http_parser_execute+0x19e2>
  107642:	f8d9 3010 	ldr.w	r3, [r9, #16]
  107646:	b1a3      	cbz	r3, 107672 <http_parser_execute+0x19e2>
  107648:	6822      	ldr	r2, [r4, #0]
  10764a:	9901      	ldr	r1, [sp, #4]
  10764c:	f365 2290 	bfi	r2, r5, #10, #7
  107650:	6022      	str	r2, [r4, #0]
  107652:	9a04      	ldr	r2, [sp, #16]
  107654:	4620      	mov	r0, r4
  107656:	1a52      	subs	r2, r2, r1
  107658:	4798      	blx	r3
  10765a:	b120      	cbz	r0, 107666 <http_parser_execute+0x19d6>
  10765c:	7de3      	ldrb	r3, [r4, #23]
  10765e:	2204      	movs	r2, #4
  107660:	f362 0306 	bfi	r3, r2, #0, #7
  107664:	75e3      	strb	r3, [r4, #23]
  107666:	7de3      	ldrb	r3, [r4, #23]
  107668:	6825      	ldr	r5, [r4, #0]
  10766a:	0659      	lsls	r1, r3, #25
  10766c:	f3c5 2586 	ubfx	r5, r5, #10, #7
  107670:	d16c      	bne.n	10774c <http_parser_execute+0x1abc>
  107672:	7de3      	ldrb	r3, [r4, #23]
  107674:	065a      	lsls	r2, r3, #25
  107676:	d005      	beq.n	107684 <http_parser_execute+0x19f4>
  107678:	4b41      	ldr	r3, [pc, #260]	; (107780 <http_parser_execute+0x1af0>)
  10767a:	4a40      	ldr	r2, [pc, #256]	; (10777c <http_parser_execute+0x1aec>)
  10767c:	f640 0123 	movw	r1, #2083	; 0x823
  107680:	f7fe bc72 	b.w	105f68 <http_parser_execute+0x2d8>
  107684:	9b06      	ldr	r3, [sp, #24]
  107686:	b1bb      	cbz	r3, 1076b8 <http_parser_execute+0x1a28>
  107688:	f8d9 3004 	ldr.w	r3, [r9, #4]
  10768c:	b1a3      	cbz	r3, 1076b8 <http_parser_execute+0x1a28>
  10768e:	6822      	ldr	r2, [r4, #0]
  107690:	9906      	ldr	r1, [sp, #24]
  107692:	f365 2290 	bfi	r2, r5, #10, #7
  107696:	6022      	str	r2, [r4, #0]
  107698:	9a04      	ldr	r2, [sp, #16]
  10769a:	4620      	mov	r0, r4
  10769c:	1a52      	subs	r2, r2, r1
  10769e:	4798      	blx	r3
  1076a0:	b120      	cbz	r0, 1076ac <http_parser_execute+0x1a1c>
  1076a2:	7de3      	ldrb	r3, [r4, #23]
  1076a4:	2202      	movs	r2, #2
  1076a6:	f362 0306 	bfi	r3, r2, #0, #7
  1076aa:	75e3      	strb	r3, [r4, #23]
  1076ac:	7de3      	ldrb	r3, [r4, #23]
  1076ae:	6825      	ldr	r5, [r4, #0]
  1076b0:	065b      	lsls	r3, r3, #25
  1076b2:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1076b6:	d149      	bne.n	10774c <http_parser_execute+0x1abc>
  1076b8:	7de3      	ldrb	r3, [r4, #23]
  1076ba:	065f      	lsls	r7, r3, #25
  1076bc:	d005      	beq.n	1076ca <http_parser_execute+0x1a3a>
  1076be:	4b30      	ldr	r3, [pc, #192]	; (107780 <http_parser_execute+0x1af0>)
  1076c0:	4a2e      	ldr	r2, [pc, #184]	; (10777c <http_parser_execute+0x1aec>)
  1076c2:	f640 0124 	movw	r1, #2084	; 0x824
  1076c6:	f7fe bc4f 	b.w	105f68 <http_parser_execute+0x2d8>
  1076ca:	9b02      	ldr	r3, [sp, #8]
  1076cc:	b1bb      	cbz	r3, 1076fe <http_parser_execute+0x1a6e>
  1076ce:	f8d9 3018 	ldr.w	r3, [r9, #24]
  1076d2:	b1a3      	cbz	r3, 1076fe <http_parser_execute+0x1a6e>
  1076d4:	6822      	ldr	r2, [r4, #0]
  1076d6:	9902      	ldr	r1, [sp, #8]
  1076d8:	f365 2290 	bfi	r2, r5, #10, #7
  1076dc:	6022      	str	r2, [r4, #0]
  1076de:	9a04      	ldr	r2, [sp, #16]
  1076e0:	4620      	mov	r0, r4
  1076e2:	1a52      	subs	r2, r2, r1
  1076e4:	4798      	blx	r3
  1076e6:	b120      	cbz	r0, 1076f2 <http_parser_execute+0x1a62>
  1076e8:	7de3      	ldrb	r3, [r4, #23]
  1076ea:	2206      	movs	r2, #6
  1076ec:	f362 0306 	bfi	r3, r2, #0, #7
  1076f0:	75e3      	strb	r3, [r4, #23]
  1076f2:	7de3      	ldrb	r3, [r4, #23]
  1076f4:	6825      	ldr	r5, [r4, #0]
  1076f6:	065e      	lsls	r6, r3, #25
  1076f8:	f3c5 2586 	ubfx	r5, r5, #10, #7
  1076fc:	d126      	bne.n	10774c <http_parser_execute+0x1abc>
  1076fe:	7de3      	ldrb	r3, [r4, #23]
  107700:	0658      	lsls	r0, r3, #25
  107702:	d005      	beq.n	107710 <http_parser_execute+0x1a80>
  107704:	4b1e      	ldr	r3, [pc, #120]	; (107780 <http_parser_execute+0x1af0>)
  107706:	4a1d      	ldr	r2, [pc, #116]	; (10777c <http_parser_execute+0x1aec>)
  107708:	f640 0125 	movw	r1, #2085	; 0x825
  10770c:	f7fe bc2c 	b.w	105f68 <http_parser_execute+0x2d8>
  107710:	9b03      	ldr	r3, [sp, #12]
  107712:	b1bb      	cbz	r3, 107744 <http_parser_execute+0x1ab4>
  107714:	f8d9 3008 	ldr.w	r3, [r9, #8]
  107718:	b1a3      	cbz	r3, 107744 <http_parser_execute+0x1ab4>
  10771a:	6822      	ldr	r2, [r4, #0]
  10771c:	9903      	ldr	r1, [sp, #12]
  10771e:	f365 2290 	bfi	r2, r5, #10, #7
  107722:	6022      	str	r2, [r4, #0]
  107724:	9a04      	ldr	r2, [sp, #16]
  107726:	4620      	mov	r0, r4
  107728:	1a52      	subs	r2, r2, r1
  10772a:	4798      	blx	r3
  10772c:	b120      	cbz	r0, 107738 <http_parser_execute+0x1aa8>
  10772e:	7de3      	ldrb	r3, [r4, #23]
  107730:	2208      	movs	r2, #8
  107732:	f362 0306 	bfi	r3, r2, #0, #7
  107736:	75e3      	strb	r3, [r4, #23]
  107738:	7de3      	ldrb	r3, [r4, #23]
  10773a:	6825      	ldr	r5, [r4, #0]
  10773c:	0659      	lsls	r1, r3, #25
  10773e:	f3c5 2586 	ubfx	r5, r5, #10, #7
  107742:	d103      	bne.n	10774c <http_parser_execute+0x1abc>
  107744:	6823      	ldr	r3, [r4, #0]
  107746:	f365 2390 	bfi	r3, r5, #10, #7
  10774a:	6023      	str	r3, [r4, #0]
  10774c:	980c      	ldr	r0, [sp, #48]	; 0x30
  10774e:	e010      	b.n	107772 <http_parser_execute+0x1ae2>
  107750:	7de3      	ldrb	r3, [r4, #23]
  107752:	065a      	lsls	r2, r3, #25
  107754:	bf02      	ittt	eq
  107756:	2220      	moveq	r2, #32
  107758:	f362 0306 	bfieq	r3, r2, #0, #7
  10775c:	75e3      	strbeq	r3, [r4, #23]
  10775e:	6823      	ldr	r3, [r4, #0]
  107760:	f365 2390 	bfi	r3, r5, #10, #7
  107764:	6023      	str	r3, [r4, #0]
  107766:	ebcb 000a 	rsb	r0, r11, r10
  10776a:	e002      	b.n	107772 <http_parser_execute+0x1ae2>
  10776c:	2000      	movs	r0, #0
  10776e:	e000      	b.n	107772 <http_parser_execute+0x1ae2>
  107770:	4618      	mov	r0, r3
  107772:	b011      	add	sp, #68	; 0x44
  107774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  107778:	0011832b 	.word	0x0011832b
  10777c:	00118b56 	.word	0x00118b56
  107780:	0011821c 	.word	0x0011821c

00107784 <http_method_str>:
  107784:	2820      	cmp	r0, #32
  107786:	bf9a      	itte	ls
  107788:	4b02      	ldrls	r3, [pc, #8]	; (107794 <http_method_str+0x10>)
  10778a:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
  10778e:	4802      	ldrhi	r0, [pc, #8]	; (107798 <http_method_str+0x14>)
  107790:	4770      	bx	lr
  107792:	bf00      	nop
  107794:	00118bf8 	.word	0x00118bf8
  107798:	001183f3 	.word	0x001183f3

0010779c <http_parser_init>:
  10779c:	b570      	push	{r4, r5, r6, lr}
  10779e:	2220      	movs	r2, #32
  1077a0:	460d      	mov	r5, r1
  1077a2:	2100      	movs	r1, #0
  1077a4:	4604      	mov	r4, r0
  1077a6:	6986      	ldr	r6, [r0, #24]
  1077a8:	f008 fbbd 	bl	10ff26 <memset>
  1077ac:	f04f 0300 	mov.w	r3, #0
  1077b0:	f365 0301 	bfi	r3, r5, #0, #2
  1077b4:	61a6      	str	r6, [r4, #24]
  1077b6:	7023      	strb	r3, [r4, #0]
  1077b8:	b125      	cbz	r5, 1077c4 <http_parser_init+0x28>
  1077ba:	2d01      	cmp	r5, #1
  1077bc:	bf0c      	ite	eq
  1077be:	2204      	moveq	r2, #4
  1077c0:	2202      	movne	r2, #2
  1077c2:	e000      	b.n	1077c6 <http_parser_init+0x2a>
  1077c4:	2212      	movs	r2, #18
  1077c6:	6823      	ldr	r3, [r4, #0]
  1077c8:	f362 2390 	bfi	r3, r2, #10, #7
  1077cc:	6023      	str	r3, [r4, #0]
  1077ce:	7de3      	ldrb	r3, [r4, #23]
  1077d0:	f36f 0306 	bfc	r3, #0, #7
  1077d4:	75e3      	strb	r3, [r4, #23]
  1077d6:	bd70      	pop	{r4, r5, r6, pc}

001077d8 <http_parser_parse_url>:
  1077d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  1077dc:	4605      	mov	r5, r0
  1077de:	2600      	movs	r6, #0
  1077e0:	461c      	mov	r4, r3
  1077e2:	4617      	mov	r7, r2
  1077e4:	42b2      	cmp	r2, r6
  1077e6:	bf0c      	ite	eq
  1077e8:	2014      	moveq	r0, #20
  1077ea:	2018      	movne	r0, #24
  1077ec:	46a8      	mov	r8, r5
  1077ee:	801e      	strh	r6, [r3, #0]
  1077f0:	805e      	strh	r6, [r3, #2]
  1077f2:	f04f 0b07 	mov.w	r11, #7
  1077f6:	eb05 0a01 	add.w	r10, r5, r1
  1077fa:	f04f 0901 	mov.w	r9, #1
  1077fe:	45d0      	cmp	r8, r10
  107800:	d252      	bcs.n	1078a8 <http_parser_parse_url+0xd0>
  107802:	f898 1000 	ldrb.w	r1, [r8]
  107806:	f7fe f955 	bl	105ab4 <parse_url_char(state, char)>
  10780a:	1e43      	subs	r3, r0, #1
  10780c:	2b1e      	cmp	r3, #30
  10780e:	d829      	bhi.n	107864 <http_parser_parse_url+0x8c>
  107810:	e8df f013 	tbh	[pc, r3, lsl #1]
  107814:	0028010d 	.word	0x0028010d
  107818:	00280028 	.word	0x00280028
  10781c:	00280028 	.word	0x00280028
  107820:	00280028 	.word	0x00280028
  107824:	00280028 	.word	0x00280028
  107828:	00280028 	.word	0x00280028
  10782c:	00280028 	.word	0x00280028
  107830:	00280028 	.word	0x00280028
  107834:	00280028 	.word	0x00280028
  107838:	00280028 	.word	0x00280028
  10783c:	0045002f 	.word	0x0045002f
  107840:	00450045 	.word	0x00450045
  107844:	001f0031 	.word	0x001f0031
  107848:	00450022 	.word	0x00450022
  10784c:	00450024 	.word	0x00450024
  107850:	0026      	.short	0x0026
  107852:	2601      	movs	r6, #1
  107854:	4633      	mov	r3, r6
  107856:	e00f      	b.n	107878 <http_parser_parse_url+0xa0>
  107858:	2303      	movs	r3, #3
  10785a:	e00d      	b.n	107878 <http_parser_parse_url+0xa0>
  10785c:	2304      	movs	r3, #4
  10785e:	e00b      	b.n	107878 <http_parser_parse_url+0xa0>
  107860:	2305      	movs	r3, #5
  107862:	e009      	b.n	107878 <http_parser_parse_url+0xa0>
  107864:	4b8c      	ldr	r3, [pc, #560]	; (107a98 <http_parser_parse_url+0x2c0>)
  107866:	4a8d      	ldr	r2, [pc, #564]	; (107a9c <http_parser_parse_url+0x2c4>)
  107868:	f44f 6116 	mov.w	r1, #2400	; 0x960
  10786c:	488c      	ldr	r0, [pc, #560]	; (107aa0 <http_parser_parse_url+0x2c8>)
  10786e:	f007 ff91 	bl	10f794 <__assert_func>
  107872:	2300      	movs	r3, #0
  107874:	e000      	b.n	107878 <http_parser_parse_url+0xa0>
  107876:	2301      	movs	r3, #1
  107878:	0099      	lsls	r1, r3, #2
  10787a:	455b      	cmp	r3, r11
  10787c:	4421      	add	r1, r4
  10787e:	d103      	bne.n	107888 <http_parser_parse_url+0xb0>
  107880:	88ca      	ldrh	r2, [r1, #6]
  107882:	3201      	adds	r2, #1
  107884:	80ca      	strh	r2, [r1, #6]
  107886:	e00b      	b.n	1078a0 <http_parser_parse_url+0xc8>
  107888:	ebc5 0208 	rsb	r2, r5, r8
  10788c:	808a      	strh	r2, [r1, #4]
  10788e:	f8a1 9006 	strh.w	r9, [r1, #6]
  107892:	8821      	ldrh	r1, [r4, #0]
  107894:	fa09 f203 	lsl.w	r2, r9, r3
  107898:	430a      	orrs	r2, r1
  10789a:	8022      	strh	r2, [r4, #0]
  10789c:	e000      	b.n	1078a0 <http_parser_parse_url+0xc8>
  10789e:	465b      	mov	r3, r11
  1078a0:	f108 0801 	add.w	r8, r8, #1
  1078a4:	469b      	mov	r11, r3
  1078a6:	e7aa      	b.n	1077fe <http_parser_parse_url+0x26>
  1078a8:	8823      	ldrh	r3, [r4, #0]
  1078aa:	f003 0203 	and.w	r2, r3, #3
  1078ae:	2a01      	cmp	r2, #1
  1078b0:	f000 80bd 	beq.w	107a2e <http_parser_parse_url+0x256>
  1078b4:	079a      	lsls	r2, r3, #30
  1078b6:	d403      	bmi.n	1078c0 <http_parser_parse_url+0xe8>
  1078b8:	2f00      	cmp	r7, #0
  1078ba:	f040 80a0 	bne.w	1079fe <http_parser_parse_url+0x226>
  1078be:	e0a1      	b.n	107a04 <http_parser_parse_url+0x22c>
  1078c0:	8920      	ldrh	r0, [r4, #8]
  1078c2:	8963      	ldrh	r3, [r4, #10]
  1078c4:	f04f 0e00 	mov.w	lr, #0
  1078c8:	4576      	cmp	r6, lr
  1078ca:	4403      	add	r3, r0
  1078cc:	f8df c1d4 	ldr.w	r12, [pc, #468]	; 107aa4 <http_parser_parse_url+0x2cc>
  1078d0:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 107aa8 <http_parser_parse_url+0x2d0>
  1078d4:	f8a4 e00a 	strh.w	lr, [r4, #10]
  1078d8:	bf0c      	ite	eq
  1078da:	2104      	moveq	r1, #4
  1078dc:	2102      	movne	r1, #2
  1078de:	4428      	add	r0, r5
  1078e0:	18ee      	adds	r6, r5, r3
  1078e2:	42b0      	cmp	r0, r6
  1078e4:	d27c      	bcs.n	1079e0 <http_parser_parse_url+0x208>
  1078e6:	1f0a      	subs	r2, r1, #4
  1078e8:	7803      	ldrb	r3, [r0, #0]
  1078ea:	2a08      	cmp	r2, #8
  1078ec:	d806      	bhi.n	1078fc <http_parser_parse_url+0x124>
  1078ee:	e8df f002 	tbb	[pc, r2]
  1078f2:	3f1d      	.short	0x3f1d
  1078f4:	513a3d2d 	.word	0x513a3d2d
  1078f8:	624f      	.short	0x624f
  1078fa:	62          	.byte	0x62
  1078fb:	00          	.byte	0x00
  1078fc:	2b40      	cmp	r3, #64	; 0x40
  1078fe:	f000 80a8 	beq.w	107a52 <http_parser_parse_url+0x27a>
  107902:	f043 0220 	orr.w	r2, r3, #32
  107906:	3a61      	subs	r2, #97	; 0x61
  107908:	2a19      	cmp	r2, #25
  10790a:	f240 8093 	bls.w	107a34 <http_parser_parse_url+0x25c>
  10790e:	2b5f      	cmp	r3, #95	; 0x5f
  107910:	f000 8090 	beq.w	107a34 <http_parser_parse_url+0x25c>
  107914:	f1a3 0221 	sub.w	r2, r3, #33	; 0x21
  107918:	b2d2      	uxtb	r2, r2
  10791a:	2a1c      	cmp	r2, #28
  10791c:	f200 8085 	bhi.w	107a2a <http_parser_parse_url+0x252>
  107920:	fa28 f202 	lsr.w	r2, r8, r2
  107924:	07d3      	lsls	r3, r2, #31
  107926:	f100 8085 	bmi.w	107a34 <http_parser_parse_url+0x25c>
  10792a:	e080      	b.n	107a2e <http_parser_parse_url+0x256>
  10792c:	2b5b      	cmp	r3, #91	; 0x5b
  10792e:	f000 8092 	beq.w	107a56 <http_parser_parse_url+0x27e>
  107932:	f043 0220 	orr.w	r2, r3, #32
  107936:	3a61      	subs	r2, #97	; 0x61
  107938:	2a19      	cmp	r2, #25
  10793a:	d940      	bls.n	1079be <http_parser_parse_url+0x1e6>
  10793c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  107940:	2a09      	cmp	r2, #9
  107942:	d93c      	bls.n	1079be <http_parser_parse_url+0x1e6>
  107944:	3b2d      	subs	r3, #45	; 0x2d
  107946:	2b01      	cmp	r3, #1
  107948:	d871      	bhi.n	107a2e <http_parser_parse_url+0x256>
  10794a:	e038      	b.n	1079be <http_parser_parse_url+0x1e6>
  10794c:	f043 0220 	orr.w	r2, r3, #32
  107950:	3a61      	subs	r2, #97	; 0x61
  107952:	2a19      	cmp	r2, #25
  107954:	d935      	bls.n	1079c2 <http_parser_parse_url+0x1ea>
  107956:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  10795a:	2a09      	cmp	r2, #9
  10795c:	d931      	bls.n	1079c2 <http_parser_parse_url+0x1ea>
  10795e:	f1a3 022d 	sub.w	r2, r3, #45	; 0x2d
  107962:	2a01      	cmp	r2, #1
  107964:	d92d      	bls.n	1079c2 <http_parser_parse_url+0x1ea>
  107966:	2b3a      	cmp	r3, #58	; 0x3a
  107968:	d161      	bne.n	107a2e <http_parser_parse_url+0x256>
  10796a:	e076      	b.n	107a5a <http_parser_parse_url+0x282>
  10796c:	2b5d      	cmp	r3, #93	; 0x5d
  10796e:	d076      	beq.n	107a5e <http_parser_parse_url+0x286>
  107970:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  107974:	2a0a      	cmp	r2, #10
  107976:	d929      	bls.n	1079cc <http_parser_parse_url+0x1f4>
  107978:	f043 0220 	orr.w	r2, r3, #32
  10797c:	3a61      	subs	r2, #97	; 0x61
  10797e:	2a05      	cmp	r2, #5
  107980:	d924      	bls.n	1079cc <http_parser_parse_url+0x1f4>
  107982:	2b2e      	cmp	r3, #46	; 0x2e
  107984:	d022      	beq.n	1079cc <http_parser_parse_url+0x1f4>
  107986:	2907      	cmp	r1, #7
  107988:	d151      	bne.n	107a2e <http_parser_parse_url+0x256>
  10798a:	2b25      	cmp	r3, #37	; 0x25
  10798c:	d14f      	bne.n	107a2e <http_parser_parse_url+0x256>
  10798e:	e068      	b.n	107a62 <http_parser_parse_url+0x28a>
  107990:	2b5d      	cmp	r3, #93	; 0x5d
  107992:	d064      	beq.n	107a5e <http_parser_parse_url+0x286>
  107994:	f043 0220 	orr.w	r2, r3, #32
  107998:	3a61      	subs	r2, #97	; 0x61
  10799a:	2a19      	cmp	r2, #25
  10799c:	d965      	bls.n	107a6a <http_parser_parse_url+0x292>
  10799e:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
  1079a2:	b2d2      	uxtb	r2, r2
  1079a4:	2a14      	cmp	r2, #20
  1079a6:	d85e      	bhi.n	107a66 <http_parser_parse_url+0x28e>
  1079a8:	fa2c f202 	lsr.w	r2, r12, r2
  1079ac:	07d2      	lsls	r2, r2, #31
  1079ae:	d45c      	bmi.n	107a6a <http_parser_parse_url+0x292>
  1079b0:	2b7e      	cmp	r3, #126	; 0x7e
  1079b2:	d13c      	bne.n	107a2e <http_parser_parse_url+0x256>
  1079b4:	e059      	b.n	107a6a <http_parser_parse_url+0x292>
  1079b6:	3b30      	subs	r3, #48	; 0x30
  1079b8:	2b09      	cmp	r3, #9
  1079ba:	d95b      	bls.n	107a74 <http_parser_parse_url+0x29c>
  1079bc:	e037      	b.n	107a2e <http_parser_parse_url+0x256>
  1079be:	1b43      	subs	r3, r0, r5
  1079c0:	8123      	strh	r3, [r4, #8]
  1079c2:	8963      	ldrh	r3, [r4, #10]
  1079c4:	2106      	movs	r1, #6
  1079c6:	3301      	adds	r3, #1
  1079c8:	8163      	strh	r3, [r4, #10]
  1079ca:	e007      	b.n	1079dc <http_parser_parse_url+0x204>
  1079cc:	2907      	cmp	r1, #7
  1079ce:	d001      	beq.n	1079d4 <http_parser_parse_url+0x1fc>
  1079d0:	1b43      	subs	r3, r0, r5
  1079d2:	8123      	strh	r3, [r4, #8]
  1079d4:	8963      	ldrh	r3, [r4, #10]
  1079d6:	2107      	movs	r1, #7
  1079d8:	3301      	adds	r3, #1
  1079da:	8163      	strh	r3, [r4, #10]
  1079dc:	3001      	adds	r0, #1
  1079de:	e780      	b.n	1078e2 <http_parser_parse_url+0x10a>
  1079e0:	3902      	subs	r1, #2
  1079e2:	b2c9      	uxtb	r1, r1
  1079e4:	290a      	cmp	r1, #10
  1079e6:	f43f af67 	beq.w	1078b8 <http_parser_parse_url+0xe0>
  1079ea:	2301      	movs	r3, #1
  1079ec:	fa03 f101 	lsl.w	r1, r3, r1
  1079f0:	f240 33af 	movw	r3, #943	; 0x3af
  1079f4:	400b      	ands	r3, r1
  1079f6:	2b00      	cmp	r3, #0
  1079f8:	f43f af5e 	beq.w	1078b8 <http_parser_parse_url+0xe0>
  1079fc:	e017      	b.n	107a2e <http_parser_parse_url+0x256>
  1079fe:	8823      	ldrh	r3, [r4, #0]
  107a00:	2b06      	cmp	r3, #6
  107a02:	d114      	bne.n	107a2e <http_parser_parse_url+0x256>
  107a04:	8820      	ldrh	r0, [r4, #0]
  107a06:	f000 0004 	and.w	r0, r0, #4
  107a0a:	b280      	uxth	r0, r0
  107a0c:	2800      	cmp	r0, #0
  107a0e:	d040      	beq.n	107a92 <http_parser_parse_url+0x2ba>
  107a10:	89a0      	ldrh	r0, [r4, #12]
  107a12:	220a      	movs	r2, #10
  107a14:	2100      	movs	r1, #0
  107a16:	4428      	add	r0, r5
  107a18:	f00a fe24 	bl	112664 <strtoul>
  107a1c:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
  107a20:	d205      	bcs.n	107a2e <http_parser_parse_url+0x256>
  107a22:	8060      	strh	r0, [r4, #2]
  107a24:	2000      	movs	r0, #0
  107a26:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
  107a2a:	2b7e      	cmp	r3, #126	; 0x7e
  107a2c:	d002      	beq.n	107a34 <http_parser_parse_url+0x25c>
  107a2e:	2001      	movs	r0, #1
  107a30:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
  107a34:	2903      	cmp	r1, #3
  107a36:	d007      	beq.n	107a48 <http_parser_parse_url+0x270>
  107a38:	1b43      	subs	r3, r0, r5
  107a3a:	83a3      	strh	r3, [r4, #28]
  107a3c:	8823      	ldrh	r3, [r4, #0]
  107a3e:	f8a4 e01e 	strh.w	lr, [r4, #30]
  107a42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  107a46:	8023      	strh	r3, [r4, #0]
  107a48:	8be3      	ldrh	r3, [r4, #30]
  107a4a:	2103      	movs	r1, #3
  107a4c:	3301      	adds	r3, #1
  107a4e:	83e3      	strh	r3, [r4, #30]
  107a50:	e7c4      	b.n	1079dc <http_parser_parse_url+0x204>
  107a52:	2104      	movs	r1, #4
  107a54:	e7c2      	b.n	1079dc <http_parser_parse_url+0x204>
  107a56:	2105      	movs	r1, #5
  107a58:	e7c0      	b.n	1079dc <http_parser_parse_url+0x204>
  107a5a:	210b      	movs	r1, #11
  107a5c:	e7be      	b.n	1079dc <http_parser_parse_url+0x204>
  107a5e:	2108      	movs	r1, #8
  107a60:	e7bc      	b.n	1079dc <http_parser_parse_url+0x204>
  107a62:	2109      	movs	r1, #9
  107a64:	e002      	b.n	107a6c <http_parser_parse_url+0x294>
  107a66:	2b5f      	cmp	r3, #95	; 0x5f
  107a68:	d1a2      	bne.n	1079b0 <http_parser_parse_url+0x1d8>
  107a6a:	210a      	movs	r1, #10
  107a6c:	8963      	ldrh	r3, [r4, #10]
  107a6e:	3301      	adds	r3, #1
  107a70:	8163      	strh	r3, [r4, #10]
  107a72:	e7b3      	b.n	1079dc <http_parser_parse_url+0x204>
  107a74:	290c      	cmp	r1, #12
  107a76:	d007      	beq.n	107a88 <http_parser_parse_url+0x2b0>
  107a78:	1b43      	subs	r3, r0, r5
  107a7a:	81a3      	strh	r3, [r4, #12]
  107a7c:	8823      	ldrh	r3, [r4, #0]
  107a7e:	f8a4 e00e 	strh.w	lr, [r4, #14]
  107a82:	f043 0304 	orr.w	r3, r3, #4
  107a86:	8023      	strh	r3, [r4, #0]
  107a88:	89e3      	ldrh	r3, [r4, #14]
  107a8a:	210c      	movs	r1, #12
  107a8c:	3301      	adds	r3, #1
  107a8e:	81e3      	strh	r3, [r4, #14]
  107a90:	e7a4      	b.n	1079dc <http_parser_parse_url+0x204>
  107a92:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
  107a96:	bf00      	nop
  107a98:	0011842c 	.word	0x0011842c
  107a9c:	00118bb1 	.word	0x00118bb1
  107aa0:	00118240 	.word	0x00118240
  107aa4:	001ffb01 	.word	0x001ffb01
  107aa8:	17ffbff9 	.word	0x17ffbff9

00107aac <PCA9655E::PCA9655E(PinName, PinName, unsigned char, PinName)>:
  107aac:	b538      	push	{r3, r4, r5, lr}
  107aae:	4604      	mov	r4, r0
  107ab0:	461d      	mov	r5, r3
  107ab2:	f004 fc4f 	bl	10c354 <mbed::I2C::I2C(PinName, PinName)>
  107ab6:	f99d 1010 	ldrsb.w	r1, [sp, #16]
  107aba:	f104 0020 	add.w	r0, r4, #32
  107abe:	f004 fd1d 	bl	10c4fc <mbed::InterruptIn::InterruptIn(PinName)>
  107ac2:	4620      	mov	r0, r4
  107ac4:	7725      	strb	r5, [r4, #28]
  107ac6:	4902      	ldr	r1, [pc, #8]	; (107ad0 <PCA9655E::PCA9655E(PinName, PinName, unsigned char, PinName)+0x24>)
  107ac8:	f004 fc62 	bl	10c390 <mbed::I2C::frequency(int)>
  107acc:	4620      	mov	r0, r4
  107ace:	bd38      	pop	{r3, r4, r5, pc}
  107ad0:	000f4240 	.word	0x000f4240

00107ad4 <PCA9655E::frequency(int)>:
  107ad4:	b508      	push	{r3, lr}
  107ad6:	b672      	cpsid	i
  107ad8:	f004 fc5a 	bl	10c390 <mbed::I2C::frequency(int)>
  107adc:	b662      	cpsie	i
  107ade:	bd08      	pop	{r3, pc}

00107ae0 <PCA9655E::write(Register, char)>:
  107ae0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  107ae2:	b672      	cpsid	i
  107ae4:	2300      	movs	r3, #0
  107ae6:	f88d 100c 	strb.w	r1, [sp, #12]
  107aea:	f88d 200d 	strb.w	r2, [sp, #13]
  107aee:	7f01      	ldrb	r1, [r0, #28]
  107af0:	aa03      	add	r2, sp, #12
  107af2:	9300      	str	r3, [sp, #0]
  107af4:	2302      	movs	r3, #2
  107af6:	f004 fc77 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107afa:	b662      	cpsie	i
  107afc:	b005      	add	sp, #20
  107afe:	f85d fb04 	ldr.w	pc, [sp], #4

00107b02 <PCA9655E::read(Register)>:
  107b02:	b530      	push	{r4, r5, lr}
  107b04:	b085      	sub	sp, #20
  107b06:	aa04      	add	r2, sp, #16
  107b08:	4604      	mov	r4, r0
  107b0a:	f802 1d01 	strb.w	r1, [r2, #-1]!
  107b0e:	b672      	cpsid	i
  107b10:	2501      	movs	r5, #1
  107b12:	7f01      	ldrb	r1, [r0, #28]
  107b14:	462b      	mov	r3, r5
  107b16:	9500      	str	r5, [sp, #0]
  107b18:	f004 fc66 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107b1c:	2300      	movs	r3, #0
  107b1e:	9300      	str	r3, [sp, #0]
  107b20:	7f21      	ldrb	r1, [r4, #28]
  107b22:	462b      	mov	r3, r5
  107b24:	f10d 020e 	add.w	r2, sp, #14
  107b28:	4620      	mov	r0, r4
  107b2a:	f004 fc7d 	bl	10c428 <mbed::I2C::read(int, char*, int, bool)>
  107b2e:	b662      	cpsie	i
  107b30:	f89d 000e 	ldrb.w	r0, [sp, #14]
  107b34:	b005      	add	sp, #20
  107b36:	bd30      	pop	{r4, r5, pc}

00107b38 <PCA9655E::readPinVal(Port, signed char)>:
  107b38:	b2d3      	uxtb	r3, r2
  107b3a:	2b07      	cmp	r3, #7
  107b3c:	b570      	push	{r4, r5, r6, lr}
  107b3e:	4606      	mov	r6, r0
  107b40:	460d      	mov	r5, r1
  107b42:	4614      	mov	r4, r2
  107b44:	d904      	bls.n	107b50 <PCA9655E::readPinVal(Port, signed char)+0x18>
  107b46:	2233      	movs	r2, #51	; 0x33
  107b48:	4908      	ldr	r1, [pc, #32]	; (107b6c <PCA9655E::readPinVal(Port, signed char)+0x34>)
  107b4a:	4809      	ldr	r0, [pc, #36]	; (107b70 <PCA9655E::readPinVal(Port, signed char)+0x38>)
  107b4c:	f000 fe28 	bl	1087a0 <mbed_assert_internal>
  107b50:	b10d      	cbz	r5, 107b56 <PCA9655E::readPinVal(Port, signed char)+0x1e>
  107b52:	2d01      	cmp	r5, #1
  107b54:	d107      	bne.n	107b66 <PCA9655E::readPinVal(Port, signed char)+0x2e>
  107b56:	4629      	mov	r1, r5
  107b58:	4630      	mov	r0, r6
  107b5a:	f7ff ffd2 	bl	107b02 <PCA9655E::read(Register)>
  107b5e:	4120      	asrs	r0, r4
  107b60:	f000 0001 	and.w	r0, r0, #1
  107b64:	bd70      	pop	{r4, r5, r6, pc}
  107b66:	f04f 30ff 	mov.w	r0, #4294967295
  107b6a:	bd70      	pop	{r4, r5, r6, pc}
  107b6c:	00118c7c 	.word	0x00118c7c
  107b70:	00118ca1 	.word	0x00118ca1

00107b74 <PCA9655E::setValue(Port, signed char, SetVal)>:
  107b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  107b76:	461c      	mov	r4, r3
  107b78:	b2d3      	uxtb	r3, r2
  107b7a:	2b07      	cmp	r3, #7
  107b7c:	4606      	mov	r6, r0
  107b7e:	460d      	mov	r5, r1
  107b80:	4617      	mov	r7, r2
  107b82:	d904      	bls.n	107b8e <PCA9655E::setValue(Port, signed char, SetVal)+0x1a>
  107b84:	225c      	movs	r2, #92	; 0x5c
  107b86:	4911      	ldr	r1, [pc, #68]	; (107bcc <PCA9655E::setValue(Port, signed char, SetVal)+0x58>)
  107b88:	4811      	ldr	r0, [pc, #68]	; (107bd0 <PCA9655E::setValue(Port, signed char, SetVal)+0x5c>)
  107b8a:	f000 fe09 	bl	1087a0 <mbed_assert_internal>
  107b8e:	b11d      	cbz	r5, 107b98 <PCA9655E::setValue(Port, signed char, SetVal)+0x24>
  107b90:	2d01      	cmp	r5, #1
  107b92:	d11a      	bne.n	107bca <PCA9655E::setValue(Port, signed char, SetVal)+0x56>
  107b94:	2503      	movs	r5, #3
  107b96:	e000      	b.n	107b9a <PCA9655E::setValue(Port, signed char, SetVal)+0x26>
  107b98:	2502      	movs	r5, #2
  107b9a:	4629      	mov	r1, r5
  107b9c:	4630      	mov	r0, r6
  107b9e:	f7ff ffb0 	bl	107b02 <PCA9655E::read(Register)>
  107ba2:	b13c      	cbz	r4, 107bb4 <PCA9655E::setValue(Port, signed char, SetVal)+0x40>
  107ba4:	2c01      	cmp	r4, #1
  107ba6:	d001      	beq.n	107bac <PCA9655E::setValue(Port, signed char, SetVal)+0x38>
  107ba8:	b2c2      	uxtb	r2, r0
  107baa:	e008      	b.n	107bbe <PCA9655E::setValue(Port, signed char, SetVal)+0x4a>
  107bac:	fa04 f207 	lsl.w	r2, r4, r7
  107bb0:	4302      	orrs	r2, r0
  107bb2:	e003      	b.n	107bbc <PCA9655E::setValue(Port, signed char, SetVal)+0x48>
  107bb4:	2201      	movs	r2, #1
  107bb6:	40ba      	lsls	r2, r7
  107bb8:	ea20 0202 	bic.w	r2, r0, r2
  107bbc:	b2d2      	uxtb	r2, r2
  107bbe:	4629      	mov	r1, r5
  107bc0:	4630      	mov	r0, r6
  107bc2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  107bc6:	f7ff bf8b 	b.w	107ae0 <PCA9655E::write(Register, char)>
  107bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  107bcc:	00118c7c 	.word	0x00118c7c
  107bd0:	00118ca1 	.word	0x00118ca1

00107bd4 <PCA9655E::setDirection(Port, signed char, Direction)>:
  107bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  107bd6:	461c      	mov	r4, r3
  107bd8:	b2d3      	uxtb	r3, r2
  107bda:	2b07      	cmp	r3, #7
  107bdc:	4606      	mov	r6, r0
  107bde:	460d      	mov	r5, r1
  107be0:	4617      	mov	r7, r2
  107be2:	d904      	bls.n	107bee <PCA9655E::setDirection(Port, signed char, Direction)+0x1a>
  107be4:	227b      	movs	r2, #123	; 0x7b
  107be6:	4911      	ldr	r1, [pc, #68]	; (107c2c <PCA9655E::setDirection(Port, signed char, Direction)+0x58>)
  107be8:	4811      	ldr	r0, [pc, #68]	; (107c30 <PCA9655E::setDirection(Port, signed char, Direction)+0x5c>)
  107bea:	f000 fdd9 	bl	1087a0 <mbed_assert_internal>
  107bee:	b11d      	cbz	r5, 107bf8 <PCA9655E::setDirection(Port, signed char, Direction)+0x24>
  107bf0:	2d01      	cmp	r5, #1
  107bf2:	d11a      	bne.n	107c2a <PCA9655E::setDirection(Port, signed char, Direction)+0x56>
  107bf4:	2507      	movs	r5, #7
  107bf6:	e000      	b.n	107bfa <PCA9655E::setDirection(Port, signed char, Direction)+0x26>
  107bf8:	2506      	movs	r5, #6
  107bfa:	4629      	mov	r1, r5
  107bfc:	4630      	mov	r0, r6
  107bfe:	f7ff ff80 	bl	107b02 <PCA9655E::read(Register)>
  107c02:	b11c      	cbz	r4, 107c0c <PCA9655E::setDirection(Port, signed char, Direction)+0x38>
  107c04:	2c01      	cmp	r4, #1
  107c06:	d006      	beq.n	107c16 <PCA9655E::setDirection(Port, signed char, Direction)+0x42>
  107c08:	b2c2      	uxtb	r2, r0
  107c0a:	e008      	b.n	107c1e <PCA9655E::setDirection(Port, signed char, Direction)+0x4a>
  107c0c:	2201      	movs	r2, #1
  107c0e:	40ba      	lsls	r2, r7
  107c10:	ea20 0202 	bic.w	r2, r0, r2
  107c14:	e002      	b.n	107c1c <PCA9655E::setDirection(Port, signed char, Direction)+0x48>
  107c16:	fa04 f207 	lsl.w	r2, r4, r7
  107c1a:	4302      	orrs	r2, r0
  107c1c:	b2d2      	uxtb	r2, r2
  107c1e:	4629      	mov	r1, r5
  107c20:	4630      	mov	r0, r6
  107c22:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  107c26:	f7ff bf5b 	b.w	107ae0 <PCA9655E::write(Register, char)>
  107c2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  107c2c:	00118c7c 	.word	0x00118c7c
  107c30:	00118ca1 	.word	0x00118ca1

00107c34 <PCA9655E::interruptInit(IntEdge, void (*)())>:
  107c34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  107c36:	b1a2      	cbz	r2, 107c62 <PCA9655E::interruptInit(IntEdge, void (*)())+0x2e>
  107c38:	b149      	cbz	r1, 107c4e <PCA9655E::interruptInit(IntEdge, void (*)())+0x1a>
  107c3a:	2901      	cmp	r1, #1
  107c3c:	d111      	bne.n	107c62 <PCA9655E::interruptInit(IntEdge, void (*)())+0x2e>
  107c3e:	4b0a      	ldr	r3, [pc, #40]	; (107c68 <PCA9655E::interruptInit(IntEdge, void (*)())+0x34>)
  107c40:	4669      	mov	r1, sp
  107c42:	3020      	adds	r0, #32
  107c44:	9200      	str	r2, [sp, #0]
  107c46:	9303      	str	r3, [sp, #12]
  107c48:	f004 fcba 	bl	10c5c0 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
  107c4c:	e006      	b.n	107c5c <PCA9655E::interruptInit(IntEdge, void (*)())+0x28>
  107c4e:	4b06      	ldr	r3, [pc, #24]	; (107c68 <PCA9655E::interruptInit(IntEdge, void (*)())+0x34>)
  107c50:	4669      	mov	r1, sp
  107c52:	3020      	adds	r0, #32
  107c54:	9200      	str	r2, [sp, #0]
  107c56:	9303      	str	r3, [sp, #12]
  107c58:	f004 fc8a 	bl	10c570 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
  107c5c:	4668      	mov	r0, sp
  107c5e:	f7fa fcc3 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  107c62:	b005      	add	sp, #20
  107c64:	f85d fb04 	ldr.w	pc, [sp], #4
  107c68:	00115ff4 	.word	0x00115ff4

00107c6c <PCA9655E::~PCA9655E()>:
  107c6c:	b510      	push	{r4, lr}
  107c6e:	4604      	mov	r4, r0
  107c70:	3020      	adds	r0, #32
  107c72:	f004 fc13 	bl	10c49c <mbed::InterruptIn::~InterruptIn()>
  107c76:	4620      	mov	r0, r4
  107c78:	bd10      	pop	{r4, pc}
	...

00107c7c <NCS36000::registerCallback(void (*)())>:
  107c7c:	b530      	push	{r4, r5, lr}
  107c7e:	460d      	mov	r5, r1
  107c80:	b085      	sub	sp, #20
  107c82:	b911      	cbnz	r1, 107c8a <NCS36000::registerCallback(void (*)())+0xe>
  107c84:	f04f 30ff 	mov.w	r0, #4294967295
  107c88:	e012      	b.n	107cb0 <NCS36000::registerCallback(void (*)())+0x34>
  107c8a:	4b0a      	ldr	r3, [pc, #40]	; (107cb4 <NCS36000::registerCallback(void (*)())+0x38>)
  107c8c:	4669      	mov	r1, sp
  107c8e:	9300      	str	r3, [sp, #0]
  107c90:	4b09      	ldr	r3, [pc, #36]	; (107cb8 <NCS36000::registerCallback(void (*)())+0x3c>)
  107c92:	480a      	ldr	r0, [pc, #40]	; (107cbc <NCS36000::registerCallback(void (*)())+0x40>)
  107c94:	9303      	str	r3, [sp, #12]
  107c96:	f006 f845 	bl	10dd24 <rtos::Thread::start(mbed::Callback<void ()>)>
  107c9a:	9b03      	ldr	r3, [sp, #12]
  107c9c:	4604      	mov	r4, r0
  107c9e:	b113      	cbz	r3, 107ca6 <NCS36000::registerCallback(void (*)())+0x2a>
  107ca0:	689b      	ldr	r3, [r3, #8]
  107ca2:	4668      	mov	r0, sp
  107ca4:	4798      	blx	r3
  107ca6:	2c00      	cmp	r4, #0
  107ca8:	d1ec      	bne.n	107c84 <NCS36000::registerCallback(void (*)())+0x8>
  107caa:	4620      	mov	r0, r4
  107cac:	4b04      	ldr	r3, [pc, #16]	; (107cc0 <NCS36000::registerCallback(void (*)())+0x44>)
  107cae:	601d      	str	r5, [r3, #0]
  107cb0:	b005      	add	sp, #20
  107cb2:	bd30      	pop	{r4, r5, pc}
  107cb4:	00107ce9 	.word	0x00107ce9
  107cb8:	00115ff4 	.word	0x00115ff4
  107cbc:	3fff8320 	.word	0x3fff8320
  107cc0:	3fff831c 	.word	0x3fff831c

00107cc4 <NCS36000::libintEnable(pirInt, void (*)())>:
  107cc4:	2801      	cmp	r0, #1
  107cc6:	b510      	push	{r4, lr}
  107cc8:	460c      	mov	r4, r1
  107cca:	d104      	bne.n	107cd6 <NCS36000::libintEnable(pirInt, void (*)())+0x12>
  107ccc:	460a      	mov	r2, r1
  107cce:	4805      	ldr	r0, [pc, #20]	; (107ce4 <NCS36000::libintEnable(pirInt, void (*)())+0x20>)
  107cd0:	2100      	movs	r1, #0
  107cd2:	f7ff ffaf 	bl	107c34 <PCA9655E::interruptInit(IntEdge, void (*)())>
  107cd6:	4622      	mov	r2, r4
  107cd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  107cdc:	2101      	movs	r1, #1
  107cde:	4801      	ldr	r0, [pc, #4]	; (107ce4 <NCS36000::libintEnable(pirInt, void (*)())+0x20>)
  107ce0:	f7ff bfa8 	b.w	107c34 <PCA9655E::interruptInit(IntEdge, void (*)())>
  107ce4:	3fff82c0 	.word	0x3fff82c0

00107ce8 <NCS36000::pir_thread_routine()>:
  107ce8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  107cea:	4912      	ldr	r1, [pc, #72]	; (107d34 <NCS36000::pir_thread_routine()+0x4c>)
  107cec:	2000      	movs	r0, #0
  107cee:	f7ff ffe9 	bl	107cc4 <NCS36000::libintEnable(pirInt, void (*)())>
  107cf2:	4c11      	ldr	r4, [pc, #68]	; (107d38 <NCS36000::pir_thread_routine()+0x50>)
  107cf4:	f04f 32ff 	mov.w	r2, #4294967295
  107cf8:	2101      	movs	r1, #1
  107cfa:	a801      	add	r0, sp, #4
  107cfc:	f005 ffd8 	bl	10dcb0 <rtos::Thread::signal_wait(long, unsigned long)>
  107d00:	9b02      	ldr	r3, [sp, #8]
  107d02:	07db      	lsls	r3, r3, #31
  107d04:	d511      	bpl.n	107d2a <NCS36000::pir_thread_routine()+0x42>
  107d06:	f04f 31ff 	mov.w	r1, #4294967295
  107d0a:	480c      	ldr	r0, [pc, #48]	; (107d3c <NCS36000::pir_thread_routine()+0x54>)
  107d0c:	f005 feed 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  107d10:	2130      	movs	r1, #48	; 0x30
  107d12:	480b      	ldr	r0, [pc, #44]	; (107d40 <NCS36000::pir_thread_routine()+0x58>)
  107d14:	f005 ffb5 	bl	10dc82 <rtos::Thread::set_priority(osPriority_t)>
  107d18:	6823      	ldr	r3, [r4, #0]
  107d1a:	4798      	blx	r3
  107d1c:	2118      	movs	r1, #24
  107d1e:	4808      	ldr	r0, [pc, #32]	; (107d40 <NCS36000::pir_thread_routine()+0x58>)
  107d20:	f005 ffaf 	bl	10dc82 <rtos::Thread::set_priority(osPriority_t)>
  107d24:	4805      	ldr	r0, [pc, #20]	; (107d3c <NCS36000::pir_thread_routine()+0x54>)
  107d26:	f005 fee3 	bl	10daf0 <rtos::Mutex::unlock()>
  107d2a:	2014      	movs	r0, #20
  107d2c:	f005 ffcf 	bl	10dcce <rtos::Thread::wait(unsigned long)>
  107d30:	e7e0      	b.n	107cf4 <NCS36000::pir_thread_routine()+0xc>
  107d32:	bf00      	nop
  107d34:	00107d5d 	.word	0x00107d5d
  107d38:	3fff831c 	.word	0x3fff831c
  107d3c:	3fff44ec 	.word	0x3fff44ec
  107d40:	3fff8320 	.word	0x3fff8320

00107d44 <NCS36000::libisInterrupt()>:
  107d44:	b508      	push	{r3, lr}
  107d46:	2202      	movs	r2, #2
  107d48:	2100      	movs	r1, #0
  107d4a:	4803      	ldr	r0, [pc, #12]	; (107d58 <NCS36000::libisInterrupt()+0x14>)
  107d4c:	f7ff fef4 	bl	107b38 <PCA9655E::readPinVal(Port, signed char)>
  107d50:	1e43      	subs	r3, r0, #1
  107d52:	4258      	negs	r0, r3
  107d54:	4158      	adcs	r0, r3
  107d56:	bd08      	pop	{r3, pc}
  107d58:	3fff82c0 	.word	0x3fff82c0

00107d5c <NCS36000::pirIntrHnd()>:
  107d5c:	b508      	push	{r3, lr}
  107d5e:	f7ff fff1 	bl	107d44 <NCS36000::libisInterrupt()>
  107d62:	2801      	cmp	r0, #1
  107d64:	4601      	mov	r1, r0
  107d66:	d104      	bne.n	107d72 <NCS36000::pirIntrHnd()+0x16>
  107d68:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  107d6c:	4801      	ldr	r0, [pc, #4]	; (107d74 <NCS36000::pirIntrHnd()+0x18>)
  107d6e:	f005 bf9c 	b.w	10dcaa <rtos::Thread::signal_set(long)>
  107d72:	bd08      	pop	{r3, pc}
  107d74:	3fff8320 	.word	0x3fff8320

00107d78 <_GLOBAL__sub_I_pir_reg_callback>:
  107d78:	b573      	push	{r0, r1, r4, r5, r6, lr}
  107d7a:	4c16      	ldr	r4, [pc, #88]	; (107dd4 <_GLOBAL__sub_I_pir_reg_callback+0x5c>)
  107d7c:	4e16      	ldr	r6, [pc, #88]	; (107dd8 <_GLOBAL__sub_I_pir_reg_callback+0x60>)
  107d7e:	2311      	movs	r3, #17
  107d80:	9300      	str	r3, [sp, #0]
  107d82:	2202      	movs	r2, #2
  107d84:	2324      	movs	r3, #36	; 0x24
  107d86:	2103      	movs	r1, #3
  107d88:	4620      	mov	r0, r4
  107d8a:	f7ff fe8f 	bl	107aac <PCA9655E::PCA9655E(PinName, PinName, unsigned char, PinName)>
  107d8e:	4632      	mov	r2, r6
  107d90:	4912      	ldr	r1, [pc, #72]	; (107ddc <_GLOBAL__sub_I_pir_reg_callback+0x64>)
  107d92:	4620      	mov	r0, r4
  107d94:	4c12      	ldr	r4, [pc, #72]	; (107de0 <_GLOBAL__sub_I_pir_reg_callback+0x68>)
  107d96:	f005 fc9e 	bl	10d6d6 <__aeabi_atexit>
  107d9a:	2500      	movs	r5, #0
  107d9c:	4b11      	ldr	r3, [pc, #68]	; (107de4 <_GLOBAL__sub_I_pir_reg_callback+0x6c>)
  107d9e:	4629      	mov	r1, r5
  107da0:	6125      	str	r5, [r4, #16]
  107da2:	f104 0040 	add.w	r0, r4, #64	; 0x40
  107da6:	6023      	str	r3, [r4, #0]
  107da8:	f005 fed6 	bl	10db58 <rtos::Semaphore::Semaphore(long)>
  107dac:	f104 0064 	add.w	r0, r4, #100	; 0x64
  107db0:	f005 fe94 	bl	10dadc <rtos::Mutex::Mutex()>
  107db4:	4620      	mov	r0, r4
  107db6:	9500      	str	r5, [sp, #0]
  107db8:	462b      	mov	r3, r5
  107dba:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  107dbe:	2118      	movs	r1, #24
  107dc0:	f005 ff14 	bl	10dbec <rtos::Thread::constructor(osPriority_t, unsigned long, unsigned char*, char const*)>
  107dc4:	4632      	mov	r2, r6
  107dc6:	4620      	mov	r0, r4
  107dc8:	4907      	ldr	r1, [pc, #28]	; (107de8 <_GLOBAL__sub_I_pir_reg_callback+0x70>)
  107dca:	b002      	add	sp, #8
  107dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  107dd0:	f005 bc81 	b.w	10d6d6 <__aeabi_atexit>
  107dd4:	3fff82c0 	.word	0x3fff82c0
  107dd8:	3fff40a0 	.word	0x3fff40a0
  107ddc:	00107c6d 	.word	0x00107c6d
  107de0:	3fff8320 	.word	0x3fff8320
  107de4:	00119c30 	.word	0x00119c30
  107de8:	0010dcd5 	.word	0x0010dcd5

00107dec <mbed::I2C::~I2C()>:
  107dec:	4770      	bx	lr

00107dee <mbed::I2C::~I2C()>:
  107dee:	b510      	push	{r4, lr}
  107df0:	4604      	mov	r4, r0
  107df2:	f005 fcb1 	bl	10d758 <operator delete(void*)>
  107df6:	4620      	mov	r0, r4
  107df8:	bd10      	pop	{r4, pc}
	...

00107dfc <NOA1305::mode(NOA1305_Mode)>:
  107dfc:	b530      	push	{r4, r5, lr}
  107dfe:	2500      	movs	r5, #0
  107e00:	b085      	sub	sp, #20
  107e02:	460c      	mov	r4, r1
  107e04:	f88d 500c 	strb.w	r5, [sp, #12]
  107e08:	f88d 100d 	strb.w	r1, [sp, #13]
  107e0c:	b672      	cpsid	i
  107e0e:	4918      	ldr	r1, [pc, #96]	; (107e70 <NOA1305::mode(NOA1305_Mode)+0x74>)
  107e10:	4818      	ldr	r0, [pc, #96]	; (107e74 <NOA1305::mode(NOA1305_Mode)+0x78>)
  107e12:	f004 fabd 	bl	10c390 <mbed::I2C::frequency(int)>
  107e16:	9500      	str	r5, [sp, #0]
  107e18:	2302      	movs	r3, #2
  107e1a:	aa03      	add	r2, sp, #12
  107e1c:	2172      	movs	r1, #114	; 0x72
  107e1e:	4815      	ldr	r0, [pc, #84]	; (107e74 <NOA1305::mode(NOA1305_Mode)+0x78>)
  107e20:	f004 fae2 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107e24:	b110      	cbz	r0, 107e2c <NOA1305::mode(NOA1305_Mode)+0x30>
  107e26:	f06f 0001 	mvn.w	r0, #1
  107e2a:	e01e      	b.n	107e6a <NOA1305::mode(NOA1305_Mode)+0x6e>
  107e2c:	f88d 000c 	strb.w	r0, [sp, #12]
  107e30:	9000      	str	r0, [sp, #0]
  107e32:	2301      	movs	r3, #1
  107e34:	aa03      	add	r2, sp, #12
  107e36:	2172      	movs	r1, #114	; 0x72
  107e38:	480e      	ldr	r0, [pc, #56]	; (107e74 <NOA1305::mode(NOA1305_Mode)+0x78>)
  107e3a:	f004 fad5 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107e3e:	2800      	cmp	r0, #0
  107e40:	d1f1      	bne.n	107e26 <NOA1305::mode(NOA1305_Mode)+0x2a>
  107e42:	9000      	str	r0, [sp, #0]
  107e44:	2301      	movs	r3, #1
  107e46:	aa03      	add	r2, sp, #12
  107e48:	2172      	movs	r1, #114	; 0x72
  107e4a:	480a      	ldr	r0, [pc, #40]	; (107e74 <NOA1305::mode(NOA1305_Mode)+0x78>)
  107e4c:	f004 faec 	bl	10c428 <mbed::I2C::read(int, char*, int, bool)>
  107e50:	2800      	cmp	r0, #0
  107e52:	d1e8      	bne.n	107e26 <NOA1305::mode(NOA1305_Mode)+0x2a>
  107e54:	4908      	ldr	r1, [pc, #32]	; (107e78 <NOA1305::mode(NOA1305_Mode)+0x7c>)
  107e56:	4807      	ldr	r0, [pc, #28]	; (107e74 <NOA1305::mode(NOA1305_Mode)+0x78>)
  107e58:	f004 fa9a 	bl	10c390 <mbed::I2C::frequency(int)>
  107e5c:	b662      	cpsie	i
  107e5e:	f89d 000c 	ldrb.w	r0, [sp, #12]
  107e62:	1b00      	subs	r0, r0, r4
  107e64:	bf18      	it	ne
  107e66:	f04f 30ff 	movne.w	r0, #4294967295
  107e6a:	b005      	add	sp, #20
  107e6c:	bd30      	pop	{r4, r5, pc}
  107e6e:	bf00      	nop
  107e70:	000186a0 	.word	0x000186a0
  107e74:	3fff853c 	.word	0x3fff853c
  107e78:	000f4240 	.word	0x000f4240

00107e7c <NOA1305::init(NOA1305_IntTime)>:
  107e7c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  107e80:	4680      	mov	r8, r0
  107e82:	460f      	mov	r7, r1
  107e84:	4832      	ldr	r0, [pc, #200]	; (107f50 <NOA1305::init(NOA1305_IntTime)+0xd4>)
  107e86:	4933      	ldr	r1, [pc, #204]	; (107f54 <NOA1305::init(NOA1305_IntTime)+0xd8>)
  107e88:	f004 fa82 	bl	10c390 <mbed::I2C::frequency(int)>
  107e8c:	ac04      	add	r4, sp, #16
  107e8e:	2001      	movs	r0, #1
  107e90:	2508      	movs	r5, #8
  107e92:	f005 fd3f 	bl	10d914 <wait_ms>
  107e96:	2600      	movs	r6, #0
  107e98:	f804 5d04 	strb.w	r5, [r4, #-4]!
  107e9c:	2301      	movs	r3, #1
  107e9e:	4622      	mov	r2, r4
  107ea0:	2172      	movs	r1, #114	; 0x72
  107ea2:	9600      	str	r6, [sp, #0]
  107ea4:	482a      	ldr	r0, [pc, #168]	; (107f50 <NOA1305::init(NOA1305_IntTime)+0xd4>)
  107ea6:	f004 fa9f 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107eaa:	2302      	movs	r3, #2
  107eac:	4622      	mov	r2, r4
  107eae:	2172      	movs	r1, #114	; 0x72
  107eb0:	9600      	str	r6, [sp, #0]
  107eb2:	4827      	ldr	r0, [pc, #156]	; (107f50 <NOA1305::init(NOA1305_IntTime)+0xd4>)
  107eb4:	f004 fab8 	bl	10c428 <mbed::I2C::read(int, char*, int, bool)>
  107eb8:	9600      	str	r6, [sp, #0]
  107eba:	2301      	movs	r3, #1
  107ebc:	4622      	mov	r2, r4
  107ebe:	2172      	movs	r1, #114	; 0x72
  107ec0:	4823      	ldr	r0, [pc, #140]	; (107f50 <NOA1305::init(NOA1305_IntTime)+0xd4>)
  107ec2:	f88d 500c 	strb.w	r5, [sp, #12]
  107ec6:	f004 fa8f 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107eca:	b110      	cbz	r0, 107ed2 <NOA1305::init(NOA1305_IntTime)+0x56>
  107ecc:	f06f 0401 	mvn.w	r4, #1
  107ed0:	e03a      	b.n	107f48 <NOA1305::init(NOA1305_IntTime)+0xcc>
  107ed2:	9000      	str	r0, [sp, #0]
  107ed4:	2302      	movs	r3, #2
  107ed6:	4622      	mov	r2, r4
  107ed8:	2172      	movs	r1, #114	; 0x72
  107eda:	481d      	ldr	r0, [pc, #116]	; (107f50 <NOA1305::init(NOA1305_IntTime)+0xd4>)
  107edc:	f004 faa4 	bl	10c428 <mbed::I2C::read(int, char*, int, bool)>
  107ee0:	2800      	cmp	r0, #0
  107ee2:	d1f3      	bne.n	107ecc <NOA1305::init(NOA1305_IntTime)+0x50>
  107ee4:	f89d 300c 	ldrb.w	r3, [sp, #12]
  107ee8:	2b19      	cmp	r3, #25
  107eea:	d12b      	bne.n	107f44 <NOA1305::init(NOA1305_IntTime)+0xc8>
  107eec:	f89d 300d 	ldrb.w	r3, [sp, #13]
  107ef0:	2b05      	cmp	r3, #5
  107ef2:	d127      	bne.n	107f44 <NOA1305::init(NOA1305_IntTime)+0xc8>
  107ef4:	2302      	movs	r3, #2
  107ef6:	9000      	str	r0, [sp, #0]
  107ef8:	4622      	mov	r2, r4
  107efa:	2172      	movs	r1, #114	; 0x72
  107efc:	4814      	ldr	r0, [pc, #80]	; (107f50 <NOA1305::init(NOA1305_IntTime)+0xd4>)
  107efe:	f88d 300c 	strb.w	r3, [sp, #12]
  107f02:	f88d 700d 	strb.w	r7, [sp, #13]
  107f06:	f004 fa6f 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107f0a:	4604      	mov	r4, r0
  107f0c:	2800      	cmp	r0, #0
  107f0e:	d1dd      	bne.n	107ecc <NOA1305::init(NOA1305_IntTime)+0x50>
  107f10:	4601      	mov	r1, r0
  107f12:	4640      	mov	r0, r8
  107f14:	f7ff ff72 	bl	107dfc <NOA1305::mode(NOA1305_Mode)>
  107f18:	480f      	ldr	r0, [pc, #60]	; (107f58 <NOA1305::init(NOA1305_IntTime)+0xdc>)
  107f1a:	f005 fcef 	bl	10d8fc <wait>
  107f1e:	4629      	mov	r1, r5
  107f20:	4640      	mov	r0, r8
  107f22:	f7ff ff6b 	bl	107dfc <NOA1305::mode(NOA1305_Mode)>
  107f26:	490d      	ldr	r1, [pc, #52]	; (107f5c <NOA1305::init(NOA1305_IntTime)+0xe0>)
  107f28:	4809      	ldr	r0, [pc, #36]	; (107f50 <NOA1305::init(NOA1305_IntTime)+0xd4>)
  107f2a:	f004 fa31 	bl	10c390 <mbed::I2C::frequency(int)>
  107f2e:	4b0c      	ldr	r3, [pc, #48]	; (107f60 <NOA1305::init(NOA1305_IntTime)+0xe4>)
  107f30:	490c      	ldr	r1, [pc, #48]	; (107f64 <NOA1305::init(NOA1305_IntTime)+0xe8>)
  107f32:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
  107f36:	f007 f927 	bl	10f188 <__aeabi_fmul>
  107f3a:	f007 fa75 	bl	10f428 <__aeabi_f2iz>
  107f3e:	f005 fce9 	bl	10d914 <wait_ms>
  107f42:	e001      	b.n	107f48 <NOA1305::init(NOA1305_IntTime)+0xcc>
  107f44:	f04f 34ff 	mov.w	r4, #4294967295
  107f48:	4620      	mov	r0, r4
  107f4a:	b004      	add	sp, #16
  107f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  107f50:	3fff853c 	.word	0x3fff853c
  107f54:	000186a0 	.word	0x000186a0
  107f58:	3e19999a 	.word	0x3e19999a
  107f5c:	000f4240 	.word	0x000f4240
  107f60:	3fff40c8 	.word	0x3fff40c8
  107f64:	40400000 	.word	0x40400000

00107f68 <NOA1305::read(int&)>:
  107f68:	b530      	push	{r4, r5, lr}
  107f6a:	b085      	sub	sp, #20
  107f6c:	ac04      	add	r4, sp, #16
  107f6e:	2306      	movs	r3, #6
  107f70:	460d      	mov	r5, r1
  107f72:	f804 3d04 	strb.w	r3, [r4, #-4]!
  107f76:	b672      	cpsid	i
  107f78:	4912      	ldr	r1, [pc, #72]	; (107fc4 <NOA1305::read(int&)+0x5c>)
  107f7a:	4813      	ldr	r0, [pc, #76]	; (107fc8 <NOA1305::read(int&)+0x60>)
  107f7c:	f004 fa08 	bl	10c390 <mbed::I2C::frequency(int)>
  107f80:	2300      	movs	r3, #0
  107f82:	9300      	str	r3, [sp, #0]
  107f84:	4622      	mov	r2, r4
  107f86:	2301      	movs	r3, #1
  107f88:	2172      	movs	r1, #114	; 0x72
  107f8a:	480f      	ldr	r0, [pc, #60]	; (107fc8 <NOA1305::read(int&)+0x60>)
  107f8c:	f004 fa2c 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107f90:	b110      	cbz	r0, 107f98 <NOA1305::read(int&)+0x30>
  107f92:	f06f 0401 	mvn.w	r4, #1
  107f96:	e011      	b.n	107fbc <NOA1305::read(int&)+0x54>
  107f98:	9000      	str	r0, [sp, #0]
  107f9a:	4622      	mov	r2, r4
  107f9c:	2302      	movs	r3, #2
  107f9e:	2172      	movs	r1, #114	; 0x72
  107fa0:	4809      	ldr	r0, [pc, #36]	; (107fc8 <NOA1305::read(int&)+0x60>)
  107fa2:	f004 fa41 	bl	10c428 <mbed::I2C::read(int, char*, int, bool)>
  107fa6:	4604      	mov	r4, r0
  107fa8:	2800      	cmp	r0, #0
  107faa:	d1f2      	bne.n	107f92 <NOA1305::read(int&)+0x2a>
  107fac:	4907      	ldr	r1, [pc, #28]	; (107fcc <NOA1305::read(int&)+0x64>)
  107fae:	4806      	ldr	r0, [pc, #24]	; (107fc8 <NOA1305::read(int&)+0x60>)
  107fb0:	f004 f9ee 	bl	10c390 <mbed::I2C::frequency(int)>
  107fb4:	b662      	cpsie	i
  107fb6:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  107fba:	602b      	str	r3, [r5, #0]
  107fbc:	4620      	mov	r0, r4
  107fbe:	b005      	add	sp, #20
  107fc0:	bd30      	pop	{r4, r5, pc}
  107fc2:	bf00      	nop
  107fc4:	000186a0 	.word	0x000186a0
  107fc8:	3fff853c 	.word	0x3fff853c
  107fcc:	000f4240 	.word	0x000f4240

00107fd0 <NOA1305::readRegister(unsigned char, unsigned char&)>:
  107fd0:	b530      	push	{r4, r5, lr}
  107fd2:	2909      	cmp	r1, #9
  107fd4:	b085      	sub	sp, #20
  107fd6:	4615      	mov	r5, r2
  107fd8:	d823      	bhi.n	108022 <NOA1305::readRegister(unsigned char, unsigned char&)+0x52>
  107fda:	ac04      	add	r4, sp, #16
  107fdc:	f804 1d04 	strb.w	r1, [r4, #-4]!
  107fe0:	b672      	cpsid	i
  107fe2:	4913      	ldr	r1, [pc, #76]	; (108030 <NOA1305::readRegister(unsigned char, unsigned char&)+0x60>)
  107fe4:	4813      	ldr	r0, [pc, #76]	; (108034 <NOA1305::readRegister(unsigned char, unsigned char&)+0x64>)
  107fe6:	f004 f9d3 	bl	10c390 <mbed::I2C::frequency(int)>
  107fea:	2300      	movs	r3, #0
  107fec:	9300      	str	r3, [sp, #0]
  107fee:	4622      	mov	r2, r4
  107ff0:	2301      	movs	r3, #1
  107ff2:	2172      	movs	r1, #114	; 0x72
  107ff4:	480f      	ldr	r0, [pc, #60]	; (108034 <NOA1305::readRegister(unsigned char, unsigned char&)+0x64>)
  107ff6:	f004 f9f7 	bl	10c3e8 <mbed::I2C::write(int, char const*, int, bool)>
  107ffa:	b940      	cbnz	r0, 10800e <NOA1305::readRegister(unsigned char, unsigned char&)+0x3e>
  107ffc:	9000      	str	r0, [sp, #0]
  107ffe:	2301      	movs	r3, #1
  108000:	462a      	mov	r2, r5
  108002:	2172      	movs	r1, #114	; 0x72
  108004:	480b      	ldr	r0, [pc, #44]	; (108034 <NOA1305::readRegister(unsigned char, unsigned char&)+0x64>)
  108006:	f004 fa0f 	bl	10c428 <mbed::I2C::read(int, char*, int, bool)>
  10800a:	4604      	mov	r4, r0
  10800c:	b118      	cbz	r0, 108016 <NOA1305::readRegister(unsigned char, unsigned char&)+0x46>
  10800e:	b662      	cpsie	i
  108010:	f06f 0401 	mvn.w	r4, #1
  108014:	e008      	b.n	108028 <NOA1305::readRegister(unsigned char, unsigned char&)+0x58>
  108016:	4908      	ldr	r1, [pc, #32]	; (108038 <NOA1305::readRegister(unsigned char, unsigned char&)+0x68>)
  108018:	4806      	ldr	r0, [pc, #24]	; (108034 <NOA1305::readRegister(unsigned char, unsigned char&)+0x64>)
  10801a:	f004 f9b9 	bl	10c390 <mbed::I2C::frequency(int)>
  10801e:	b662      	cpsie	i
  108020:	e002      	b.n	108028 <NOA1305::readRegister(unsigned char, unsigned char&)+0x58>
  108022:	b662      	cpsie	i
  108024:	f06f 0402 	mvn.w	r4, #2
  108028:	4620      	mov	r0, r4
  10802a:	b005      	add	sp, #20
  10802c:	bd30      	pop	{r4, r5, pc}
  10802e:	bf00      	nop
  108030:	000186a0 	.word	0x000186a0
  108034:	3fff853c 	.word	0x3fff853c
  108038:	000f4240 	.word	0x000f4240
  10803c:	00000000 	.word	0x00000000

00108040 <NOA1305::getAbmienceInLux(float)>:
  108040:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  108044:	2300      	movs	r3, #0
  108046:	aa02      	add	r2, sp, #8
  108048:	4688      	mov	r8, r1
  10804a:	f802 3d05 	strb.w	r3, [r2, #-5]!
  10804e:	2102      	movs	r1, #2
  108050:	4604      	mov	r4, r0
  108052:	9301      	str	r3, [sp, #4]
  108054:	f7ff ffbc 	bl	107fd0 <NOA1305::readRegister(unsigned char, unsigned char&)>
  108058:	b108      	cbz	r0, 10805e <NOA1305::getAbmienceInLux(float)+0x1e>
  10805a:	4819      	ldr	r0, [pc, #100]	; (1080c0 <NOA1305::getAbmienceInLux(float)+0x80>)
  10805c:	e029      	b.n	1080b2 <NOA1305::getAbmienceInLux(float)+0x72>
  10805e:	a901      	add	r1, sp, #4
  108060:	4620      	mov	r0, r4
  108062:	f7ff ff81 	bl	107f68 <NOA1305::read(int&)>
  108066:	2800      	cmp	r0, #0
  108068:	d1f7      	bne.n	10805a <NOA1305::getAbmienceInLux(float)+0x1a>
  10806a:	9801      	ldr	r0, [sp, #4]
  10806c:	f006 fc2e 	bl	10e8cc <__aeabi_i2d>
  108070:	f89d 2003 	ldrb.w	r2, [sp, #3]
  108074:	4b13      	ldr	r3, [pc, #76]	; (1080c4 <NOA1305::getAbmienceInLux(float)+0x84>)
  108076:	4604      	mov	r4, r0
  108078:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  10807c:	460d      	mov	r5, r1
  10807e:	f006 fc37 	bl	10e8f0 <__aeabi_f2d>
  108082:	a30d      	add	r3, pc, #52	; (adr r3, 1080b8 <NOA1305::getAbmienceInLux(float)+0x78>)
  108084:	e9d3 2300 	ldrd	r2, r3, [r3]
  108088:	f006 fc86 	bl	10e998 <__aeabi_dmul>
  10808c:	4606      	mov	r6, r0
  10808e:	4640      	mov	r0, r8
  108090:	460f      	mov	r7, r1
  108092:	f006 fc2d 	bl	10e8f0 <__aeabi_f2d>
  108096:	4602      	mov	r2, r0
  108098:	460b      	mov	r3, r1
  10809a:	4630      	mov	r0, r6
  10809c:	4639      	mov	r1, r7
  10809e:	f006 fc7b 	bl	10e998 <__aeabi_dmul>
  1080a2:	4602      	mov	r2, r0
  1080a4:	460b      	mov	r3, r1
  1080a6:	4620      	mov	r0, r4
  1080a8:	4629      	mov	r1, r5
  1080aa:	f006 fd9f 	bl	10ebec <__aeabi_ddiv>
  1080ae:	f006 ff0d 	bl	10eecc <__aeabi_d2f>
  1080b2:	b002      	add	sp, #8
  1080b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1080b8:	d2f1a9fc 	.word	0xd2f1a9fc
  1080bc:	3f50624d 	.word	0x3f50624d
  1080c0:	bf800000 	.word	0xbf800000
  1080c4:	3fff40c8 	.word	0x3fff40c8

001080c8 <_GLOBAL__sub_I_ALS_integrationtime>:
  1080c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  1080ca:	4c1c      	ldr	r4, [pc, #112]	; (10813c <_GLOBAL__sub_I_ALS_integrationtime+0x74>)
  1080cc:	4e1c      	ldr	r6, [pc, #112]	; (108140 <_GLOBAL__sub_I_ALS_integrationtime+0x78>)
  1080ce:	2202      	movs	r2, #2
  1080d0:	2103      	movs	r1, #3
  1080d2:	4620      	mov	r0, r4
  1080d4:	f004 f93e 	bl	10c354 <mbed::I2C::I2C(PinName, PinName)>
  1080d8:	4632      	mov	r2, r6
  1080da:	491a      	ldr	r1, [pc, #104]	; (108144 <_GLOBAL__sub_I_ALS_integrationtime+0x7c>)
  1080dc:	4620      	mov	r0, r4
  1080de:	4c1a      	ldr	r4, [pc, #104]	; (108148 <_GLOBAL__sub_I_ALS_integrationtime+0x80>)
  1080e0:	f005 faf9 	bl	10d6d6 <__aeabi_atexit>
  1080e4:	2311      	movs	r3, #17
  1080e6:	9300      	str	r3, [sp, #0]
  1080e8:	2202      	movs	r2, #2
  1080ea:	2322      	movs	r3, #34	; 0x22
  1080ec:	2103      	movs	r1, #3
  1080ee:	4620      	mov	r0, r4
  1080f0:	f7ff fcdc 	bl	107aac <PCA9655E::PCA9655E(PinName, PinName, unsigned char, PinName)>
  1080f4:	4632      	mov	r2, r6
  1080f6:	4915      	ldr	r1, [pc, #84]	; (10814c <_GLOBAL__sub_I_ALS_integrationtime+0x84>)
  1080f8:	4620      	mov	r0, r4
  1080fa:	4c15      	ldr	r4, [pc, #84]	; (108150 <_GLOBAL__sub_I_ALS_integrationtime+0x88>)
  1080fc:	f005 faeb 	bl	10d6d6 <__aeabi_atexit>
  108100:	2500      	movs	r5, #0
  108102:	4b14      	ldr	r3, [pc, #80]	; (108154 <_GLOBAL__sub_I_ALS_integrationtime+0x8c>)
  108104:	4629      	mov	r1, r5
  108106:	6125      	str	r5, [r4, #16]
  108108:	f104 0040 	add.w	r0, r4, #64	; 0x40
  10810c:	6023      	str	r3, [r4, #0]
  10810e:	f005 fd23 	bl	10db58 <rtos::Semaphore::Semaphore(long)>
  108112:	f104 0064 	add.w	r0, r4, #100	; 0x64
  108116:	f005 fce1 	bl	10dadc <rtos::Mutex::Mutex()>
  10811a:	4620      	mov	r0, r4
  10811c:	9500      	str	r5, [sp, #0]
  10811e:	462b      	mov	r3, r5
  108120:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  108124:	2118      	movs	r1, #24
  108126:	f005 fd61 	bl	10dbec <rtos::Thread::constructor(osPriority_t, unsigned long, unsigned char*, char const*)>
  10812a:	4632      	mov	r2, r6
  10812c:	4620      	mov	r0, r4
  10812e:	490a      	ldr	r1, [pc, #40]	; (108158 <_GLOBAL__sub_I_ALS_integrationtime+0x90>)
  108130:	b002      	add	sp, #8
  108132:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  108136:	f005 bace 	b.w	10d6d6 <__aeabi_atexit>
  10813a:	bf00      	nop
  10813c:	3fff853c 	.word	0x3fff853c
  108140:	3fff40a0 	.word	0x3fff40a0
  108144:	00107ded 	.word	0x00107ded
  108148:	3fff84e0 	.word	0x3fff84e0
  10814c:	00107c6d 	.word	0x00107c6d
  108150:	3fff8400 	.word	0x3fff8400
  108154:	00119c30 	.word	0x00119c30
  108158:	0010dcd5 	.word	0x0010dcd5

0010815c <WizFi250Interface::get_stack()>:
  10815c:	4770      	bx	lr

0010815e <non-virtual thunk to WizFi250Interface::get_stack()>:
  10815e:	f1a0 0004 	sub.w	r0, r0, #4
  108162:	e7fb      	b.n	10815c <WizFi250Interface::get_stack()>

00108164 <WizFi250Interface::connect()>:
  108164:	4800      	ldr	r0, [pc, #0]	; (108168 <WizFi250Interface::connect()+0x4>)
  108166:	4770      	bx	lr
  108168:	fffff446 	.word	0xfffff446

0010816c <non-virtual thunk to WizFi250Interface::connect()>:
  10816c:	f1a0 0004 	sub.w	r0, r0, #4
  108170:	f7ff bff8 	b.w	108164 <WizFi250Interface::connect()>

00108174 <WizFi250Interface::set_credentials(char const*, char const*, nsapi_security)>:
  108174:	4800      	ldr	r0, [pc, #0]	; (108178 <WizFi250Interface::set_credentials(char const*, char const*, nsapi_security)+0x4>)
  108176:	4770      	bx	lr
  108178:	fffff446 	.word	0xfffff446

0010817c <non-virtual thunk to WizFi250Interface::set_credentials(char const*, char const*, nsapi_security)>:
  10817c:	f1a0 0004 	sub.w	r0, r0, #4
  108180:	f7ff bff8 	b.w	108174 <WizFi250Interface::set_credentials(char const*, char const*, nsapi_security)>

00108184 <WizFi250Interface::set_channel(unsigned char)>:
  108184:	4800      	ldr	r0, [pc, #0]	; (108188 <WizFi250Interface::set_channel(unsigned char)+0x4>)
  108186:	4770      	bx	lr
  108188:	fffff446 	.word	0xfffff446

0010818c <non-virtual thunk to WizFi250Interface::set_channel(unsigned char)>:
  10818c:	f1a0 0004 	sub.w	r0, r0, #4
  108190:	f7ff bff8 	b.w	108184 <WizFi250Interface::set_channel(unsigned char)>

00108194 <WizFi250Interface::get_rssi()>:
  108194:	2046      	movs	r0, #70	; 0x46
  108196:	4770      	bx	lr

00108198 <non-virtual thunk to WizFi250Interface::get_rssi()>:
  108198:	f1a0 0004 	sub.w	r0, r0, #4
  10819c:	f7ff bffa 	b.w	108194 <WizFi250Interface::get_rssi()>

001081a0 <WizFi250Interface::scan(WiFiAccessPoint*, unsigned int)>:
  1081a0:	4800      	ldr	r0, [pc, #0]	; (1081a4 <WizFi250Interface::scan(WiFiAccessPoint*, unsigned int)+0x4>)
  1081a2:	4770      	bx	lr
  1081a4:	fffff446 	.word	0xfffff446

001081a8 <non-virtual thunk to WizFi250Interface::scan(WiFiAccessPoint*, unsigned int)>:
  1081a8:	f1a0 0004 	sub.w	r0, r0, #4
  1081ac:	f7ff bff8 	b.w	1081a0 <WizFi250Interface::scan(WiFiAccessPoint*, unsigned int)>

001081b0 <WizFi250Interface::socket_sendto(void*, SocketAddress const&, void const*, unsigned int)>:
  1081b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1081b4:	461f      	mov	r7, r3
  1081b6:	794b      	ldrb	r3, [r1, #5]
  1081b8:	4604      	mov	r4, r0
  1081ba:	460d      	mov	r5, r1
  1081bc:	f8dd 8018 	ldr.w	r8, [sp, #24]
  1081c0:	b14b      	cbz	r3, 1081d6 <WizFi250Interface::socket_sendto(void*, SocketAddress const&, void const*, unsigned int)+0x26>
  1081c2:	6823      	ldr	r3, [r4, #0]
  1081c4:	463a      	mov	r2, r7
  1081c6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
  1081c8:	4629      	mov	r1, r5
  1081ca:	4643      	mov	r3, r8
  1081cc:	4620      	mov	r0, r4
  1081ce:	46b4      	mov	r12, r6
  1081d0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  1081d4:	4760      	bx	r12
  1081d6:	6806      	ldr	r6, [r0, #0]
  1081d8:	6af6      	ldr	r6, [r6, #44]	; 0x2c
  1081da:	47b0      	blx	r6
  1081dc:	2800      	cmp	r0, #0
  1081de:	daf0      	bge.n	1081c2 <WizFi250Interface::socket_sendto(void*, SocketAddress const&, void const*, unsigned int)+0x12>
  1081e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

001081e4 <WizFi250Interface::socket_recvfrom(void*, SocketAddress*, void*, unsigned int)>:
  1081e4:	461a      	mov	r2, r3
  1081e6:	6803      	ldr	r3, [r0, #0]
  1081e8:	b410      	push	{r4}
  1081ea:	6b9c      	ldr	r4, [r3, #56]	; 0x38
  1081ec:	9b01      	ldr	r3, [sp, #4]
  1081ee:	46a4      	mov	r12, r4
  1081f0:	bc10      	pop	{r4}
  1081f2:	4760      	bx	r12

001081f4 <WizFi250Interface::socket_attach(void*, void (*)(void*), void*)>:
  1081f4:	4770      	bx	lr
	...

001081f8 <WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)>:
  1081f8:	b570      	push	{r4, r5, r6, lr}
  1081fa:	f100 0408 	add.w	r4, r0, #8
  1081fe:	4620      	mov	r0, r4
  108200:	460e      	mov	r6, r1
  108202:	4615      	mov	r5, r2
  108204:	f00d f9ce 	bl	1155a4 <WizFi250::startup()>
  108208:	b1a8      	cbz	r0, 108236 <WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)+0x3e>
  10820a:	4631      	mov	r1, r6
  10820c:	4620      	mov	r0, r4
  10820e:	f00c fdd5 	bl	114dbc <WizFi250::setSsid(char const*)>
  108212:	462a      	mov	r2, r5
  108214:	2100      	movs	r1, #0
  108216:	4620      	mov	r0, r4
  108218:	f00c fdd7 	bl	114dca <WizFi250::setSec(WizFi250::Security, char const*)>
  10821c:	4907      	ldr	r1, [pc, #28]	; (10823c <WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)+0x44>)
  10821e:	4620      	mov	r0, r4
  108220:	f00c fdc1 	bl	114da6 <WizFi250::setAddress(char const*)>
  108224:	2100      	movs	r1, #0
  108226:	4620      	mov	r0, r4
  108228:	f00c fd5c 	bl	114ce4 <WizFi250::join(WizFi250::WiFiMode)>
  10822c:	3001      	adds	r0, #1
  10822e:	4804      	ldr	r0, [pc, #16]	; (108240 <WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)+0x48>)
  108230:	bf18      	it	ne
  108232:	2000      	movne	r0, #0
  108234:	bd70      	pop	{r4, r5, r6, pc}
  108236:	4803      	ldr	r0, [pc, #12]	; (108244 <WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)+0x4c>)
  108238:	bd70      	pop	{r4, r5, r6, pc}
  10823a:	bf00      	nop
  10823c:	001164ed 	.word	0x001164ed
  108240:	fffff444 	.word	0xfffff444
  108244:	fffff43c 	.word	0xfffff43c

00108248 <non-virtual thunk to WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)>:
  108248:	f1a0 0004 	sub.w	r0, r0, #4
  10824c:	f7ff bfd4 	b.w	1081f8 <WizFi250Interface::connect(char const*, char const*, nsapi_security, unsigned char)>

00108250 <WizFi250Interface::disconnect()>:
  108250:	b508      	push	{r3, lr}
  108252:	3008      	adds	r0, #8
  108254:	f00c ff3a 	bl	1150cc <WizFi250::cmdWLEAVE()>
  108258:	3001      	adds	r0, #1
  10825a:	4802      	ldr	r0, [pc, #8]	; (108264 <WizFi250Interface::disconnect()+0x14>)
  10825c:	bf18      	it	ne
  10825e:	2000      	movne	r0, #0
  108260:	bd08      	pop	{r3, pc}
  108262:	bf00      	nop
  108264:	fffff43c 	.word	0xfffff43c

00108268 <non-virtual thunk to WizFi250Interface::disconnect()>:
  108268:	f1a0 0004 	sub.w	r0, r0, #4
  10826c:	f7ff bff0 	b.w	108250 <WizFi250Interface::disconnect()>

00108270 <WizFi250Interface::get_ip_address()>:
  108270:	3008      	adds	r0, #8
  108272:	f00c bdba 	b.w	114dea <WizFi250::getIPAddress()>

00108276 <non-virtual thunk to WizFi250Interface::get_ip_address()>:
  108276:	f1a0 0004 	sub.w	r0, r0, #4
  10827a:	f7ff bff9 	b.w	108270 <WizFi250Interface::get_ip_address()>

0010827e <WizFi250Interface::get_mac_address()>:
  10827e:	3008      	adds	r0, #8
  108280:	f00c bdb6 	b.w	114df0 <WizFi250::getMACAddress()>

00108284 <non-virtual thunk to WizFi250Interface::get_mac_address()>:
  108284:	f1a0 0004 	sub.w	r0, r0, #4
  108288:	f7ff bff9 	b.w	10827e <WizFi250Interface::get_mac_address()>

0010828c <WizFi250Interface::gethostbyname(char const*, SocketAddress*, nsapi_version)>:
  10828c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  10828e:	4605      	mov	r5, r0
  108290:	460e      	mov	r6, r1
  108292:	4614      	mov	r4, r2
  108294:	2100      	movs	r1, #0
  108296:	2210      	movs	r2, #16
  108298:	4668      	mov	r0, sp
  10829a:	f007 fe44 	bl	10ff26 <memset>
  10829e:	466a      	mov	r2, sp
  1082a0:	4631      	mov	r1, r6
  1082a2:	f105 0008 	add.w	r0, r5, #8
  1082a6:	f00d fc7b 	bl	115ba0 <WizFi250::getHostByName(char const*, char*)>
  1082aa:	3001      	adds	r0, #1
  1082ac:	d005      	beq.n	1082ba <WizFi250Interface::gethostbyname(char const*, SocketAddress*, nsapi_version)+0x2e>
  1082ae:	4669      	mov	r1, sp
  1082b0:	4620      	mov	r0, r4
  1082b2:	f004 fda1 	bl	10cdf8 <SocketAddress::set_ip_address(char const*)>
  1082b6:	2000      	movs	r0, #0
  1082b8:	e001      	b.n	1082be <WizFi250Interface::gethostbyname(char const*, SocketAddress*, nsapi_version)+0x32>
  1082ba:	f46f 603c 	mvn.w	r0, #3008	; 0xbc0
  1082be:	b004      	add	sp, #16
  1082c0:	bd70      	pop	{r4, r5, r6, pc}

001082c2 <non-virtual thunk to WizFi250Interface::gethostbyname(char const*, SocketAddress*, nsapi_version)>:
  1082c2:	f1a0 0004 	sub.w	r0, r0, #4
  1082c6:	f7ff bfe1 	b.w	10828c <WizFi250Interface::gethostbyname(char const*, SocketAddress*, nsapi_version)>
	...

001082cc <WizFi250Interface::socket_open(void**, nsapi_protocol)>:
  1082cc:	b538      	push	{r3, r4, r5, lr}
  1082ce:	2008      	movs	r0, #8
  1082d0:	460c      	mov	r4, r1
  1082d2:	4615      	mov	r5, r2
  1082d4:	f005 fa24 	bl	10d720 <operator new(unsigned int)>
  1082d8:	b148      	cbz	r0, 1082ee <WizFi250Interface::socket_open(void**, nsapi_protocol)+0x22>
  1082da:	f04f 33ff 	mov.w	r3, #4294967295
  1082de:	6003      	str	r3, [r0, #0]
  1082e0:	80c3      	strh	r3, [r0, #6]
  1082e2:	2300      	movs	r3, #0
  1082e4:	7105      	strb	r5, [r0, #4]
  1082e6:	7143      	strb	r3, [r0, #5]
  1082e8:	6020      	str	r0, [r4, #0]
  1082ea:	4618      	mov	r0, r3
  1082ec:	bd38      	pop	{r3, r4, r5, pc}
  1082ee:	4801      	ldr	r0, [pc, #4]	; (1082f4 <WizFi250Interface::socket_open(void**, nsapi_protocol)+0x28>)
  1082f0:	bd38      	pop	{r3, r4, r5, pc}
  1082f2:	bf00      	nop
  1082f4:	fffff443 	.word	0xfffff443

001082f8 <WizFi250Interface::socket_close(void*)>:
  1082f8:	b570      	push	{r4, r5, r6, lr}
  1082fa:	460d      	mov	r5, r1
  1082fc:	6809      	ldr	r1, [r1, #0]
  1082fe:	4606      	mov	r6, r0
  108300:	1c4b      	adds	r3, r1, #1
  108302:	d007      	beq.n	108314 <WizFi250Interface::socket_close(void*)+0x1c>
  108304:	3008      	adds	r0, #8
  108306:	f00d fcb5 	bl	115c74 <WizFi250::close(int)>
  10830a:	3001      	adds	r0, #1
  10830c:	4c09      	ldr	r4, [pc, #36]	; (108334 <WizFi250Interface::socket_close(void*)+0x3c>)
  10830e:	bf18      	it	ne
  108310:	2400      	movne	r4, #0
  108312:	e000      	b.n	108316 <WizFi250Interface::socket_close(void*)+0x1e>
  108314:	4c08      	ldr	r4, [pc, #32]	; (108338 <WizFi250Interface::socket_close(void*)+0x40>)
  108316:	f643 0368 	movw	r3, #14440	; 0x3868
  10831a:	6828      	ldr	r0, [r5, #0]
  10831c:	2200      	movs	r2, #0
  10831e:	4430      	add	r0, r6
  108320:	54c2      	strb	r2, [r0, r3]
  108322:	f44f 7096 	mov.w	r0, #300	; 0x12c
  108326:	f005 faf5 	bl	10d914 <wait_ms>
  10832a:	4628      	mov	r0, r5
  10832c:	f005 fa14 	bl	10d758 <operator delete(void*)>
  108330:	4620      	mov	r0, r4
  108332:	bd70      	pop	{r4, r5, r6, pc}
  108334:	fffff43c 	.word	0xfffff43c
  108338:	fffff443 	.word	0xfffff443

0010833c <WizFi250Interface::socket_bind(void*, SocketAddress const&)>:
  10833c:	b510      	push	{r4, lr}
  10833e:	4610      	mov	r0, r2
  108340:	460c      	mov	r4, r1
  108342:	f004 fe31 	bl	10cfa8 <SocketAddress::get_port() const>
  108346:	80e0      	strh	r0, [r4, #6]
  108348:	2000      	movs	r0, #0
  10834a:	bd10      	pop	{r4, pc}

0010834c <WizFi250Interface::socket_listen(void*, int)>:
  10834c:	b508      	push	{r3, lr}
  10834e:	88ca      	ldrh	r2, [r1, #6]
  108350:	2300      	movs	r3, #0
  108352:	2101      	movs	r1, #1
  108354:	3008      	adds	r0, #8
  108356:	f00d fc5b 	bl	115c10 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))>
  10835a:	1c43      	adds	r3, r0, #1
  10835c:	d004      	beq.n	108368 <WizFi250Interface::socket_listen(void*, int)+0x1c>
  10835e:	2807      	cmp	r0, #7
  108360:	4802      	ldr	r0, [pc, #8]	; (10836c <WizFi250Interface::socket_listen(void*, int)+0x20>)
  108362:	bfd8      	it	le
  108364:	2000      	movle	r0, #0
  108366:	bd08      	pop	{r3, pc}
  108368:	4801      	ldr	r0, [pc, #4]	; (108370 <WizFi250Interface::socket_listen(void*, int)+0x24>)
  10836a:	bd08      	pop	{r3, pc}
  10836c:	fffff443 	.word	0xfffff443
  108370:	fffff43c 	.word	0xfffff43c

00108374 <WizFi250Interface::socket_connect(void*, SocketAddress const&)>:
  108374:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  108378:	790f      	ldrb	r7, [r1, #4]
  10837a:	4605      	mov	r5, r0
  10837c:	f117 37ff 	adds.w	r7, r7, #4294967295
  108380:	4610      	mov	r0, r2
  108382:	4614      	mov	r4, r2
  108384:	bf18      	it	ne
  108386:	2701      	movne	r7, #1
  108388:	460e      	mov	r6, r1
  10838a:	f004 fdc5 	bl	10cf18 <SocketAddress::get_ip_address() const>
  10838e:	4680      	mov	r8, r0
  108390:	4620      	mov	r0, r4
  108392:	f004 fe09 	bl	10cfa8 <SocketAddress::get_port() const>
  108396:	2400      	movs	r4, #0
  108398:	4603      	mov	r3, r0
  10839a:	9401      	str	r4, [sp, #4]
  10839c:	9400      	str	r4, [sp, #0]
  10839e:	4642      	mov	r2, r8
  1083a0:	4639      	mov	r1, r7
  1083a2:	f105 0008 	add.w	r0, r5, #8
  1083a6:	f00d fcb5 	bl	115d14 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))>
  1083aa:	1c43      	adds	r3, r0, #1
  1083ac:	d00e      	beq.n	1083cc <WizFi250Interface::socket_connect(void*, SocketAddress const&)+0x58>
  1083ae:	2807      	cmp	r0, #7
  1083b0:	dc0e      	bgt.n	1083d0 <WizFi250Interface::socket_connect(void*, SocketAddress const&)+0x5c>
  1083b2:	f643 0268 	movw	r2, #14440	; 0x3868
  1083b6:	2301      	movs	r3, #1
  1083b8:	4405      	add	r5, r0
  1083ba:	54ab      	strb	r3, [r5, r2]
  1083bc:	6030      	str	r0, [r6, #0]
  1083be:	7173      	strb	r3, [r6, #5]
  1083c0:	f44f 7096 	mov.w	r0, #300	; 0x12c
  1083c4:	f005 faa6 	bl	10d914 <wait_ms>
  1083c8:	4620      	mov	r0, r4
  1083ca:	e002      	b.n	1083d2 <WizFi250Interface::socket_connect(void*, SocketAddress const&)+0x5e>
  1083cc:	4802      	ldr	r0, [pc, #8]	; (1083d8 <WizFi250Interface::socket_connect(void*, SocketAddress const&)+0x64>)
  1083ce:	e000      	b.n	1083d2 <WizFi250Interface::socket_connect(void*, SocketAddress const&)+0x5e>
  1083d0:	4802      	ldr	r0, [pc, #8]	; (1083dc <WizFi250Interface::socket_connect(void*, SocketAddress const&)+0x68>)
  1083d2:	b002      	add	sp, #8
  1083d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1083d8:	fffff43c 	.word	0xfffff43c
  1083dc:	fffff443 	.word	0xfffff443

001083e0 <WizFi250Interface::socket_accept(void*, void**, SocketAddress*)>:
  1083e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  1083e4:	4606      	mov	r6, r0
  1083e6:	2008      	movs	r0, #8
  1083e8:	460f      	mov	r7, r1
  1083ea:	4690      	mov	r8, r2
  1083ec:	f005 f998 	bl	10d720 <operator new(unsigned int)>
  1083f0:	4604      	mov	r4, r0
  1083f2:	b380      	cbz	r0, 108456 <WizFi250Interface::socket_accept(void*, void**, SocketAddress*)+0x76>
  1083f4:	2300      	movs	r3, #0
  1083f6:	f106 0908 	add.w	r9, r6, #8
  1083fa:	6003      	str	r3, [r0, #0]
  1083fc:	6043      	str	r3, [r0, #4]
  1083fe:	4648      	mov	r0, r9
  108400:	f00c fd9a 	bl	114f38 <WizFi250::acceptConnection()>
  108404:	2500      	movs	r5, #0
  108406:	4629      	mov	r1, r5
  108408:	4648      	mov	r0, r9
  10840a:	f00d fd69 	bl	115ee0 <WizFi250::accept(int)>
  10840e:	3001      	adds	r0, #1
  108410:	d01d      	beq.n	10844e <WizFi250Interface::socket_accept(void*, void**, SocketAddress*)+0x6e>
  108412:	f643 0268 	movw	r2, #14440	; 0x3868
  108416:	f44f 60c2 	mov.w	r0, #1552	; 0x610
  10841a:	fb00 6005 	mla	r0, r0, r5, r6
  10841e:	2301      	movs	r3, #1
  108420:	1971      	adds	r1, r6, r5
  108422:	548b      	strb	r3, [r1, r2]
  108424:	793a      	ldrb	r2, [r7, #4]
  108426:	f880 37e5 	strb.w	r3, [r0, #2021]	; 0x7e5
  10842a:	b102      	cbz	r2, 10842e <WizFi250Interface::socket_accept(void*, void**, SocketAddress*)+0x4e>
  10842c:	2300      	movs	r3, #0
  10842e:	f880 37e4 	strb.w	r3, [r0, #2020]	; 0x7e4
  108432:	88fb      	ldrh	r3, [r7, #6]
  108434:	4620      	mov	r0, r4
  108436:	80e3      	strh	r3, [r4, #6]
  108438:	2301      	movs	r3, #1
  10843a:	7122      	strb	r2, [r4, #4]
  10843c:	6025      	str	r5, [r4, #0]
  10843e:	7163      	strb	r3, [r4, #5]
  108440:	f8c8 4000 	str.w	r4, [r8]
  108444:	f005 f988 	bl	10d758 <operator delete(void*)>
  108448:	2000      	movs	r0, #0
  10844a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  10844e:	3501      	adds	r5, #1
  108450:	2d08      	cmp	r5, #8
  108452:	d1d8      	bne.n	108406 <WizFi250Interface::socket_accept(void*, void**, SocketAddress*)+0x26>
  108454:	e7d6      	b.n	108404 <WizFi250Interface::socket_accept(void*, void**, SocketAddress*)+0x24>
  108456:	4801      	ldr	r0, [pc, #4]	; (10845c <WizFi250Interface::socket_accept(void*, void**, SocketAddress*)+0x7c>)
  108458:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  10845c:	fffff443 	.word	0xfffff443

00108460 <WizFi250Interface::socket_send(void*, void const*, unsigned int)>:
  108460:	b510      	push	{r4, lr}
  108462:	6809      	ldr	r1, [r1, #0]
  108464:	3008      	adds	r0, #8
  108466:	461c      	mov	r4, r3
  108468:	f00d fca4 	bl	115db4 <WizFi250::send(int, char const*, int)>
  10846c:	4b03      	ldr	r3, [pc, #12]	; (10847c <WizFi250Interface::socket_send(void*, void const*, unsigned int)+0x1c>)
  10846e:	f1b0 3fff 	cmp.w	r0, #4294967295
  108472:	bf14      	ite	ne
  108474:	4620      	movne	r0, r4
  108476:	4618      	moveq	r0, r3
  108478:	bd10      	pop	{r4, pc}
  10847a:	bf00      	nop
  10847c:	fffff43c 	.word	0xfffff43c

00108480 <WizFi250Interface::socket_recv(void*, void*, unsigned int)>:
  108480:	b508      	push	{r3, lr}
  108482:	6809      	ldr	r1, [r1, #0]
  108484:	3008      	adds	r0, #8
  108486:	f00d fcb5 	bl	115df4 <WizFi250::recv(int, char*, int)>
  10848a:	4b03      	ldr	r3, [pc, #12]	; (108498 <WizFi250Interface::socket_recv(void*, void*, unsigned int)+0x18>)
  10848c:	ea30 0020 	bics.w	r0, r0, r0, asr #32
  108490:	bf28      	it	cs
  108492:	4618      	movcs	r0, r3
  108494:	bd08      	pop	{r3, pc}
  108496:	bf00      	nop
  108498:	fffff447 	.word	0xfffff447

0010849c <WizFi250Interface::WizFi250Interface(PinName, PinName, PinName, PinName, PinName, int, int, int)>:
  10849c:	b530      	push	{r4, r5, lr}
  10849e:	4604      	mov	r4, r0
  1084a0:	480f      	ldr	r0, [pc, #60]	; (1084e0 <WizFi250Interface::WizFi250Interface(PinName, PinName, PinName, PinName, PinName, int, int, int)+0x44>)
  1084a2:	b087      	sub	sp, #28
  1084a4:	f100 0508 	add.w	r5, r0, #8
  1084a8:	3084      	adds	r0, #132	; 0x84
  1084aa:	6060      	str	r0, [r4, #4]
  1084ac:	980e      	ldr	r0, [sp, #56]	; 0x38
  1084ae:	6025      	str	r5, [r4, #0]
  1084b0:	9004      	str	r0, [sp, #16]
  1084b2:	980d      	ldr	r0, [sp, #52]	; 0x34
  1084b4:	9003      	str	r0, [sp, #12]
  1084b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  1084b8:	9002      	str	r0, [sp, #8]
  1084ba:	f99d 002c 	ldrsb.w	r0, [sp, #44]	; 0x2c
  1084be:	9001      	str	r0, [sp, #4]
  1084c0:	f99d 0028 	ldrsb.w	r0, [sp, #40]	; 0x28
  1084c4:	9000      	str	r0, [sp, #0]
  1084c6:	f104 0008 	add.w	r0, r4, #8
  1084ca:	f00c fba7 	bl	114c1c <WizFi250::WizFi250(PinName, PinName, PinName, PinName, PinName, int, int, int)>
  1084ce:	f643 0268 	movw	r2, #14440	; 0x3868
  1084d2:	4620      	mov	r0, r4
  1084d4:	2300      	movs	r3, #0
  1084d6:	18a1      	adds	r1, r4, r2
  1084d8:	50a3      	str	r3, [r4, r2]
  1084da:	604b      	str	r3, [r1, #4]
  1084dc:	b007      	add	sp, #28
  1084de:	bd30      	pop	{r4, r5, pc}
  1084e0:	00118cbc 	.word	0x00118cbc

001084e4 <_gpio_init_in>:
  1084e4:	b570      	push	{r4, r5, r6, lr}
  1084e6:	460e      	mov	r6, r1
  1084e8:	4604      	mov	r4, r0
  1084ea:	4615      	mov	r5, r2
  1084ec:	f002 fd1e 	bl	10af2c <gpio_init>
  1084f0:	3601      	adds	r6, #1
  1084f2:	d009      	beq.n	108508 <_gpio_init_in+0x24>
  1084f4:	4620      	mov	r0, r4
  1084f6:	2100      	movs	r1, #0
  1084f8:	f002 fd42 	bl	10af80 <gpio_dir>
  1084fc:	4629      	mov	r1, r5
  1084fe:	4620      	mov	r0, r4
  108500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  108504:	f002 bd38 	b.w	10af78 <gpio_mode>
  108508:	bd70      	pop	{r4, r5, r6, pc}

0010850a <gpio_init_in>:
  10850a:	b538      	push	{r3, r4, r5, lr}
  10850c:	460c      	mov	r4, r1
  10850e:	2201      	movs	r2, #1
  108510:	4605      	mov	r5, r0
  108512:	f7ff ffe7 	bl	1084e4 <_gpio_init_in>
  108516:	2c0f      	cmp	r4, #15
  108518:	d106      	bne.n	108528 <gpio_init_in+0x1e>
  10851a:	4621      	mov	r1, r4
  10851c:	4628      	mov	r0, r5
  10851e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  108522:	2201      	movs	r2, #1
  108524:	f7ff bfde 	b.w	1084e4 <_gpio_init_in>
  108528:	bd38      	pop	{r3, r4, r5, pc}

0010852a <gpio_init_out_ex>:
  10852a:	b570      	push	{r4, r5, r6, lr}
  10852c:	460e      	mov	r6, r1
  10852e:	4604      	mov	r4, r0
  108530:	4615      	mov	r5, r2
  108532:	f002 fcfb 	bl	10af2c <gpio_init>
  108536:	3601      	adds	r6, #1
  108538:	d00d      	beq.n	108556 <gpio_init_out_ex+0x2c>
  10853a:	4629      	mov	r1, r5
  10853c:	4620      	mov	r0, r4
  10853e:	f002 fd31 	bl	10afa4 <gpio_write>
  108542:	4620      	mov	r0, r4
  108544:	2101      	movs	r1, #1
  108546:	f002 fd1b 	bl	10af80 <gpio_dir>
  10854a:	4620      	mov	r0, r4
  10854c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  108550:	2101      	movs	r1, #1
  108552:	f002 bd11 	b.w	10af78 <gpio_mode>
  108556:	bd70      	pop	{r4, r5, r6, pc}

00108558 <gpio_init_out>:
  108558:	2200      	movs	r2, #0
  10855a:	f7ff bfe6 	b.w	10852a <gpio_init_out_ex>
	...

00108560 <lp_ticker_irq_handler>:
  108560:	4801      	ldr	r0, [pc, #4]	; (108568 <lp_ticker_irq_handler+0x8>)
  108562:	f000 b8a4 	b.w	1086ae <ticker_irq_handler>
  108566:	bf00      	nop
  108568:	00118d9c 	.word	0x00118d9c

0010856c <pinmap_pinout>:
  10856c:	b510      	push	{r4, lr}
  10856e:	4604      	mov	r4, r0
  108570:	3001      	adds	r0, #1
  108572:	d101      	bne.n	108578 <pinmap_pinout+0xc>
  108574:	bd10      	pop	{r4, pc}
  108576:	310c      	adds	r1, #12
  108578:	f991 3000 	ldrsb.w	r3, [r1]
  10857c:	1c5a      	adds	r2, r3, #1
  10857e:	d00b      	beq.n	108598 <pinmap_pinout+0x2c>
  108580:	429c      	cmp	r4, r3
  108582:	d1f8      	bne.n	108576 <pinmap_pinout+0xa>
  108584:	4620      	mov	r0, r4
  108586:	6889      	ldr	r1, [r1, #8]
  108588:	f003 fb88 	bl	10bc9c <pin_function>
  10858c:	4620      	mov	r0, r4
  10858e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  108592:	2101      	movs	r1, #1
  108594:	f003 bb94 	b.w	10bcc0 <pin_mode>
  108598:	4802      	ldr	r0, [pc, #8]	; (1085a4 <pinmap_pinout+0x38>)
  10859a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10859e:	f000 b9a1 	b.w	1088e4 <error>
  1085a2:	bf00      	nop
  1085a4:	00118da4 	.word	0x00118da4

001085a8 <pinmap_merge>:
  1085a8:	4288      	cmp	r0, r1
  1085aa:	b508      	push	{r3, lr}
  1085ac:	d00a      	beq.n	1085c4 <pinmap_merge+0x1c>
  1085ae:	1c43      	adds	r3, r0, #1
  1085b0:	d007      	beq.n	1085c2 <pinmap_merge+0x1a>
  1085b2:	3101      	adds	r1, #1
  1085b4:	d006      	beq.n	1085c4 <pinmap_merge+0x1c>
  1085b6:	4804      	ldr	r0, [pc, #16]	; (1085c8 <pinmap_merge+0x20>)
  1085b8:	f000 f994 	bl	1088e4 <error>
  1085bc:	f04f 30ff 	mov.w	r0, #4294967295
  1085c0:	bd08      	pop	{r3, pc}
  1085c2:	4608      	mov	r0, r1
  1085c4:	bd08      	pop	{r3, pc}
  1085c6:	bf00      	nop
  1085c8:	00118db5 	.word	0x00118db5

001085cc <pinmap_find_peripheral>:
  1085cc:	f991 3000 	ldrsb.w	r3, [r1]
  1085d0:	1c5a      	adds	r2, r3, #1
  1085d2:	d005      	beq.n	1085e0 <pinmap_find_peripheral+0x14>
  1085d4:	4283      	cmp	r3, r0
  1085d6:	d101      	bne.n	1085dc <pinmap_find_peripheral+0x10>
  1085d8:	6848      	ldr	r0, [r1, #4]
  1085da:	4770      	bx	lr
  1085dc:	310c      	adds	r1, #12
  1085de:	e7f5      	b.n	1085cc <pinmap_find_peripheral>
  1085e0:	4618      	mov	r0, r3
  1085e2:	4770      	bx	lr

001085e4 <pinmap_peripheral>:
  1085e4:	1c42      	adds	r2, r0, #1
  1085e6:	b510      	push	{r4, lr}
  1085e8:	4604      	mov	r4, r0
  1085ea:	d007      	beq.n	1085fc <pinmap_peripheral+0x18>
  1085ec:	f7ff ffee 	bl	1085cc <pinmap_find_peripheral>
  1085f0:	1c43      	adds	r3, r0, #1
  1085f2:	4604      	mov	r4, r0
  1085f4:	d102      	bne.n	1085fc <pinmap_peripheral+0x18>
  1085f6:	4802      	ldr	r0, [pc, #8]	; (108600 <pinmap_peripheral+0x1c>)
  1085f8:	f000 f974 	bl	1088e4 <error>
  1085fc:	4620      	mov	r0, r4
  1085fe:	bd10      	pop	{r4, pc}
  108600:	00118dc6 	.word	0x00118dc6

00108604 <update_present_time>:
  108604:	6803      	ldr	r3, [r0, #0]
  108606:	b5d0      	push	{r4, r6, r7, lr}
  108608:	6844      	ldr	r4, [r0, #4]
  10860a:	685b      	ldr	r3, [r3, #4]
  10860c:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
  108610:	4798      	blx	r3
  108612:	2200      	movs	r2, #0
  108614:	42b0      	cmp	r0, r6
  108616:	ea42 0200 	orr.w	r2, r2, r0
  10861a:	463b      	mov	r3, r7
  10861c:	d202      	bcs.n	108624 <update_present_time+0x20>
  10861e:	3200      	adds	r2, #0
  108620:	f147 0301 	adc.w	r3, r7, #1
  108624:	e9c4 2302 	strd	r2, r3, [r4, #8]
  108628:	bdd0      	pop	{r4, r6, r7, pc}

0010862a <schedule_interrupt>:
  10862a:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  10862e:	4606      	mov	r6, r0
  108630:	f7ff ffe8 	bl	108604 <update_present_time>
  108634:	6871      	ldr	r1, [r6, #4]
  108636:	684b      	ldr	r3, [r1, #4]
  108638:	b1ab      	cbz	r3, 108666 <schedule_interrupt+0x3c>
  10863a:	e9d1 4502 	ldrd	r4, r5, [r1, #8]
  10863e:	e9d3 2300 	ldrd	r2, r3, [r3]
  108642:	42ab      	cmp	r3, r5
  108644:	bf08      	it	eq
  108646:	42a2      	cmpeq	r2, r4
  108648:	d30b      	bcc.n	108662 <schedule_interrupt+0x38>
  10864a:	ebb2 0804 	subs.w	r8, r2, r4
  10864e:	eb63 0905 	sbc.w	r9, r3, r5
  108652:	f1b9 0f00 	cmp.w	r9, #0
  108656:	bf08      	it	eq
  108658:	f1b8 4fe0 	cmpeq.w	r8, #1879048192	; 0x70000000
  10865c:	d203      	bcs.n	108666 <schedule_interrupt+0x3c>
  10865e:	1b12      	subs	r2, r2, r4
  108660:	e003      	b.n	10866a <schedule_interrupt+0x40>
  108662:	2200      	movs	r2, #0
  108664:	e001      	b.n	10866a <schedule_interrupt+0x40>
  108666:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
  10866a:	6833      	ldr	r3, [r6, #0]
  10866c:	6888      	ldr	r0, [r1, #8]
  10866e:	691b      	ldr	r3, [r3, #16]
  108670:	4410      	add	r0, r2
  108672:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
  108676:	4718      	bx	r3

00108678 <ticker_set_handler>:
  108678:	6843      	ldr	r3, [r0, #4]
  10867a:	b570      	push	{r4, r5, r6, lr}
  10867c:	7c1d      	ldrb	r5, [r3, #16]
  10867e:	4604      	mov	r4, r0
  108680:	460e      	mov	r6, r1
  108682:	b98d      	cbnz	r5, 1086a8 <ticker_set_handler+0x30>
  108684:	6803      	ldr	r3, [r0, #0]
  108686:	681b      	ldr	r3, [r3, #0]
  108688:	4798      	blx	r3
  10868a:	6863      	ldr	r3, [r4, #4]
  10868c:	2000      	movs	r0, #0
  10868e:	2100      	movs	r1, #0
  108690:	2201      	movs	r2, #1
  108692:	e9c3 0102 	strd	r0, r1, [r3, #8]
  108696:	601d      	str	r5, [r3, #0]
  108698:	4620      	mov	r0, r4
  10869a:	605d      	str	r5, [r3, #4]
  10869c:	741a      	strb	r2, [r3, #16]
  10869e:	f7ff ffb1 	bl	108604 <update_present_time>
  1086a2:	4620      	mov	r0, r4
  1086a4:	f7ff ffc1 	bl	10862a <schedule_interrupt>
  1086a8:	6863      	ldr	r3, [r4, #4]
  1086aa:	601e      	str	r6, [r3, #0]
  1086ac:	bd70      	pop	{r4, r5, r6, pc}

001086ae <ticker_irq_handler>:
  1086ae:	6803      	ldr	r3, [r0, #0]
  1086b0:	b570      	push	{r4, r5, r6, lr}
  1086b2:	68db      	ldr	r3, [r3, #12]
  1086b4:	4604      	mov	r4, r0
  1086b6:	4798      	blx	r3
  1086b8:	6863      	ldr	r3, [r4, #4]
  1086ba:	685b      	ldr	r3, [r3, #4]
  1086bc:	b1a3      	cbz	r3, 1086e8 <ticker_irq_handler+0x3a>
  1086be:	4620      	mov	r0, r4
  1086c0:	f7ff ffa0 	bl	108604 <update_present_time>
  1086c4:	6865      	ldr	r5, [r4, #4]
  1086c6:	686e      	ldr	r6, [r5, #4]
  1086c8:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
  1086cc:	e9d6 2300 	ldrd	r2, r3, [r6]
  1086d0:	4299      	cmp	r1, r3
  1086d2:	bf08      	it	eq
  1086d4:	4290      	cmpeq	r0, r2
  1086d6:	d307      	bcc.n	1086e8 <ticker_irq_handler+0x3a>
  1086d8:	68f3      	ldr	r3, [r6, #12]
  1086da:	606b      	str	r3, [r5, #4]
  1086dc:	682b      	ldr	r3, [r5, #0]
  1086de:	2b00      	cmp	r3, #0
  1086e0:	d0ea      	beq.n	1086b8 <ticker_irq_handler+0xa>
  1086e2:	68b0      	ldr	r0, [r6, #8]
  1086e4:	4798      	blx	r3
  1086e6:	e7e7      	b.n	1086b8 <ticker_irq_handler+0xa>
  1086e8:	4620      	mov	r0, r4
  1086ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  1086ee:	f7ff bf9c 	b.w	10862a <schedule_interrupt>

001086f2 <ticker_insert_event_us>:
  1086f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  1086f6:	4605      	mov	r5, r0
  1086f8:	460c      	mov	r4, r1
  1086fa:	4616      	mov	r6, r2
  1086fc:	461f      	mov	r7, r3
  1086fe:	f8dd 8020 	ldr.w	r8, [sp, #32]
  108702:	f000 f8a5 	bl	108850 <core_util_critical_section_enter>
  108706:	4628      	mov	r0, r5
  108708:	f7ff ff7c 	bl	108604 <update_present_time>
  10870c:	6869      	ldr	r1, [r5, #4]
  10870e:	e9c4 6700 	strd	r6, r7, [r4]
  108712:	684b      	ldr	r3, [r1, #4]
  108714:	f8c4 8008 	str.w	r8, [r4, #8]
  108718:	2200      	movs	r2, #0
  10871a:	b143      	cbz	r3, 10872e <ticker_insert_event_us+0x3c>
  10871c:	e9d3 8900 	ldrd	r8, r9, [r3]
  108720:	454f      	cmp	r7, r9
  108722:	bf08      	it	eq
  108724:	4546      	cmpeq	r6, r8
  108726:	d302      	bcc.n	10872e <ticker_insert_event_us+0x3c>
  108728:	461a      	mov	r2, r3
  10872a:	68db      	ldr	r3, [r3, #12]
  10872c:	e7f5      	b.n	10871a <ticker_insert_event_us+0x28>
  10872e:	60e3      	str	r3, [r4, #12]
  108730:	b90a      	cbnz	r2, 108736 <ticker_insert_event_us+0x44>
  108732:	604c      	str	r4, [r1, #4]
  108734:	e000      	b.n	108738 <ticker_insert_event_us+0x46>
  108736:	60d4      	str	r4, [r2, #12]
  108738:	4628      	mov	r0, r5
  10873a:	f7ff ff76 	bl	10862a <schedule_interrupt>
  10873e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  108742:	f000 b8b1 	b.w	1088a8 <core_util_critical_section_exit>

00108746 <ticker_remove_event>:
  108746:	b538      	push	{r3, r4, r5, lr}
  108748:	4605      	mov	r5, r0
  10874a:	460c      	mov	r4, r1
  10874c:	f000 f880 	bl	108850 <core_util_critical_section_enter>
  108750:	686a      	ldr	r2, [r5, #4]
  108752:	6853      	ldr	r3, [r2, #4]
  108754:	42a3      	cmp	r3, r4
  108756:	d106      	bne.n	108766 <ticker_remove_event+0x20>
  108758:	68db      	ldr	r3, [r3, #12]
  10875a:	4628      	mov	r0, r5
  10875c:	6053      	str	r3, [r2, #4]
  10875e:	f7ff ff64 	bl	10862a <schedule_interrupt>
  108762:	e006      	b.n	108772 <ticker_remove_event+0x2c>
  108764:	4613      	mov	r3, r2
  108766:	b123      	cbz	r3, 108772 <ticker_remove_event+0x2c>
  108768:	68da      	ldr	r2, [r3, #12]
  10876a:	4294      	cmp	r4, r2
  10876c:	d1fa      	bne.n	108764 <ticker_remove_event+0x1e>
  10876e:	68e2      	ldr	r2, [r4, #12]
  108770:	60da      	str	r2, [r3, #12]
  108772:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  108776:	f000 b897 	b.w	1088a8 <core_util_critical_section_exit>

0010877a <ticker_read_us>:
  10877a:	b510      	push	{r4, lr}
  10877c:	4604      	mov	r4, r0
  10877e:	f7ff ff41 	bl	108604 <update_present_time>
  108782:	6863      	ldr	r3, [r4, #4]
  108784:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
  108788:	bd10      	pop	{r4, pc}
	...

0010878c <get_us_ticker_data>:
  10878c:	4800      	ldr	r0, [pc, #0]	; (108790 <get_us_ticker_data+0x4>)
  10878e:	4770      	bx	lr
  108790:	00118e18 	.word	0x00118e18

00108794 <us_ticker_irq_handler>:
  108794:	4801      	ldr	r0, [pc, #4]	; (10879c <us_ticker_irq_handler+0x8>)
  108796:	f7ff bf8a 	b.w	1086ae <ticker_irq_handler>
  10879a:	bf00      	nop
  10879c:	00118e18 	.word	0x00118e18

001087a0 <mbed_assert_internal>:
  1087a0:	b570      	push	{r4, r5, r6, lr}
  1087a2:	4604      	mov	r4, r0
  1087a4:	460d      	mov	r5, r1
  1087a6:	4616      	mov	r6, r2
  1087a8:	f000 f852 	bl	108850 <core_util_critical_section_enter>
  1087ac:	4633      	mov	r3, r6
  1087ae:	462a      	mov	r2, r5
  1087b0:	4621      	mov	r1, r4
  1087b2:	4803      	ldr	r0, [pc, #12]	; (1087c0 <mbed_assert_internal+0x20>)
  1087b4:	f000 f838 	bl	108828 <mbed_error_printf>
  1087b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  1087bc:	f000 b802 	b.w	1087c4 <mbed_die>
  1087c0:	00118e20 	.word	0x00118e20

001087c4 <mbed_die>:
  1087c4:	b508      	push	{r3, lr}
  1087c6:	f000 f843 	bl	108850 <core_util_critical_section_enter>
  1087ca:	2096      	movs	r0, #150	; 0x96
  1087cc:	f005 f8a2 	bl	10d914 <wait_ms>
  1087d0:	2096      	movs	r0, #150	; 0x96
  1087d2:	f005 f89f 	bl	10d914 <wait_ms>
  1087d6:	e7f8      	b.n	1087ca <mbed_die+0x6>

001087d8 <mbed_error_vfprintf>:
  1087d8:	b530      	push	{r4, r5, lr}
  1087da:	460d      	mov	r5, r1
  1087dc:	4604      	mov	r4, r0
  1087de:	b0a1      	sub	sp, #132	; 0x84
  1087e0:	f000 f836 	bl	108850 <core_util_critical_section_enter>
  1087e4:	462b      	mov	r3, r5
  1087e6:	4622      	mov	r2, r4
  1087e8:	2180      	movs	r1, #128	; 0x80
  1087ea:	4668      	mov	r0, sp
  1087ec:	f009 ffa8 	bl	112740 <vsniprintf>
  1087f0:	1e05      	subs	r5, r0, #0
  1087f2:	dc03      	bgt.n	1087fc <mbed_error_vfprintf+0x24>
  1087f4:	f000 f858 	bl	1088a8 <core_util_critical_section_exit>
  1087f8:	b021      	add	sp, #132	; 0x84
  1087fa:	bd30      	pop	{r4, r5, pc}
  1087fc:	4b08      	ldr	r3, [pc, #32]	; (108820 <mbed_error_vfprintf+0x48>)
  1087fe:	681b      	ldr	r3, [r3, #0]
  108800:	b923      	cbnz	r3, 10880c <mbed_error_vfprintf+0x34>
  108802:	2209      	movs	r2, #9
  108804:	2108      	movs	r1, #8
  108806:	4807      	ldr	r0, [pc, #28]	; (108824 <mbed_error_vfprintf+0x4c>)
  108808:	f003 fbe8 	bl	10bfdc <serial_init>
  10880c:	2400      	movs	r4, #0
  10880e:	f81d 1004 	ldrb.w	r1, [sp, r4]
  108812:	4804      	ldr	r0, [pc, #16]	; (108824 <mbed_error_vfprintf+0x4c>)
  108814:	3401      	adds	r4, #1
  108816:	f003 fcd8 	bl	10c1ca <serial_putc>
  10881a:	42a5      	cmp	r5, r4
  10881c:	d1f7      	bne.n	10880e <mbed_error_vfprintf+0x36>
  10881e:	e7e9      	b.n	1087f4 <mbed_error_vfprintf+0x1c>
  108820:	3fff8b60 	.word	0x3fff8b60
  108824:	3fff9f0c 	.word	0x3fff9f0c

00108828 <mbed_error_printf>:
  108828:	b40f      	push	{r0, r1, r2, r3}
  10882a:	b507      	push	{r0, r1, r2, lr}
  10882c:	a904      	add	r1, sp, #16
  10882e:	f851 0b04 	ldr.w	r0, [r1], #4
  108832:	9101      	str	r1, [sp, #4]
  108834:	f7ff ffd0 	bl	1087d8 <mbed_error_vfprintf>
  108838:	b003      	add	sp, #12
  10883a:	f85d eb04 	ldr.w	lr, [sp], #4
  10883e:	b004      	add	sp, #16
  108840:	4770      	bx	lr

00108842 <core_util_are_interrupts_enabled>:
  108842:	f3ef 8010 	mrs	r0, PRIMASK
  108846:	f000 0001 	and.w	r0, r0, #1
  10884a:	f080 0001 	eor.w	r0, r0, #1
  10884e:	4770      	bx	lr

00108850 <core_util_critical_section_enter>:
  108850:	b538      	push	{r3, r4, r5, lr}
  108852:	f7ff fff6 	bl	108842 <core_util_are_interrupts_enabled>
  108856:	4605      	mov	r5, r0
  108858:	b672      	cpsid	i
  10885a:	4c0e      	ldr	r4, [pc, #56]	; (108894 <core_util_critical_section_enter+0x44>)
  10885c:	6823      	ldr	r3, [r4, #0]
  10885e:	b923      	cbnz	r3, 10886a <core_util_critical_section_enter+0x1a>
  108860:	f080 0301 	eor.w	r3, r0, #1
  108864:	4a0c      	ldr	r2, [pc, #48]	; (108898 <core_util_critical_section_enter+0x48>)
  108866:	b2db      	uxtb	r3, r3
  108868:	7013      	strb	r3, [r2, #0]
  10886a:	6823      	ldr	r3, [r4, #0]
  10886c:	3301      	adds	r3, #1
  10886e:	d104      	bne.n	10887a <core_util_critical_section_enter+0x2a>
  108870:	2245      	movs	r2, #69	; 0x45
  108872:	490a      	ldr	r1, [pc, #40]	; (10889c <core_util_critical_section_enter+0x4c>)
  108874:	480a      	ldr	r0, [pc, #40]	; (1088a0 <core_util_critical_section_enter+0x50>)
  108876:	f7ff ff93 	bl	1087a0 <mbed_assert_internal>
  10887a:	6823      	ldr	r3, [r4, #0]
  10887c:	b12b      	cbz	r3, 10888a <core_util_critical_section_enter+0x3a>
  10887e:	b125      	cbz	r5, 10888a <core_util_critical_section_enter+0x3a>
  108880:	2249      	movs	r2, #73	; 0x49
  108882:	4906      	ldr	r1, [pc, #24]	; (10889c <core_util_critical_section_enter+0x4c>)
  108884:	4807      	ldr	r0, [pc, #28]	; (1088a4 <core_util_critical_section_enter+0x54>)
  108886:	f7ff ff8b 	bl	1087a0 <mbed_assert_internal>
  10888a:	6823      	ldr	r3, [r4, #0]
  10888c:	3301      	adds	r3, #1
  10888e:	6023      	str	r3, [r4, #0]
  108890:	bd38      	pop	{r3, r4, r5, pc}
  108892:	bf00      	nop
  108894:	3fff8588 	.word	0x3fff8588
  108898:	3fff858c 	.word	0x3fff858c
  10889c:	00118e51 	.word	0x00118e51
  1088a0:	00118e81 	.word	0x00118e81
  1088a4:	00118ea7 	.word	0x00118ea7

001088a8 <core_util_critical_section_exit>:
  1088a8:	b510      	push	{r4, lr}
  1088aa:	4c0a      	ldr	r4, [pc, #40]	; (1088d4 <core_util_critical_section_exit+0x2c>)
  1088ac:	6823      	ldr	r3, [r4, #0]
  1088ae:	b183      	cbz	r3, 1088d2 <core_util_critical_section_exit+0x2a>
  1088b0:	f7ff ffc7 	bl	108842 <core_util_are_interrupts_enabled>
  1088b4:	b120      	cbz	r0, 1088c0 <core_util_critical_section_exit+0x18>
  1088b6:	225a      	movs	r2, #90	; 0x5a
  1088b8:	4907      	ldr	r1, [pc, #28]	; (1088d8 <core_util_critical_section_exit+0x30>)
  1088ba:	4808      	ldr	r0, [pc, #32]	; (1088dc <core_util_critical_section_exit+0x34>)
  1088bc:	f7ff ff70 	bl	1087a0 <mbed_assert_internal>
  1088c0:	6823      	ldr	r3, [r4, #0]
  1088c2:	3b01      	subs	r3, #1
  1088c4:	6023      	str	r3, [r4, #0]
  1088c6:	6823      	ldr	r3, [r4, #0]
  1088c8:	b91b      	cbnz	r3, 1088d2 <core_util_critical_section_exit+0x2a>
  1088ca:	4b05      	ldr	r3, [pc, #20]	; (1088e0 <core_util_critical_section_exit+0x38>)
  1088cc:	781b      	ldrb	r3, [r3, #0]
  1088ce:	b903      	cbnz	r3, 1088d2 <core_util_critical_section_exit+0x2a>
  1088d0:	b662      	cpsie	i
  1088d2:	bd10      	pop	{r4, pc}
  1088d4:	3fff8588 	.word	0x3fff8588
  1088d8:	00118e51 	.word	0x00118e51
  1088dc:	00118ea7 	.word	0x00118ea7
  1088e0:	3fff858c 	.word	0x3fff858c

001088e4 <error>:
  1088e4:	b40f      	push	{r0, r1, r2, r3}
  1088e6:	b513      	push	{r0, r1, r4, lr}
  1088e8:	4b08      	ldr	r3, [pc, #32]	; (10890c <error+0x28>)
  1088ea:	781a      	ldrb	r2, [r3, #0]
  1088ec:	b94a      	cbnz	r2, 108902 <error+0x1e>
  1088ee:	2401      	movs	r4, #1
  1088f0:	a905      	add	r1, sp, #20
  1088f2:	9804      	ldr	r0, [sp, #16]
  1088f4:	701c      	strb	r4, [r3, #0]
  1088f6:	9101      	str	r1, [sp, #4]
  1088f8:	f7ff ff6e 	bl	1087d8 <mbed_error_vfprintf>
  1088fc:	4620      	mov	r0, r4
  1088fe:	f004 feec 	bl	10d6da <__wrap_exit>
  108902:	b002      	add	sp, #8
  108904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  108908:	b004      	add	sp, #16
  10890a:	4770      	bx	lr
  10890c:	3fff858d 	.word	0x3fff858d

00108910 <pre_main>:
  108910:	b538      	push	{r3, r4, r5, lr}
  108912:	4815      	ldr	r0, [pc, #84]	; (108968 <pre_main+0x58>)
  108914:	4b15      	ldr	r3, [pc, #84]	; (10896c <pre_main+0x5c>)
  108916:	250b      	movs	r5, #11
  108918:	6003      	str	r3, [r0, #0]
  10891a:	4b15      	ldr	r3, [pc, #84]	; (108970 <pre_main+0x60>)
  10891c:	241c      	movs	r4, #28
  10891e:	6045      	str	r5, [r0, #4]
  108920:	60c4      	str	r4, [r0, #12]
  108922:	6083      	str	r3, [r0, #8]
  108924:	f001 f928 	bl	109b78 <osMutexNew>
  108928:	4b12      	ldr	r3, [pc, #72]	; (108974 <pre_main+0x64>)
  10892a:	6018      	str	r0, [r3, #0]
  10892c:	4812      	ldr	r0, [pc, #72]	; (108978 <pre_main+0x68>)
  10892e:	4b13      	ldr	r3, [pc, #76]	; (10897c <pre_main+0x6c>)
  108930:	60c4      	str	r4, [r0, #12]
  108932:	e880 0028 	stmia.w	r0, {r3, r5}
  108936:	4b12      	ldr	r3, [pc, #72]	; (108980 <pre_main+0x70>)
  108938:	6083      	str	r3, [r0, #8]
  10893a:	f001 f91d 	bl	109b78 <osMutexNew>
  10893e:	4b11      	ldr	r3, [pc, #68]	; (108984 <pre_main+0x74>)
  108940:	6018      	str	r0, [r3, #0]
  108942:	4811      	ldr	r0, [pc, #68]	; (108988 <pre_main+0x78>)
  108944:	4b11      	ldr	r3, [pc, #68]	; (10898c <pre_main+0x7c>)
  108946:	60c4      	str	r4, [r0, #12]
  108948:	e880 0028 	stmia.w	r0, {r3, r5}
  10894c:	4b10      	ldr	r3, [pc, #64]	; (108990 <pre_main+0x80>)
  10894e:	6083      	str	r3, [r0, #8]
  108950:	f001 f912 	bl	109b78 <osMutexNew>
  108954:	4b0f      	ldr	r3, [pc, #60]	; (108994 <pre_main+0x84>)
  108956:	6018      	str	r0, [r3, #0]
  108958:	f007 fa1c 	bl	10fd94 <__libc_init_array>
  10895c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  108960:	2100      	movs	r1, #0
  108962:	4608      	mov	r0, r1
  108964:	f000 b860 	b.w	108a28 <__wrap_main>
  108968:	3fff8e34 	.word	0x3fff8e34
  10896c:	00118ebb 	.word	0x00118ebb
  108970:	3fff8e08 	.word	0x3fff8e08
  108974:	3fff8e80 	.word	0x3fff8e80
  108978:	3fff8e24 	.word	0x3fff8e24
  10897c:	00118ecb 	.word	0x00118ecb
  108980:	3fff8e84 	.word	0x3fff8e84
  108984:	3fff8e7c 	.word	0x3fff8e7c
  108988:	3fff8e44 	.word	0x3fff8e44
  10898c:	00118ed8 	.word	0x00118ed8
  108990:	3fff8ea0 	.word	0x3fff8ea0
  108994:	3fff8e54 	.word	0x3fff8e54

00108998 <mbed_set_stack_heap>:
  108998:	4a09      	ldr	r2, [pc, #36]	; (1089c0 <mbed_set_stack_heap+0x28>)
  10899a:	480a      	ldr	r0, [pc, #40]	; (1089c4 <mbed_set_stack_heap+0x2c>)
  10899c:	f1c2 4380 	rsb	r3, r2, #1073741824	; 0x40000000
  1089a0:	4619      	mov	r1, r3
  1089a2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  1089a6:	bf28      	it	cs
  1089a8:	f44f 6180 	movcs.w	r1, #1024	; 0x400
  1089ac:	1a5b      	subs	r3, r3, r1
  1089ae:	6001      	str	r1, [r0, #0]
  1089b0:	4905      	ldr	r1, [pc, #20]	; (1089c8 <mbed_set_stack_heap+0x30>)
  1089b2:	1898      	adds	r0, r3, r2
  1089b4:	6008      	str	r0, [r1, #0]
  1089b6:	4905      	ldr	r1, [pc, #20]	; (1089cc <mbed_set_stack_heap+0x34>)
  1089b8:	600b      	str	r3, [r1, #0]
  1089ba:	4b05      	ldr	r3, [pc, #20]	; (1089d0 <mbed_set_stack_heap+0x38>)
  1089bc:	601a      	str	r2, [r3, #0]
  1089be:	4770      	bx	lr
  1089c0:	3fff9f20 	.word	0x3fff9f20
  1089c4:	3fff8594 	.word	0x3fff8594
  1089c8:	3fff8590 	.word	0x3fff8590
  1089cc:	3fff8c40 	.word	0x3fff8c40
  1089d0:	3fff8d44 	.word	0x3fff8d44

001089d4 <mbed_main>:
  1089d4:	4770      	bx	lr

001089d6 <mbed_sdk_init>:
  1089d6:	4770      	bx	lr

001089d8 <mbed_start_main>:
  1089d8:	b508      	push	{r3, lr}
  1089da:	4a0d      	ldr	r2, [pc, #52]	; (108a10 <mbed_start_main+0x38>)
  1089dc:	4b0d      	ldr	r3, [pc, #52]	; (108a14 <mbed_start_main+0x3c>)
  1089de:	2100      	movs	r1, #0
  1089e0:	6113      	str	r3, [r2, #16]
  1089e2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  1089e6:	6153      	str	r3, [r2, #20]
  1089e8:	2348      	movs	r3, #72	; 0x48
  1089ea:	60d3      	str	r3, [r2, #12]
  1089ec:	4b0a      	ldr	r3, [pc, #40]	; (108a18 <mbed_start_main+0x40>)
  1089ee:	480b      	ldr	r0, [pc, #44]	; (108a1c <mbed_start_main+0x44>)
  1089f0:	6093      	str	r3, [r2, #8]
  1089f2:	2318      	movs	r3, #24
  1089f4:	6193      	str	r3, [r2, #24]
  1089f6:	4b0a      	ldr	r3, [pc, #40]	; (108a20 <mbed_start_main+0x48>)
  1089f8:	6013      	str	r3, [r2, #0]
  1089fa:	f002 f93b 	bl	10ac74 <osThreadNew>
  1089fe:	b910      	cbnz	r0, 108a06 <mbed_start_main+0x2e>
  108a00:	4808      	ldr	r0, [pc, #32]	; (108a24 <mbed_start_main+0x4c>)
  108a02:	f7ff ff6f 	bl	1088e4 <error>
  108a06:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  108a0a:	f000 ba75 	b.w	108ef8 <osKernelStart>
  108a0e:	bf00      	nop
  108a10:	3fff8e58 	.word	0x3fff8e58
  108a14:	3fff8f08 	.word	0x3fff8f08
  108a18:	3fff8ebc 	.word	0x3fff8ebc
  108a1c:	00108911 	.word	0x00108911
  108a20:	00118ee2 	.word	0x00118ee2
  108a24:	00118eee 	.word	0x00118eee

00108a28 <__wrap_main>:
  108a28:	b508      	push	{r3, lr}
  108a2a:	f7ff ffd3 	bl	1089d4 <mbed_main>
  108a2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  108a32:	f7fa bafd 	b.w	103030 <main>
	...

00108a38 <software_init_hook>:
  108a38:	b510      	push	{r4, lr}
  108a3a:	f7ff ffad 	bl	108998 <mbed_set_stack_heap>
  108a3e:	4b0a      	ldr	r3, [pc, #40]	; (108a68 <software_init_hook+0x30>)
  108a40:	490a      	ldr	r1, [pc, #40]	; (108a6c <software_init_hook+0x34>)
  108a42:	689a      	ldr	r2, [r3, #8]
  108a44:	480a      	ldr	r0, [pc, #40]	; (108a70 <software_init_hook+0x38>)
  108a46:	3a04      	subs	r2, #4
  108a48:	f852 4f04 	ldr.w	r4, [r2, #4]!
  108a4c:	f841 4f04 	str.w	r4, [r1, #4]!
  108a50:	4281      	cmp	r1, r0
  108a52:	d1f9      	bne.n	108a48 <software_init_hook+0x10>
  108a54:	4a07      	ldr	r2, [pc, #28]	; (108a74 <software_init_hook+0x3c>)
  108a56:	609a      	str	r2, [r3, #8]
  108a58:	f7ff ffbd 	bl	1089d6 <mbed_sdk_init>
  108a5c:	f000 fa06 	bl	108e6c <osKernelInitialize>
  108a60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  108a64:	f7ff bfb8 	b.w	1089d8 <mbed_start_main>
  108a68:	e000ed00 	.word	0xe000ed00
  108a6c:	3fff3ffc 	.word	0x3fff3ffc
  108a70:	3fff408c 	.word	0x3fff408c
  108a74:	3fff4000 	.word	0x3fff4000

00108a78 <default_idle_hook>:
  108a78:	f003 bbc0 	b.w	10c1fc <hal_sleep>

00108a7c <rtos_idle_loop>:
  108a7c:	b508      	push	{r3, lr}
  108a7e:	4c02      	ldr	r4, [pc, #8]	; (108a88 <rtos_idle_loop+0xc>)
  108a80:	6823      	ldr	r3, [r4, #0]
  108a82:	4798      	blx	r3
  108a84:	e7fc      	b.n	108a80 <rtos_idle_loop+0x4>
  108a86:	bf00      	nop
  108a88:	3fff40e8 	.word	0x3fff40e8

00108a8c <osRtxIdleThread>:
  108a8c:	b508      	push	{r3, lr}
  108a8e:	f7ff fff5 	bl	108a7c <rtos_idle_loop>
  108a92:	e7fc      	b.n	108a8e <osRtxIdleThread+0x2>

00108a94 <osRtxErrorNotify>:
  108a94:	b508      	push	{r3, lr}
  108a96:	4605      	mov	r5, r0
  108a98:	460c      	mov	r4, r1
  108a9a:	f002 f907 	bl	10acac <osThreadGetId>
  108a9e:	1e6b      	subs	r3, r5, #1
  108aa0:	4602      	mov	r2, r0
  108aa2:	2b04      	cmp	r3, #4
  108aa4:	d824      	bhi.n	108af0 <osRtxErrorNotify+0x5c>
  108aa6:	e8df f003 	tbb	[pc, r3]
  108aaa:	0d03      	.short	0x0d03
  108aac:	1913      	.short	0x1913
  108aae:	1e          	.byte	0x1e
  108aaf:	00          	.byte	0x00
  108ab0:	4620      	mov	r0, r4
  108ab2:	f002 f8e3 	bl	10ac7c <osThreadGetName>
  108ab6:	4622      	mov	r2, r4
  108ab8:	4603      	mov	r3, r0
  108aba:	2101      	movs	r1, #1
  108abc:	480f      	ldr	r0, [pc, #60]	; (108afc <osRtxErrorNotify+0x68>)
  108abe:	f7ff ff11 	bl	1088e4 <error>
  108ac2:	e019      	b.n	108af8 <osRtxErrorNotify+0x64>
  108ac4:	4623      	mov	r3, r4
  108ac6:	2102      	movs	r1, #2
  108ac8:	480d      	ldr	r0, [pc, #52]	; (108b00 <osRtxErrorNotify+0x6c>)
  108aca:	f7ff ff0b 	bl	1088e4 <error>
  108ace:	e013      	b.n	108af8 <osRtxErrorNotify+0x64>
  108ad0:	4623      	mov	r3, r4
  108ad2:	2103      	movs	r1, #3
  108ad4:	480b      	ldr	r0, [pc, #44]	; (108b04 <osRtxErrorNotify+0x70>)
  108ad6:	f7ff ff05 	bl	1088e4 <error>
  108ada:	e00d      	b.n	108af8 <osRtxErrorNotify+0x64>
  108adc:	2104      	movs	r1, #4
  108ade:	480a      	ldr	r0, [pc, #40]	; (108b08 <osRtxErrorNotify+0x74>)
  108ae0:	f7ff ff00 	bl	1088e4 <error>
  108ae4:	e008      	b.n	108af8 <osRtxErrorNotify+0x64>
  108ae6:	2105      	movs	r1, #5
  108ae8:	4808      	ldr	r0, [pc, #32]	; (108b0c <osRtxErrorNotify+0x78>)
  108aea:	f7ff fefb 	bl	1088e4 <error>
  108aee:	e003      	b.n	108af8 <osRtxErrorNotify+0x64>
  108af0:	4629      	mov	r1, r5
  108af2:	4807      	ldr	r0, [pc, #28]	; (108b10 <osRtxErrorNotify+0x7c>)
  108af4:	f7ff fef6 	bl	1088e4 <error>
  108af8:	e7fe      	b.n	108af8 <osRtxErrorNotify+0x64>
  108afa:	bf00      	nop
  108afc:	00118f0a 	.word	0x00118f0a
  108b00:	00118f5b 	.word	0x00118f5b
  108b04:	00118fb1 	.word	0x00118fb1
  108b08:	00119016 	.word	0x00119016
  108b0c:	00119071 	.word	0x00119071
  108b10:	001190d1 	.word	0x001190d1

00108b14 <svcRtxDelay>:
  108b14:	b508      	push	{r3, lr}
  108b16:	4601      	mov	r1, r0
  108b18:	b110      	cbz	r0, 108b20 <svcRtxDelay+0xc>
  108b1a:	2013      	movs	r0, #19
  108b1c:	f001 ff64 	bl	10a9e8 <osRtxThreadWaitEnter>
  108b20:	2000      	movs	r0, #0
  108b22:	bd08      	pop	{r3, pc}

00108b24 <osDelay>:
  108b24:	b510      	push	{r4, lr}
  108b26:	4604      	mov	r4, r0
  108b28:	f000 f838 	bl	108b9c <EvrRtxThreadDelay>
  108b2c:	f3ef 8305 	mrs	r3, IPSR
  108b30:	b92b      	cbnz	r3, 108b3e <osDelay+0x1a>
  108b32:	f3ef 8310 	mrs	r3, PRIMASK
  108b36:	b913      	cbnz	r3, 108b3e <osDelay+0x1a>
  108b38:	f3ef 8311 	mrs	r3, BASEPRI
  108b3c:	b13b      	cbz	r3, 108b4e <osDelay+0x2a>
  108b3e:	f06f 0105 	mvn.w	r1, #5
  108b42:	2000      	movs	r0, #0
  108b44:	f000 f816 	bl	108b74 <EvrRtxThreadError>
  108b48:	f06f 0005 	mvn.w	r0, #5
  108b4c:	bd10      	pop	{r4, pc}
  108b4e:	4620      	mov	r0, r4
  108b50:	f8df c004 	ldr.w	r12, [pc, #4]	; 108b58 <osDelay+0x34>
  108b54:	df00      	svc	0
  108b56:	bd10      	pop	{r4, pc}
  108b58:	00108b15 	.word	0x00108b15

00108b5c <EvrRtxMemoryInit>:
  108b5c:	4770      	bx	lr

00108b5e <EvrRtxMemoryAlloc>:
  108b5e:	4770      	bx	lr

00108b60 <EvrRtxMemoryFree>:
  108b60:	4770      	bx	lr

00108b62 <EvrRtxMemoryBlockInit>:
  108b62:	4770      	bx	lr

00108b64 <EvrRtxMemoryBlockAlloc>:
  108b64:	4770      	bx	lr

00108b66 <EvrRtxMemoryBlockFree>:
  108b66:	4770      	bx	lr

00108b68 <EvrRtxKernelError>:
  108b68:	4770      	bx	lr

00108b6a <EvrRtxKernelInitialize>:
  108b6a:	4770      	bx	lr

00108b6c <EvrRtxKernelInitializeCompleted>:
  108b6c:	4770      	bx	lr

00108b6e <EvrRtxKernelGetState>:
  108b6e:	4770      	bx	lr

00108b70 <EvrRtxKernelStart>:
  108b70:	4770      	bx	lr

00108b72 <EvrRtxKernelStarted>:
  108b72:	4770      	bx	lr

00108b74 <EvrRtxThreadError>:
  108b74:	4770      	bx	lr

00108b76 <EvrRtxThreadNew>:
  108b76:	4770      	bx	lr

00108b78 <EvrRtxThreadCreated>:
  108b78:	4770      	bx	lr

00108b7a <EvrRtxThreadGetName>:
  108b7a:	4770      	bx	lr

00108b7c <EvrRtxThreadGetId>:
  108b7c:	4770      	bx	lr

00108b7e <EvrRtxThreadSetPriority>:
  108b7e:	4770      	bx	lr

00108b80 <EvrRtxThreadJoined>:
  108b80:	4770      	bx	lr

00108b82 <EvrRtxThreadBlocked>:
  108b82:	4770      	bx	lr

00108b84 <EvrRtxThreadUnblocked>:
  108b84:	4770      	bx	lr

00108b86 <EvrRtxThreadSwitch>:
  108b86:	4770      	bx	lr

00108b88 <EvrRtxThreadExit>:
  108b88:	4770      	bx	lr

00108b8a <EvrRtxThreadTerminate>:
  108b8a:	4770      	bx	lr

00108b8c <EvrRtxThreadDestroyed>:
  108b8c:	4770      	bx	lr

00108b8e <EvrRtxThreadFlagsSet>:
  108b8e:	4770      	bx	lr

00108b90 <EvrRtxThreadFlagsSetDone>:
  108b90:	4770      	bx	lr

00108b92 <EvrRtxThreadFlagsWait>:
  108b92:	4770      	bx	lr

00108b94 <EvrRtxThreadFlagsWaitPending>:
  108b94:	4770      	bx	lr

00108b96 <EvrRtxThreadFlagsWaitTimeout>:
  108b96:	4770      	bx	lr

00108b98 <EvrRtxThreadFlagsWaitCompleted>:
  108b98:	4770      	bx	lr

00108b9a <EvrRtxThreadFlagsWaitNotCompleted>:
  108b9a:	4770      	bx	lr

00108b9c <EvrRtxThreadDelay>:
  108b9c:	4770      	bx	lr

00108b9e <EvrRtxThreadDelayCompleted>:
  108b9e:	4770      	bx	lr

00108ba0 <EvrRtxTimerCallback>:
  108ba0:	4770      	bx	lr

00108ba2 <EvrRtxEventFlagsWaitTimeout>:
  108ba2:	4770      	bx	lr

00108ba4 <EvrRtxMutexError>:
  108ba4:	4770      	bx	lr

00108ba6 <EvrRtxMutexNew>:
  108ba6:	4770      	bx	lr

00108ba8 <EvrRtxMutexCreated>:
  108ba8:	4770      	bx	lr

00108baa <EvrRtxMutexAcquire>:
  108baa:	4770      	bx	lr

00108bac <EvrRtxMutexAcquirePending>:
  108bac:	4770      	bx	lr

00108bae <EvrRtxMutexAcquireTimeout>:
  108bae:	4770      	bx	lr

00108bb0 <EvrRtxMutexAcquired>:
  108bb0:	4770      	bx	lr

00108bb2 <EvrRtxMutexNotAcquired>:
  108bb2:	4770      	bx	lr

00108bb4 <EvrRtxMutexRelease>:
  108bb4:	4770      	bx	lr

00108bb6 <EvrRtxMutexReleased>:
  108bb6:	4770      	bx	lr

00108bb8 <EvrRtxMutexDelete>:
  108bb8:	4770      	bx	lr

00108bba <EvrRtxMutexDestroyed>:
  108bba:	4770      	bx	lr

00108bbc <EvrRtxSemaphoreError>:
  108bbc:	4770      	bx	lr

00108bbe <EvrRtxSemaphoreNew>:
  108bbe:	4770      	bx	lr

00108bc0 <EvrRtxSemaphoreCreated>:
  108bc0:	4770      	bx	lr

00108bc2 <EvrRtxSemaphoreAcquire>:
  108bc2:	4770      	bx	lr

00108bc4 <EvrRtxSemaphoreAcquirePending>:
  108bc4:	4770      	bx	lr

00108bc6 <EvrRtxSemaphoreAcquireTimeout>:
  108bc6:	4770      	bx	lr

00108bc8 <EvrRtxSemaphoreAcquired>:
  108bc8:	4770      	bx	lr

00108bca <EvrRtxSemaphoreNotAcquired>:
  108bca:	4770      	bx	lr

00108bcc <EvrRtxSemaphoreRelease>:
  108bcc:	4770      	bx	lr

00108bce <EvrRtxSemaphoreReleased>:
  108bce:	4770      	bx	lr

00108bd0 <EvrRtxSemaphoreGetCount>:
  108bd0:	4770      	bx	lr

00108bd2 <EvrRtxSemaphoreDelete>:
  108bd2:	4770      	bx	lr

00108bd4 <EvrRtxSemaphoreDestroyed>:
  108bd4:	4770      	bx	lr

00108bd6 <EvrRtxMemoryPoolAllocTimeout>:
  108bd6:	4770      	bx	lr

00108bd8 <EvrRtxMessageQueueError>:
  108bd8:	4770      	bx	lr

00108bda <EvrRtxMessageQueueNew>:
  108bda:	4770      	bx	lr

00108bdc <EvrRtxMessageQueueCreated>:
  108bdc:	4770      	bx	lr

00108bde <EvrRtxMessageQueuePut>:
  108bde:	4770      	bx	lr

00108be0 <EvrRtxMessageQueuePutPending>:
  108be0:	4770      	bx	lr

00108be2 <EvrRtxMessageQueuePutTimeout>:
  108be2:	4770      	bx	lr

00108be4 <EvrRtxMessageQueueInsertPending>:
  108be4:	4770      	bx	lr

00108be6 <EvrRtxMessageQueueInserted>:
  108be6:	4770      	bx	lr

00108be8 <EvrRtxMessageQueueNotInserted>:
  108be8:	4770      	bx	lr

00108bea <EvrRtxMessageQueueGet>:
  108bea:	4770      	bx	lr

00108bec <EvrRtxMessageQueueGetPending>:
  108bec:	4770      	bx	lr

00108bee <EvrRtxMessageQueueGetTimeout>:
  108bee:	4770      	bx	lr

00108bf0 <EvrRtxMessageQueueRetrieved>:
  108bf0:	4770      	bx	lr

00108bf2 <EvrRtxMessageQueueNotRetrieved>:
  108bf2:	4770      	bx	lr

00108bf4 <svcRtxKernelInitialize>:
  108bf4:	b570      	push	{r4, r5, r6, lr}
  108bf6:	4863      	ldr	r0, [pc, #396]	; (108d84 <svcRtxKernelInitialize+0x190>)
  108bf8:	7a01      	ldrb	r1, [r0, #8]
  108bfa:	4604      	mov	r4, r0
  108bfc:	2901      	cmp	r1, #1
  108bfe:	f000 80bd 	beq.w	108d7c <svcRtxKernelInitialize+0x188>
  108c02:	b111      	cbz	r1, 108c0a <svcRtxKernelInitialize+0x16>
  108c04:	f04f 30ff 	mov.w	r0, #4294967295
  108c08:	e009      	b.n	108c1e <svcRtxKernelInitialize+0x2a>
  108c0a:	4d5f      	ldr	r5, [pc, #380]	; (108d88 <svcRtxKernelInitialize+0x194>)
  108c0c:	22a8      	movs	r2, #168	; 0xa8
  108c0e:	3008      	adds	r0, #8
  108c10:	f007 f989 	bl	10ff26 <memset>
  108c14:	6d6b      	ldr	r3, [r5, #84]	; 0x54
  108c16:	2b47      	cmp	r3, #71	; 0x47
  108c18:	d806      	bhi.n	108c28 <svcRtxKernelInitialize+0x34>
  108c1a:	f06f 000a 	mvn.w	r0, #10
  108c1e:	f7ff ffa3 	bl	108b68 <EvrRtxKernelError>
  108c22:	f04f 30ff 	mov.w	r0, #4294967295
  108c26:	bd70      	pop	{r4, r5, r6, pc}
  108c28:	68ea      	ldr	r2, [r5, #12]
  108c2a:	2a00      	cmp	r2, #0
  108c2c:	d0ea      	beq.n	108c04 <svcRtxKernelInitialize+0x10>
  108c2e:	8a2b      	ldrh	r3, [r5, #16]
  108c30:	2b00      	cmp	r3, #0
  108c32:	d0e7      	beq.n	108c04 <svcRtxKernelInitialize+0x10>
  108c34:	6aee      	ldr	r6, [r5, #44]	; 0x2c
  108c36:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
  108c3a:	68ab      	ldr	r3, [r5, #8]
  108c3c:	6b29      	ldr	r1, [r5, #48]	; 0x30
  108c3e:	4630      	mov	r0, r6
  108c40:	6662      	str	r2, [r4, #100]	; 0x64
  108c42:	64a3      	str	r3, [r4, #72]	; 0x48
  108c44:	f000 f98a 	bl	108f5c <osRtxMemoryInit>
  108c48:	b108      	cbz	r0, 108c4e <svcRtxKernelInitialize+0x5a>
  108c4a:	f8c4 6088 	str.w	r6, [r4, #136]	; 0x88
  108c4e:	696e      	ldr	r6, [r5, #20]
  108c50:	69a9      	ldr	r1, [r5, #24]
  108c52:	4630      	mov	r0, r6
  108c54:	f000 f982 	bl	108f5c <osRtxMemoryInit>
  108c58:	b108      	cbz	r0, 108c5e <svcRtxKernelInitialize+0x6a>
  108c5a:	67e6      	str	r6, [r4, #124]	; 0x7c
  108c5c:	e002      	b.n	108c64 <svcRtxKernelInitialize+0x70>
  108c5e:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
  108c62:	67e3      	str	r3, [r4, #124]	; 0x7c
  108c64:	69ee      	ldr	r6, [r5, #28]
  108c66:	6a29      	ldr	r1, [r5, #32]
  108c68:	4630      	mov	r0, r6
  108c6a:	f000 f977 	bl	108f5c <osRtxMemoryInit>
  108c6e:	b110      	cbz	r0, 108c76 <svcRtxKernelInitialize+0x82>
  108c70:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
  108c74:	e003      	b.n	108c7e <svcRtxKernelInitialize+0x8a>
  108c76:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
  108c7a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
  108c7e:	6a6e      	ldr	r6, [r5, #36]	; 0x24
  108c80:	6aa9      	ldr	r1, [r5, #40]	; 0x28
  108c82:	4630      	mov	r0, r6
  108c84:	f000 f96a 	bl	108f5c <osRtxMemoryInit>
  108c88:	b110      	cbz	r0, 108c90 <svcRtxKernelInitialize+0x9c>
  108c8a:	f8c4 6084 	str.w	r6, [r4, #132]	; 0x84
  108c8e:	e003      	b.n	108c98 <svcRtxKernelInitialize+0xa4>
  108c90:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
  108c94:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
  108c98:	6b6e      	ldr	r6, [r5, #52]	; 0x34
  108c9a:	b146      	cbz	r6, 108cae <svcRtxKernelInitialize+0xba>
  108c9c:	68f3      	ldr	r3, [r6, #12]
  108c9e:	68b2      	ldr	r2, [r6, #8]
  108ca0:	6831      	ldr	r1, [r6, #0]
  108ca2:	4630      	mov	r0, r6
  108ca4:	f000 f9d5 	bl	109052 <osRtxMemoryPoolInit>
  108ca8:	b108      	cbz	r0, 108cae <svcRtxKernelInitialize+0xba>
  108caa:	f8c4 608c 	str.w	r6, [r4, #140]	; 0x8c
  108cae:	6bae      	ldr	r6, [r5, #56]	; 0x38
  108cb0:	b146      	cbz	r6, 108cc4 <svcRtxKernelInitialize+0xd0>
  108cb2:	68f3      	ldr	r3, [r6, #12]
  108cb4:	68b2      	ldr	r2, [r6, #8]
  108cb6:	6831      	ldr	r1, [r6, #0]
  108cb8:	4630      	mov	r0, r6
  108cba:	f000 f9ca 	bl	109052 <osRtxMemoryPoolInit>
  108cbe:	b108      	cbz	r0, 108cc4 <svcRtxKernelInitialize+0xd0>
  108cc0:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
  108cc4:	6bee      	ldr	r6, [r5, #60]	; 0x3c
  108cc6:	b146      	cbz	r6, 108cda <svcRtxKernelInitialize+0xe6>
  108cc8:	68f3      	ldr	r3, [r6, #12]
  108cca:	68b2      	ldr	r2, [r6, #8]
  108ccc:	6831      	ldr	r1, [r6, #0]
  108cce:	4630      	mov	r0, r6
  108cd0:	f000 f9bf 	bl	109052 <osRtxMemoryPoolInit>
  108cd4:	b108      	cbz	r0, 108cda <svcRtxKernelInitialize+0xe6>
  108cd6:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
  108cda:	6c2e      	ldr	r6, [r5, #64]	; 0x40
  108cdc:	b146      	cbz	r6, 108cf0 <svcRtxKernelInitialize+0xfc>
  108cde:	68f3      	ldr	r3, [r6, #12]
  108ce0:	68b2      	ldr	r2, [r6, #8]
  108ce2:	6831      	ldr	r1, [r6, #0]
  108ce4:	4630      	mov	r0, r6
  108ce6:	f000 f9b4 	bl	109052 <osRtxMemoryPoolInit>
  108cea:	b108      	cbz	r0, 108cf0 <svcRtxKernelInitialize+0xfc>
  108cec:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
  108cf0:	6c6e      	ldr	r6, [r5, #68]	; 0x44
  108cf2:	b146      	cbz	r6, 108d06 <svcRtxKernelInitialize+0x112>
  108cf4:	68f3      	ldr	r3, [r6, #12]
  108cf6:	68b2      	ldr	r2, [r6, #8]
  108cf8:	6831      	ldr	r1, [r6, #0]
  108cfa:	4630      	mov	r0, r6
  108cfc:	f000 f9a9 	bl	109052 <osRtxMemoryPoolInit>
  108d00:	b108      	cbz	r0, 108d06 <svcRtxKernelInitialize+0x112>
  108d02:	f8c4 609c 	str.w	r6, [r4, #156]	; 0x9c
  108d06:	6cae      	ldr	r6, [r5, #72]	; 0x48
  108d08:	b146      	cbz	r6, 108d1c <svcRtxKernelInitialize+0x128>
  108d0a:	68f3      	ldr	r3, [r6, #12]
  108d0c:	68b2      	ldr	r2, [r6, #8]
  108d0e:	6831      	ldr	r1, [r6, #0]
  108d10:	4630      	mov	r0, r6
  108d12:	f000 f99e 	bl	109052 <osRtxMemoryPoolInit>
  108d16:	b108      	cbz	r0, 108d1c <svcRtxKernelInitialize+0x128>
  108d18:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
  108d1c:	6cee      	ldr	r6, [r5, #76]	; 0x4c
  108d1e:	b146      	cbz	r6, 108d32 <svcRtxKernelInitialize+0x13e>
  108d20:	68f3      	ldr	r3, [r6, #12]
  108d22:	68b2      	ldr	r2, [r6, #8]
  108d24:	6831      	ldr	r1, [r6, #0]
  108d26:	4630      	mov	r0, r6
  108d28:	f000 f993 	bl	109052 <osRtxMemoryPoolInit>
  108d2c:	b108      	cbz	r0, 108d32 <svcRtxKernelInitialize+0x13e>
  108d2e:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
  108d32:	6d2d      	ldr	r5, [r5, #80]	; 0x50
  108d34:	b145      	cbz	r5, 108d48 <svcRtxKernelInitialize+0x154>
  108d36:	68eb      	ldr	r3, [r5, #12]
  108d38:	68aa      	ldr	r2, [r5, #8]
  108d3a:	6829      	ldr	r1, [r5, #0]
  108d3c:	4628      	mov	r0, r5
  108d3e:	f000 f988 	bl	109052 <osRtxMemoryPoolInit>
  108d42:	b108      	cbz	r0, 108d48 <svcRtxKernelInitialize+0x154>
  108d44:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
  108d48:	4a10      	ldr	r2, [pc, #64]	; (108d8c <svcRtxKernelInitialize+0x198>)
  108d4a:	23ff      	movs	r3, #255	; 0xff
  108d4c:	f882 3022 	strb.w	r3, [r2, #34]	; 0x22
  108d50:	f892 3022 	ldrb.w	r3, [r2, #34]	; 0x22
  108d54:	68d1      	ldr	r1, [r2, #12]
  108d56:	f063 03ff 	orn	r3, r3, #255	; 0xff
  108d5a:	43db      	mvns	r3, r3
  108d5c:	fab3 f383 	clz	r3, r3
  108d60:	f3c1 2102 	ubfx	r1, r1, #8, #3
  108d64:	f1c3 0320 	rsb	r3, r3, #32
  108d68:	428b      	cmp	r3, r1
  108d6a:	bf98      	it	ls
  108d6c:	1c4b      	addls	r3, r1, #1
  108d6e:	21fe      	movs	r1, #254	; 0xfe
  108d70:	fa01 f303 	lsl.w	r3, r1, r3
  108d74:	b2db      	uxtb	r3, r3
  108d76:	77d3      	strb	r3, [r2, #31]
  108d78:	2301      	movs	r3, #1
  108d7a:	7223      	strb	r3, [r4, #8]
  108d7c:	f7ff fef6 	bl	108b6c <EvrRtxKernelInitializeCompleted>
  108d80:	2000      	movs	r0, #0
  108d82:	bd70      	pop	{r4, r5, r6, pc}
  108d84:	3fff40f0 	.word	0x3fff40f0
  108d88:	00119150 	.word	0x00119150
  108d8c:	e000ed00 	.word	0xe000ed00

00108d90 <svcRtxKernelGetState>:
  108d90:	b510      	push	{r4, lr}
  108d92:	4c03      	ldr	r4, [pc, #12]	; (108da0 <svcRtxKernelGetState+0x10>)
  108d94:	7a20      	ldrb	r0, [r4, #8]
  108d96:	f7ff feea 	bl	108b6e <EvrRtxKernelGetState>
  108d9a:	7a20      	ldrb	r0, [r4, #8]
  108d9c:	bd10      	pop	{r4, pc}
  108d9e:	bf00      	nop
  108da0:	3fff40f0 	.word	0x3fff40f0

00108da4 <svcRtxKernelStart>:
  108da4:	b538      	push	{r3, r4, r5, lr}
  108da6:	4c2a      	ldr	r4, [pc, #168]	; (108e50 <svcRtxKernelStart+0xac>)
  108da8:	7a23      	ldrb	r3, [r4, #8]
  108daa:	2b01      	cmp	r3, #1
  108dac:	d002      	beq.n	108db4 <svcRtxKernelStart+0x10>
  108dae:	f06f 0006 	mvn.w	r0, #6
  108db2:	e00b      	b.n	108dcc <svcRtxKernelStart+0x28>
  108db4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  108db6:	4d27      	ldr	r5, [pc, #156]	; (108e54 <svcRtxKernelStart+0xb0>)
  108db8:	b96b      	cbnz	r3, 108dd6 <svcRtxKernelStart+0x32>
  108dba:	6daa      	ldr	r2, [r5, #88]	; 0x58
  108dbc:	4619      	mov	r1, r3
  108dbe:	4826      	ldr	r0, [pc, #152]	; (108e58 <svcRtxKernelStart+0xb4>)
  108dc0:	f001 fce4 	bl	10a78c <svcRtxThreadNew>
  108dc4:	6320      	str	r0, [r4, #48]	; 0x30
  108dc6:	b930      	cbnz	r0, 108dd6 <svcRtxKernelStart+0x32>
  108dc8:	f04f 30ff 	mov.w	r0, #4294967295
  108dcc:	f7ff fecc 	bl	108b68 <EvrRtxKernelError>
  108dd0:	f04f 30ff 	mov.w	r0, #4294967295
  108dd4:	bd38      	pop	{r3, r4, r5, pc}
  108dd6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  108dd8:	b15b      	cbz	r3, 108df2 <svcRtxKernelStart+0x4e>
  108dda:	6d23      	ldr	r3, [r4, #80]	; 0x50
  108ddc:	b94b      	cbnz	r3, 108df2 <svcRtxKernelStart+0x4e>
  108dde:	4a1d      	ldr	r2, [pc, #116]	; (108e54 <svcRtxKernelStart+0xb0>)
  108de0:	4619      	mov	r1, r3
  108de2:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
  108de4:	481d      	ldr	r0, [pc, #116]	; (108e5c <svcRtxKernelStart+0xb8>)
  108de6:	f001 fcd1 	bl	10a78c <svcRtxThreadNew>
  108dea:	4b19      	ldr	r3, [pc, #100]	; (108e50 <svcRtxKernelStart+0xac>)
  108dec:	6518      	str	r0, [r3, #80]	; 0x50
  108dee:	2800      	cmp	r0, #0
  108df0:	d0ea      	beq.n	108dc8 <svcRtxKernelStart+0x24>
  108df2:	481b      	ldr	r0, [pc, #108]	; (108e60 <svcRtxKernelStart+0xbc>)
  108df4:	f001 faf7 	bl	10a3e6 <osRtxThreadListGet>
  108df8:	2800      	cmp	r0, #0
  108dfa:	d0e5      	beq.n	108dc8 <svcRtxKernelStart+0x24>
  108dfc:	f001 fc10 	bl	10a620 <osRtxThreadSwitch>
  108e00:	682b      	ldr	r3, [r5, #0]
  108e02:	07db      	lsls	r3, r3, #31
  108e04:	bf4c      	ite	mi
  108e06:	2302      	movmi	r3, #2
  108e08:	2303      	movpl	r3, #3
  108e0a:	f383 8814 	msr	CONTROL, r3
  108e0e:	4b15      	ldr	r3, [pc, #84]	; (108e64 <svcRtxKernelStart+0xc0>)
  108e10:	681b      	ldr	r3, [r3, #0]
  108e12:	60e3      	str	r3, [r4, #12]
  108e14:	f001 f9d0 	bl	10a1b8 <osRtxSysTimerSetup>
  108e18:	2800      	cmp	r0, #0
  108e1a:	61a0      	str	r0, [r4, #24]
  108e1c:	db0f      	blt.n	108e3e <svcRtxKernelStart+0x9a>
  108e1e:	f100 4360 	add.w	r3, r0, #3758096384	; 0xe0000000
  108e22:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
  108e26:	22ff      	movs	r2, #255	; 0xff
  108e28:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  108e2c:	1142      	asrs	r2, r0, #5
  108e2e:	2301      	movs	r3, #1
  108e30:	f000 001f 	and.w	r0, r0, #31
  108e34:	fa03 f000 	lsl.w	r0, r3, r0
  108e38:	4b0b      	ldr	r3, [pc, #44]	; (108e68 <svcRtxKernelStart+0xc4>)
  108e3a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  108e3e:	f001 f9d5 	bl	10a1ec <osRtxSysTimerEnable>
  108e42:	2302      	movs	r3, #2
  108e44:	7223      	strb	r3, [r4, #8]
  108e46:	f7ff fe94 	bl	108b72 <EvrRtxKernelStarted>
  108e4a:	2000      	movs	r0, #0
  108e4c:	bd38      	pop	{r3, r4, r5, pc}
  108e4e:	bf00      	nop
  108e50:	3fff40f0 	.word	0x3fff40f0
  108e54:	00119150 	.word	0x00119150
  108e58:	00108a8d 	.word	0x00108a8d
  108e5c:	0010aea1 	.word	0x0010aea1
  108e60:	3fff4114 	.word	0x3fff4114
  108e64:	3fff41a0 	.word	0x3fff41a0
  108e68:	e000e100 	.word	0xe000e100

00108e6c <osKernelInitialize>:
  108e6c:	b508      	push	{r3, lr}
  108e6e:	f7ff fe7c 	bl	108b6a <EvrRtxKernelInitialize>
  108e72:	f3ef 8305 	mrs	r3, IPSR
  108e76:	b92b      	cbnz	r3, 108e84 <osKernelInitialize+0x18>
  108e78:	f3ef 8310 	mrs	r3, PRIMASK
  108e7c:	b913      	cbnz	r3, 108e84 <osKernelInitialize+0x18>
  108e7e:	f3ef 8311 	mrs	r3, BASEPRI
  108e82:	b133      	cbz	r3, 108e92 <osKernelInitialize+0x26>
  108e84:	f06f 0005 	mvn.w	r0, #5
  108e88:	f7ff fe6e 	bl	108b68 <EvrRtxKernelError>
  108e8c:	f06f 0005 	mvn.w	r0, #5
  108e90:	bd08      	pop	{r3, pc}
  108e92:	f8df c020 	ldr.w	r12, [pc, #32]	; 108eb4 <osKernelInitialize+0x48>
  108e96:	f3ef 8314 	mrs	r3, CONTROL
  108e9a:	f013 0f02 	tst.w	r3, #2
  108e9e:	d106      	bne.n	108eae <osKernelInitialize+0x42>
  108ea0:	f3ef 8308 	mrs	r3, MSP
  108ea4:	3b20      	subs	r3, #32
  108ea6:	f023 0307 	bic.w	r3, r3, #7
  108eaa:	f383 8809 	msr	PSP, r3
  108eae:	df00      	svc	0
  108eb0:	bd08      	pop	{r3, pc}
  108eb2:	bf00      	nop
  108eb4:	00108bf5 	.word	0x00108bf5

00108eb8 <osKernelGetState>:
  108eb8:	b508      	push	{r3, lr}
  108eba:	f3ef 8305 	mrs	r3, IPSR
  108ebe:	b92b      	cbnz	r3, 108ecc <osKernelGetState+0x14>
  108ec0:	f3ef 8310 	mrs	r3, PRIMASK
  108ec4:	b913      	cbnz	r3, 108ecc <osKernelGetState+0x14>
  108ec6:	f3ef 8311 	mrs	r3, BASEPRI
  108eca:	b133      	cbz	r3, 108eda <osKernelGetState+0x22>
  108ecc:	f04f 30ff 	mov.w	r0, #4294967295
  108ed0:	f7ff fe4d 	bl	108b6e <EvrRtxKernelGetState>
  108ed4:	f04f 30ff 	mov.w	r0, #4294967295
  108ed8:	bd08      	pop	{r3, pc}
  108eda:	f3ef 8314 	mrs	r3, CONTROL
  108ede:	07db      	lsls	r3, r3, #31
  108ee0:	d403      	bmi.n	108eea <osKernelGetState+0x32>
  108ee2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  108ee6:	f7ff bf53 	b.w	108d90 <svcRtxKernelGetState>
  108eea:	f8df c008 	ldr.w	r12, [pc, #8]	; 108ef4 <osKernelGetState+0x3c>
  108eee:	df00      	svc	0
  108ef0:	bd08      	pop	{r3, pc}
  108ef2:	bf00      	nop
  108ef4:	00108d91 	.word	0x00108d91

00108ef8 <osKernelStart>:
  108ef8:	b508      	push	{r3, lr}
  108efa:	f7ff fe39 	bl	108b70 <EvrRtxKernelStart>
  108efe:	f3ef 8305 	mrs	r3, IPSR
  108f02:	b92b      	cbnz	r3, 108f10 <osKernelStart+0x18>
  108f04:	f3ef 8310 	mrs	r3, PRIMASK
  108f08:	b913      	cbnz	r3, 108f10 <osKernelStart+0x18>
  108f0a:	f3ef 8311 	mrs	r3, BASEPRI
  108f0e:	b133      	cbz	r3, 108f1e <osKernelStart+0x26>
  108f10:	f06f 0005 	mvn.w	r0, #5
  108f14:	f7ff fe28 	bl	108b68 <EvrRtxKernelError>
  108f18:	f06f 0005 	mvn.w	r0, #5
  108f1c:	bd08      	pop	{r3, pc}
  108f1e:	f7ff ffcb 	bl	108eb8 <osKernelGetState>
  108f22:	2802      	cmp	r0, #2
  108f24:	d005      	beq.n	108f32 <osKernelStart+0x3a>
  108f26:	4b0b      	ldr	r3, [pc, #44]	; (108f54 <osKernelStart+0x5c>)
  108f28:	681b      	ldr	r3, [r3, #0]
  108f2a:	b113      	cbz	r3, 108f32 <osKernelStart+0x3a>
  108f2c:	685b      	ldr	r3, [r3, #4]
  108f2e:	b103      	cbz	r3, 108f32 <osKernelStart+0x3a>
  108f30:	4798      	blx	r3
  108f32:	f8df c024 	ldr.w	r12, [pc, #36]	; 108f58 <osKernelStart+0x60>
  108f36:	f3ef 8314 	mrs	r3, CONTROL
  108f3a:	f013 0f02 	tst.w	r3, #2
  108f3e:	d106      	bne.n	108f4e <osKernelStart+0x56>
  108f40:	f3ef 8308 	mrs	r3, MSP
  108f44:	3b20      	subs	r3, #32
  108f46:	f023 0307 	bic.w	r3, r3, #7
  108f4a:	f383 8809 	msr	PSP, r3
  108f4e:	df00      	svc	0
  108f50:	bd08      	pop	{r3, pc}
  108f52:	bf00      	nop
  108f54:	3fff9f08 	.word	0x3fff9f08
  108f58:	00108da5 	.word	0x00108da5

00108f5c <osRtxMemoryInit>:
  108f5c:	b538      	push	{r3, r4, r5, lr}
  108f5e:	460c      	mov	r4, r1
  108f60:	4603      	mov	r3, r0
  108f62:	b130      	cbz	r0, 108f72 <osRtxMemoryInit+0x16>
  108f64:	ea40 0201 	orr.w	r2, r0, r1
  108f68:	f012 0207 	ands.w	r2, r2, #7
  108f6c:	d101      	bne.n	108f72 <osRtxMemoryInit+0x16>
  108f6e:	2917      	cmp	r1, #23
  108f70:	d806      	bhi.n	108f80 <osRtxMemoryInit+0x24>
  108f72:	4618      	mov	r0, r3
  108f74:	2200      	movs	r2, #0
  108f76:	4621      	mov	r1, r4
  108f78:	f7ff fdf0 	bl	108b5c <EvrRtxMemoryInit>
  108f7c:	2000      	movs	r0, #0
  108f7e:	bd38      	pop	{r3, r4, r5, pc}
  108f80:	f1a1 0408 	sub.w	r4, r1, #8
  108f84:	2510      	movs	r5, #16
  108f86:	6019      	str	r1, [r3, #0]
  108f88:	6045      	str	r5, [r0, #4]
  108f8a:	1825      	adds	r5, r4, r0
  108f8c:	6085      	str	r5, [r0, #8]
  108f8e:	5022      	str	r2, [r4, r0]
  108f90:	60c2      	str	r2, [r0, #12]
  108f92:	2201      	movs	r2, #1
  108f94:	f7ff fde2 	bl	108b5c <EvrRtxMemoryInit>
  108f98:	2001      	movs	r0, #1
  108f9a:	bd38      	pop	{r3, r4, r5, pc}

00108f9c <osRtxMemoryAlloc>:
  108f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  108f9e:	b118      	cbz	r0, 108fa8 <osRtxMemoryAlloc+0xc>
  108fa0:	b111      	cbz	r1, 108fa8 <osRtxMemoryAlloc+0xc>
  108fa2:	f032 0303 	bics.w	r3, r2, #3
  108fa6:	d004      	beq.n	108fb2 <osRtxMemoryAlloc+0x16>
  108fa8:	2300      	movs	r3, #0
  108faa:	f7ff fdd8 	bl	108b5e <EvrRtxMemoryAlloc>
  108fae:	2000      	movs	r0, #0
  108fb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  108fb2:	310f      	adds	r1, #15
  108fb4:	f021 0107 	bic.w	r1, r1, #7
  108fb8:	f100 0508 	add.w	r5, r0, #8
  108fbc:	682e      	ldr	r6, [r5, #0]
  108fbe:	f8d5 e004 	ldr.w	lr, [r5, #4]
  108fc2:	1b73      	subs	r3, r6, r5
  108fc4:	f02e 0403 	bic.w	r4, lr, #3
  108fc8:	1b1b      	subs	r3, r3, r4
  108fca:	4299      	cmp	r1, r3
  108fcc:	d905      	bls.n	108fda <osRtxMemoryAlloc+0x3e>
  108fce:	6834      	ldr	r4, [r6, #0]
  108fd0:	4635      	mov	r5, r6
  108fd2:	2c00      	cmp	r4, #0
  108fd4:	d1f2      	bne.n	108fbc <osRtxMemoryAlloc+0x20>
  108fd6:	4623      	mov	r3, r4
  108fd8:	e7e7      	b.n	108faa <osRtxMemoryAlloc+0xe>
  108fda:	6843      	ldr	r3, [r0, #4]
  108fdc:	ea42 0701 	orr.w	r7, r2, r1
  108fe0:	440b      	add	r3, r1
  108fe2:	6043      	str	r3, [r0, #4]
  108fe4:	f1be 0f00 	cmp.w	lr, #0
  108fe8:	d103      	bne.n	108ff2 <osRtxMemoryAlloc+0x56>
  108fea:	606f      	str	r7, [r5, #4]
  108fec:	f105 0408 	add.w	r4, r5, #8
  108ff0:	e005      	b.n	108ffe <osRtxMemoryAlloc+0x62>
  108ff2:	192b      	adds	r3, r5, r4
  108ff4:	512e      	str	r6, [r5, r4]
  108ff6:	605f      	str	r7, [r3, #4]
  108ff8:	f103 0408 	add.w	r4, r3, #8
  108ffc:	602b      	str	r3, [r5, #0]
  108ffe:	4623      	mov	r3, r4
  109000:	f7ff fdad 	bl	108b5e <EvrRtxMemoryAlloc>
  109004:	4620      	mov	r0, r4
  109006:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00109008 <osRtxMemoryFree>:
  109008:	b538      	push	{r3, r4, r5, lr}
  10900a:	b100      	cbz	r0, 10900e <osRtxMemoryFree+0x6>
  10900c:	b921      	cbnz	r1, 109018 <osRtxMemoryFree+0x10>
  10900e:	2200      	movs	r2, #0
  109010:	f7ff fda6 	bl	108b60 <EvrRtxMemoryFree>
  109014:	2000      	movs	r0, #0
  109016:	bd38      	pop	{r3, r4, r5, pc}
  109018:	f1a1 0508 	sub.w	r5, r1, #8
  10901c:	f100 0308 	add.w	r3, r0, #8
  109020:	2200      	movs	r2, #0
  109022:	42ab      	cmp	r3, r5
  109024:	d005      	beq.n	109032 <osRtxMemoryFree+0x2a>
  109026:	681c      	ldr	r4, [r3, #0]
  109028:	461a      	mov	r2, r3
  10902a:	2c00      	cmp	r4, #0
  10902c:	d0ef      	beq.n	10900e <osRtxMemoryFree+0x6>
  10902e:	4623      	mov	r3, r4
  109030:	e7f7      	b.n	109022 <osRtxMemoryFree+0x1a>
  109032:	685c      	ldr	r4, [r3, #4]
  109034:	f024 0503 	bic.w	r5, r4, #3
  109038:	6844      	ldr	r4, [r0, #4]
  10903a:	1b64      	subs	r4, r4, r5
  10903c:	6044      	str	r4, [r0, #4]
  10903e:	b90a      	cbnz	r2, 109044 <osRtxMemoryFree+0x3c>
  109040:	605a      	str	r2, [r3, #4]
  109042:	e001      	b.n	109048 <osRtxMemoryFree+0x40>
  109044:	681b      	ldr	r3, [r3, #0]
  109046:	6013      	str	r3, [r2, #0]
  109048:	2201      	movs	r2, #1
  10904a:	f7ff fd89 	bl	108b60 <EvrRtxMemoryFree>
  10904e:	2001      	movs	r0, #1
  109050:	bd38      	pop	{r3, r4, r5, pc}

00109052 <osRtxMemoryPoolInit>:
  109052:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  109056:	460d      	mov	r5, r1
  109058:	4617      	mov	r7, r2
  10905a:	461c      	mov	r4, r3
  10905c:	4606      	mov	r6, r0
  10905e:	b1f8      	cbz	r0, 1090a0 <osRtxMemoryPoolInit+0x4e>
  109060:	b301      	cbz	r1, 1090a4 <osRtxMemoryPoolInit+0x52>
  109062:	b312      	cbz	r2, 1090aa <osRtxMemoryPoolInit+0x58>
  109064:	b323      	cbz	r3, 1090b0 <osRtxMemoryPoolInit+0x5e>
  109066:	fb02 f801 	mul.w	r8, r2, r1
  10906a:	f04f 0e00 	mov.w	lr, #0
  10906e:	6031      	str	r1, [r6, #0]
  109070:	f8c0 e004 	str.w	lr, [r0, #4]
  109074:	eb03 0e08 	add.w	lr, r3, r8
  109078:	60f3      	str	r3, [r6, #12]
  10907a:	6173      	str	r3, [r6, #20]
  10907c:	60b2      	str	r2, [r6, #8]
  10907e:	f8c0 e010 	str.w	lr, [r0, #16]
  109082:	f7ff fd6e 	bl	108b62 <EvrRtxMemoryBlockInit>
  109086:	4623      	mov	r3, r4
  109088:	3d01      	subs	r5, #1
  10908a:	d003      	beq.n	109094 <osRtxMemoryPoolInit+0x42>
  10908c:	19da      	adds	r2, r3, r7
  10908e:	601a      	str	r2, [r3, #0]
  109090:	4613      	mov	r3, r2
  109092:	e7f9      	b.n	109088 <osRtxMemoryPoolInit+0x36>
  109094:	ebc7 0008 	rsb	r0, r7, r8
  109098:	5025      	str	r5, [r4, r0]
  10909a:	2001      	movs	r0, #1
  10909c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1090a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1090a4:	4608      	mov	r0, r1
  1090a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1090aa:	4610      	mov	r0, r2
  1090ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1090b0:	4618      	mov	r0, r3
  1090b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

001090b6 <osRtxMemoryPoolAlloc>:
  1090b6:	b538      	push	{r3, r4, r5, lr}
  1090b8:	4605      	mov	r5, r0
  1090ba:	b920      	cbnz	r0, 1090c6 <osRtxMemoryPoolAlloc+0x10>
  1090bc:	4601      	mov	r1, r0
  1090be:	f7ff fd51 	bl	108b64 <EvrRtxMemoryBlockAlloc>
  1090c2:	4628      	mov	r0, r5
  1090c4:	bd38      	pop	{r3, r4, r5, pc}
  1090c6:	1d03      	adds	r3, r0, #4
  1090c8:	6802      	ldr	r2, [r0, #0]
  1090ca:	e853 1f00 	ldrex	r1, [r3]
  1090ce:	428a      	cmp	r2, r1
  1090d0:	d802      	bhi.n	1090d8 <osRtxMemoryPoolAlloc+0x22>
  1090d2:	f3bf 8f2f 	clrex
  1090d6:	e004      	b.n	1090e2 <osRtxMemoryPoolAlloc+0x2c>
  1090d8:	1c48      	adds	r0, r1, #1
  1090da:	e843 0400 	strex	r4, r0, [r3]
  1090de:	b104      	cbz	r4, 1090e2 <osRtxMemoryPoolAlloc+0x2c>
  1090e0:	e7f3      	b.n	1090ca <osRtxMemoryPoolAlloc+0x14>
  1090e2:	682b      	ldr	r3, [r5, #0]
  1090e4:	428b      	cmp	r3, r1
  1090e6:	d90e      	bls.n	109106 <osRtxMemoryPoolAlloc+0x50>
  1090e8:	f105 0314 	add.w	r3, r5, #20
  1090ec:	e853 0f00 	ldrex	r0, [r3]
  1090f0:	b910      	cbnz	r0, 1090f8 <osRtxMemoryPoolAlloc+0x42>
  1090f2:	f3bf 8f2f 	clrex
  1090f6:	e004      	b.n	109102 <osRtxMemoryPoolAlloc+0x4c>
  1090f8:	6802      	ldr	r2, [r0, #0]
  1090fa:	e843 2100 	strex	r1, r2, [r3]
  1090fe:	b101      	cbz	r1, 109102 <osRtxMemoryPoolAlloc+0x4c>
  109100:	e7f4      	b.n	1090ec <osRtxMemoryPoolAlloc+0x36>
  109102:	4604      	mov	r4, r0
  109104:	e000      	b.n	109108 <osRtxMemoryPoolAlloc+0x52>
  109106:	2400      	movs	r4, #0
  109108:	4628      	mov	r0, r5
  10910a:	4621      	mov	r1, r4
  10910c:	f7ff fd2a 	bl	108b64 <EvrRtxMemoryBlockAlloc>
  109110:	4620      	mov	r0, r4
  109112:	bd38      	pop	{r3, r4, r5, pc}

00109114 <osRtxMemoryPoolFree>:
  109114:	b538      	push	{r3, r4, r5, lr}
  109116:	b128      	cbz	r0, 109124 <osRtxMemoryPoolFree+0x10>
  109118:	68c3      	ldr	r3, [r0, #12]
  10911a:	428b      	cmp	r3, r1
  10911c:	d802      	bhi.n	109124 <osRtxMemoryPoolFree+0x10>
  10911e:	6903      	ldr	r3, [r0, #16]
  109120:	4299      	cmp	r1, r3
  109122:	d306      	bcc.n	109132 <osRtxMemoryPoolFree+0x1e>
  109124:	f06f 0203 	mvn.w	r2, #3
  109128:	f7ff fd1d 	bl	108b66 <EvrRtxMemoryBlockFree>
  10912c:	f06f 0003 	mvn.w	r0, #3
  109130:	bd38      	pop	{r3, r4, r5, pc}
  109132:	1d03      	adds	r3, r0, #4
  109134:	e853 2f00 	ldrex	r2, [r3]
  109138:	b912      	cbnz	r2, 109140 <osRtxMemoryPoolFree+0x2c>
  10913a:	f3bf 8f2f 	clrex
  10913e:	e004      	b.n	10914a <osRtxMemoryPoolFree+0x36>
  109140:	1e54      	subs	r4, r2, #1
  109142:	e843 4500 	strex	r5, r4, [r3]
  109146:	b105      	cbz	r5, 10914a <osRtxMemoryPoolFree+0x36>
  109148:	e7f4      	b.n	109134 <osRtxMemoryPoolFree+0x20>
  10914a:	b182      	cbz	r2, 10916e <osRtxMemoryPoolFree+0x5a>
  10914c:	f100 0314 	add.w	r3, r0, #20
  109150:	681a      	ldr	r2, [r3, #0]
  109152:	600a      	str	r2, [r1, #0]
  109154:	f3bf 8f5f 	dmb	sy
  109158:	e853 2f00 	ldrex	r2, [r3]
  10915c:	680c      	ldr	r4, [r1, #0]
  10915e:	4294      	cmp	r4, r2
  109160:	d1f6      	bne.n	109150 <osRtxMemoryPoolFree+0x3c>
  109162:	e843 1500 	strex	r5, r1, [r3]
  109166:	b105      	cbz	r5, 10916a <osRtxMemoryPoolFree+0x56>
  109168:	e7f2      	b.n	109150 <osRtxMemoryPoolFree+0x3c>
  10916a:	2400      	movs	r4, #0
  10916c:	e001      	b.n	109172 <osRtxMemoryPoolFree+0x5e>
  10916e:	f06f 0402 	mvn.w	r4, #2
  109172:	4622      	mov	r2, r4
  109174:	f7ff fcf7 	bl	108b66 <EvrRtxMemoryBlockFree>
  109178:	4620      	mov	r0, r4
  10917a:	bd38      	pop	{r3, r4, r5, pc}

0010917c <MessageQueuePut>:
  10917c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  10917e:	b530      	push	{r4, r5, lr}
  109180:	b1a3      	cbz	r3, 1091ac <MessageQueuePut+0x30>
  109182:	78cd      	ldrb	r5, [r1, #3]
  109184:	2400      	movs	r4, #0
  109186:	78da      	ldrb	r2, [r3, #3]
  109188:	42aa      	cmp	r2, r5
  10918a:	d204      	bcs.n	109196 <MessageQueuePut+0x1a>
  10918c:	685a      	ldr	r2, [r3, #4]
  10918e:	461c      	mov	r4, r3
  109190:	b11a      	cbz	r2, 10919a <MessageQueuePut+0x1e>
  109192:	4613      	mov	r3, r2
  109194:	e7f7      	b.n	109186 <MessageQueuePut+0xa>
  109196:	461a      	mov	r2, r3
  109198:	4623      	mov	r3, r4
  10919a:	604a      	str	r2, [r1, #4]
  10919c:	608b      	str	r3, [r1, #8]
  10919e:	b10a      	cbz	r2, 1091a4 <MessageQueuePut+0x28>
  1091a0:	6091      	str	r1, [r2, #8]
  1091a2:	e000      	b.n	1091a6 <MessageQueuePut+0x2a>
  1091a4:	62c1      	str	r1, [r0, #44]	; 0x2c
  1091a6:	b123      	cbz	r3, 1091b2 <MessageQueuePut+0x36>
  1091a8:	6059      	str	r1, [r3, #4]
  1091aa:	e003      	b.n	1091b4 <MessageQueuePut+0x38>
  1091ac:	604b      	str	r3, [r1, #4]
  1091ae:	608b      	str	r3, [r1, #8]
  1091b0:	62c1      	str	r1, [r0, #44]	; 0x2c
  1091b2:	6301      	str	r1, [r0, #48]	; 0x30
  1091b4:	3028      	adds	r0, #40	; 0x28
  1091b6:	e850 3f00 	ldrex	r3, [r0]
  1091ba:	1c5a      	adds	r2, r3, #1
  1091bc:	e840 2100 	strex	r1, r2, [r0]
  1091c0:	b101      	cbz	r1, 1091c4 <MessageQueuePut+0x48>
  1091c2:	e7f8      	b.n	1091b6 <MessageQueuePut+0x3a>
  1091c4:	bd30      	pop	{r4, r5, pc}

001091c6 <MessageQueueRemove>:
  1091c6:	684b      	ldr	r3, [r1, #4]
  1091c8:	688a      	ldr	r2, [r1, #8]
  1091ca:	b10b      	cbz	r3, 1091d0 <MessageQueueRemove+0xa>
  1091cc:	609a      	str	r2, [r3, #8]
  1091ce:	e000      	b.n	1091d2 <MessageQueueRemove+0xc>
  1091d0:	62c2      	str	r2, [r0, #44]	; 0x2c
  1091d2:	688a      	ldr	r2, [r1, #8]
  1091d4:	b10a      	cbz	r2, 1091da <MessageQueueRemove+0x14>
  1091d6:	6053      	str	r3, [r2, #4]
  1091d8:	4770      	bx	lr
  1091da:	6303      	str	r3, [r0, #48]	; 0x30
  1091dc:	4770      	bx	lr
	...

001091e0 <svcRtxMessageQueueNew>:
  1091e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  1091e4:	4680      	mov	r8, r0
  1091e6:	b100      	cbz	r0, 1091ea <svcRtxMessageQueueNew+0xa>
  1091e8:	b931      	cbnz	r1, 1091f8 <svcRtxMessageQueueNew+0x18>
  1091ea:	f06f 0103 	mvn.w	r1, #3
  1091ee:	2000      	movs	r0, #0
  1091f0:	f7ff fcf2 	bl	108bd8 <EvrRtxMessageQueueError>
  1091f4:	2000      	movs	r0, #0
  1091f6:	e08e      	b.n	109316 <svcRtxMessageQueueNew+0x136>
  1091f8:	3103      	adds	r1, #3
  1091fa:	f021 0303 	bic.w	r3, r1, #3
  1091fe:	f103 090c 	add.w	r9, r3, #12
  109202:	9301      	str	r3, [sp, #4]
  109204:	fab9 f189 	clz	r1, r9
  109208:	fab0 f380 	clz	r3, r0
  10920c:	440b      	add	r3, r1
  10920e:	2b1f      	cmp	r3, #31
  109210:	ddeb      	ble.n	1091ea <svcRtxMessageQueueNew+0xa>
  109212:	fb09 fa00 	mul.w	r10, r9, r0
  109216:	b1e2      	cbz	r2, 109252 <svcRtxMessageQueueNew+0x72>
  109218:	6894      	ldr	r4, [r2, #8]
  10921a:	f8d2 b000 	ldr.w	r11, [r2]
  10921e:	6916      	ldr	r6, [r2, #16]
  109220:	6950      	ldr	r0, [r2, #20]
  109222:	b13c      	cbz	r4, 109234 <svcRtxMessageQueueNew+0x54>
  109224:	07a3      	lsls	r3, r4, #30
  109226:	d102      	bne.n	10922e <svcRtxMessageQueueNew+0x4e>
  109228:	68d3      	ldr	r3, [r2, #12]
  10922a:	2b33      	cmp	r3, #51	; 0x33
  10922c:	d805      	bhi.n	10923a <svcRtxMessageQueueNew+0x5a>
  10922e:	f06f 0108 	mvn.w	r1, #8
  109232:	e7dc      	b.n	1091ee <svcRtxMessageQueueNew+0xe>
  109234:	68d3      	ldr	r3, [r2, #12]
  109236:	2b00      	cmp	r3, #0
  109238:	d1f9      	bne.n	10922e <svcRtxMessageQueueNew+0x4e>
  10923a:	b13e      	cbz	r6, 10924c <svcRtxMessageQueueNew+0x6c>
  10923c:	f016 0303 	ands.w	r3, r6, #3
  109240:	d101      	bne.n	109246 <svcRtxMessageQueueNew+0x66>
  109242:	4582      	cmp	r10, r0
  109244:	d95f      	bls.n	109306 <svcRtxMessageQueueNew+0x126>
  109246:	f06f 0109 	mvn.w	r1, #9
  10924a:	e7d0      	b.n	1091ee <svcRtxMessageQueueNew+0xe>
  10924c:	2800      	cmp	r0, #0
  10924e:	d05e      	beq.n	10930e <svcRtxMessageQueueNew+0x12e>
  109250:	e7f9      	b.n	109246 <svcRtxMessageQueueNew+0x66>
  109252:	4693      	mov	r11, r2
  109254:	4616      	mov	r6, r2
  109256:	4b31      	ldr	r3, [pc, #196]	; (10931c <svcRtxMessageQueueNew+0x13c>)
  109258:	f8d3 00a8 	ldr.w	r0, [r3, #168]	; 0xa8
  10925c:	b110      	cbz	r0, 109264 <svcRtxMessageQueueNew+0x84>
  10925e:	f7ff ff2a 	bl	1090b6 <osRtxMemoryPoolAlloc>
  109262:	e005      	b.n	109270 <svcRtxMessageQueueNew+0x90>
  109264:	2201      	movs	r2, #1
  109266:	2134      	movs	r1, #52	; 0x34
  109268:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  10926c:	f7ff fe96 	bl	108f9c <osRtxMemoryAlloc>
  109270:	4604      	mov	r4, r0
  109272:	b920      	cbnz	r0, 10927e <svcRtxMessageQueueNew+0x9e>
  109274:	f06f 0104 	mvn.w	r1, #4
  109278:	f7ff fcae 	bl	108bd8 <EvrRtxMessageQueueError>
  10927c:	e041      	b.n	109302 <svcRtxMessageQueueNew+0x122>
  10927e:	bb26      	cbnz	r6, 1092ca <svcRtxMessageQueueNew+0xea>
  109280:	2501      	movs	r5, #1
  109282:	4f26      	ldr	r7, [pc, #152]	; (10931c <svcRtxMessageQueueNew+0x13c>)
  109284:	2200      	movs	r2, #0
  109286:	4651      	mov	r1, r10
  109288:	f8d7 0084 	ldr.w	r0, [r7, #132]	; 0x84
  10928c:	f7ff fe86 	bl	108f9c <osRtxMemoryAlloc>
  109290:	4606      	mov	r6, r0
  109292:	b990      	cbnz	r0, 1092ba <svcRtxMessageQueueNew+0xda>
  109294:	f06f 0104 	mvn.w	r1, #4
  109298:	f7ff fc9e 	bl	108bd8 <EvrRtxMessageQueueError>
  10929c:	2d00      	cmp	r5, #0
  10929e:	d0a9      	beq.n	1091f4 <svcRtxMessageQueueNew+0x14>
  1092a0:	f8d7 50a8 	ldr.w	r5, [r7, #168]	; 0xa8
  1092a4:	4621      	mov	r1, r4
  1092a6:	b11d      	cbz	r5, 1092b0 <svcRtxMessageQueueNew+0xd0>
  1092a8:	4628      	mov	r0, r5
  1092aa:	f7ff ff33 	bl	109114 <osRtxMemoryPoolFree>
  1092ae:	e7a1      	b.n	1091f4 <svcRtxMessageQueueNew+0x14>
  1092b0:	f8d7 0088 	ldr.w	r0, [r7, #136]	; 0x88
  1092b4:	f7ff fea8 	bl	109008 <osRtxMemoryFree>
  1092b8:	e79c      	b.n	1091f4 <svcRtxMessageQueueNew+0x14>
  1092ba:	4652      	mov	r2, r10
  1092bc:	2100      	movs	r1, #0
  1092be:	f006 fe32 	bl	10ff26 <memset>
  1092c2:	f045 0002 	orr.w	r0, r5, #2
  1092c6:	b2c0      	uxtb	r0, r0
  1092c8:	e000      	b.n	1092cc <svcRtxMessageQueueNew+0xec>
  1092ca:	2001      	movs	r0, #1
  1092cc:	2308      	movs	r3, #8
  1092ce:	9a01      	ldr	r2, [sp, #4]
  1092d0:	7023      	strb	r3, [r4, #0]
  1092d2:	2301      	movs	r3, #1
  1092d4:	7063      	strb	r3, [r4, #1]
  1092d6:	2300      	movs	r3, #0
  1092d8:	70a0      	strb	r0, [r4, #2]
  1092da:	60a3      	str	r3, [r4, #8]
  1092dc:	6262      	str	r2, [r4, #36]	; 0x24
  1092de:	62a3      	str	r3, [r4, #40]	; 0x28
  1092e0:	62e3      	str	r3, [r4, #44]	; 0x2c
  1092e2:	6323      	str	r3, [r4, #48]	; 0x30
  1092e4:	464a      	mov	r2, r9
  1092e6:	4633      	mov	r3, r6
  1092e8:	f8c4 b004 	str.w	r11, [r4, #4]
  1092ec:	4641      	mov	r1, r8
  1092ee:	f104 000c 	add.w	r0, r4, #12
  1092f2:	f7ff feae 	bl	109052 <osRtxMemoryPoolInit>
  1092f6:	4a0a      	ldr	r2, [pc, #40]	; (109320 <svcRtxMessageQueueNew+0x140>)
  1092f8:	4b08      	ldr	r3, [pc, #32]	; (10931c <svcRtxMessageQueueNew+0x13c>)
  1092fa:	4620      	mov	r0, r4
  1092fc:	679a      	str	r2, [r3, #120]	; 0x78
  1092fe:	f7ff fc6d 	bl	108bdc <EvrRtxMessageQueueCreated>
  109302:	4620      	mov	r0, r4
  109304:	e007      	b.n	109316 <svcRtxMessageQueueNew+0x136>
  109306:	2c00      	cmp	r4, #0
  109308:	d0a5      	beq.n	109256 <svcRtxMessageQueueNew+0x76>
  10930a:	4618      	mov	r0, r3
  10930c:	e7de      	b.n	1092cc <svcRtxMessageQueueNew+0xec>
  10930e:	2c00      	cmp	r4, #0
  109310:	d0a1      	beq.n	109256 <svcRtxMessageQueueNew+0x76>
  109312:	4605      	mov	r5, r0
  109314:	e7b5      	b.n	109282 <svcRtxMessageQueueNew+0xa2>
  109316:	b003      	add	sp, #12
  109318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10931c:	3fff40f0 	.word	0x3fff40f0
  109320:	00109421 	.word	0x00109421

00109324 <svcRtxMessageQueuePut>:
  109324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  109328:	460e      	mov	r6, r1
  10932a:	4690      	mov	r8, r2
  10932c:	461d      	mov	r5, r3
  10932e:	4604      	mov	r4, r0
  109330:	b118      	cbz	r0, 10933a <svcRtxMessageQueuePut+0x16>
  109332:	7803      	ldrb	r3, [r0, #0]
  109334:	2b08      	cmp	r3, #8
  109336:	d100      	bne.n	10933a <svcRtxMessageQueuePut+0x16>
  109338:	b941      	cbnz	r1, 10934c <svcRtxMessageQueuePut+0x28>
  10933a:	4620      	mov	r0, r4
  10933c:	f06f 0103 	mvn.w	r1, #3
  109340:	f7ff fc4a 	bl	108bd8 <EvrRtxMessageQueueError>
  109344:	f06f 0003 	mvn.w	r0, #3
  109348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10934c:	7843      	ldrb	r3, [r0, #1]
  10934e:	b923      	cbnz	r3, 10935a <svcRtxMessageQueuePut+0x36>
  109350:	f06f 0102 	mvn.w	r1, #2
  109354:	f7ff fc40 	bl	108bd8 <EvrRtxMessageQueueError>
  109358:	e05c      	b.n	109414 <svcRtxMessageQueuePut+0xf0>
  10935a:	6883      	ldr	r3, [r0, #8]
  10935c:	b303      	cbz	r3, 1093a0 <svcRtxMessageQueuePut+0x7c>
  10935e:	785b      	ldrb	r3, [r3, #1]
  109360:	2b83      	cmp	r3, #131	; 0x83
  109362:	d11d      	bne.n	1093a0 <svcRtxMessageQueuePut+0x7c>
  109364:	f7ff fc3f 	bl	108be6 <EvrRtxMessageQueueInserted>
  109368:	4620      	mov	r0, r4
  10936a:	f001 f83c 	bl	10a3e6 <osRtxThreadListGet>
  10936e:	4605      	mov	r5, r0
  109370:	2201      	movs	r2, #1
  109372:	2100      	movs	r1, #0
  109374:	f001 f992 	bl	10a69c <osRtxThreadWaitExit>
  109378:	4628      	mov	r0, r5
  10937a:	f001 f913 	bl	10a5a4 <osRtxThreadRegPtr>
  10937e:	4605      	mov	r5, r0
  109380:	6a62      	ldr	r2, [r4, #36]	; 0x24
  109382:	4631      	mov	r1, r6
  109384:	6880      	ldr	r0, [r0, #8]
  109386:	f006 fda8 	bl	10feda <memcpy>
  10938a:	68eb      	ldr	r3, [r5, #12]
  10938c:	b10b      	cbz	r3, 109392 <svcRtxMessageQueuePut+0x6e>
  10938e:	f883 8000 	strb.w	r8, [r3]
  109392:	4620      	mov	r0, r4
  109394:	68a9      	ldr	r1, [r5, #8]
  109396:	f7ff fc2b 	bl	108bf0 <EvrRtxMessageQueueRetrieved>
  10939a:	2000      	movs	r0, #0
  10939c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1093a0:	f104 000c 	add.w	r0, r4, #12
  1093a4:	f7ff fe87 	bl	1090b6 <osRtxMemoryPoolAlloc>
  1093a8:	4607      	mov	r7, r0
  1093aa:	b1b8      	cbz	r0, 1093dc <svcRtxMessageQueuePut+0xb8>
  1093ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
  1093ae:	4631      	mov	r1, r6
  1093b0:	300c      	adds	r0, #12
  1093b2:	f006 fd92 	bl	10feda <memcpy>
  1093b6:	2307      	movs	r3, #7
  1093b8:	703b      	strb	r3, [r7, #0]
  1093ba:	2500      	movs	r5, #0
  1093bc:	2301      	movs	r3, #1
  1093be:	707b      	strb	r3, [r7, #1]
  1093c0:	4639      	mov	r1, r7
  1093c2:	4620      	mov	r0, r4
  1093c4:	70bd      	strb	r5, [r7, #2]
  1093c6:	f887 8003 	strb.w	r8, [r7, #3]
  1093ca:	f7ff fed7 	bl	10917c <MessageQueuePut>
  1093ce:	4620      	mov	r0, r4
  1093d0:	4631      	mov	r1, r6
  1093d2:	f7ff fc08 	bl	108be6 <EvrRtxMessageQueueInserted>
  1093d6:	4628      	mov	r0, r5
  1093d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1093dc:	b1b5      	cbz	r5, 10940c <svcRtxMessageQueuePut+0xe8>
  1093de:	462a      	mov	r2, r5
  1093e0:	4631      	mov	r1, r6
  1093e2:	4620      	mov	r0, r4
  1093e4:	f7ff fbfc 	bl	108be0 <EvrRtxMessageQueuePutPending>
  1093e8:	4b0c      	ldr	r3, [pc, #48]	; (10941c <svcRtxMessageQueuePut+0xf8>)
  1093ea:	4620      	mov	r0, r4
  1093ec:	69d9      	ldr	r1, [r3, #28]
  1093ee:	f000 ffe7 	bl	10a3c0 <osRtxThreadListPut>
  1093f2:	4629      	mov	r1, r5
  1093f4:	2093      	movs	r0, #147	; 0x93
  1093f6:	f001 faf7 	bl	10a9e8 <osRtxThreadWaitEnter>
  1093fa:	f3ef 8309 	mrs	r3, PSP
  1093fe:	f06f 0001 	mvn.w	r0, #1
  109402:	609e      	str	r6, [r3, #8]
  109404:	f8c3 800c 	str.w	r8, [r3, #12]
  109408:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10940c:	4631      	mov	r1, r6
  10940e:	4620      	mov	r0, r4
  109410:	f7ff fbea 	bl	108be8 <EvrRtxMessageQueueNotInserted>
  109414:	f06f 0002 	mvn.w	r0, #2
  109418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10941c:	3fff40f0 	.word	0x3fff40f0

00109420 <osRtxMessageQueuePostProcess>:
  109420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  109422:	7843      	ldrb	r3, [r0, #1]
  109424:	4604      	mov	r4, r0
  109426:	2b00      	cmp	r3, #0
  109428:	d07a      	beq.n	109520 <osRtxMessageQueuePostProcess+0x100>
  10942a:	7886      	ldrb	r6, [r0, #2]
  10942c:	2e00      	cmp	r6, #0
  10942e:	d03e      	beq.n	1094ae <osRtxMessageQueuePostProcess+0x8e>
  109430:	68c5      	ldr	r5, [r0, #12]
  109432:	786b      	ldrb	r3, [r5, #1]
  109434:	2b00      	cmp	r3, #0
  109436:	d073      	beq.n	109520 <osRtxMessageQueuePostProcess+0x100>
  109438:	4601      	mov	r1, r0
  10943a:	2600      	movs	r6, #0
  10943c:	4628      	mov	r0, r5
  10943e:	f105 070c 	add.w	r7, r5, #12
  109442:	f7ff fec0 	bl	1091c6 <MessageQueueRemove>
  109446:	7066      	strb	r6, [r4, #1]
  109448:	4621      	mov	r1, r4
  10944a:	4638      	mov	r0, r7
  10944c:	f7ff fe62 	bl	109114 <osRtxMemoryPoolFree>
  109450:	68ab      	ldr	r3, [r5, #8]
  109452:	2b00      	cmp	r3, #0
  109454:	d064      	beq.n	109520 <osRtxMessageQueuePostProcess+0x100>
  109456:	785b      	ldrb	r3, [r3, #1]
  109458:	2b93      	cmp	r3, #147	; 0x93
  10945a:	d161      	bne.n	109520 <osRtxMessageQueuePostProcess+0x100>
  10945c:	4638      	mov	r0, r7
  10945e:	f7ff fe2a 	bl	1090b6 <osRtxMemoryPoolAlloc>
  109462:	4604      	mov	r4, r0
  109464:	2800      	cmp	r0, #0
  109466:	d05b      	beq.n	109520 <osRtxMessageQueuePostProcess+0x100>
  109468:	4628      	mov	r0, r5
  10946a:	f000 ffbc 	bl	10a3e6 <osRtxThreadListGet>
  10946e:	4607      	mov	r7, r0
  109470:	4632      	mov	r2, r6
  109472:	4631      	mov	r1, r6
  109474:	f001 f912 	bl	10a69c <osRtxThreadWaitExit>
  109478:	4638      	mov	r0, r7
  10947a:	f001 f893 	bl	10a5a4 <osRtxThreadRegPtr>
  10947e:	4607      	mov	r7, r0
  109480:	6a6a      	ldr	r2, [r5, #36]	; 0x24
  109482:	6881      	ldr	r1, [r0, #8]
  109484:	f104 000c 	add.w	r0, r4, #12
  109488:	f006 fd27 	bl	10feda <memcpy>
  10948c:	2307      	movs	r3, #7
  10948e:	7023      	strb	r3, [r4, #0]
  109490:	2301      	movs	r3, #1
  109492:	7063      	strb	r3, [r4, #1]
  109494:	70a6      	strb	r6, [r4, #2]
  109496:	68fb      	ldr	r3, [r7, #12]
  109498:	4621      	mov	r1, r4
  10949a:	4628      	mov	r0, r5
  10949c:	70e3      	strb	r3, [r4, #3]
  10949e:	f7ff fe6d 	bl	10917c <MessageQueuePut>
  1094a2:	68b9      	ldr	r1, [r7, #8]
  1094a4:	4628      	mov	r0, r5
  1094a6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  1094aa:	f7ff bb9c 	b.w	108be6 <EvrRtxMessageQueueInserted>
  1094ae:	6885      	ldr	r5, [r0, #8]
  1094b0:	786b      	ldrb	r3, [r5, #1]
  1094b2:	b3ab      	cbz	r3, 109520 <osRtxMessageQueuePostProcess+0x100>
  1094b4:	68ab      	ldr	r3, [r5, #8]
  1094b6:	b34b      	cbz	r3, 10950c <osRtxMessageQueuePostProcess+0xec>
  1094b8:	785b      	ldrb	r3, [r3, #1]
  1094ba:	2b83      	cmp	r3, #131	; 0x83
  1094bc:	d126      	bne.n	10950c <osRtxMessageQueuePostProcess+0xec>
  1094be:	6841      	ldr	r1, [r0, #4]
  1094c0:	4628      	mov	r0, r5
  1094c2:	f7ff fb90 	bl	108be6 <EvrRtxMessageQueueInserted>
  1094c6:	4628      	mov	r0, r5
  1094c8:	f000 ff8d 	bl	10a3e6 <osRtxThreadListGet>
  1094cc:	4607      	mov	r7, r0
  1094ce:	4632      	mov	r2, r6
  1094d0:	4631      	mov	r1, r6
  1094d2:	f001 f8e3 	bl	10a69c <osRtxThreadWaitExit>
  1094d6:	4638      	mov	r0, r7
  1094d8:	f001 f864 	bl	10a5a4 <osRtxThreadRegPtr>
  1094dc:	4606      	mov	r6, r0
  1094de:	6a6a      	ldr	r2, [r5, #36]	; 0x24
  1094e0:	f104 010c 	add.w	r1, r4, #12
  1094e4:	6880      	ldr	r0, [r0, #8]
  1094e6:	f006 fcf8 	bl	10feda <memcpy>
  1094ea:	68f3      	ldr	r3, [r6, #12]
  1094ec:	b10b      	cbz	r3, 1094f2 <osRtxMessageQueuePostProcess+0xd2>
  1094ee:	78e2      	ldrb	r2, [r4, #3]
  1094f0:	701a      	strb	r2, [r3, #0]
  1094f2:	68b1      	ldr	r1, [r6, #8]
  1094f4:	4628      	mov	r0, r5
  1094f6:	f7ff fb7b 	bl	108bf0 <EvrRtxMessageQueueRetrieved>
  1094fa:	2300      	movs	r3, #0
  1094fc:	7063      	strb	r3, [r4, #1]
  1094fe:	4621      	mov	r1, r4
  109500:	f105 000c 	add.w	r0, r5, #12
  109504:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  109508:	f7ff be04 	b.w	109114 <osRtxMemoryPoolFree>
  10950c:	6861      	ldr	r1, [r4, #4]
  10950e:	4628      	mov	r0, r5
  109510:	f7ff fb69 	bl	108be6 <EvrRtxMessageQueueInserted>
  109514:	4621      	mov	r1, r4
  109516:	4628      	mov	r0, r5
  109518:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  10951c:	f7ff be2e 	b.w	10917c <MessageQueuePut>
  109520:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00109522 <MessageQueueGet>:
  109522:	b510      	push	{r4, lr}
  109524:	f100 0328 	add.w	r3, r0, #40	; 0x28
  109528:	e853 2f00 	ldrex	r2, [r3]
  10952c:	b912      	cbnz	r2, 109534 <MessageQueueGet+0x12>
  10952e:	f3bf 8f2f 	clrex
  109532:	e004      	b.n	10953e <MessageQueueGet+0x1c>
  109534:	1e51      	subs	r1, r2, #1
  109536:	e843 1400 	strex	r4, r1, [r3]
  10953a:	b104      	cbz	r4, 10953e <MessageQueueGet+0x1c>
  10953c:	e7f4      	b.n	109528 <MessageQueueGet+0x6>
  10953e:	b90a      	cbnz	r2, 109544 <MessageQueueGet+0x22>
  109540:	2000      	movs	r0, #0
  109542:	bd10      	pop	{r4, pc}
  109544:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
  109546:	2301      	movs	r3, #1
  109548:	2800      	cmp	r0, #0
  10954a:	d0f9      	beq.n	109540 <MessageQueueGet+0x1e>
  10954c:	1c82      	adds	r2, r0, #2
  10954e:	e8d2 1f4f 	ldrexb	r1, [r2]
  109552:	e8c2 3f44 	strexb	r4, r3, [r2]
  109556:	b104      	cbz	r4, 10955a <MessageQueueGet+0x38>
  109558:	e7f9      	b.n	10954e <MessageQueueGet+0x2c>
  10955a:	f011 0fff 	tst.w	r1, #255	; 0xff
  10955e:	d001      	beq.n	109564 <MessageQueueGet+0x42>
  109560:	6880      	ldr	r0, [r0, #8]
  109562:	e7f1      	b.n	109548 <MessageQueueGet+0x26>
  109564:	bd10      	pop	{r4, pc}
	...

00109568 <svcRtxMessageQueueGet>:
  109568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  10956c:	460d      	mov	r5, r1
  10956e:	4617      	mov	r7, r2
  109570:	4698      	mov	r8, r3
  109572:	4604      	mov	r4, r0
  109574:	b118      	cbz	r0, 10957e <svcRtxMessageQueueGet+0x16>
  109576:	7803      	ldrb	r3, [r0, #0]
  109578:	2b08      	cmp	r3, #8
  10957a:	d100      	bne.n	10957e <svcRtxMessageQueueGet+0x16>
  10957c:	b941      	cbnz	r1, 109590 <svcRtxMessageQueueGet+0x28>
  10957e:	4620      	mov	r0, r4
  109580:	f06f 0103 	mvn.w	r1, #3
  109584:	f7ff fb28 	bl	108bd8 <EvrRtxMessageQueueError>
  109588:	f06f 0003 	mvn.w	r0, #3
  10958c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  109590:	7843      	ldrb	r3, [r0, #1]
  109592:	b923      	cbnz	r3, 10959e <svcRtxMessageQueueGet+0x36>
  109594:	f06f 0102 	mvn.w	r1, #2
  109598:	f7ff fb1e 	bl	108bd8 <EvrRtxMessageQueueError>
  10959c:	e03e      	b.n	10961c <svcRtxMessageQueueGet+0xb4>
  10959e:	f7ff ffc0 	bl	109522 <MessageQueueGet>
  1095a2:	4606      	mov	r6, r0
  1095a4:	b1e8      	cbz	r0, 1095e2 <svcRtxMessageQueueGet+0x7a>
  1095a6:	4601      	mov	r1, r0
  1095a8:	4620      	mov	r0, r4
  1095aa:	f7ff fe0c 	bl	1091c6 <MessageQueueRemove>
  1095ae:	6a62      	ldr	r2, [r4, #36]	; 0x24
  1095b0:	f106 010c 	add.w	r1, r6, #12
  1095b4:	4628      	mov	r0, r5
  1095b6:	f006 fc90 	bl	10feda <memcpy>
  1095ba:	b10f      	cbz	r7, 1095c0 <svcRtxMessageQueueGet+0x58>
  1095bc:	78f3      	ldrb	r3, [r6, #3]
  1095be:	703b      	strb	r3, [r7, #0]
  1095c0:	4629      	mov	r1, r5
  1095c2:	4620      	mov	r0, r4
  1095c4:	2500      	movs	r5, #0
  1095c6:	f104 070c 	add.w	r7, r4, #12
  1095ca:	f7ff fb11 	bl	108bf0 <EvrRtxMessageQueueRetrieved>
  1095ce:	7075      	strb	r5, [r6, #1]
  1095d0:	4631      	mov	r1, r6
  1095d2:	4638      	mov	r0, r7
  1095d4:	f7ff fd9e 	bl	109114 <osRtxMemoryPoolFree>
  1095d8:	68a3      	ldr	r3, [r4, #8]
  1095da:	bb1b      	cbnz	r3, 109624 <svcRtxMessageQueueGet+0xbc>
  1095dc:	2000      	movs	r0, #0
  1095de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1095e2:	f1b8 0f00 	cmp.w	r8, #0
  1095e6:	d015      	beq.n	109614 <svcRtxMessageQueueGet+0xac>
  1095e8:	4642      	mov	r2, r8
  1095ea:	4629      	mov	r1, r5
  1095ec:	4620      	mov	r0, r4
  1095ee:	f7ff fafd 	bl	108bec <EvrRtxMessageQueueGetPending>
  1095f2:	4b23      	ldr	r3, [pc, #140]	; (109680 <svcRtxMessageQueueGet+0x118>)
  1095f4:	4620      	mov	r0, r4
  1095f6:	69d9      	ldr	r1, [r3, #28]
  1095f8:	f000 fee2 	bl	10a3c0 <osRtxThreadListPut>
  1095fc:	4641      	mov	r1, r8
  1095fe:	2083      	movs	r0, #131	; 0x83
  109600:	f001 f9f2 	bl	10a9e8 <osRtxThreadWaitEnter>
  109604:	f3ef 8309 	mrs	r3, PSP
  109608:	f06f 0001 	mvn.w	r0, #1
  10960c:	609d      	str	r5, [r3, #8]
  10960e:	60df      	str	r7, [r3, #12]
  109610:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  109614:	4629      	mov	r1, r5
  109616:	4620      	mov	r0, r4
  109618:	f7ff faeb 	bl	108bf2 <EvrRtxMessageQueueNotRetrieved>
  10961c:	f06f 0002 	mvn.w	r0, #2
  109620:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  109624:	785b      	ldrb	r3, [r3, #1]
  109626:	2b93      	cmp	r3, #147	; 0x93
  109628:	d1d8      	bne.n	1095dc <svcRtxMessageQueueGet+0x74>
  10962a:	4638      	mov	r0, r7
  10962c:	f7ff fd43 	bl	1090b6 <osRtxMemoryPoolAlloc>
  109630:	4606      	mov	r6, r0
  109632:	2800      	cmp	r0, #0
  109634:	d0d2      	beq.n	1095dc <svcRtxMessageQueueGet+0x74>
  109636:	4620      	mov	r0, r4
  109638:	f000 fed5 	bl	10a3e6 <osRtxThreadListGet>
  10963c:	4607      	mov	r7, r0
  10963e:	4629      	mov	r1, r5
  109640:	2201      	movs	r2, #1
  109642:	f001 f82b 	bl	10a69c <osRtxThreadWaitExit>
  109646:	4638      	mov	r0, r7
  109648:	f000 ffac 	bl	10a5a4 <osRtxThreadRegPtr>
  10964c:	4607      	mov	r7, r0
  10964e:	6a62      	ldr	r2, [r4, #36]	; 0x24
  109650:	6881      	ldr	r1, [r0, #8]
  109652:	f106 000c 	add.w	r0, r6, #12
  109656:	f006 fc40 	bl	10feda <memcpy>
  10965a:	2307      	movs	r3, #7
  10965c:	7033      	strb	r3, [r6, #0]
  10965e:	2301      	movs	r3, #1
  109660:	7073      	strb	r3, [r6, #1]
  109662:	70b5      	strb	r5, [r6, #2]
  109664:	68fb      	ldr	r3, [r7, #12]
  109666:	4631      	mov	r1, r6
  109668:	70f3      	strb	r3, [r6, #3]
  10966a:	4620      	mov	r0, r4
  10966c:	f7ff fd86 	bl	10917c <MessageQueuePut>
  109670:	4620      	mov	r0, r4
  109672:	68b9      	ldr	r1, [r7, #8]
  109674:	f7ff fab7 	bl	108be6 <EvrRtxMessageQueueInserted>
  109678:	4628      	mov	r0, r5
  10967a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10967e:	bf00      	nop
  109680:	3fff40f0 	.word	0x3fff40f0

00109684 <osMessageQueueNew>:
  109684:	b570      	push	{r4, r5, r6, lr}
  109686:	4606      	mov	r6, r0
  109688:	460d      	mov	r5, r1
  10968a:	4614      	mov	r4, r2
  10968c:	f7ff faa5 	bl	108bda <EvrRtxMessageQueueNew>
  109690:	f3ef 8305 	mrs	r3, IPSR
  109694:	b92b      	cbnz	r3, 1096a2 <osMessageQueueNew+0x1e>
  109696:	f3ef 8310 	mrs	r3, PRIMASK
  10969a:	b913      	cbnz	r3, 1096a2 <osMessageQueueNew+0x1e>
  10969c:	f3ef 8311 	mrs	r3, BASEPRI
  1096a0:	b133      	cbz	r3, 1096b0 <osMessageQueueNew+0x2c>
  1096a2:	f06f 0105 	mvn.w	r1, #5
  1096a6:	2000      	movs	r0, #0
  1096a8:	f7ff fa96 	bl	108bd8 <EvrRtxMessageQueueError>
  1096ac:	2000      	movs	r0, #0
  1096ae:	bd70      	pop	{r4, r5, r6, pc}
  1096b0:	4630      	mov	r0, r6
  1096b2:	4629      	mov	r1, r5
  1096b4:	4622      	mov	r2, r4
  1096b6:	f8df c020 	ldr.w	r12, [pc, #32]	; 1096d8 <osMessageQueueNew+0x54>
  1096ba:	f3ef 8314 	mrs	r3, CONTROL
  1096be:	f013 0f02 	tst.w	r3, #2
  1096c2:	d106      	bne.n	1096d2 <osMessageQueueNew+0x4e>
  1096c4:	f3ef 8308 	mrs	r3, MSP
  1096c8:	3b20      	subs	r3, #32
  1096ca:	f023 0307 	bic.w	r3, r3, #7
  1096ce:	f383 8809 	msr	PSP, r3
  1096d2:	df00      	svc	0
  1096d4:	bd70      	pop	{r4, r5, r6, pc}
  1096d6:	bf00      	nop
  1096d8:	001091e1 	.word	0x001091e1

001096dc <osMessageQueuePut>:
  1096dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1096e0:	4604      	mov	r4, r0
  1096e2:	460f      	mov	r7, r1
  1096e4:	4690      	mov	r8, r2
  1096e6:	461d      	mov	r5, r3
  1096e8:	f7ff fa79 	bl	108bde <EvrRtxMessageQueuePut>
  1096ec:	f3ef 8305 	mrs	r3, IPSR
  1096f0:	b933      	cbnz	r3, 109700 <osMessageQueuePut+0x24>
  1096f2:	f3ef 8310 	mrs	r3, PRIMASK
  1096f6:	b91b      	cbnz	r3, 109700 <osMessageQueuePut+0x24>
  1096f8:	f3ef 8311 	mrs	r3, BASEPRI
  1096fc:	2b00      	cmp	r3, #0
  1096fe:	d03c      	beq.n	10977a <osMessageQueuePut+0x9e>
  109700:	b124      	cbz	r4, 10970c <osMessageQueuePut+0x30>
  109702:	7823      	ldrb	r3, [r4, #0]
  109704:	2b08      	cmp	r3, #8
  109706:	d101      	bne.n	10970c <osMessageQueuePut+0x30>
  109708:	b107      	cbz	r7, 10970c <osMessageQueuePut+0x30>
  10970a:	b145      	cbz	r5, 10971e <osMessageQueuePut+0x42>
  10970c:	4620      	mov	r0, r4
  10970e:	f06f 0103 	mvn.w	r1, #3
  109712:	f7ff fa61 	bl	108bd8 <EvrRtxMessageQueueError>
  109716:	f06f 0003 	mvn.w	r0, #3
  10971a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10971e:	7863      	ldrb	r3, [r4, #1]
  109720:	b92b      	cbnz	r3, 10972e <osMessageQueuePut+0x52>
  109722:	f06f 0102 	mvn.w	r1, #2
  109726:	4620      	mov	r0, r4
  109728:	f7ff fa56 	bl	108bd8 <EvrRtxMessageQueueError>
  10972c:	e021      	b.n	109772 <osMessageQueuePut+0x96>
  10972e:	f104 000c 	add.w	r0, r4, #12
  109732:	f7ff fcc0 	bl	1090b6 <osRtxMemoryPoolAlloc>
  109736:	4606      	mov	r6, r0
  109738:	b1b8      	cbz	r0, 10976a <osMessageQueuePut+0x8e>
  10973a:	6a62      	ldr	r2, [r4, #36]	; 0x24
  10973c:	4639      	mov	r1, r7
  10973e:	300c      	adds	r0, #12
  109740:	f006 fbcb 	bl	10feda <memcpy>
  109744:	2307      	movs	r3, #7
  109746:	7033      	strb	r3, [r6, #0]
  109748:	2301      	movs	r3, #1
  10974a:	7073      	strb	r3, [r6, #1]
  10974c:	4630      	mov	r0, r6
  10974e:	70b5      	strb	r5, [r6, #2]
  109750:	f886 8003 	strb.w	r8, [r6, #3]
  109754:	6077      	str	r7, [r6, #4]
  109756:	60b4      	str	r4, [r6, #8]
  109758:	f000 fcfc 	bl	10a154 <osRtxPostProcess>
  10975c:	4620      	mov	r0, r4
  10975e:	4639      	mov	r1, r7
  109760:	f7ff fa40 	bl	108be4 <EvrRtxMessageQueueInsertPending>
  109764:	4628      	mov	r0, r5
  109766:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10976a:	4639      	mov	r1, r7
  10976c:	4620      	mov	r0, r4
  10976e:	f7ff fa3b 	bl	108be8 <EvrRtxMessageQueueNotInserted>
  109772:	f06f 0002 	mvn.w	r0, #2
  109776:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10977a:	4620      	mov	r0, r4
  10977c:	4639      	mov	r1, r7
  10977e:	4642      	mov	r2, r8
  109780:	462b      	mov	r3, r5
  109782:	f8df c008 	ldr.w	r12, [pc, #8]	; 10978c <osMessageQueuePut+0xb0>
  109786:	df00      	svc	0
  109788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10978c:	00109325 	.word	0x00109325

00109790 <osMessageQueueGet>:
  109790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  109792:	4604      	mov	r4, r0
  109794:	460d      	mov	r5, r1
  109796:	4617      	mov	r7, r2
  109798:	461e      	mov	r6, r3
  10979a:	f7ff fa26 	bl	108bea <EvrRtxMessageQueueGet>
  10979e:	f3ef 8305 	mrs	r3, IPSR
  1097a2:	b92b      	cbnz	r3, 1097b0 <osMessageQueueGet+0x20>
  1097a4:	f3ef 8310 	mrs	r3, PRIMASK
  1097a8:	b913      	cbnz	r3, 1097b0 <osMessageQueueGet+0x20>
  1097aa:	f3ef 8311 	mrs	r3, BASEPRI
  1097ae:	b3a3      	cbz	r3, 10981a <osMessageQueueGet+0x8a>
  1097b0:	b124      	cbz	r4, 1097bc <osMessageQueueGet+0x2c>
  1097b2:	7823      	ldrb	r3, [r4, #0]
  1097b4:	2b08      	cmp	r3, #8
  1097b6:	d101      	bne.n	1097bc <osMessageQueueGet+0x2c>
  1097b8:	b105      	cbz	r5, 1097bc <osMessageQueueGet+0x2c>
  1097ba:	b13e      	cbz	r6, 1097cc <osMessageQueueGet+0x3c>
  1097bc:	4620      	mov	r0, r4
  1097be:	f06f 0103 	mvn.w	r1, #3
  1097c2:	f7ff fa09 	bl	108bd8 <EvrRtxMessageQueueError>
  1097c6:	f06f 0003 	mvn.w	r0, #3
  1097ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1097cc:	7863      	ldrb	r3, [r4, #1]
  1097ce:	b92b      	cbnz	r3, 1097dc <osMessageQueueGet+0x4c>
  1097d0:	f06f 0102 	mvn.w	r1, #2
  1097d4:	4620      	mov	r0, r4
  1097d6:	f7ff f9ff 	bl	108bd8 <EvrRtxMessageQueueError>
  1097da:	e01b      	b.n	109814 <osMessageQueueGet+0x84>
  1097dc:	4620      	mov	r0, r4
  1097de:	f7ff fea0 	bl	109522 <MessageQueueGet>
  1097e2:	4606      	mov	r6, r0
  1097e4:	b190      	cbz	r0, 10980c <osMessageQueueGet+0x7c>
  1097e6:	f100 010c 	add.w	r1, r0, #12
  1097ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
  1097ec:	4628      	mov	r0, r5
  1097ee:	f006 fb74 	bl	10feda <memcpy>
  1097f2:	b10f      	cbz	r7, 1097f8 <osMessageQueueGet+0x68>
  1097f4:	78f3      	ldrb	r3, [r6, #3]
  1097f6:	703b      	strb	r3, [r7, #0]
  1097f8:	4629      	mov	r1, r5
  1097fa:	4620      	mov	r0, r4
  1097fc:	f7ff f9f8 	bl	108bf0 <EvrRtxMessageQueueRetrieved>
  109800:	4630      	mov	r0, r6
  109802:	60f4      	str	r4, [r6, #12]
  109804:	f000 fca6 	bl	10a154 <osRtxPostProcess>
  109808:	2000      	movs	r0, #0
  10980a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10980c:	4629      	mov	r1, r5
  10980e:	4620      	mov	r0, r4
  109810:	f7ff f9ef 	bl	108bf2 <EvrRtxMessageQueueNotRetrieved>
  109814:	f06f 0002 	mvn.w	r0, #2
  109818:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10981a:	4620      	mov	r0, r4
  10981c:	4629      	mov	r1, r5
  10981e:	463a      	mov	r2, r7
  109820:	4633      	mov	r3, r6
  109822:	f8df c008 	ldr.w	r12, [pc, #8]	; 10982c <osMessageQueueGet+0x9c>
  109826:	df00      	svc	0
  109828:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10982a:	bf00      	nop
  10982c:	00109569 	.word	0x00109569

00109830 <svcRtxMutexNew>:
  109830:	b570      	push	{r4, r5, r6, lr}
  109832:	b330      	cbz	r0, 109882 <svcRtxMutexNew+0x52>
  109834:	e890 0060 	ldmia.w	r0, {r5, r6}
  109838:	6884      	ldr	r4, [r0, #8]
  10983a:	b164      	cbz	r4, 109856 <svcRtxMutexNew+0x26>
  10983c:	f014 0303 	ands.w	r3, r4, #3
  109840:	d102      	bne.n	109848 <svcRtxMutexNew+0x18>
  109842:	68c2      	ldr	r2, [r0, #12]
  109844:	2a1b      	cmp	r2, #27
  109846:	d80a      	bhi.n	10985e <svcRtxMutexNew+0x2e>
  109848:	f06f 0108 	mvn.w	r1, #8
  10984c:	2000      	movs	r0, #0
  10984e:	f7ff f9a9 	bl	108ba4 <EvrRtxMutexError>
  109852:	2000      	movs	r0, #0
  109854:	bd70      	pop	{r4, r5, r6, pc}
  109856:	68c3      	ldr	r3, [r0, #12]
  109858:	b1ab      	cbz	r3, 109886 <svcRtxMutexNew+0x56>
  10985a:	e7f5      	b.n	109848 <svcRtxMutexNew+0x18>
  10985c:	2301      	movs	r3, #1
  10985e:	2204      	movs	r2, #4
  109860:	7022      	strb	r2, [r4, #0]
  109862:	70a3      	strb	r3, [r4, #2]
  109864:	2201      	movs	r2, #1
  109866:	2300      	movs	r3, #0
  109868:	7062      	strb	r2, [r4, #1]
  10986a:	70e6      	strb	r6, [r4, #3]
  10986c:	6065      	str	r5, [r4, #4]
  10986e:	60a3      	str	r3, [r4, #8]
  109870:	60e3      	str	r3, [r4, #12]
  109872:	6123      	str	r3, [r4, #16]
  109874:	6163      	str	r3, [r4, #20]
  109876:	7623      	strb	r3, [r4, #24]
  109878:	4620      	mov	r0, r4
  10987a:	f7ff f995 	bl	108ba8 <EvrRtxMutexCreated>
  10987e:	4620      	mov	r0, r4
  109880:	bd70      	pop	{r4, r5, r6, pc}
  109882:	4605      	mov	r5, r0
  109884:	4606      	mov	r6, r0
  109886:	4b0a      	ldr	r3, [pc, #40]	; (1098b0 <svcRtxMutexNew+0x80>)
  109888:	f8d3 009c 	ldr.w	r0, [r3, #156]	; 0x9c
  10988c:	b110      	cbz	r0, 109894 <svcRtxMutexNew+0x64>
  10988e:	f7ff fc12 	bl	1090b6 <osRtxMemoryPoolAlloc>
  109892:	e005      	b.n	1098a0 <svcRtxMutexNew+0x70>
  109894:	2201      	movs	r2, #1
  109896:	211c      	movs	r1, #28
  109898:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  10989c:	f7ff fb7e 	bl	108f9c <osRtxMemoryAlloc>
  1098a0:	4604      	mov	r4, r0
  1098a2:	2800      	cmp	r0, #0
  1098a4:	d1da      	bne.n	10985c <svcRtxMutexNew+0x2c>
  1098a6:	f06f 0104 	mvn.w	r1, #4
  1098aa:	f7ff f97b 	bl	108ba4 <EvrRtxMutexError>
  1098ae:	e7e6      	b.n	10987e <svcRtxMutexNew+0x4e>
  1098b0:	3fff40f0 	.word	0x3fff40f0

001098b4 <svcRtxMutexAcquire>:
  1098b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  1098b6:	4b31      	ldr	r3, [pc, #196]	; (10997c <svcRtxMutexAcquire+0xc8>)
  1098b8:	4605      	mov	r5, r0
  1098ba:	69de      	ldr	r6, [r3, #28]
  1098bc:	460f      	mov	r7, r1
  1098be:	b936      	cbnz	r6, 1098ce <svcRtxMutexAcquire+0x1a>
  1098c0:	f06f 0107 	mvn.w	r1, #7
  1098c4:	f7ff f96e 	bl	108ba4 <EvrRtxMutexError>
  1098c8:	f04f 30ff 	mov.w	r0, #4294967295
  1098cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1098ce:	b110      	cbz	r0, 1098d6 <svcRtxMutexAcquire+0x22>
  1098d0:	7803      	ldrb	r3, [r0, #0]
  1098d2:	2b04      	cmp	r3, #4
  1098d4:	d007      	beq.n	1098e6 <svcRtxMutexAcquire+0x32>
  1098d6:	4628      	mov	r0, r5
  1098d8:	f06f 0103 	mvn.w	r1, #3
  1098dc:	f7ff f962 	bl	108ba4 <EvrRtxMutexError>
  1098e0:	f06f 0003 	mvn.w	r0, #3
  1098e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1098e6:	7843      	ldrb	r3, [r0, #1]
  1098e8:	b913      	cbnz	r3, 1098f0 <svcRtxMutexAcquire+0x3c>
  1098ea:	f06f 0102 	mvn.w	r1, #2
  1098ee:	e016      	b.n	10991e <svcRtxMutexAcquire+0x6a>
  1098f0:	7e04      	ldrb	r4, [r0, #24]
  1098f2:	b954      	cbnz	r4, 10990a <svcRtxMutexAcquire+0x56>
  1098f4:	6af3      	ldr	r3, [r6, #44]	; 0x2c
  1098f6:	2101      	movs	r1, #1
  1098f8:	60c6      	str	r6, [r0, #12]
  1098fa:	6143      	str	r3, [r0, #20]
  1098fc:	6104      	str	r4, [r0, #16]
  1098fe:	62f0      	str	r0, [r6, #44]	; 0x2c
  109900:	7601      	strb	r1, [r0, #24]
  109902:	f7ff f955 	bl	108bb0 <EvrRtxMutexAcquired>
  109906:	4620      	mov	r0, r4
  109908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10990a:	78c3      	ldrb	r3, [r0, #3]
  10990c:	07da      	lsls	r2, r3, #31
  10990e:	d510      	bpl.n	109932 <svcRtxMutexAcquire+0x7e>
  109910:	68c2      	ldr	r2, [r0, #12]
  109912:	4296      	cmp	r6, r2
  109914:	d10d      	bne.n	109932 <svcRtxMutexAcquire+0x7e>
  109916:	2cff      	cmp	r4, #255	; 0xff
  109918:	d104      	bne.n	109924 <svcRtxMutexAcquire+0x70>
  10991a:	f06f 010f 	mvn.w	r1, #15
  10991e:	f7ff f941 	bl	108ba4 <EvrRtxMutexError>
  109922:	e028      	b.n	109976 <svcRtxMutexAcquire+0xc2>
  109924:	1c61      	adds	r1, r4, #1
  109926:	b2c9      	uxtb	r1, r1
  109928:	7601      	strb	r1, [r0, #24]
  10992a:	f7ff f941 	bl	108bb0 <EvrRtxMutexAcquired>
  10992e:	2000      	movs	r0, #0
  109930:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  109932:	b1ef      	cbz	r7, 109970 <svcRtxMutexAcquire+0xbc>
  109934:	079b      	lsls	r3, r3, #30
  109936:	d50c      	bpl.n	109952 <svcRtxMutexAcquire+0x9e>
  109938:	68eb      	ldr	r3, [r5, #12]
  10993a:	f896 2020 	ldrb.w	r2, [r6, #32]
  10993e:	f993 0020 	ldrsb.w	r0, [r3, #32]
  109942:	b251      	sxtb	r1, r2
  109944:	4288      	cmp	r0, r1
  109946:	da04      	bge.n	109952 <svcRtxMutexAcquire+0x9e>
  109948:	f883 2020 	strb.w	r2, [r3, #32]
  10994c:	68e8      	ldr	r0, [r5, #12]
  10994e:	f000 fd65 	bl	10a41c <osRtxThreadListSort>
  109952:	4639      	mov	r1, r7
  109954:	4628      	mov	r0, r5
  109956:	f7ff f929 	bl	108bac <EvrRtxMutexAcquirePending>
  10995a:	4631      	mov	r1, r6
  10995c:	4628      	mov	r0, r5
  10995e:	f000 fd2f 	bl	10a3c0 <osRtxThreadListPut>
  109962:	4639      	mov	r1, r7
  109964:	2053      	movs	r0, #83	; 0x53
  109966:	f001 f83f 	bl	10a9e8 <osRtxThreadWaitEnter>
  10996a:	f06f 0001 	mvn.w	r0, #1
  10996e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  109970:	4628      	mov	r0, r5
  109972:	f7ff f91e 	bl	108bb2 <EvrRtxMutexNotAcquired>
  109976:	f06f 0002 	mvn.w	r0, #2
  10997a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10997c:	3fff40f0 	.word	0x3fff40f0

00109980 <svcRtxMutexRelease>:
  109980:	b538      	push	{r3, r4, r5, lr}
  109982:	4b35      	ldr	r3, [pc, #212]	; (109a58 <svcRtxMutexRelease+0xd8>)
  109984:	4604      	mov	r4, r0
  109986:	69dd      	ldr	r5, [r3, #28]
  109988:	b935      	cbnz	r5, 109998 <svcRtxMutexRelease+0x18>
  10998a:	f06f 0107 	mvn.w	r1, #7
  10998e:	f7ff f909 	bl	108ba4 <EvrRtxMutexError>
  109992:	f04f 30ff 	mov.w	r0, #4294967295
  109996:	bd38      	pop	{r3, r4, r5, pc}
  109998:	b110      	cbz	r0, 1099a0 <svcRtxMutexRelease+0x20>
  10999a:	7803      	ldrb	r3, [r0, #0]
  10999c:	2b04      	cmp	r3, #4
  10999e:	d007      	beq.n	1099b0 <svcRtxMutexRelease+0x30>
  1099a0:	4620      	mov	r0, r4
  1099a2:	f06f 0103 	mvn.w	r1, #3
  1099a6:	f7ff f8fd 	bl	108ba4 <EvrRtxMutexError>
  1099aa:	f06f 0003 	mvn.w	r0, #3
  1099ae:	bd38      	pop	{r3, r4, r5, pc}
  1099b0:	7843      	ldrb	r3, [r0, #1]
  1099b2:	b913      	cbnz	r3, 1099ba <svcRtxMutexRelease+0x3a>
  1099b4:	f06f 0102 	mvn.w	r1, #2
  1099b8:	e009      	b.n	1099ce <svcRtxMutexRelease+0x4e>
  1099ba:	68c3      	ldr	r3, [r0, #12]
  1099bc:	429d      	cmp	r5, r3
  1099be:	d002      	beq.n	1099c6 <svcRtxMutexRelease+0x46>
  1099c0:	f06f 010d 	mvn.w	r1, #13
  1099c4:	e003      	b.n	1099ce <svcRtxMutexRelease+0x4e>
  1099c6:	7e01      	ldrb	r1, [r0, #24]
  1099c8:	b931      	cbnz	r1, 1099d8 <svcRtxMutexRelease+0x58>
  1099ca:	f06f 010e 	mvn.w	r1, #14
  1099ce:	f7ff f8e9 	bl	108ba4 <EvrRtxMutexError>
  1099d2:	f06f 0002 	mvn.w	r0, #2
  1099d6:	bd38      	pop	{r3, r4, r5, pc}
  1099d8:	3901      	subs	r1, #1
  1099da:	b2c9      	uxtb	r1, r1
  1099dc:	7601      	strb	r1, [r0, #24]
  1099de:	f7ff f8ea 	bl	108bb6 <EvrRtxMutexReleased>
  1099e2:	7e23      	ldrb	r3, [r4, #24]
  1099e4:	2b00      	cmp	r3, #0
  1099e6:	d134      	bne.n	109a52 <svcRtxMutexRelease+0xd2>
  1099e8:	6963      	ldr	r3, [r4, #20]
  1099ea:	b10b      	cbz	r3, 1099f0 <svcRtxMutexRelease+0x70>
  1099ec:	6922      	ldr	r2, [r4, #16]
  1099ee:	611a      	str	r2, [r3, #16]
  1099f0:	6922      	ldr	r2, [r4, #16]
  1099f2:	b10a      	cbz	r2, 1099f8 <svcRtxMutexRelease+0x78>
  1099f4:	6153      	str	r3, [r2, #20]
  1099f6:	e000      	b.n	1099fa <svcRtxMutexRelease+0x7a>
  1099f8:	62eb      	str	r3, [r5, #44]	; 0x2c
  1099fa:	78e3      	ldrb	r3, [r4, #3]
  1099fc:	079b      	lsls	r3, r3, #30
  1099fe:	d510      	bpl.n	109a22 <svcRtxMutexRelease+0xa2>
  109a00:	f895 3021 	ldrb.w	r3, [r5, #33]	; 0x21
  109a04:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  109a06:	b152      	cbz	r2, 109a1e <svcRtxMutexRelease+0x9e>
  109a08:	6891      	ldr	r1, [r2, #8]
  109a0a:	b131      	cbz	r1, 109a1a <svcRtxMutexRelease+0x9a>
  109a0c:	f991 1020 	ldrsb.w	r1, [r1, #32]
  109a10:	b25b      	sxtb	r3, r3
  109a12:	428b      	cmp	r3, r1
  109a14:	bfb8      	it	lt
  109a16:	460b      	movlt	r3, r1
  109a18:	b2db      	uxtb	r3, r3
  109a1a:	6952      	ldr	r2, [r2, #20]
  109a1c:	e7f3      	b.n	109a06 <svcRtxMutexRelease+0x86>
  109a1e:	f885 3020 	strb.w	r3, [r5, #32]
  109a22:	68a3      	ldr	r3, [r4, #8]
  109a24:	b193      	cbz	r3, 109a4c <svcRtxMutexRelease+0xcc>
  109a26:	4620      	mov	r0, r4
  109a28:	f000 fcdd 	bl	10a3e6 <osRtxThreadListGet>
  109a2c:	4605      	mov	r5, r0
  109a2e:	2200      	movs	r2, #0
  109a30:	4611      	mov	r1, r2
  109a32:	f000 fe33 	bl	10a69c <osRtxThreadWaitExit>
  109a36:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
  109a38:	2101      	movs	r1, #1
  109a3a:	6163      	str	r3, [r4, #20]
  109a3c:	2300      	movs	r3, #0
  109a3e:	60e5      	str	r5, [r4, #12]
  109a40:	6123      	str	r3, [r4, #16]
  109a42:	4620      	mov	r0, r4
  109a44:	62ec      	str	r4, [r5, #44]	; 0x2c
  109a46:	7621      	strb	r1, [r4, #24]
  109a48:	f7ff f8b2 	bl	108bb0 <EvrRtxMutexAcquired>
  109a4c:	2000      	movs	r0, #0
  109a4e:	f000 fdf7 	bl	10a640 <osRtxThreadDispatch>
  109a52:	2000      	movs	r0, #0
  109a54:	bd38      	pop	{r3, r4, r5, pc}
  109a56:	bf00      	nop
  109a58:	3fff40f0 	.word	0x3fff40f0

00109a5c <svcRtxMutexDelete>:
  109a5c:	b510      	push	{r4, lr}
  109a5e:	4604      	mov	r4, r0
  109a60:	b110      	cbz	r0, 109a68 <svcRtxMutexDelete+0xc>
  109a62:	7803      	ldrb	r3, [r0, #0]
  109a64:	2b04      	cmp	r3, #4
  109a66:	d007      	beq.n	109a78 <svcRtxMutexDelete+0x1c>
  109a68:	4620      	mov	r0, r4
  109a6a:	f06f 0103 	mvn.w	r1, #3
  109a6e:	f7ff f899 	bl	108ba4 <EvrRtxMutexError>
  109a72:	f06f 0003 	mvn.w	r0, #3
  109a76:	bd10      	pop	{r4, pc}
  109a78:	7843      	ldrb	r3, [r0, #1]
  109a7a:	b933      	cbnz	r3, 109a8a <svcRtxMutexDelete+0x2e>
  109a7c:	f06f 0102 	mvn.w	r1, #2
  109a80:	f7ff f890 	bl	108ba4 <EvrRtxMutexError>
  109a84:	f06f 0002 	mvn.w	r0, #2
  109a88:	bd10      	pop	{r4, pc}
  109a8a:	2300      	movs	r3, #0
  109a8c:	7043      	strb	r3, [r0, #1]
  109a8e:	7e03      	ldrb	r3, [r0, #24]
  109a90:	2b00      	cmp	r3, #0
  109a92:	d032      	beq.n	109afa <svcRtxMutexDelete+0x9e>
  109a94:	6963      	ldr	r3, [r4, #20]
  109a96:	68c0      	ldr	r0, [r0, #12]
  109a98:	b10b      	cbz	r3, 109a9e <svcRtxMutexDelete+0x42>
  109a9a:	6922      	ldr	r2, [r4, #16]
  109a9c:	611a      	str	r2, [r3, #16]
  109a9e:	6922      	ldr	r2, [r4, #16]
  109aa0:	b10a      	cbz	r2, 109aa6 <svcRtxMutexDelete+0x4a>
  109aa2:	6153      	str	r3, [r2, #20]
  109aa4:	e000      	b.n	109aa8 <svcRtxMutexDelete+0x4c>
  109aa6:	62c3      	str	r3, [r0, #44]	; 0x2c
  109aa8:	78e3      	ldrb	r3, [r4, #3]
  109aaa:	079a      	lsls	r2, r3, #30
  109aac:	d516      	bpl.n	109adc <svcRtxMutexDelete+0x80>
  109aae:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
  109ab2:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
  109ab4:	b152      	cbz	r2, 109acc <svcRtxMutexDelete+0x70>
  109ab6:	6891      	ldr	r1, [r2, #8]
  109ab8:	b131      	cbz	r1, 109ac8 <svcRtxMutexDelete+0x6c>
  109aba:	f991 1020 	ldrsb.w	r1, [r1, #32]
  109abe:	b25b      	sxtb	r3, r3
  109ac0:	428b      	cmp	r3, r1
  109ac2:	bfb8      	it	lt
  109ac4:	460b      	movlt	r3, r1
  109ac6:	b2db      	uxtb	r3, r3
  109ac8:	6952      	ldr	r2, [r2, #20]
  109aca:	e7f3      	b.n	109ab4 <svcRtxMutexDelete+0x58>
  109acc:	f890 2020 	ldrb.w	r2, [r0, #32]
  109ad0:	4293      	cmp	r3, r2
  109ad2:	d003      	beq.n	109adc <svcRtxMutexDelete+0x80>
  109ad4:	f880 3020 	strb.w	r3, [r0, #32]
  109ad8:	f000 fca0 	bl	10a41c <osRtxThreadListSort>
  109adc:	68a3      	ldr	r3, [r4, #8]
  109ade:	b91b      	cbnz	r3, 109ae8 <svcRtxMutexDelete+0x8c>
  109ae0:	2000      	movs	r0, #0
  109ae2:	f000 fdad 	bl	10a640 <osRtxThreadDispatch>
  109ae6:	e008      	b.n	109afa <svcRtxMutexDelete+0x9e>
  109ae8:	4620      	mov	r0, r4
  109aea:	f000 fc7c 	bl	10a3e6 <osRtxThreadListGet>
  109aee:	2200      	movs	r2, #0
  109af0:	f06f 0102 	mvn.w	r1, #2
  109af4:	f000 fdd2 	bl	10a69c <osRtxThreadWaitExit>
  109af8:	e7f0      	b.n	109adc <svcRtxMutexDelete+0x80>
  109afa:	78a3      	ldrb	r3, [r4, #2]
  109afc:	07db      	lsls	r3, r3, #31
  109afe:	d50b      	bpl.n	109b18 <svcRtxMutexDelete+0xbc>
  109b00:	4b08      	ldr	r3, [pc, #32]	; (109b24 <svcRtxMutexDelete+0xc8>)
  109b02:	4621      	mov	r1, r4
  109b04:	f8d3 009c 	ldr.w	r0, [r3, #156]	; 0x9c
  109b08:	b110      	cbz	r0, 109b10 <svcRtxMutexDelete+0xb4>
  109b0a:	f7ff fb03 	bl	109114 <osRtxMemoryPoolFree>
  109b0e:	e003      	b.n	109b18 <svcRtxMutexDelete+0xbc>
  109b10:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  109b14:	f7ff fa78 	bl	109008 <osRtxMemoryFree>
  109b18:	4620      	mov	r0, r4
  109b1a:	f7ff f84e 	bl	108bba <EvrRtxMutexDestroyed>
  109b1e:	2000      	movs	r0, #0
  109b20:	bd10      	pop	{r4, pc}
  109b22:	bf00      	nop
  109b24:	3fff40f0 	.word	0x3fff40f0

00109b28 <osRtxMutexOwnerRelease>:
  109b28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  109b2c:	4604      	mov	r4, r0
  109b2e:	2600      	movs	r6, #0
  109b30:	2701      	movs	r7, #1
  109b32:	b1fc      	cbz	r4, 109b74 <osRtxMutexOwnerRelease+0x4c>
  109b34:	78e3      	ldrb	r3, [r4, #3]
  109b36:	f8d4 8014 	ldr.w	r8, [r4, #20]
  109b3a:	071b      	lsls	r3, r3, #28
  109b3c:	d518      	bpl.n	109b70 <osRtxMutexOwnerRelease+0x48>
  109b3e:	7626      	strb	r6, [r4, #24]
  109b40:	2100      	movs	r1, #0
  109b42:	4620      	mov	r0, r4
  109b44:	f7ff f837 	bl	108bb6 <EvrRtxMutexReleased>
  109b48:	68a3      	ldr	r3, [r4, #8]
  109b4a:	b18b      	cbz	r3, 109b70 <osRtxMutexOwnerRelease+0x48>
  109b4c:	4620      	mov	r0, r4
  109b4e:	f000 fc4a 	bl	10a3e6 <osRtxThreadListGet>
  109b52:	4605      	mov	r5, r0
  109b54:	2200      	movs	r2, #0
  109b56:	4611      	mov	r1, r2
  109b58:	f000 fda0 	bl	10a69c <osRtxThreadWaitExit>
  109b5c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
  109b5e:	60e5      	str	r5, [r4, #12]
  109b60:	6163      	str	r3, [r4, #20]
  109b62:	6126      	str	r6, [r4, #16]
  109b64:	2101      	movs	r1, #1
  109b66:	62ec      	str	r4, [r5, #44]	; 0x2c
  109b68:	4620      	mov	r0, r4
  109b6a:	7627      	strb	r7, [r4, #24]
  109b6c:	f7ff f820 	bl	108bb0 <EvrRtxMutexAcquired>
  109b70:	4644      	mov	r4, r8
  109b72:	e7de      	b.n	109b32 <osRtxMutexOwnerRelease+0xa>
  109b74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00109b78 <osMutexNew>:
  109b78:	b510      	push	{r4, lr}
  109b7a:	4604      	mov	r4, r0
  109b7c:	f7ff f813 	bl	108ba6 <EvrRtxMutexNew>
  109b80:	f3ef 8305 	mrs	r3, IPSR
  109b84:	b92b      	cbnz	r3, 109b92 <osMutexNew+0x1a>
  109b86:	f3ef 8310 	mrs	r3, PRIMASK
  109b8a:	b913      	cbnz	r3, 109b92 <osMutexNew+0x1a>
  109b8c:	f3ef 8311 	mrs	r3, BASEPRI
  109b90:	b133      	cbz	r3, 109ba0 <osMutexNew+0x28>
  109b92:	f06f 0105 	mvn.w	r1, #5
  109b96:	2000      	movs	r0, #0
  109b98:	f7ff f804 	bl	108ba4 <EvrRtxMutexError>
  109b9c:	2000      	movs	r0, #0
  109b9e:	bd10      	pop	{r4, pc}
  109ba0:	4620      	mov	r0, r4
  109ba2:	f8df c020 	ldr.w	r12, [pc, #32]	; 109bc4 <osMutexNew+0x4c>
  109ba6:	f3ef 8314 	mrs	r3, CONTROL
  109baa:	f013 0f02 	tst.w	r3, #2
  109bae:	d106      	bne.n	109bbe <osMutexNew+0x46>
  109bb0:	f3ef 8308 	mrs	r3, MSP
  109bb4:	3b20      	subs	r3, #32
  109bb6:	f023 0307 	bic.w	r3, r3, #7
  109bba:	f383 8809 	msr	PSP, r3
  109bbe:	df00      	svc	0
  109bc0:	bd10      	pop	{r4, pc}
  109bc2:	bf00      	nop
  109bc4:	00109831 	.word	0x00109831

00109bc8 <osMutexAcquire>:
  109bc8:	b538      	push	{r3, r4, r5, lr}
  109bca:	4604      	mov	r4, r0
  109bcc:	460d      	mov	r5, r1
  109bce:	f7fe ffec 	bl	108baa <EvrRtxMutexAcquire>
  109bd2:	f3ef 8305 	mrs	r3, IPSR
  109bd6:	b92b      	cbnz	r3, 109be4 <osMutexAcquire+0x1c>
  109bd8:	f3ef 8310 	mrs	r3, PRIMASK
  109bdc:	b913      	cbnz	r3, 109be4 <osMutexAcquire+0x1c>
  109bde:	f3ef 8311 	mrs	r3, BASEPRI
  109be2:	b13b      	cbz	r3, 109bf4 <osMutexAcquire+0x2c>
  109be4:	4620      	mov	r0, r4
  109be6:	f06f 0105 	mvn.w	r1, #5
  109bea:	f7fe ffdb 	bl	108ba4 <EvrRtxMutexError>
  109bee:	f06f 0005 	mvn.w	r0, #5
  109bf2:	bd38      	pop	{r3, r4, r5, pc}
  109bf4:	4620      	mov	r0, r4
  109bf6:	4629      	mov	r1, r5
  109bf8:	f8df c004 	ldr.w	r12, [pc, #4]	; 109c00 <osMutexAcquire+0x38>
  109bfc:	df00      	svc	0
  109bfe:	bd38      	pop	{r3, r4, r5, pc}
  109c00:	001098b5 	.word	0x001098b5

00109c04 <osMutexRelease>:
  109c04:	b510      	push	{r4, lr}
  109c06:	4604      	mov	r4, r0
  109c08:	f7fe ffd4 	bl	108bb4 <EvrRtxMutexRelease>
  109c0c:	f3ef 8305 	mrs	r3, IPSR
  109c10:	b92b      	cbnz	r3, 109c1e <osMutexRelease+0x1a>
  109c12:	f3ef 8310 	mrs	r3, PRIMASK
  109c16:	b913      	cbnz	r3, 109c1e <osMutexRelease+0x1a>
  109c18:	f3ef 8311 	mrs	r3, BASEPRI
  109c1c:	b13b      	cbz	r3, 109c2e <osMutexRelease+0x2a>
  109c1e:	4620      	mov	r0, r4
  109c20:	f06f 0105 	mvn.w	r1, #5
  109c24:	f7fe ffbe 	bl	108ba4 <EvrRtxMutexError>
  109c28:	f06f 0005 	mvn.w	r0, #5
  109c2c:	bd10      	pop	{r4, pc}
  109c2e:	4620      	mov	r0, r4
  109c30:	f8df c004 	ldr.w	r12, [pc, #4]	; 109c38 <osMutexRelease+0x34>
  109c34:	df00      	svc	0
  109c36:	bd10      	pop	{r4, pc}
  109c38:	00109981 	.word	0x00109981

00109c3c <osMutexDelete>:
  109c3c:	b510      	push	{r4, lr}
  109c3e:	4604      	mov	r4, r0
  109c40:	f7fe ffba 	bl	108bb8 <EvrRtxMutexDelete>
  109c44:	f3ef 8305 	mrs	r3, IPSR
  109c48:	b92b      	cbnz	r3, 109c56 <osMutexDelete+0x1a>
  109c4a:	f3ef 8310 	mrs	r3, PRIMASK
  109c4e:	b913      	cbnz	r3, 109c56 <osMutexDelete+0x1a>
  109c50:	f3ef 8311 	mrs	r3, BASEPRI
  109c54:	b13b      	cbz	r3, 109c66 <osMutexDelete+0x2a>
  109c56:	4620      	mov	r0, r4
  109c58:	f06f 0105 	mvn.w	r1, #5
  109c5c:	f7fe ffa2 	bl	108ba4 <EvrRtxMutexError>
  109c60:	f06f 0005 	mvn.w	r0, #5
  109c64:	bd10      	pop	{r4, pc}
  109c66:	4620      	mov	r0, r4
  109c68:	f8df c004 	ldr.w	r12, [pc, #4]	; 109c70 <osMutexDelete+0x34>
  109c6c:	df00      	svc	0
  109c6e:	bd10      	pop	{r4, pc}
  109c70:	00109a5d 	.word	0x00109a5d

00109c74 <SemaphoreTokenDecrement>:
  109c74:	f100 030c 	add.w	r3, r0, #12
  109c78:	e8d3 0f5f 	ldrexh	r0, [r3]
  109c7c:	b910      	cbnz	r0, 109c84 <SemaphoreTokenDecrement+0x10>
  109c7e:	f3bf 8f2f 	clrex
  109c82:	e004      	b.n	109c8e <SemaphoreTokenDecrement+0x1a>
  109c84:	1e42      	subs	r2, r0, #1
  109c86:	e8c3 2f51 	strexh	r1, r2, [r3]
  109c8a:	b101      	cbz	r1, 109c8e <SemaphoreTokenDecrement+0x1a>
  109c8c:	e7f4      	b.n	109c78 <SemaphoreTokenDecrement+0x4>
  109c8e:	b280      	uxth	r0, r0
  109c90:	3000      	adds	r0, #0
  109c92:	bf18      	it	ne
  109c94:	2001      	movne	r0, #1
  109c96:	4770      	bx	lr

00109c98 <SemaphoreTokenIncrement>:
  109c98:	b530      	push	{r4, r5, lr}
  109c9a:	f100 020c 	add.w	r2, r0, #12
  109c9e:	89c1      	ldrh	r1, [r0, #14]
  109ca0:	e8d2 3f5f 	ldrexh	r3, [r2]
  109ca4:	4299      	cmp	r1, r3
  109ca6:	d802      	bhi.n	109cae <SemaphoreTokenIncrement+0x16>
  109ca8:	f3bf 8f2f 	clrex
  109cac:	e004      	b.n	109cb8 <SemaphoreTokenIncrement+0x20>
  109cae:	1c5c      	adds	r4, r3, #1
  109cb0:	e8c2 4f55 	strexh	r5, r4, [r2]
  109cb4:	b105      	cbz	r5, 109cb8 <SemaphoreTokenIncrement+0x20>
  109cb6:	e7f3      	b.n	109ca0 <SemaphoreTokenIncrement+0x8>
  109cb8:	89c0      	ldrh	r0, [r0, #14]
  109cba:	b29b      	uxth	r3, r3
  109cbc:	4298      	cmp	r0, r3
  109cbe:	bf94      	ite	ls
  109cc0:	2000      	movls	r0, #0
  109cc2:	2001      	movhi	r0, #1
  109cc4:	bd30      	pop	{r4, r5, pc}
	...

00109cc8 <svcRtxSemaphoreNew>:
  109cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  109cca:	f64f 73fe 	movw	r3, #65534	; 0xfffe
  109cce:	460f      	mov	r7, r1
  109cd0:	1e41      	subs	r1, r0, #1
  109cd2:	4299      	cmp	r1, r3
  109cd4:	4605      	mov	r5, r0
  109cd6:	d801      	bhi.n	109cdc <svcRtxSemaphoreNew+0x14>
  109cd8:	42b8      	cmp	r0, r7
  109cda:	d202      	bcs.n	109ce2 <svcRtxSemaphoreNew+0x1a>
  109cdc:	f06f 0103 	mvn.w	r1, #3
  109ce0:	e00b      	b.n	109cfa <svcRtxSemaphoreNew+0x32>
  109ce2:	b32a      	cbz	r2, 109d30 <svcRtxSemaphoreNew+0x68>
  109ce4:	6894      	ldr	r4, [r2, #8]
  109ce6:	6816      	ldr	r6, [r2, #0]
  109ce8:	b164      	cbz	r4, 109d04 <svcRtxSemaphoreNew+0x3c>
  109cea:	f014 0303 	ands.w	r3, r4, #3
  109cee:	d102      	bne.n	109cf6 <svcRtxSemaphoreNew+0x2e>
  109cf0:	68d2      	ldr	r2, [r2, #12]
  109cf2:	2a0f      	cmp	r2, #15
  109cf4:	d80a      	bhi.n	109d0c <svcRtxSemaphoreNew+0x44>
  109cf6:	f06f 0108 	mvn.w	r1, #8
  109cfa:	2000      	movs	r0, #0
  109cfc:	f7fe ff5e 	bl	108bbc <EvrRtxSemaphoreError>
  109d00:	2000      	movs	r0, #0
  109d02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  109d04:	68d3      	ldr	r3, [r2, #12]
  109d06:	b1a3      	cbz	r3, 109d32 <svcRtxSemaphoreNew+0x6a>
  109d08:	e7f5      	b.n	109cf6 <svcRtxSemaphoreNew+0x2e>
  109d0a:	2301      	movs	r3, #1
  109d0c:	2205      	movs	r2, #5
  109d0e:	7022      	strb	r2, [r4, #0]
  109d10:	70a3      	strb	r3, [r4, #2]
  109d12:	2201      	movs	r2, #1
  109d14:	2300      	movs	r3, #0
  109d16:	7062      	strb	r2, [r4, #1]
  109d18:	60a3      	str	r3, [r4, #8]
  109d1a:	4a10      	ldr	r2, [pc, #64]	; (109d5c <svcRtxSemaphoreNew+0x94>)
  109d1c:	4b10      	ldr	r3, [pc, #64]	; (109d60 <svcRtxSemaphoreNew+0x98>)
  109d1e:	6066      	str	r6, [r4, #4]
  109d20:	81a7      	strh	r7, [r4, #12]
  109d22:	81e5      	strh	r5, [r4, #14]
  109d24:	4620      	mov	r0, r4
  109d26:	671a      	str	r2, [r3, #112]	; 0x70
  109d28:	f7fe ff4a 	bl	108bc0 <EvrRtxSemaphoreCreated>
  109d2c:	4620      	mov	r0, r4
  109d2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  109d30:	4616      	mov	r6, r2
  109d32:	4b0b      	ldr	r3, [pc, #44]	; (109d60 <svcRtxSemaphoreNew+0x98>)
  109d34:	f8d3 00a0 	ldr.w	r0, [r3, #160]	; 0xa0
  109d38:	b110      	cbz	r0, 109d40 <svcRtxSemaphoreNew+0x78>
  109d3a:	f7ff f9bc 	bl	1090b6 <osRtxMemoryPoolAlloc>
  109d3e:	e005      	b.n	109d4c <svcRtxSemaphoreNew+0x84>
  109d40:	2201      	movs	r2, #1
  109d42:	2110      	movs	r1, #16
  109d44:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  109d48:	f7ff f928 	bl	108f9c <osRtxMemoryAlloc>
  109d4c:	4604      	mov	r4, r0
  109d4e:	2800      	cmp	r0, #0
  109d50:	d1db      	bne.n	109d0a <svcRtxSemaphoreNew+0x42>
  109d52:	f06f 0104 	mvn.w	r1, #4
  109d56:	f7fe ff31 	bl	108bbc <EvrRtxSemaphoreError>
  109d5a:	e7e7      	b.n	109d2c <svcRtxSemaphoreNew+0x64>
  109d5c:	00109de1 	.word	0x00109de1
  109d60:	3fff40f0 	.word	0x3fff40f0

00109d64 <svcRtxSemaphoreDelete>:
  109d64:	b510      	push	{r4, lr}
  109d66:	4604      	mov	r4, r0
  109d68:	b110      	cbz	r0, 109d70 <svcRtxSemaphoreDelete+0xc>
  109d6a:	7803      	ldrb	r3, [r0, #0]
  109d6c:	2b05      	cmp	r3, #5
  109d6e:	d007      	beq.n	109d80 <svcRtxSemaphoreDelete+0x1c>
  109d70:	4620      	mov	r0, r4
  109d72:	f06f 0103 	mvn.w	r1, #3
  109d76:	f7fe ff21 	bl	108bbc <EvrRtxSemaphoreError>
  109d7a:	f06f 0003 	mvn.w	r0, #3
  109d7e:	bd10      	pop	{r4, pc}
  109d80:	7843      	ldrb	r3, [r0, #1]
  109d82:	b933      	cbnz	r3, 109d92 <svcRtxSemaphoreDelete+0x2e>
  109d84:	f06f 0102 	mvn.w	r1, #2
  109d88:	f7fe ff18 	bl	108bbc <EvrRtxSemaphoreError>
  109d8c:	f06f 0002 	mvn.w	r0, #2
  109d90:	bd10      	pop	{r4, pc}
  109d92:	2300      	movs	r3, #0
  109d94:	7043      	strb	r3, [r0, #1]
  109d96:	6883      	ldr	r3, [r0, #8]
  109d98:	b163      	cbz	r3, 109db4 <svcRtxSemaphoreDelete+0x50>
  109d9a:	4620      	mov	r0, r4
  109d9c:	f000 fb23 	bl	10a3e6 <osRtxThreadListGet>
  109da0:	2200      	movs	r2, #0
  109da2:	f06f 0102 	mvn.w	r1, #2
  109da6:	f000 fc79 	bl	10a69c <osRtxThreadWaitExit>
  109daa:	68a0      	ldr	r0, [r4, #8]
  109dac:	2800      	cmp	r0, #0
  109dae:	d1f4      	bne.n	109d9a <svcRtxSemaphoreDelete+0x36>
  109db0:	f000 fc46 	bl	10a640 <osRtxThreadDispatch>
  109db4:	78a3      	ldrb	r3, [r4, #2]
  109db6:	07db      	lsls	r3, r3, #31
  109db8:	d50b      	bpl.n	109dd2 <svcRtxSemaphoreDelete+0x6e>
  109dba:	4b08      	ldr	r3, [pc, #32]	; (109ddc <svcRtxSemaphoreDelete+0x78>)
  109dbc:	4621      	mov	r1, r4
  109dbe:	f8d3 00a0 	ldr.w	r0, [r3, #160]	; 0xa0
  109dc2:	b110      	cbz	r0, 109dca <svcRtxSemaphoreDelete+0x66>
  109dc4:	f7ff f9a6 	bl	109114 <osRtxMemoryPoolFree>
  109dc8:	e003      	b.n	109dd2 <svcRtxSemaphoreDelete+0x6e>
  109dca:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  109dce:	f7ff f91b 	bl	109008 <osRtxMemoryFree>
  109dd2:	4620      	mov	r0, r4
  109dd4:	f7fe fefe 	bl	108bd4 <EvrRtxSemaphoreDestroyed>
  109dd8:	2000      	movs	r0, #0
  109dda:	bd10      	pop	{r4, pc}
  109ddc:	3fff40f0 	.word	0x3fff40f0

00109de0 <osRtxSemaphorePostProcess>:
  109de0:	b510      	push	{r4, lr}
  109de2:	7843      	ldrb	r3, [r0, #1]
  109de4:	4604      	mov	r4, r0
  109de6:	b183      	cbz	r3, 109e0a <osRtxSemaphorePostProcess+0x2a>
  109de8:	6883      	ldr	r3, [r0, #8]
  109dea:	b173      	cbz	r3, 109e0a <osRtxSemaphorePostProcess+0x2a>
  109dec:	f7ff ff42 	bl	109c74 <SemaphoreTokenDecrement>
  109df0:	b158      	cbz	r0, 109e0a <osRtxSemaphorePostProcess+0x2a>
  109df2:	4620      	mov	r0, r4
  109df4:	f000 faf7 	bl	10a3e6 <osRtxThreadListGet>
  109df8:	2200      	movs	r2, #0
  109dfa:	4611      	mov	r1, r2
  109dfc:	f000 fc4e 	bl	10a69c <osRtxThreadWaitExit>
  109e00:	4620      	mov	r0, r4
  109e02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  109e06:	f7fe bedf 	b.w	108bc8 <EvrRtxSemaphoreAcquired>
  109e0a:	bd10      	pop	{r4, pc}

00109e0c <svcRtxSemaphoreAcquire>:
  109e0c:	b538      	push	{r3, r4, r5, lr}
  109e0e:	460d      	mov	r5, r1
  109e10:	4604      	mov	r4, r0
  109e12:	b110      	cbz	r0, 109e1a <svcRtxSemaphoreAcquire+0xe>
  109e14:	7803      	ldrb	r3, [r0, #0]
  109e16:	2b05      	cmp	r3, #5
  109e18:	d007      	beq.n	109e2a <svcRtxSemaphoreAcquire+0x1e>
  109e1a:	4620      	mov	r0, r4
  109e1c:	f06f 0103 	mvn.w	r1, #3
  109e20:	f7fe fecc 	bl	108bbc <EvrRtxSemaphoreError>
  109e24:	f06f 0003 	mvn.w	r0, #3
  109e28:	bd38      	pop	{r3, r4, r5, pc}
  109e2a:	7843      	ldrb	r3, [r0, #1]
  109e2c:	b923      	cbnz	r3, 109e38 <svcRtxSemaphoreAcquire+0x2c>
  109e2e:	f06f 0102 	mvn.w	r1, #2
  109e32:	f7fe fec3 	bl	108bbc <EvrRtxSemaphoreError>
  109e36:	e016      	b.n	109e66 <svcRtxSemaphoreAcquire+0x5a>
  109e38:	f7ff ff1c 	bl	109c74 <SemaphoreTokenDecrement>
  109e3c:	b9b0      	cbnz	r0, 109e6c <svcRtxSemaphoreAcquire+0x60>
  109e3e:	b17d      	cbz	r5, 109e60 <svcRtxSemaphoreAcquire+0x54>
  109e40:	4629      	mov	r1, r5
  109e42:	4620      	mov	r0, r4
  109e44:	f7fe febe 	bl	108bc4 <EvrRtxSemaphoreAcquirePending>
  109e48:	4b0b      	ldr	r3, [pc, #44]	; (109e78 <svcRtxSemaphoreAcquire+0x6c>)
  109e4a:	4620      	mov	r0, r4
  109e4c:	69d9      	ldr	r1, [r3, #28]
  109e4e:	f000 fab7 	bl	10a3c0 <osRtxThreadListPut>
  109e52:	4629      	mov	r1, r5
  109e54:	2063      	movs	r0, #99	; 0x63
  109e56:	f000 fdc7 	bl	10a9e8 <osRtxThreadWaitEnter>
  109e5a:	f06f 0001 	mvn.w	r0, #1
  109e5e:	bd38      	pop	{r3, r4, r5, pc}
  109e60:	4620      	mov	r0, r4
  109e62:	f7fe feb2 	bl	108bca <EvrRtxSemaphoreNotAcquired>
  109e66:	f06f 0002 	mvn.w	r0, #2
  109e6a:	bd38      	pop	{r3, r4, r5, pc}
  109e6c:	4620      	mov	r0, r4
  109e6e:	f7fe feab 	bl	108bc8 <EvrRtxSemaphoreAcquired>
  109e72:	2000      	movs	r0, #0
  109e74:	bd38      	pop	{r3, r4, r5, pc}
  109e76:	bf00      	nop
  109e78:	3fff40f0 	.word	0x3fff40f0

00109e7c <svcRtxSemaphoreRelease>:
  109e7c:	b538      	push	{r3, r4, r5, lr}
  109e7e:	4605      	mov	r5, r0
  109e80:	b110      	cbz	r0, 109e88 <svcRtxSemaphoreRelease+0xc>
  109e82:	7803      	ldrb	r3, [r0, #0]
  109e84:	2b05      	cmp	r3, #5
  109e86:	d007      	beq.n	109e98 <svcRtxSemaphoreRelease+0x1c>
  109e88:	4628      	mov	r0, r5
  109e8a:	f06f 0103 	mvn.w	r1, #3
  109e8e:	f7fe fe95 	bl	108bbc <EvrRtxSemaphoreError>
  109e92:	f06f 0003 	mvn.w	r0, #3
  109e96:	bd38      	pop	{r3, r4, r5, pc}
  109e98:	7843      	ldrb	r3, [r0, #1]
  109e9a:	b913      	cbnz	r3, 109ea2 <svcRtxSemaphoreRelease+0x26>
  109e9c:	f06f 0102 	mvn.w	r1, #2
  109ea0:	e015      	b.n	109ece <svcRtxSemaphoreRelease+0x52>
  109ea2:	6884      	ldr	r4, [r0, #8]
  109ea4:	b16c      	cbz	r4, 109ec2 <svcRtxSemaphoreRelease+0x46>
  109ea6:	f7fe fe92 	bl	108bce <EvrRtxSemaphoreReleased>
  109eaa:	4628      	mov	r0, r5
  109eac:	f000 fa9b 	bl	10a3e6 <osRtxThreadListGet>
  109eb0:	2201      	movs	r2, #1
  109eb2:	2100      	movs	r1, #0
  109eb4:	f000 fbf2 	bl	10a69c <osRtxThreadWaitExit>
  109eb8:	4628      	mov	r0, r5
  109eba:	f7fe fe85 	bl	108bc8 <EvrRtxSemaphoreAcquired>
  109ebe:	2000      	movs	r0, #0
  109ec0:	bd38      	pop	{r3, r4, r5, pc}
  109ec2:	f7ff fee9 	bl	109c98 <SemaphoreTokenIncrement>
  109ec6:	b938      	cbnz	r0, 109ed8 <svcRtxSemaphoreRelease+0x5c>
  109ec8:	4628      	mov	r0, r5
  109eca:	f06f 0110 	mvn.w	r1, #16
  109ece:	f7fe fe75 	bl	108bbc <EvrRtxSemaphoreError>
  109ed2:	f06f 0002 	mvn.w	r0, #2
  109ed6:	bd38      	pop	{r3, r4, r5, pc}
  109ed8:	4628      	mov	r0, r5
  109eda:	f7fe fe78 	bl	108bce <EvrRtxSemaphoreReleased>
  109ede:	4620      	mov	r0, r4
  109ee0:	bd38      	pop	{r3, r4, r5, pc}

00109ee2 <svcRtxSemaphoreGetCount>:
  109ee2:	b510      	push	{r4, lr}
  109ee4:	4604      	mov	r4, r0
  109ee6:	b110      	cbz	r0, 109eee <svcRtxSemaphoreGetCount+0xc>
  109ee8:	7803      	ldrb	r3, [r0, #0]
  109eea:	2b05      	cmp	r3, #5
  109eec:	d005      	beq.n	109efa <svcRtxSemaphoreGetCount+0x18>
  109eee:	4620      	mov	r0, r4
  109ef0:	2100      	movs	r1, #0
  109ef2:	f7fe fe6d 	bl	108bd0 <EvrRtxSemaphoreGetCount>
  109ef6:	2000      	movs	r0, #0
  109ef8:	bd10      	pop	{r4, pc}
  109efa:	7843      	ldrb	r3, [r0, #1]
  109efc:	2b00      	cmp	r3, #0
  109efe:	d0f6      	beq.n	109eee <svcRtxSemaphoreGetCount+0xc>
  109f00:	8981      	ldrh	r1, [r0, #12]
  109f02:	f7fe fe65 	bl	108bd0 <EvrRtxSemaphoreGetCount>
  109f06:	89a0      	ldrh	r0, [r4, #12]
  109f08:	bd10      	pop	{r4, pc}
	...

00109f0c <osSemaphoreNew>:
  109f0c:	b570      	push	{r4, r5, r6, lr}
  109f0e:	4606      	mov	r6, r0
  109f10:	460d      	mov	r5, r1
  109f12:	4614      	mov	r4, r2
  109f14:	f7fe fe53 	bl	108bbe <EvrRtxSemaphoreNew>
  109f18:	f3ef 8305 	mrs	r3, IPSR
  109f1c:	b92b      	cbnz	r3, 109f2a <osSemaphoreNew+0x1e>
  109f1e:	f3ef 8310 	mrs	r3, PRIMASK
  109f22:	b913      	cbnz	r3, 109f2a <osSemaphoreNew+0x1e>
  109f24:	f3ef 8311 	mrs	r3, BASEPRI
  109f28:	b133      	cbz	r3, 109f38 <osSemaphoreNew+0x2c>
  109f2a:	f06f 0105 	mvn.w	r1, #5
  109f2e:	2000      	movs	r0, #0
  109f30:	f7fe fe44 	bl	108bbc <EvrRtxSemaphoreError>
  109f34:	2000      	movs	r0, #0
  109f36:	bd70      	pop	{r4, r5, r6, pc}
  109f38:	4630      	mov	r0, r6
  109f3a:	4629      	mov	r1, r5
  109f3c:	4622      	mov	r2, r4
  109f3e:	f8df c020 	ldr.w	r12, [pc, #32]	; 109f60 <osSemaphoreNew+0x54>
  109f42:	f3ef 8314 	mrs	r3, CONTROL
  109f46:	f013 0f02 	tst.w	r3, #2
  109f4a:	d106      	bne.n	109f5a <osSemaphoreNew+0x4e>
  109f4c:	f3ef 8308 	mrs	r3, MSP
  109f50:	3b20      	subs	r3, #32
  109f52:	f023 0307 	bic.w	r3, r3, #7
  109f56:	f383 8809 	msr	PSP, r3
  109f5a:	df00      	svc	0
  109f5c:	bd70      	pop	{r4, r5, r6, pc}
  109f5e:	bf00      	nop
  109f60:	00109cc9 	.word	0x00109cc9

00109f64 <osSemaphoreAcquire>:
  109f64:	b538      	push	{r3, r4, r5, lr}
  109f66:	4605      	mov	r5, r0
  109f68:	460c      	mov	r4, r1
  109f6a:	f7fe fe2a 	bl	108bc2 <EvrRtxSemaphoreAcquire>
  109f6e:	f3ef 8305 	mrs	r3, IPSR
  109f72:	b92b      	cbnz	r3, 109f80 <osSemaphoreAcquire+0x1c>
  109f74:	f3ef 8310 	mrs	r3, PRIMASK
  109f78:	b913      	cbnz	r3, 109f80 <osSemaphoreAcquire+0x1c>
  109f7a:	f3ef 8311 	mrs	r3, BASEPRI
  109f7e:	b31b      	cbz	r3, 109fc8 <osSemaphoreAcquire+0x64>
  109f80:	b11d      	cbz	r5, 109f8a <osSemaphoreAcquire+0x26>
  109f82:	782b      	ldrb	r3, [r5, #0]
  109f84:	2b05      	cmp	r3, #5
  109f86:	d100      	bne.n	109f8a <osSemaphoreAcquire+0x26>
  109f88:	b13c      	cbz	r4, 109f9a <osSemaphoreAcquire+0x36>
  109f8a:	4628      	mov	r0, r5
  109f8c:	f06f 0103 	mvn.w	r1, #3
  109f90:	f7fe fe14 	bl	108bbc <EvrRtxSemaphoreError>
  109f94:	f06f 0003 	mvn.w	r0, #3
  109f98:	bd38      	pop	{r3, r4, r5, pc}
  109f9a:	786b      	ldrb	r3, [r5, #1]
  109f9c:	b92b      	cbnz	r3, 109faa <osSemaphoreAcquire+0x46>
  109f9e:	f06f 0102 	mvn.w	r1, #2
  109fa2:	4628      	mov	r0, r5
  109fa4:	f7fe fe0a 	bl	108bbc <EvrRtxSemaphoreError>
  109fa8:	e006      	b.n	109fb8 <osSemaphoreAcquire+0x54>
  109faa:	4628      	mov	r0, r5
  109fac:	f7ff fe62 	bl	109c74 <SemaphoreTokenDecrement>
  109fb0:	b928      	cbnz	r0, 109fbe <osSemaphoreAcquire+0x5a>
  109fb2:	4628      	mov	r0, r5
  109fb4:	f7fe fe09 	bl	108bca <EvrRtxSemaphoreNotAcquired>
  109fb8:	f06f 0002 	mvn.w	r0, #2
  109fbc:	bd38      	pop	{r3, r4, r5, pc}
  109fbe:	4628      	mov	r0, r5
  109fc0:	f7fe fe02 	bl	108bc8 <EvrRtxSemaphoreAcquired>
  109fc4:	4620      	mov	r0, r4
  109fc6:	bd38      	pop	{r3, r4, r5, pc}
  109fc8:	4628      	mov	r0, r5
  109fca:	4621      	mov	r1, r4
  109fcc:	f8df c004 	ldr.w	r12, [pc, #4]	; 109fd4 <osSemaphoreAcquire+0x70>
  109fd0:	df00      	svc	0
  109fd2:	bd38      	pop	{r3, r4, r5, pc}
  109fd4:	00109e0d 	.word	0x00109e0d

00109fd8 <osSemaphoreRelease>:
  109fd8:	b510      	push	{r4, lr}
  109fda:	4604      	mov	r4, r0
  109fdc:	f7fe fdf6 	bl	108bcc <EvrRtxSemaphoreRelease>
  109fe0:	f3ef 8305 	mrs	r3, IPSR
  109fe4:	b92b      	cbnz	r3, 109ff2 <osSemaphoreRelease+0x1a>
  109fe6:	f3ef 8310 	mrs	r3, PRIMASK
  109fea:	b913      	cbnz	r3, 109ff2 <osSemaphoreRelease+0x1a>
  109fec:	f3ef 8311 	mrs	r3, BASEPRI
  109ff0:	b323      	cbz	r3, 10a03c <osSemaphoreRelease+0x64>
  109ff2:	b114      	cbz	r4, 109ffa <osSemaphoreRelease+0x22>
  109ff4:	7823      	ldrb	r3, [r4, #0]
  109ff6:	2b05      	cmp	r3, #5
  109ff8:	d007      	beq.n	10a00a <osSemaphoreRelease+0x32>
  109ffa:	4620      	mov	r0, r4
  109ffc:	f06f 0103 	mvn.w	r1, #3
  10a000:	f7fe fddc 	bl	108bbc <EvrRtxSemaphoreError>
  10a004:	f06f 0003 	mvn.w	r0, #3
  10a008:	bd10      	pop	{r4, pc}
  10a00a:	7863      	ldrb	r3, [r4, #1]
  10a00c:	b913      	cbnz	r3, 10a014 <osSemaphoreRelease+0x3c>
  10a00e:	f06f 0102 	mvn.w	r1, #2
  10a012:	e00d      	b.n	10a030 <osSemaphoreRelease+0x58>
  10a014:	4620      	mov	r0, r4
  10a016:	f7ff fe3f 	bl	109c98 <SemaphoreTokenIncrement>
  10a01a:	b138      	cbz	r0, 10a02c <osSemaphoreRelease+0x54>
  10a01c:	4620      	mov	r0, r4
  10a01e:	f000 f899 	bl	10a154 <osRtxPostProcess>
  10a022:	4620      	mov	r0, r4
  10a024:	f7fe fdd3 	bl	108bce <EvrRtxSemaphoreReleased>
  10a028:	2000      	movs	r0, #0
  10a02a:	bd10      	pop	{r4, pc}
  10a02c:	f06f 0110 	mvn.w	r1, #16
  10a030:	4620      	mov	r0, r4
  10a032:	f7fe fdc3 	bl	108bbc <EvrRtxSemaphoreError>
  10a036:	f06f 0002 	mvn.w	r0, #2
  10a03a:	bd10      	pop	{r4, pc}
  10a03c:	4620      	mov	r0, r4
  10a03e:	f8df c008 	ldr.w	r12, [pc, #8]	; 10a048 <osSemaphoreRelease+0x70>
  10a042:	df00      	svc	0
  10a044:	bd10      	pop	{r4, pc}
  10a046:	bf00      	nop
  10a048:	00109e7d 	.word	0x00109e7d

0010a04c <osSemaphoreGetCount>:
  10a04c:	4603      	mov	r3, r0
  10a04e:	f3ef 8205 	mrs	r2, IPSR
  10a052:	b92a      	cbnz	r2, 10a060 <osSemaphoreGetCount+0x14>
  10a054:	f3ef 8210 	mrs	r2, PRIMASK
  10a058:	b912      	cbnz	r2, 10a060 <osSemaphoreGetCount+0x14>
  10a05a:	f3ef 8211 	mrs	r2, BASEPRI
  10a05e:	b112      	cbz	r2, 10a066 <osSemaphoreGetCount+0x1a>
  10a060:	4618      	mov	r0, r3
  10a062:	f7ff bf3e 	b.w	109ee2 <svcRtxSemaphoreGetCount>
  10a066:	f8df c008 	ldr.w	r12, [pc, #8]	; 10a070 <osSemaphoreGetCount+0x24>
  10a06a:	df00      	svc	0
  10a06c:	4770      	bx	lr
  10a06e:	bf00      	nop
  10a070:	00109ee3 	.word	0x00109ee3

0010a074 <osSemaphoreDelete>:
  10a074:	b510      	push	{r4, lr}
  10a076:	4604      	mov	r4, r0
  10a078:	f7fe fdab 	bl	108bd2 <EvrRtxSemaphoreDelete>
  10a07c:	f3ef 8305 	mrs	r3, IPSR
  10a080:	b92b      	cbnz	r3, 10a08e <osSemaphoreDelete+0x1a>
  10a082:	f3ef 8310 	mrs	r3, PRIMASK
  10a086:	b913      	cbnz	r3, 10a08e <osSemaphoreDelete+0x1a>
  10a088:	f3ef 8311 	mrs	r3, BASEPRI
  10a08c:	b13b      	cbz	r3, 10a09e <osSemaphoreDelete+0x2a>
  10a08e:	4620      	mov	r0, r4
  10a090:	f06f 0105 	mvn.w	r1, #5
  10a094:	f7fe fd92 	bl	108bbc <EvrRtxSemaphoreError>
  10a098:	f06f 0005 	mvn.w	r0, #5
  10a09c:	bd10      	pop	{r4, pc}
  10a09e:	4620      	mov	r0, r4
  10a0a0:	f8df c004 	ldr.w	r12, [pc, #4]	; 10a0a8 <osSemaphoreDelete+0x34>
  10a0a4:	df00      	svc	0
  10a0a6:	bd10      	pop	{r4, pc}
  10a0a8:	00109d65 	.word	0x00109d65

0010a0ac <atomic_inc16_lim>:
  10a0ac:	b510      	push	{r4, lr}
  10a0ae:	e8d0 3f5f 	ldrexh	r3, [r0]
  10a0b2:	1c5a      	adds	r2, r3, #1
  10a0b4:	4291      	cmp	r1, r2
  10a0b6:	d800      	bhi.n	10a0ba <atomic_inc16_lim+0xe>
  10a0b8:	2200      	movs	r2, #0
  10a0ba:	e8c0 2f54 	strexh	r4, r2, [r0]
  10a0be:	b104      	cbz	r4, 10a0c2 <atomic_inc16_lim+0x16>
  10a0c0:	e7f5      	b.n	10a0ae <atomic_inc16_lim+0x2>
  10a0c2:	b298      	uxth	r0, r3
  10a0c4:	bd10      	pop	{r4, pc}
	...

0010a0c8 <osRtxPendSV_Handler>:
  10a0c8:	b570      	push	{r4, r5, r6, lr}
  10a0ca:	4d1f      	ldr	r5, [pc, #124]	; (10a148 <osRtxPendSV_Handler+0x80>)
  10a0cc:	462c      	mov	r4, r5
  10a0ce:	4e1f      	ldr	r6, [pc, #124]	; (10a14c <osRtxPendSV_Handler+0x84>)
  10a0d0:	f8b5 105c 	ldrh.w	r1, [r5, #92]	; 0x5c
  10a0d4:	e8d6 3f5f 	ldrexh	r3, [r6]
  10a0d8:	b913      	cbnz	r3, 10a0e0 <osRtxPendSV_Handler+0x18>
  10a0da:	f3bf 8f2f 	clrex
  10a0de:	e004      	b.n	10a0ea <osRtxPendSV_Handler+0x22>
  10a0e0:	1e5a      	subs	r2, r3, #1
  10a0e2:	e8c6 2f50 	strexh	r0, r2, [r6]
  10a0e6:	b100      	cbz	r0, 10a0ea <osRtxPendSV_Handler+0x22>
  10a0e8:	e7f4      	b.n	10a0d4 <osRtxPendSV_Handler+0xc>
  10a0ea:	b29b      	uxth	r3, r3
  10a0ec:	b33b      	cbz	r3, 10a13e <osRtxPendSV_Handler+0x76>
  10a0ee:	4818      	ldr	r0, [pc, #96]	; (10a150 <osRtxPendSV_Handler+0x88>)
  10a0f0:	f7ff ffdc 	bl	10a0ac <atomic_inc16_lim>
  10a0f4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  10a0f6:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
  10a0fa:	b300      	cbz	r0, 10a13e <osRtxPendSV_Handler+0x76>
  10a0fc:	7803      	ldrb	r3, [r0, #0]
  10a0fe:	3b01      	subs	r3, #1
  10a100:	2b06      	cmp	r3, #6
  10a102:	d8e5      	bhi.n	10a0d0 <osRtxPendSV_Handler+0x8>
  10a104:	a201      	add	r2, pc, #4	; (adr r2, 10a10c <osRtxPendSV_Handler+0x44>)
  10a106:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  10a10a:	bf00      	nop
  10a10c:	0010a129 	.word	0x0010a129
  10a110:	0010a0d1 	.word	0x0010a0d1
  10a114:	0010a12d 	.word	0x0010a12d
  10a118:	0010a0d1 	.word	0x0010a0d1
  10a11c:	0010a131 	.word	0x0010a131
  10a120:	0010a135 	.word	0x0010a135
  10a124:	0010a139 	.word	0x0010a139
  10a128:	6ea3      	ldr	r3, [r4, #104]	; 0x68
  10a12a:	e006      	b.n	10a13a <osRtxPendSV_Handler+0x72>
  10a12c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
  10a12e:	e004      	b.n	10a13a <osRtxPendSV_Handler+0x72>
  10a130:	6f23      	ldr	r3, [r4, #112]	; 0x70
  10a132:	e002      	b.n	10a13a <osRtxPendSV_Handler+0x72>
  10a134:	6f63      	ldr	r3, [r4, #116]	; 0x74
  10a136:	e000      	b.n	10a13a <osRtxPendSV_Handler+0x72>
  10a138:	6fa3      	ldr	r3, [r4, #120]	; 0x78
  10a13a:	4798      	blx	r3
  10a13c:	e7c7      	b.n	10a0ce <osRtxPendSV_Handler+0x6>
  10a13e:	2000      	movs	r0, #0
  10a140:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10a144:	f000 ba7c 	b.w	10a640 <osRtxThreadDispatch>
  10a148:	3fff40f0 	.word	0x3fff40f0
  10a14c:	3fff414e 	.word	0x3fff414e
  10a150:	3fff4152 	.word	0x3fff4152

0010a154 <osRtxPostProcess>:
  10a154:	b570      	push	{r4, r5, r6, lr}
  10a156:	4c16      	ldr	r4, [pc, #88]	; (10a1b0 <osRtxPostProcess+0x5c>)
  10a158:	4605      	mov	r5, r0
  10a15a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
  10a15e:	f104 025e 	add.w	r2, r4, #94	; 0x5e
  10a162:	e8d2 3f5f 	ldrexh	r3, [r2]
  10a166:	4299      	cmp	r1, r3
  10a168:	d802      	bhi.n	10a170 <osRtxPostProcess+0x1c>
  10a16a:	f3bf 8f2f 	clrex
  10a16e:	e004      	b.n	10a17a <osRtxPostProcess+0x26>
  10a170:	1c58      	adds	r0, r3, #1
  10a172:	e8c2 0f56 	strexh	r6, r0, [r2]
  10a176:	b106      	cbz	r6, 10a17a <osRtxPostProcess+0x26>
  10a178:	e7f3      	b.n	10a162 <osRtxPostProcess+0xe>
  10a17a:	b29b      	uxth	r3, r3
  10a17c:	428b      	cmp	r3, r1
  10a17e:	d210      	bcs.n	10a1a2 <osRtxPostProcess+0x4e>
  10a180:	f104 0060 	add.w	r0, r4, #96	; 0x60
  10a184:	f7ff ff92 	bl	10a0ac <atomic_inc16_lim>
  10a188:	6e63      	ldr	r3, [r4, #100]	; 0x64
  10a18a:	f843 5020 	str.w	r5, [r3, r0, lsl #2]
  10a18e:	7a63      	ldrb	r3, [r4, #9]
  10a190:	b923      	cbnz	r3, 10a19c <osRtxPostProcess+0x48>
  10a192:	4b08      	ldr	r3, [pc, #32]	; (10a1b4 <osRtxPostProcess+0x60>)
  10a194:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  10a198:	605a      	str	r2, [r3, #4]
  10a19a:	bd70      	pop	{r4, r5, r6, pc}
  10a19c:	2301      	movs	r3, #1
  10a19e:	72e3      	strb	r3, [r4, #11]
  10a1a0:	bd70      	pop	{r4, r5, r6, pc}
  10a1a2:	4629      	mov	r1, r5
  10a1a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10a1a8:	2002      	movs	r0, #2
  10a1aa:	f7fe bc73 	b.w	108a94 <osRtxErrorNotify>
  10a1ae:	bf00      	nop
  10a1b0:	3fff40f0 	.word	0x3fff40f0
  10a1b4:	e000ed00 	.word	0xe000ed00

0010a1b8 <osRtxSysTimerSetup>:
  10a1b8:	4b08      	ldr	r3, [pc, #32]	; (10a1dc <osRtxSysTimerSetup+0x24>)
  10a1ba:	4a09      	ldr	r2, [pc, #36]	; (10a1e0 <osRtxSysTimerSetup+0x28>)
  10a1bc:	68db      	ldr	r3, [r3, #12]
  10a1be:	6852      	ldr	r2, [r2, #4]
  10a1c0:	f04f 30ff 	mov.w	r0, #4294967295
  10a1c4:	fbb3 f3f2 	udiv	r3, r3, r2
  10a1c8:	4a06      	ldr	r2, [pc, #24]	; (10a1e4 <osRtxSysTimerSetup+0x2c>)
  10a1ca:	3b01      	subs	r3, #1
  10a1cc:	6053      	str	r3, [r2, #4]
  10a1ce:	2300      	movs	r3, #0
  10a1d0:	6093      	str	r3, [r2, #8]
  10a1d2:	4b05      	ldr	r3, [pc, #20]	; (10a1e8 <osRtxSysTimerSetup+0x30>)
  10a1d4:	22ff      	movs	r2, #255	; 0xff
  10a1d6:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
  10a1da:	4770      	bx	lr
  10a1dc:	3fff40f0 	.word	0x3fff40f0
  10a1e0:	00119150 	.word	0x00119150
  10a1e4:	e000e010 	.word	0xe000e010
  10a1e8:	e000ed00 	.word	0xe000ed00

0010a1ec <osRtxSysTimerEnable>:
  10a1ec:	4b01      	ldr	r3, [pc, #4]	; (10a1f4 <osRtxSysTimerEnable+0x8>)
  10a1ee:	2207      	movs	r2, #7
  10a1f0:	601a      	str	r2, [r3, #0]
  10a1f2:	4770      	bx	lr
  10a1f4:	e000e010 	.word	0xe000e010

0010a1f8 <osRtxSysTimerAckIRQ>:
  10a1f8:	4b01      	ldr	r3, [pc, #4]	; (10a200 <osRtxSysTimerAckIRQ+0x8>)
  10a1fa:	681b      	ldr	r3, [r3, #0]
  10a1fc:	4770      	bx	lr
  10a1fe:	bf00      	nop
  10a200:	e000e010 	.word	0xe000e010

0010a204 <osRtxTick_Handler>:
  10a204:	b538      	push	{r3, r4, r5, lr}
  10a206:	f7ff fff7 	bl	10a1f8 <osRtxSysTimerAckIRQ>
  10a20a:	4b1d      	ldr	r3, [pc, #116]	; (10a280 <osRtxTick_Handler+0x7c>)
  10a20c:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
  10a210:	6d9a      	ldr	r2, [r3, #88]	; 0x58
  10a212:	3001      	adds	r0, #1
  10a214:	f141 0100 	adc.w	r1, r1, #0
  10a218:	e9c3 0104 	strd	r0, r1, [r3, #16]
  10a21c:	461d      	mov	r5, r3
  10a21e:	b102      	cbz	r2, 10a222 <osRtxTick_Handler+0x1e>
  10a220:	4790      	blx	r2
  10a222:	f000 f961 	bl	10a4e8 <osRtxThreadDelayTick>
  10a226:	2000      	movs	r0, #0
  10a228:	f000 fa0a 	bl	10a640 <osRtxThreadDispatch>
  10a22c:	6caa      	ldr	r2, [r5, #72]	; 0x48
  10a22e:	4b14      	ldr	r3, [pc, #80]	; (10a280 <osRtxTick_Handler+0x7c>)
  10a230:	b322      	cbz	r2, 10a27c <osRtxTick_Handler+0x78>
  10a232:	6c19      	ldr	r1, [r3, #64]	; 0x40
  10a234:	6a18      	ldr	r0, [r3, #32]
  10a236:	4281      	cmp	r1, r0
  10a238:	d002      	beq.n	10a240 <osRtxTick_Handler+0x3c>
  10a23a:	6418      	str	r0, [r3, #64]	; 0x40
  10a23c:	645a      	str	r2, [r3, #68]	; 0x44
  10a23e:	bd38      	pop	{r3, r4, r5, pc}
  10a240:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  10a242:	b10a      	cbz	r2, 10a248 <osRtxTick_Handler+0x44>
  10a244:	3a01      	subs	r2, #1
  10a246:	645a      	str	r2, [r3, #68]	; 0x44
  10a248:	6c6b      	ldr	r3, [r5, #68]	; 0x44
  10a24a:	4c0d      	ldr	r4, [pc, #52]	; (10a280 <osRtxTick_Handler+0x7c>)
  10a24c:	b9b3      	cbnz	r3, 10a27c <osRtxTick_Handler+0x78>
  10a24e:	7a23      	ldrb	r3, [r4, #8]
  10a250:	2b02      	cmp	r3, #2
  10a252:	d113      	bne.n	10a27c <osRtxTick_Handler+0x78>
  10a254:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  10a256:	b18d      	cbz	r5, 10a27c <osRtxTick_Handler+0x78>
  10a258:	f995 2020 	ldrsb.w	r2, [r5, #32]
  10a25c:	f991 3020 	ldrsb.w	r3, [r1, #32]
  10a260:	429a      	cmp	r2, r3
  10a262:	d10b      	bne.n	10a27c <osRtxTick_Handler+0x78>
  10a264:	4628      	mov	r0, r5
  10a266:	f000 f8cf 	bl	10a408 <osRtxThreadListRemove>
  10a26a:	6c20      	ldr	r0, [r4, #64]	; 0x40
  10a26c:	f000 f8e8 	bl	10a440 <osRtxThreadReadyPut>
  10a270:	4628      	mov	r0, r5
  10a272:	f000 f9d5 	bl	10a620 <osRtxThreadSwitch>
  10a276:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  10a278:	6425      	str	r5, [r4, #64]	; 0x40
  10a27a:	6463      	str	r3, [r4, #68]	; 0x44
  10a27c:	bd38      	pop	{r3, r4, r5, pc}
  10a27e:	bf00      	nop
  10a280:	3fff40f0 	.word	0x3fff40f0

0010a284 <svcRtxThreadGetId>:
  10a284:	b510      	push	{r4, lr}
  10a286:	4b03      	ldr	r3, [pc, #12]	; (10a294 <svcRtxThreadGetId+0x10>)
  10a288:	69dc      	ldr	r4, [r3, #28]
  10a28a:	4620      	mov	r0, r4
  10a28c:	f7fe fc76 	bl	108b7c <EvrRtxThreadGetId>
  10a290:	4620      	mov	r0, r4
  10a292:	bd10      	pop	{r4, pc}
  10a294:	3fff40f0 	.word	0x3fff40f0

0010a298 <osThreadExit>:
  10a298:	b508      	push	{r3, lr}
  10a29a:	f7fe fc75 	bl	108b88 <EvrRtxThreadExit>
  10a29e:	f8df c010 	ldr.w	r12, [pc, #16]	; 10a2b0 <osThreadExit+0x18>
  10a2a2:	df00      	svc	0
  10a2a4:	f04f 31ff 	mov.w	r1, #4294967295
  10a2a8:	2000      	movs	r0, #0
  10a2aa:	f7fe fc63 	bl	108b74 <EvrRtxThreadError>
  10a2ae:	e7fe      	b.n	10a2ae <osThreadExit+0x16>
  10a2b0:	0010aac1 	.word	0x0010aac1

0010a2b4 <ThreadFlagsCheck>:
  10a2b4:	f012 0f02 	tst.w	r2, #2
  10a2b8:	b510      	push	{r4, lr}
  10a2ba:	f002 0201 	and.w	r2, r2, #1
  10a2be:	d122      	bne.n	10a306 <ThreadFlagsCheck+0x52>
  10a2c0:	f100 0328 	add.w	r3, r0, #40	; 0x28
  10a2c4:	b182      	cbz	r2, 10a2e8 <ThreadFlagsCheck+0x34>
  10a2c6:	e853 0f00 	ldrex	r0, [r3]
  10a2ca:	ea00 0201 	and.w	r2, r0, r1
  10a2ce:	428a      	cmp	r2, r1
  10a2d0:	d003      	beq.n	10a2da <ThreadFlagsCheck+0x26>
  10a2d2:	f3bf 8f2f 	clrex
  10a2d6:	2000      	movs	r0, #0
  10a2d8:	e005      	b.n	10a2e6 <ThreadFlagsCheck+0x32>
  10a2da:	ea20 0201 	bic.w	r2, r0, r1
  10a2de:	e843 2400 	strex	r4, r2, [r3]
  10a2e2:	b104      	cbz	r4, 10a2e6 <ThreadFlagsCheck+0x32>
  10a2e4:	e7ef      	b.n	10a2c6 <ThreadFlagsCheck+0x12>
  10a2e6:	bd10      	pop	{r4, pc}
  10a2e8:	e853 0f00 	ldrex	r0, [r3]
  10a2ec:	4208      	tst	r0, r1
  10a2ee:	d103      	bne.n	10a2f8 <ThreadFlagsCheck+0x44>
  10a2f0:	f3bf 8f2f 	clrex
  10a2f4:	2000      	movs	r0, #0
  10a2f6:	e005      	b.n	10a304 <ThreadFlagsCheck+0x50>
  10a2f8:	ea20 0201 	bic.w	r2, r0, r1
  10a2fc:	e843 2400 	strex	r4, r2, [r3]
  10a300:	b104      	cbz	r4, 10a304 <ThreadFlagsCheck+0x50>
  10a302:	e7f1      	b.n	10a2e8 <ThreadFlagsCheck+0x34>
  10a304:	bd10      	pop	{r4, pc}
  10a306:	6a80      	ldr	r0, [r0, #40]	; 0x28
  10a308:	ea01 0300 	and.w	r3, r1, r0
  10a30c:	b11a      	cbz	r2, 10a316 <ThreadFlagsCheck+0x62>
  10a30e:	4299      	cmp	r1, r3
  10a310:	bf18      	it	ne
  10a312:	2000      	movne	r0, #0
  10a314:	bd10      	pop	{r4, pc}
  10a316:	2b00      	cmp	r3, #0
  10a318:	bf08      	it	eq
  10a31a:	2000      	moveq	r0, #0
  10a31c:	bd10      	pop	{r4, pc}
	...

0010a320 <osRtxThreadFree>:
  10a320:	b510      	push	{r4, lr}
  10a322:	2300      	movs	r3, #0
  10a324:	7043      	strb	r3, [r0, #1]
  10a326:	7883      	ldrb	r3, [r0, #2]
  10a328:	4604      	mov	r4, r0
  10a32a:	079a      	lsls	r2, r3, #30
  10a32c:	d50c      	bpl.n	10a348 <osRtxThreadFree+0x28>
  10a32e:	f013 0f10 	tst.w	r3, #16
  10a332:	6b01      	ldr	r1, [r0, #48]	; 0x30
  10a334:	4b0e      	ldr	r3, [pc, #56]	; (10a370 <osRtxThreadFree+0x50>)
  10a336:	d004      	beq.n	10a342 <osRtxThreadFree+0x22>
  10a338:	f8d3 008c 	ldr.w	r0, [r3, #140]	; 0x8c
  10a33c:	f7fe feea 	bl	109114 <osRtxMemoryPoolFree>
  10a340:	e002      	b.n	10a348 <osRtxThreadFree+0x28>
  10a342:	6fd8      	ldr	r0, [r3, #124]	; 0x7c
  10a344:	f7fe fe60 	bl	109008 <osRtxMemoryFree>
  10a348:	78a3      	ldrb	r3, [r4, #2]
  10a34a:	07db      	lsls	r3, r3, #31
  10a34c:	d50e      	bpl.n	10a36c <osRtxThreadFree+0x4c>
  10a34e:	4b08      	ldr	r3, [pc, #32]	; (10a370 <osRtxThreadFree+0x50>)
  10a350:	4621      	mov	r1, r4
  10a352:	f8d3 0090 	ldr.w	r0, [r3, #144]	; 0x90
  10a356:	b118      	cbz	r0, 10a360 <osRtxThreadFree+0x40>
  10a358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10a35c:	f7fe beda 	b.w	109114 <osRtxMemoryPoolFree>
  10a360:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  10a364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10a368:	f7fe be4e 	b.w	109008 <osRtxMemoryFree>
  10a36c:	bd10      	pop	{r4, pc}
  10a36e:	bf00      	nop
  10a370:	3fff40f0 	.word	0x3fff40f0

0010a374 <svcRtxThreadGetName>:
  10a374:	b510      	push	{r4, lr}
  10a376:	4604      	mov	r4, r0
  10a378:	b110      	cbz	r0, 10a380 <svcRtxThreadGetName+0xc>
  10a37a:	7803      	ldrb	r3, [r0, #0]
  10a37c:	2b01      	cmp	r3, #1
  10a37e:	d005      	beq.n	10a38c <svcRtxThreadGetName+0x18>
  10a380:	4620      	mov	r0, r4
  10a382:	2100      	movs	r1, #0
  10a384:	f7fe fbf9 	bl	108b7a <EvrRtxThreadGetName>
  10a388:	2000      	movs	r0, #0
  10a38a:	bd10      	pop	{r4, pc}
  10a38c:	7843      	ldrb	r3, [r0, #1]
  10a38e:	2b00      	cmp	r3, #0
  10a390:	d0f6      	beq.n	10a380 <svcRtxThreadGetName+0xc>
  10a392:	6841      	ldr	r1, [r0, #4]
  10a394:	f7fe fbf1 	bl	108b7a <EvrRtxThreadGetName>
  10a398:	6860      	ldr	r0, [r4, #4]
  10a39a:	bd10      	pop	{r4, pc}

0010a39c <osRtxThreadDelayInsert.part.7>:
  10a39c:	4a07      	ldr	r2, [pc, #28]	; (10a3bc <osRtxThreadDelayInsert.part.7+0x20>)
  10a39e:	b510      	push	{r4, lr}
  10a3a0:	6b93      	ldr	r3, [r2, #56]	; 0x38
  10a3a2:	2400      	movs	r4, #0
  10a3a4:	b113      	cbz	r3, 10a3ac <osRtxThreadDelayInsert.part.7+0x10>
  10a3a6:	461c      	mov	r4, r3
  10a3a8:	691b      	ldr	r3, [r3, #16]
  10a3aa:	e7fb      	b.n	10a3a4 <osRtxThreadDelayInsert.part.7+0x8>
  10a3ac:	61c1      	str	r1, [r0, #28]
  10a3ae:	6144      	str	r4, [r0, #20]
  10a3b0:	6103      	str	r3, [r0, #16]
  10a3b2:	b10c      	cbz	r4, 10a3b8 <osRtxThreadDelayInsert.part.7+0x1c>
  10a3b4:	6120      	str	r0, [r4, #16]
  10a3b6:	bd10      	pop	{r4, pc}
  10a3b8:	6390      	str	r0, [r2, #56]	; 0x38
  10a3ba:	bd10      	pop	{r4, pc}
  10a3bc:	3fff40f0 	.word	0x3fff40f0

0010a3c0 <osRtxThreadListPut>:
  10a3c0:	b510      	push	{r4, lr}
  10a3c2:	b179      	cbz	r1, 10a3e4 <osRtxThreadListPut+0x24>
  10a3c4:	6883      	ldr	r3, [r0, #8]
  10a3c6:	f991 2020 	ldrsb.w	r2, [r1, #32]
  10a3ca:	b133      	cbz	r3, 10a3da <osRtxThreadListPut+0x1a>
  10a3cc:	f993 4020 	ldrsb.w	r4, [r3, #32]
  10a3d0:	4294      	cmp	r4, r2
  10a3d2:	db02      	blt.n	10a3da <osRtxThreadListPut+0x1a>
  10a3d4:	4618      	mov	r0, r3
  10a3d6:	689b      	ldr	r3, [r3, #8]
  10a3d8:	e7f7      	b.n	10a3ca <osRtxThreadListPut+0xa>
  10a3da:	60c8      	str	r0, [r1, #12]
  10a3dc:	608b      	str	r3, [r1, #8]
  10a3de:	6081      	str	r1, [r0, #8]
  10a3e0:	b103      	cbz	r3, 10a3e4 <osRtxThreadListPut+0x24>
  10a3e2:	60d9      	str	r1, [r3, #12]
  10a3e4:	bd10      	pop	{r4, pc}

0010a3e6 <osRtxThreadListGet>:
  10a3e6:	6883      	ldr	r3, [r0, #8]
  10a3e8:	b12b      	cbz	r3, 10a3f6 <osRtxThreadListGet+0x10>
  10a3ea:	689a      	ldr	r2, [r3, #8]
  10a3ec:	6082      	str	r2, [r0, #8]
  10a3ee:	b102      	cbz	r2, 10a3f2 <osRtxThreadListGet+0xc>
  10a3f0:	60d0      	str	r0, [r2, #12]
  10a3f2:	2200      	movs	r2, #0
  10a3f4:	60da      	str	r2, [r3, #12]
  10a3f6:	4618      	mov	r0, r3
  10a3f8:	4770      	bx	lr

0010a3fa <osRtxThreadListRoot>:
  10a3fa:	b120      	cbz	r0, 10a406 <osRtxThreadListRoot+0xc>
  10a3fc:	7803      	ldrb	r3, [r0, #0]
  10a3fe:	2b01      	cmp	r3, #1
  10a400:	d101      	bne.n	10a406 <osRtxThreadListRoot+0xc>
  10a402:	68c0      	ldr	r0, [r0, #12]
  10a404:	e7f9      	b.n	10a3fa <osRtxThreadListRoot>
  10a406:	4770      	bx	lr

0010a408 <osRtxThreadListRemove>:
  10a408:	68c3      	ldr	r3, [r0, #12]
  10a40a:	b133      	cbz	r3, 10a41a <osRtxThreadListRemove+0x12>
  10a40c:	6882      	ldr	r2, [r0, #8]
  10a40e:	609a      	str	r2, [r3, #8]
  10a410:	6882      	ldr	r2, [r0, #8]
  10a412:	b102      	cbz	r2, 10a416 <osRtxThreadListRemove+0xe>
  10a414:	60d3      	str	r3, [r2, #12]
  10a416:	2300      	movs	r3, #0
  10a418:	60c3      	str	r3, [r0, #12]
  10a41a:	4770      	bx	lr

0010a41c <osRtxThreadListSort>:
  10a41c:	b510      	push	{r4, lr}
  10a41e:	4601      	mov	r1, r0
  10a420:	4604      	mov	r4, r0
  10a422:	7823      	ldrb	r3, [r4, #0]
  10a424:	2b01      	cmp	r3, #1
  10a426:	d103      	bne.n	10a430 <osRtxThreadListSort+0x14>
  10a428:	68e4      	ldr	r4, [r4, #12]
  10a42a:	2c00      	cmp	r4, #0
  10a42c:	d1f9      	bne.n	10a422 <osRtxThreadListSort+0x6>
  10a42e:	bd10      	pop	{r4, pc}
  10a430:	4608      	mov	r0, r1
  10a432:	f7ff ffe9 	bl	10a408 <osRtxThreadListRemove>
  10a436:	4620      	mov	r0, r4
  10a438:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10a43c:	f7ff bfc0 	b.w	10a3c0 <osRtxThreadListPut>

0010a440 <osRtxThreadReadyPut>:
  10a440:	2301      	movs	r3, #1
  10a442:	4601      	mov	r1, r0
  10a444:	7043      	strb	r3, [r0, #1]
  10a446:	4801      	ldr	r0, [pc, #4]	; (10a44c <osRtxThreadReadyPut+0xc>)
  10a448:	f7ff bfba 	b.w	10a3c0 <osRtxThreadListPut>
  10a44c:	3fff4114 	.word	0x3fff4114

0010a450 <osRtxThreadDelayInsert>:
  10a450:	1c4b      	adds	r3, r1, #1
  10a452:	b430      	push	{r4, r5}
  10a454:	4602      	mov	r2, r0
  10a456:	460c      	mov	r4, r1
  10a458:	d102      	bne.n	10a460 <osRtxThreadDelayInsert+0x10>
  10a45a:	bc30      	pop	{r4, r5}
  10a45c:	f7ff bf9e 	b.w	10a39c <osRtxThreadDelayInsert.part.7>
  10a460:	490c      	ldr	r1, [pc, #48]	; (10a494 <osRtxThreadDelayInsert+0x44>)
  10a462:	2000      	movs	r0, #0
  10a464:	6b4b      	ldr	r3, [r1, #52]	; 0x34
  10a466:	b133      	cbz	r3, 10a476 <osRtxThreadDelayInsert+0x26>
  10a468:	69dd      	ldr	r5, [r3, #28]
  10a46a:	42ac      	cmp	r4, r5
  10a46c:	d303      	bcc.n	10a476 <osRtxThreadDelayInsert+0x26>
  10a46e:	4618      	mov	r0, r3
  10a470:	1b64      	subs	r4, r4, r5
  10a472:	691b      	ldr	r3, [r3, #16]
  10a474:	e7f7      	b.n	10a466 <osRtxThreadDelayInsert+0x16>
  10a476:	61d4      	str	r4, [r2, #28]
  10a478:	6150      	str	r0, [r2, #20]
  10a47a:	6113      	str	r3, [r2, #16]
  10a47c:	b108      	cbz	r0, 10a482 <osRtxThreadDelayInsert+0x32>
  10a47e:	6102      	str	r2, [r0, #16]
  10a480:	e000      	b.n	10a484 <osRtxThreadDelayInsert+0x34>
  10a482:	634a      	str	r2, [r1, #52]	; 0x34
  10a484:	b11b      	cbz	r3, 10a48e <osRtxThreadDelayInsert+0x3e>
  10a486:	69d9      	ldr	r1, [r3, #28]
  10a488:	615a      	str	r2, [r3, #20]
  10a48a:	1b0c      	subs	r4, r1, r4
  10a48c:	61dc      	str	r4, [r3, #28]
  10a48e:	bc30      	pop	{r4, r5}
  10a490:	4770      	bx	lr
  10a492:	bf00      	nop
  10a494:	3fff40f0 	.word	0x3fff40f0

0010a498 <osRtxThreadDelayRemove>:
  10a498:	69c1      	ldr	r1, [r0, #28]
  10a49a:	b510      	push	{r4, lr}
  10a49c:	1c4b      	adds	r3, r1, #1
  10a49e:	6942      	ldr	r2, [r0, #20]
  10a4a0:	d10c      	bne.n	10a4bc <osRtxThreadDelayRemove+0x24>
  10a4a2:	b91a      	cbnz	r2, 10a4ac <osRtxThreadDelayRemove+0x14>
  10a4a4:	4b0f      	ldr	r3, [pc, #60]	; (10a4e4 <osRtxThreadDelayRemove+0x4c>)
  10a4a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  10a4a8:	4298      	cmp	r0, r3
  10a4aa:	d11a      	bne.n	10a4e2 <osRtxThreadDelayRemove+0x4a>
  10a4ac:	6903      	ldr	r3, [r0, #16]
  10a4ae:	b103      	cbz	r3, 10a4b2 <osRtxThreadDelayRemove+0x1a>
  10a4b0:	615a      	str	r2, [r3, #20]
  10a4b2:	6942      	ldr	r2, [r0, #20]
  10a4b4:	b97a      	cbnz	r2, 10a4d6 <osRtxThreadDelayRemove+0x3e>
  10a4b6:	4a0b      	ldr	r2, [pc, #44]	; (10a4e4 <osRtxThreadDelayRemove+0x4c>)
  10a4b8:	6393      	str	r3, [r2, #56]	; 0x38
  10a4ba:	bd10      	pop	{r4, pc}
  10a4bc:	b91a      	cbnz	r2, 10a4c6 <osRtxThreadDelayRemove+0x2e>
  10a4be:	4b09      	ldr	r3, [pc, #36]	; (10a4e4 <osRtxThreadDelayRemove+0x4c>)
  10a4c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  10a4c2:	4298      	cmp	r0, r3
  10a4c4:	d10d      	bne.n	10a4e2 <osRtxThreadDelayRemove+0x4a>
  10a4c6:	6903      	ldr	r3, [r0, #16]
  10a4c8:	b11b      	cbz	r3, 10a4d2 <osRtxThreadDelayRemove+0x3a>
  10a4ca:	69dc      	ldr	r4, [r3, #28]
  10a4cc:	615a      	str	r2, [r3, #20]
  10a4ce:	4421      	add	r1, r4
  10a4d0:	61d9      	str	r1, [r3, #28]
  10a4d2:	6942      	ldr	r2, [r0, #20]
  10a4d4:	b11a      	cbz	r2, 10a4de <osRtxThreadDelayRemove+0x46>
  10a4d6:	6113      	str	r3, [r2, #16]
  10a4d8:	2300      	movs	r3, #0
  10a4da:	6143      	str	r3, [r0, #20]
  10a4dc:	bd10      	pop	{r4, pc}
  10a4de:	4a01      	ldr	r2, [pc, #4]	; (10a4e4 <osRtxThreadDelayRemove+0x4c>)
  10a4e0:	6353      	str	r3, [r2, #52]	; 0x34
  10a4e2:	bd10      	pop	{r4, pc}
  10a4e4:	3fff40f0 	.word	0x3fff40f0

0010a4e8 <osRtxThreadDelayTick>:
  10a4e8:	b538      	push	{r3, r4, r5, lr}
  10a4ea:	4b2d      	ldr	r3, [pc, #180]	; (10a5a0 <osRtxThreadDelayTick+0xb8>)
  10a4ec:	6b5c      	ldr	r4, [r3, #52]	; 0x34
  10a4ee:	461d      	mov	r5, r3
  10a4f0:	2c00      	cmp	r4, #0
  10a4f2:	d054      	beq.n	10a59e <osRtxThreadDelayTick+0xb6>
  10a4f4:	69e3      	ldr	r3, [r4, #28]
  10a4f6:	3b01      	subs	r3, #1
  10a4f8:	61e3      	str	r3, [r4, #28]
  10a4fa:	2b00      	cmp	r3, #0
  10a4fc:	d14f      	bne.n	10a59e <osRtxThreadDelayTick+0xb6>
  10a4fe:	7863      	ldrb	r3, [r4, #1]
  10a500:	2b53      	cmp	r3, #83	; 0x53
  10a502:	d027      	beq.n	10a554 <osRtxThreadDelayTick+0x6c>
  10a504:	d808      	bhi.n	10a518 <osRtxThreadDelayTick+0x30>
  10a506:	2b33      	cmp	r3, #51	; 0x33
  10a508:	d01b      	beq.n	10a542 <osRtxThreadDelayTick+0x5a>
  10a50a:	2b43      	cmp	r3, #67	; 0x43
  10a50c:	d01c      	beq.n	10a548 <osRtxThreadDelayTick+0x60>
  10a50e:	2b13      	cmp	r3, #19
  10a510:	d131      	bne.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a512:	f7fe fb44 	bl	108b9e <EvrRtxThreadDelayCompleted>
  10a516:	e02e      	b.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a518:	2b73      	cmp	r3, #115	; 0x73
  10a51a:	d021      	beq.n	10a560 <osRtxThreadDelayTick+0x78>
  10a51c:	d807      	bhi.n	10a52e <osRtxThreadDelayTick+0x46>
  10a51e:	2b63      	cmp	r3, #99	; 0x63
  10a520:	d129      	bne.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a522:	4620      	mov	r0, r4
  10a524:	f7ff ff69 	bl	10a3fa <osRtxThreadListRoot>
  10a528:	f7fe fb4d 	bl	108bc6 <EvrRtxSemaphoreAcquireTimeout>
  10a52c:	e023      	b.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a52e:	2b83      	cmp	r3, #131	; 0x83
  10a530:	d01c      	beq.n	10a56c <osRtxThreadDelayTick+0x84>
  10a532:	2b93      	cmp	r3, #147	; 0x93
  10a534:	d11f      	bne.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a536:	4620      	mov	r0, r4
  10a538:	f7ff ff5f 	bl	10a3fa <osRtxThreadListRoot>
  10a53c:	f7fe fb51 	bl	108be2 <EvrRtxMessageQueuePutTimeout>
  10a540:	e019      	b.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a542:	f7fe fb28 	bl	108b96 <EvrRtxThreadFlagsWaitTimeout>
  10a546:	e016      	b.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a548:	4620      	mov	r0, r4
  10a54a:	f7ff ff56 	bl	10a3fa <osRtxThreadListRoot>
  10a54e:	f7fe fb28 	bl	108ba2 <EvrRtxEventFlagsWaitTimeout>
  10a552:	e010      	b.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a554:	4620      	mov	r0, r4
  10a556:	f7ff ff50 	bl	10a3fa <osRtxThreadListRoot>
  10a55a:	f7fe fb28 	bl	108bae <EvrRtxMutexAcquireTimeout>
  10a55e:	e00a      	b.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a560:	4620      	mov	r0, r4
  10a562:	f7ff ff4a 	bl	10a3fa <osRtxThreadListRoot>
  10a566:	f7fe fb36 	bl	108bd6 <EvrRtxMemoryPoolAllocTimeout>
  10a56a:	e004      	b.n	10a576 <osRtxThreadDelayTick+0x8e>
  10a56c:	4620      	mov	r0, r4
  10a56e:	f7ff ff44 	bl	10a3fa <osRtxThreadListRoot>
  10a572:	f7fe fb3c 	bl	108bee <EvrRtxMessageQueueGetTimeout>
  10a576:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  10a578:	4620      	mov	r0, r4
  10a57a:	6a19      	ldr	r1, [r3, #32]
  10a57c:	f7fe fb02 	bl	108b84 <EvrRtxThreadUnblocked>
  10a580:	4620      	mov	r0, r4
  10a582:	f7ff ff41 	bl	10a408 <osRtxThreadListRemove>
  10a586:	4620      	mov	r0, r4
  10a588:	f7ff ff5a 	bl	10a440 <osRtxThreadReadyPut>
  10a58c:	6924      	ldr	r4, [r4, #16]
  10a58e:	b124      	cbz	r4, 10a59a <osRtxThreadDelayTick+0xb2>
  10a590:	69e3      	ldr	r3, [r4, #28]
  10a592:	2b00      	cmp	r3, #0
  10a594:	d0b3      	beq.n	10a4fe <osRtxThreadDelayTick+0x16>
  10a596:	2300      	movs	r3, #0
  10a598:	6163      	str	r3, [r4, #20]
  10a59a:	636c      	str	r4, [r5, #52]	; 0x34
  10a59c:	bd38      	pop	{r3, r4, r5, pc}
  10a59e:	bd38      	pop	{r3, r4, r5, pc}
  10a5a0:	3fff40f0 	.word	0x3fff40f0

0010a5a4 <osRtxThreadRegPtr>:
  10a5a4:	6b80      	ldr	r0, [r0, #56]	; 0x38
  10a5a6:	3020      	adds	r0, #32
  10a5a8:	4770      	bx	lr
	...

0010a5ac <osRtxThreadBlock>:
  10a5ac:	b510      	push	{r4, lr}
  10a5ae:	2301      	movs	r3, #1
  10a5b0:	4a09      	ldr	r2, [pc, #36]	; (10a5d8 <osRtxThreadBlock+0x2c>)
  10a5b2:	7043      	strb	r3, [r0, #1]
  10a5b4:	f990 1020 	ldrsb.w	r1, [r0, #32]
  10a5b8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
  10a5ba:	3224      	adds	r2, #36	; 0x24
  10a5bc:	b133      	cbz	r3, 10a5cc <osRtxThreadBlock+0x20>
  10a5be:	f993 4020 	ldrsb.w	r4, [r3, #32]
  10a5c2:	428c      	cmp	r4, r1
  10a5c4:	dd02      	ble.n	10a5cc <osRtxThreadBlock+0x20>
  10a5c6:	461a      	mov	r2, r3
  10a5c8:	689b      	ldr	r3, [r3, #8]
  10a5ca:	e7f7      	b.n	10a5bc <osRtxThreadBlock+0x10>
  10a5cc:	60c2      	str	r2, [r0, #12]
  10a5ce:	6083      	str	r3, [r0, #8]
  10a5d0:	6090      	str	r0, [r2, #8]
  10a5d2:	b103      	cbz	r3, 10a5d6 <osRtxThreadBlock+0x2a>
  10a5d4:	60d8      	str	r0, [r3, #12]
  10a5d6:	bd10      	pop	{r4, pc}
  10a5d8:	3fff40f0 	.word	0x3fff40f0

0010a5dc <thread_switch_helper>:
  10a5dc:	4b04      	ldr	r3, [pc, #16]	; (10a5f0 <thread_switch_helper+0x14>)
  10a5de:	681b      	ldr	r3, [r3, #0]
  10a5e0:	b12b      	cbz	r3, 10a5ee <thread_switch_helper+0x12>
  10a5e2:	691b      	ldr	r3, [r3, #16]
  10a5e4:	b11b      	cbz	r3, 10a5ee <thread_switch_helper+0x12>
  10a5e6:	4a03      	ldr	r2, [pc, #12]	; (10a5f4 <thread_switch_helper+0x18>)
  10a5e8:	6a12      	ldr	r2, [r2, #32]
  10a5ea:	6c50      	ldr	r0, [r2, #68]	; 0x44
  10a5ec:	4718      	bx	r3
  10a5ee:	4770      	bx	lr
  10a5f0:	3fff9f08 	.word	0x3fff9f08
  10a5f4:	3fff40f0 	.word	0x3fff40f0

0010a5f8 <osRtxThreadStackCheck>:
  10a5f8:	4b07      	ldr	r3, [pc, #28]	; (10a618 <osRtxThreadStackCheck+0x20>)
  10a5fa:	69d9      	ldr	r1, [r3, #28]
  10a5fc:	b151      	cbz	r1, 10a614 <osRtxThreadStackCheck+0x1c>
  10a5fe:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  10a600:	6b8a      	ldr	r2, [r1, #56]	; 0x38
  10a602:	4293      	cmp	r3, r2
  10a604:	d203      	bcs.n	10a60e <osRtxThreadStackCheck+0x16>
  10a606:	681a      	ldr	r2, [r3, #0]
  10a608:	4b04      	ldr	r3, [pc, #16]	; (10a61c <osRtxThreadStackCheck+0x24>)
  10a60a:	429a      	cmp	r2, r3
  10a60c:	d002      	beq.n	10a614 <osRtxThreadStackCheck+0x1c>
  10a60e:	2001      	movs	r0, #1
  10a610:	f7fe ba40 	b.w	108a94 <osRtxErrorNotify>
  10a614:	4770      	bx	lr
  10a616:	bf00      	nop
  10a618:	3fff40f0 	.word	0x3fff40f0
  10a61c:	e25a2ea5 	.word	0xe25a2ea5

0010a620 <osRtxThreadSwitch>:
  10a620:	b510      	push	{r4, lr}
  10a622:	4604      	mov	r4, r0
  10a624:	2302      	movs	r3, #2
  10a626:	7043      	strb	r3, [r0, #1]
  10a628:	4b04      	ldr	r3, [pc, #16]	; (10a63c <osRtxThreadSwitch+0x1c>)
  10a62a:	6218      	str	r0, [r3, #32]
  10a62c:	f7ff ffe4 	bl	10a5f8 <osRtxThreadStackCheck>
  10a630:	4620      	mov	r0, r4
  10a632:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10a636:	f7fe baa6 	b.w	108b86 <EvrRtxThreadSwitch>
  10a63a:	bf00      	nop
  10a63c:	3fff40f0 	.word	0x3fff40f0

0010a640 <osRtxThreadDispatch>:
  10a640:	b510      	push	{r4, lr}
  10a642:	4b15      	ldr	r3, [pc, #84]	; (10a698 <osRtxThreadDispatch+0x58>)
  10a644:	4604      	mov	r4, r0
  10a646:	7a1a      	ldrb	r2, [r3, #8]
  10a648:	69d9      	ldr	r1, [r3, #28]
  10a64a:	b970      	cbnz	r0, 10a66a <osRtxThreadDispatch+0x2a>
  10a64c:	2a02      	cmp	r2, #2
  10a64e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
  10a650:	d121      	bne.n	10a696 <osRtxThreadDispatch+0x56>
  10a652:	b301      	cbz	r1, 10a696 <osRtxThreadDispatch+0x56>
  10a654:	b1fc      	cbz	r4, 10a696 <osRtxThreadDispatch+0x56>
  10a656:	f994 2020 	ldrsb.w	r2, [r4, #32]
  10a65a:	f991 3020 	ldrsb.w	r3, [r1, #32]
  10a65e:	429a      	cmp	r2, r3
  10a660:	dd19      	ble.n	10a696 <osRtxThreadDispatch+0x56>
  10a662:	4620      	mov	r0, r4
  10a664:	f7ff fed0 	bl	10a408 <osRtxThreadListRemove>
  10a668:	e008      	b.n	10a67c <osRtxThreadDispatch+0x3c>
  10a66a:	2a02      	cmp	r2, #2
  10a66c:	d10e      	bne.n	10a68c <osRtxThreadDispatch+0x4c>
  10a66e:	b169      	cbz	r1, 10a68c <osRtxThreadDispatch+0x4c>
  10a670:	f990 2020 	ldrsb.w	r2, [r0, #32]
  10a674:	f991 3020 	ldrsb.w	r3, [r1, #32]
  10a678:	429a      	cmp	r2, r3
  10a67a:	dd07      	ble.n	10a68c <osRtxThreadDispatch+0x4c>
  10a67c:	4608      	mov	r0, r1
  10a67e:	f7ff ff95 	bl	10a5ac <osRtxThreadBlock>
  10a682:	4620      	mov	r0, r4
  10a684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10a688:	f7ff bfca 	b.w	10a620 <osRtxThreadSwitch>
  10a68c:	4620      	mov	r0, r4
  10a68e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10a692:	f7ff bed5 	b.w	10a440 <osRtxThreadReadyPut>
  10a696:	bd10      	pop	{r4, pc}
  10a698:	3fff40f0 	.word	0x3fff40f0

0010a69c <osRtxThreadWaitExit>:
  10a69c:	b570      	push	{r4, r5, r6, lr}
  10a69e:	4604      	mov	r4, r0
  10a6a0:	460e      	mov	r6, r1
  10a6a2:	4615      	mov	r5, r2
  10a6a4:	f7fe fa6e 	bl	108b84 <EvrRtxThreadUnblocked>
  10a6a8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  10a6aa:	4620      	mov	r0, r4
  10a6ac:	621e      	str	r6, [r3, #32]
  10a6ae:	f7ff fef3 	bl	10a498 <osRtxThreadDelayRemove>
  10a6b2:	4620      	mov	r0, r4
  10a6b4:	b11d      	cbz	r5, 10a6be <osRtxThreadWaitExit+0x22>
  10a6b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10a6ba:	f7ff bfc1 	b.w	10a640 <osRtxThreadDispatch>
  10a6be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10a6c2:	f7ff bebd 	b.w	10a440 <osRtxThreadReadyPut>

0010a6c6 <osRtxThreadPostProcess>:
  10a6c6:	b538      	push	{r3, r4, r5, lr}
  10a6c8:	7843      	ldrb	r3, [r0, #1]
  10a6ca:	4604      	mov	r4, r0
  10a6cc:	2b33      	cmp	r3, #51	; 0x33
  10a6ce:	d113      	bne.n	10a6f8 <osRtxThreadPostProcess+0x32>
  10a6d0:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
  10a6d4:	6a41      	ldr	r1, [r0, #36]	; 0x24
  10a6d6:	f7ff fded 	bl	10a2b4 <ThreadFlagsCheck>
  10a6da:	4605      	mov	r5, r0
  10a6dc:	b160      	cbz	r0, 10a6f8 <osRtxThreadPostProcess+0x32>
  10a6de:	4601      	mov	r1, r0
  10a6e0:	2200      	movs	r2, #0
  10a6e2:	4620      	mov	r0, r4
  10a6e4:	f7ff ffda 	bl	10a69c <osRtxThreadWaitExit>
  10a6e8:	462a      	mov	r2, r5
  10a6ea:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
  10a6ee:	6a60      	ldr	r0, [r4, #36]	; 0x24
  10a6f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  10a6f4:	f7fe ba50 	b.w	108b98 <EvrRtxThreadFlagsWaitCompleted>
  10a6f8:	bd38      	pop	{r3, r4, r5, pc}

0010a6fa <svcRtxThreadFlagsSet>:
  10a6fa:	b570      	push	{r4, r5, r6, lr}
  10a6fc:	4604      	mov	r4, r0
  10a6fe:	b120      	cbz	r0, 10a70a <svcRtxThreadFlagsSet+0x10>
  10a700:	7803      	ldrb	r3, [r0, #0]
  10a702:	2b01      	cmp	r3, #1
  10a704:	d101      	bne.n	10a70a <svcRtxThreadFlagsSet+0x10>
  10a706:	2900      	cmp	r1, #0
  10a708:	da07      	bge.n	10a71a <svcRtxThreadFlagsSet+0x20>
  10a70a:	4620      	mov	r0, r4
  10a70c:	f06f 0103 	mvn.w	r1, #3
  10a710:	f7fe fa30 	bl	108b74 <EvrRtxThreadError>
  10a714:	f06f 0003 	mvn.w	r0, #3
  10a718:	bd70      	pop	{r4, r5, r6, pc}
  10a71a:	7843      	ldrb	r3, [r0, #1]
  10a71c:	f013 0ffb 	tst.w	r3, #251	; 0xfb
  10a720:	d106      	bne.n	10a730 <svcRtxThreadFlagsSet+0x36>
  10a722:	f06f 0102 	mvn.w	r1, #2
  10a726:	f7fe fa25 	bl	108b74 <EvrRtxThreadError>
  10a72a:	f06f 0002 	mvn.w	r0, #2
  10a72e:	bd70      	pop	{r4, r5, r6, pc}
  10a730:	f100 0328 	add.w	r3, r0, #40	; 0x28
  10a734:	e853 2f00 	ldrex	r2, [r3]
  10a738:	ea42 0501 	orr.w	r5, r2, r1
  10a73c:	e843 5600 	strex	r6, r5, [r3]
  10a740:	b106      	cbz	r6, 10a744 <svcRtxThreadFlagsSet+0x4a>
  10a742:	e7f7      	b.n	10a734 <svcRtxThreadFlagsSet+0x3a>
  10a744:	7843      	ldrb	r3, [r0, #1]
  10a746:	2b33      	cmp	r3, #51	; 0x33
  10a748:	d119      	bne.n	10a77e <svcRtxThreadFlagsSet+0x84>
  10a74a:	f890 2023 	ldrb.w	r2, [r0, #35]	; 0x23
  10a74e:	6a41      	ldr	r1, [r0, #36]	; 0x24
  10a750:	f7ff fdb0 	bl	10a2b4 <ThreadFlagsCheck>
  10a754:	4606      	mov	r6, r0
  10a756:	b190      	cbz	r0, 10a77e <svcRtxThreadFlagsSet+0x84>
  10a758:	f894 3023 	ldrb.w	r3, [r4, #35]	; 0x23
  10a75c:	4601      	mov	r1, r0
  10a75e:	079b      	lsls	r3, r3, #30
  10a760:	bf56      	itet	pl
  10a762:	6a65      	ldrpl	r5, [r4, #36]	; 0x24
  10a764:	4605      	movmi	r5, r0
  10a766:	ea20 0505 	bicpl.w	r5, r0, r5
  10a76a:	2201      	movs	r2, #1
  10a76c:	4620      	mov	r0, r4
  10a76e:	f7ff ff95 	bl	10a69c <osRtxThreadWaitExit>
  10a772:	4632      	mov	r2, r6
  10a774:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
  10a778:	6a60      	ldr	r0, [r4, #36]	; 0x24
  10a77a:	f7fe fa0d 	bl	108b98 <EvrRtxThreadFlagsWaitCompleted>
  10a77e:	4620      	mov	r0, r4
  10a780:	4629      	mov	r1, r5
  10a782:	f7fe fa05 	bl	108b90 <EvrRtxThreadFlagsSetDone>
  10a786:	4628      	mov	r0, r5
  10a788:	bd70      	pop	{r4, r5, r6, pc}
	...

0010a78c <svcRtxThreadNew>:
  10a78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  10a790:	b085      	sub	sp, #20
  10a792:	9103      	str	r1, [sp, #12]
  10a794:	9302      	str	r3, [sp, #8]
  10a796:	4681      	mov	r9, r0
  10a798:	b910      	cbnz	r0, 10a7a0 <svcRtxThreadNew+0x14>
  10a79a:	f06f 0103 	mvn.w	r1, #3
  10a79e:	e01e      	b.n	10a7de <svcRtxThreadNew+0x52>
  10a7a0:	b382      	cbz	r2, 10a804 <svcRtxThreadNew+0x78>
  10a7a2:	6894      	ldr	r4, [r2, #8]
  10a7a4:	f102 0510 	add.w	r5, r2, #16
  10a7a8:	cde0      	ldmia	r5, {r5, r6, r7}
  10a7aa:	b13c      	cbz	r4, 10a7bc <svcRtxThreadNew+0x30>
  10a7ac:	07a3      	lsls	r3, r4, #30
  10a7ae:	d102      	bne.n	10a7b6 <svcRtxThreadNew+0x2a>
  10a7b0:	68d3      	ldr	r3, [r2, #12]
  10a7b2:	2b47      	cmp	r3, #71	; 0x47
  10a7b4:	d805      	bhi.n	10a7c2 <svcRtxThreadNew+0x36>
  10a7b6:	f06f 0108 	mvn.w	r1, #8
  10a7ba:	e00f      	b.n	10a7dc <svcRtxThreadNew+0x50>
  10a7bc:	68d3      	ldr	r3, [r2, #12]
  10a7be:	2b00      	cmp	r3, #0
  10a7c0:	d1f9      	bne.n	10a7b6 <svcRtxThreadNew+0x2a>
  10a7c2:	b12d      	cbz	r5, 10a7d0 <svcRtxThreadNew+0x44>
  10a7c4:	0768      	lsls	r0, r5, #29
  10a7c6:	d100      	bne.n	10a7ca <svcRtxThreadNew+0x3e>
  10a7c8:	b97e      	cbnz	r6, 10a7ea <svcRtxThreadNew+0x5e>
  10a7ca:	f06f 010a 	mvn.w	r1, #10
  10a7ce:	e005      	b.n	10a7dc <svcRtxThreadNew+0x50>
  10a7d0:	b147      	cbz	r7, 10a7e4 <svcRtxThreadNew+0x58>
  10a7d2:	1e7b      	subs	r3, r7, #1
  10a7d4:	2b37      	cmp	r3, #55	; 0x37
  10a7d6:	d906      	bls.n	10a7e6 <svcRtxThreadNew+0x5a>
  10a7d8:	f06f 010b 	mvn.w	r1, #11
  10a7dc:	2000      	movs	r0, #0
  10a7de:	f7fe f9c9 	bl	108b74 <EvrRtxThreadError>
  10a7e2:	e056      	b.n	10a892 <svcRtxThreadNew+0x106>
  10a7e4:	2718      	movs	r7, #24
  10a7e6:	b13e      	cbz	r6, 10a7f8 <svcRtxThreadNew+0x6c>
  10a7e8:	e002      	b.n	10a7f0 <svcRtxThreadNew+0x64>
  10a7ea:	2f00      	cmp	r7, #0
  10a7ec:	d1f1      	bne.n	10a7d2 <svcRtxThreadNew+0x46>
  10a7ee:	2718      	movs	r7, #24
  10a7f0:	0771      	lsls	r1, r6, #29
  10a7f2:	d1ea      	bne.n	10a7ca <svcRtxThreadNew+0x3e>
  10a7f4:	2e47      	cmp	r6, #71	; 0x47
  10a7f6:	d9e8      	bls.n	10a7ca <svcRtxThreadNew+0x3e>
  10a7f8:	6813      	ldr	r3, [r2, #0]
  10a7fa:	f8d2 b004 	ldr.w	r11, [r2, #4]
  10a7fe:	9301      	str	r3, [sp, #4]
  10a800:	b9cc      	cbnz	r4, 10a836 <svcRtxThreadNew+0xaa>
  10a802:	e004      	b.n	10a80e <svcRtxThreadNew+0x82>
  10a804:	4616      	mov	r6, r2
  10a806:	4615      	mov	r5, r2
  10a808:	4693      	mov	r11, r2
  10a80a:	2718      	movs	r7, #24
  10a80c:	9201      	str	r2, [sp, #4]
  10a80e:	4b5a      	ldr	r3, [pc, #360]	; (10a978 <svcRtxThreadNew+0x1ec>)
  10a810:	f8d3 0090 	ldr.w	r0, [r3, #144]	; 0x90
  10a814:	b110      	cbz	r0, 10a81c <svcRtxThreadNew+0x90>
  10a816:	f7fe fc4e 	bl	1090b6 <osRtxMemoryPoolAlloc>
  10a81a:	e005      	b.n	10a828 <svcRtxThreadNew+0x9c>
  10a81c:	2201      	movs	r2, #1
  10a81e:	2148      	movs	r1, #72	; 0x48
  10a820:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  10a824:	f7fe fbba 	bl	108f9c <osRtxMemoryAlloc>
  10a828:	4604      	mov	r4, r0
  10a82a:	b938      	cbnz	r0, 10a83c <svcRtxThreadNew+0xb0>
  10a82c:	f06f 0104 	mvn.w	r1, #4
  10a830:	f7fe f9a0 	bl	108b74 <EvrRtxThreadError>
  10a834:	e09b      	b.n	10a96e <svcRtxThreadNew+0x1e2>
  10a836:	f04f 0a00 	mov.w	r10, #0
  10a83a:	e001      	b.n	10a840 <svcRtxThreadNew+0xb4>
  10a83c:	f04f 0a01 	mov.w	r10, #1
  10a840:	bb8d      	cbnz	r5, 10a8a6 <svcRtxThreadNew+0x11a>
  10a842:	f8df 8134 	ldr.w	r8, [pc, #308]	; 10a978 <svcRtxThreadNew+0x1ec>
  10a846:	b9a6      	cbnz	r6, 10a872 <svcRtxThreadNew+0xe6>
  10a848:	4a4c      	ldr	r2, [pc, #304]	; (10a97c <svcRtxThreadNew+0x1f0>)
  10a84a:	f8d8 008c 	ldr.w	r0, [r8, #140]	; 0x8c
  10a84e:	6d56      	ldr	r6, [r2, #84]	; 0x54
  10a850:	b178      	cbz	r0, 10a872 <svcRtxThreadNew+0xe6>
  10a852:	f7fe fc30 	bl	1090b6 <osRtxMemoryPoolAlloc>
  10a856:	4605      	mov	r5, r0
  10a858:	b940      	cbnz	r0, 10a86c <svcRtxThreadNew+0xe0>
  10a85a:	f06f 0104 	mvn.w	r1, #4
  10a85e:	2000      	movs	r0, #0
  10a860:	f7fe f988 	bl	108b74 <EvrRtxThreadError>
  10a864:	f1ba 0f00 	cmp.w	r10, #0
  10a868:	d10c      	bne.n	10a884 <svcRtxThreadNew+0xf8>
  10a86a:	e012      	b.n	10a892 <svcRtxThreadNew+0x106>
  10a86c:	f04a 0a10 	orr.w	r10, r10, #16
  10a870:	e017      	b.n	10a8a2 <svcRtxThreadNew+0x116>
  10a872:	462a      	mov	r2, r5
  10a874:	4631      	mov	r1, r6
  10a876:	f8d8 007c 	ldr.w	r0, [r8, #124]	; 0x7c
  10a87a:	f7fe fb8f 	bl	108f9c <osRtxMemoryAlloc>
  10a87e:	4605      	mov	r5, r0
  10a880:	b978      	cbnz	r0, 10a8a2 <svcRtxThreadNew+0x116>
  10a882:	e7ea      	b.n	10a85a <svcRtxThreadNew+0xce>
  10a884:	f8d8 5090 	ldr.w	r5, [r8, #144]	; 0x90
  10a888:	4621      	mov	r1, r4
  10a88a:	b125      	cbz	r5, 10a896 <svcRtxThreadNew+0x10a>
  10a88c:	4628      	mov	r0, r5
  10a88e:	f7fe fc41 	bl	109114 <osRtxMemoryPoolFree>
  10a892:	2000      	movs	r0, #0
  10a894:	e06c      	b.n	10a970 <svcRtxThreadNew+0x1e4>
  10a896:	4b38      	ldr	r3, [pc, #224]	; (10a978 <svcRtxThreadNew+0x1ec>)
  10a898:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
  10a89c:	f7fe fbb4 	bl	109008 <osRtxMemoryFree>
  10a8a0:	e7f7      	b.n	10a892 <svcRtxThreadNew+0x106>
  10a8a2:	f04a 0a02 	orr.w	r10, r10, #2
  10a8a6:	9b01      	ldr	r3, [sp, #4]
  10a8a8:	2201      	movs	r2, #1
  10a8aa:	6063      	str	r3, [r4, #4]
  10a8ac:	2300      	movs	r3, #0
  10a8ae:	60a3      	str	r3, [r4, #8]
  10a8b0:	60e3      	str	r3, [r4, #12]
  10a8b2:	6123      	str	r3, [r4, #16]
  10a8b4:	6163      	str	r3, [r4, #20]
  10a8b6:	61a3      	str	r3, [r4, #24]
  10a8b8:	61e3      	str	r3, [r4, #28]
  10a8ba:	f884 3023 	strb.w	r3, [r4, #35]	; 0x23
  10a8be:	6263      	str	r3, [r4, #36]	; 0x24
  10a8c0:	62a3      	str	r3, [r4, #40]	; 0x28
  10a8c2:	62e3      	str	r3, [r4, #44]	; 0x2c
  10a8c4:	f1a6 0340 	sub.w	r3, r6, #64	; 0x40
  10a8c8:	442b      	add	r3, r5
  10a8ca:	63a3      	str	r3, [r4, #56]	; 0x38
  10a8cc:	4b2c      	ldr	r3, [pc, #176]	; (10a980 <svcRtxThreadNew+0x1f4>)
  10a8ce:	7022      	strb	r2, [r4, #0]
  10a8d0:	7062      	strb	r2, [r4, #1]
  10a8d2:	b2ff      	uxtb	r7, r7
  10a8d4:	22fd      	movs	r2, #253	; 0xfd
  10a8d6:	f884 a002 	strb.w	r10, [r4, #2]
  10a8da:	f884 b003 	strb.w	r11, [r4, #3]
  10a8de:	f884 7020 	strb.w	r7, [r4, #32]
  10a8e2:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
  10a8e6:	f884 2022 	strb.w	r2, [r4, #34]	; 0x22
  10a8ea:	6325      	str	r5, [r4, #48]	; 0x30
  10a8ec:	6366      	str	r6, [r4, #52]	; 0x34
  10a8ee:	f8c4 903c 	str.w	r9, [r4, #60]	; 0x3c
  10a8f2:	602b      	str	r3, [r5, #0]
  10a8f4:	4b21      	ldr	r3, [pc, #132]	; (10a97c <svcRtxThreadNew+0x1f0>)
  10a8f6:	681b      	ldr	r3, [r3, #0]
  10a8f8:	075b      	lsls	r3, r3, #29
  10a8fa:	d511      	bpl.n	10a920 <svcRtxThreadNew+0x194>
  10a8fc:	3504      	adds	r5, #4
  10a8fe:	462a      	mov	r2, r5
  10a900:	08b6      	lsrs	r6, r6, #2
  10a902:	f1a6 0311 	sub.w	r3, r6, #17
  10a906:	f04f 31cc 	mov.w	r1, #3435973836	; 0xcccccccc
  10a90a:	b11b      	cbz	r3, 10a914 <svcRtxThreadNew+0x188>
  10a90c:	f842 1b04 	str.w	r1, [r2], #4
  10a910:	3b01      	subs	r3, #1
  10a912:	e7fa      	b.n	10a90a <svcRtxThreadNew+0x17e>
  10a914:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
  10a918:	3e11      	subs	r6, #17
  10a91a:	eb05 0586 	add.w	r5, r5, r6, lsl #2
  10a91e:	e000      	b.n	10a922 <svcRtxThreadNew+0x196>
  10a920:	6ba5      	ldr	r5, [r4, #56]	; 0x38
  10a922:	462b      	mov	r3, r5
  10a924:	f105 0234 	add.w	r2, r5, #52	; 0x34
  10a928:	2100      	movs	r1, #0
  10a92a:	f843 1b04 	str.w	r1, [r3], #4
  10a92e:	4293      	cmp	r3, r2
  10a930:	d1fb      	bne.n	10a92a <svcRtxThreadNew+0x19e>
  10a932:	4b14      	ldr	r3, [pc, #80]	; (10a984 <svcRtxThreadNew+0x1f8>)
  10a934:	4a14      	ldr	r2, [pc, #80]	; (10a988 <svcRtxThreadNew+0x1fc>)
  10a936:	636b      	str	r3, [r5, #52]	; 0x34
  10a938:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  10a93c:	63eb      	str	r3, [r5, #60]	; 0x3c
  10a93e:	9b03      	ldr	r3, [sp, #12]
  10a940:	f8c5 9038 	str.w	r9, [r5, #56]	; 0x38
  10a944:	622b      	str	r3, [r5, #32]
  10a946:	4b0c      	ldr	r3, [pc, #48]	; (10a978 <svcRtxThreadNew+0x1ec>)
  10a948:	4620      	mov	r0, r4
  10a94a:	669a      	str	r2, [r3, #104]	; 0x68
  10a94c:	f7fe f914 	bl	108b78 <EvrRtxThreadCreated>
  10a950:	4b0e      	ldr	r3, [pc, #56]	; (10a98c <svcRtxThreadNew+0x200>)
  10a952:	681b      	ldr	r3, [r3, #0]
  10a954:	b133      	cbz	r3, 10a964 <svcRtxThreadNew+0x1d8>
  10a956:	689b      	ldr	r3, [r3, #8]
  10a958:	b123      	cbz	r3, 10a964 <svcRtxThreadNew+0x1d8>
  10a95a:	9902      	ldr	r1, [sp, #8]
  10a95c:	4620      	mov	r0, r4
  10a95e:	4798      	blx	r3
  10a960:	6460      	str	r0, [r4, #68]	; 0x44
  10a962:	e001      	b.n	10a968 <svcRtxThreadNew+0x1dc>
  10a964:	9b02      	ldr	r3, [sp, #8]
  10a966:	6463      	str	r3, [r4, #68]	; 0x44
  10a968:	4620      	mov	r0, r4
  10a96a:	f7ff fe69 	bl	10a640 <osRtxThreadDispatch>
  10a96e:	4620      	mov	r0, r4
  10a970:	b005      	add	sp, #20
  10a972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10a976:	bf00      	nop
  10a978:	3fff40f0 	.word	0x3fff40f0
  10a97c:	00119150 	.word	0x00119150
  10a980:	e25a2ea5 	.word	0xe25a2ea5
  10a984:	0010a299 	.word	0x0010a299
  10a988:	0010a6c7 	.word	0x0010a6c7
  10a98c:	3fff9f08 	.word	0x3fff9f08

0010a990 <svcRtxThreadSetPriority>:
  10a990:	b508      	push	{r3, lr}
  10a992:	4603      	mov	r3, r0
  10a994:	b128      	cbz	r0, 10a9a2 <svcRtxThreadSetPriority+0x12>
  10a996:	7802      	ldrb	r2, [r0, #0]
  10a998:	2a01      	cmp	r2, #1
  10a99a:	d102      	bne.n	10a9a2 <svcRtxThreadSetPriority+0x12>
  10a99c:	1e4a      	subs	r2, r1, #1
  10a99e:	2a37      	cmp	r2, #55	; 0x37
  10a9a0:	d907      	bls.n	10a9b2 <svcRtxThreadSetPriority+0x22>
  10a9a2:	4618      	mov	r0, r3
  10a9a4:	f06f 0103 	mvn.w	r1, #3
  10a9a8:	f7fe f8e4 	bl	108b74 <EvrRtxThreadError>
  10a9ac:	f06f 0003 	mvn.w	r0, #3
  10a9b0:	bd08      	pop	{r3, pc}
  10a9b2:	7842      	ldrb	r2, [r0, #1]
  10a9b4:	f012 0ffb 	tst.w	r2, #251	; 0xfb
  10a9b8:	d106      	bne.n	10a9c8 <svcRtxThreadSetPriority+0x38>
  10a9ba:	f06f 0102 	mvn.w	r1, #2
  10a9be:	f7fe f8d9 	bl	108b74 <EvrRtxThreadError>
  10a9c2:	f06f 0002 	mvn.w	r0, #2
  10a9c6:	bd08      	pop	{r3, pc}
  10a9c8:	f890 2020 	ldrb.w	r2, [r0, #32]
  10a9cc:	b2c9      	uxtb	r1, r1
  10a9ce:	4291      	cmp	r1, r2
  10a9d0:	d008      	beq.n	10a9e4 <svcRtxThreadSetPriority+0x54>
  10a9d2:	f880 1020 	strb.w	r1, [r0, #32]
  10a9d6:	f880 1021 	strb.w	r1, [r0, #33]	; 0x21
  10a9da:	f7ff fd1f 	bl	10a41c <osRtxThreadListSort>
  10a9de:	2000      	movs	r0, #0
  10a9e0:	f7ff fe2e 	bl	10a640 <osRtxThreadDispatch>
  10a9e4:	2000      	movs	r0, #0
  10a9e6:	bd08      	pop	{r3, pc}

0010a9e8 <osRtxThreadWaitEnter>:
  10a9e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10a9ea:	4d10      	ldr	r5, [pc, #64]	; (10aa2c <osRtxThreadWaitEnter+0x44>)
  10a9ec:	4607      	mov	r7, r0
  10a9ee:	69ec      	ldr	r4, [r5, #28]
  10a9f0:	460e      	mov	r6, r1
  10a9f2:	b1cc      	cbz	r4, 10aa28 <osRtxThreadWaitEnter+0x40>
  10a9f4:	7a2b      	ldrb	r3, [r5, #8]
  10a9f6:	2b02      	cmp	r3, #2
  10a9f8:	d004      	beq.n	10aa04 <osRtxThreadWaitEnter+0x1c>
  10a9fa:	4620      	mov	r0, r4
  10a9fc:	f7ff fd04 	bl	10a408 <osRtxThreadListRemove>
  10aa00:	2000      	movs	r0, #0
  10aa02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10aa04:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
  10aa06:	b180      	cbz	r0, 10aa2a <osRtxThreadWaitEnter+0x42>
  10aa08:	4620      	mov	r0, r4
  10aa0a:	f7fe f8ba 	bl	108b82 <EvrRtxThreadBlocked>
  10aa0e:	4631      	mov	r1, r6
  10aa10:	4620      	mov	r0, r4
  10aa12:	7067      	strb	r7, [r4, #1]
  10aa14:	f7ff fd1c 	bl	10a450 <osRtxThreadDelayInsert>
  10aa18:	f105 0024 	add.w	r0, r5, #36	; 0x24
  10aa1c:	f7ff fce3 	bl	10a3e6 <osRtxThreadListGet>
  10aa20:	f7ff fdfe 	bl	10a620 <osRtxThreadSwitch>
  10aa24:	2001      	movs	r0, #1
  10aa26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10aa28:	4620      	mov	r0, r4
  10aa2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10aa2c:	3fff40f0 	.word	0x3fff40f0

0010aa30 <svcRtxThreadFlagsWait>:
  10aa30:	4b22      	ldr	r3, [pc, #136]	; (10aabc <svcRtxThreadFlagsWait+0x8c>)
  10aa32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  10aa36:	69de      	ldr	r6, [r3, #28]
  10aa38:	4605      	mov	r5, r0
  10aa3a:	460f      	mov	r7, r1
  10aa3c:	4690      	mov	r8, r2
  10aa3e:	b946      	cbnz	r6, 10aa52 <svcRtxThreadFlagsWait+0x22>
  10aa40:	4630      	mov	r0, r6
  10aa42:	f06f 0107 	mvn.w	r1, #7
  10aa46:	f7fe f895 	bl	108b74 <EvrRtxThreadError>
  10aa4a:	f04f 30ff 	mov.w	r0, #4294967295
  10aa4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10aa52:	2800      	cmp	r0, #0
  10aa54:	da08      	bge.n	10aa68 <svcRtxThreadFlagsWait+0x38>
  10aa56:	4630      	mov	r0, r6
  10aa58:	f06f 0103 	mvn.w	r1, #3
  10aa5c:	f7fe f88a 	bl	108b74 <EvrRtxThreadError>
  10aa60:	f06f 0003 	mvn.w	r0, #3
  10aa64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10aa68:	460a      	mov	r2, r1
  10aa6a:	4601      	mov	r1, r0
  10aa6c:	4630      	mov	r0, r6
  10aa6e:	f7ff fc21 	bl	10a2b4 <ThreadFlagsCheck>
  10aa72:	4604      	mov	r4, r0
  10aa74:	b138      	cbz	r0, 10aa86 <svcRtxThreadFlagsWait+0x56>
  10aa76:	4602      	mov	r2, r0
  10aa78:	4639      	mov	r1, r7
  10aa7a:	4628      	mov	r0, r5
  10aa7c:	f7fe f88c 	bl	108b98 <EvrRtxThreadFlagsWaitCompleted>
  10aa80:	4620      	mov	r0, r4
  10aa82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10aa86:	f1b8 0f00 	cmp.w	r8, #0
  10aa8a:	d00f      	beq.n	10aaac <svcRtxThreadFlagsWait+0x7c>
  10aa8c:	4642      	mov	r2, r8
  10aa8e:	4639      	mov	r1, r7
  10aa90:	4628      	mov	r0, r5
  10aa92:	f7fe f87f 	bl	108b94 <EvrRtxThreadFlagsWaitPending>
  10aa96:	6275      	str	r5, [r6, #36]	; 0x24
  10aa98:	f886 7023 	strb.w	r7, [r6, #35]	; 0x23
  10aa9c:	4641      	mov	r1, r8
  10aa9e:	2033      	movs	r0, #51	; 0x33
  10aaa0:	f7ff ffa2 	bl	10a9e8 <osRtxThreadWaitEnter>
  10aaa4:	f06f 0001 	mvn.w	r0, #1
  10aaa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10aaac:	4628      	mov	r0, r5
  10aaae:	4639      	mov	r1, r7
  10aab0:	f7fe f873 	bl	108b9a <EvrRtxThreadFlagsWaitNotCompleted>
  10aab4:	f06f 0002 	mvn.w	r0, #2
  10aab8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10aabc:	3fff40f0 	.word	0x3fff40f0

0010aac0 <svcRtxThreadExit>:
  10aac0:	b570      	push	{r4, r5, r6, lr}
  10aac2:	4d1c      	ldr	r5, [pc, #112]	; (10ab34 <svcRtxThreadExit+0x74>)
  10aac4:	69ec      	ldr	r4, [r5, #28]
  10aac6:	2c00      	cmp	r4, #0
  10aac8:	d032      	beq.n	10ab30 <svcRtxThreadExit+0x70>
  10aaca:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  10aacc:	f7ff f82c 	bl	109b28 <osRtxMutexOwnerRelease>
  10aad0:	69a0      	ldr	r0, [r4, #24]
  10aad2:	b130      	cbz	r0, 10aae2 <svcRtxThreadExit+0x22>
  10aad4:	2200      	movs	r2, #0
  10aad6:	4611      	mov	r1, r2
  10aad8:	f7ff fde0 	bl	10a69c <osRtxThreadWaitExit>
  10aadc:	69a0      	ldr	r0, [r4, #24]
  10aade:	f7fe f84f 	bl	108b80 <EvrRtxThreadJoined>
  10aae2:	7a2b      	ldrb	r3, [r5, #8]
  10aae4:	4e13      	ldr	r6, [pc, #76]	; (10ab34 <svcRtxThreadExit+0x74>)
  10aae6:	2b02      	cmp	r3, #2
  10aae8:	d122      	bne.n	10ab30 <svcRtxThreadExit+0x70>
  10aaea:	6af3      	ldr	r3, [r6, #44]	; 0x2c
  10aaec:	b303      	cbz	r3, 10ab30 <svcRtxThreadExit+0x70>
  10aaee:	f3ef 8309 	mrs	r3, PSP
  10aaf2:	63a3      	str	r3, [r4, #56]	; 0x38
  10aaf4:	f106 0024 	add.w	r0, r6, #36	; 0x24
  10aaf8:	f7ff fc75 	bl	10a3e6 <osRtxThreadListGet>
  10aafc:	f7ff fd90 	bl	10a620 <osRtxThreadSwitch>
  10ab00:	2300      	movs	r3, #0
  10ab02:	61f3      	str	r3, [r6, #28]
  10ab04:	78e3      	ldrb	r3, [r4, #3]
  10ab06:	07db      	lsls	r3, r3, #31
  10ab08:	d501      	bpl.n	10ab0e <svcRtxThreadExit+0x4e>
  10ab0a:	69a3      	ldr	r3, [r4, #24]
  10ab0c:	b11b      	cbz	r3, 10ab16 <svcRtxThreadExit+0x56>
  10ab0e:	4620      	mov	r0, r4
  10ab10:	f7ff fc06 	bl	10a320 <osRtxThreadFree>
  10ab14:	e007      	b.n	10ab26 <svcRtxThreadExit+0x66>
  10ab16:	2204      	movs	r2, #4
  10ab18:	7062      	strb	r2, [r4, #1]
  10ab1a:	60e3      	str	r3, [r4, #12]
  10ab1c:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
  10ab1e:	60a3      	str	r3, [r4, #8]
  10ab20:	b103      	cbz	r3, 10ab24 <svcRtxThreadExit+0x64>
  10ab22:	60dc      	str	r4, [r3, #12]
  10ab24:	63ec      	str	r4, [r5, #60]	; 0x3c
  10ab26:	4620      	mov	r0, r4
  10ab28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10ab2c:	f7fe b82e 	b.w	108b8c <EvrRtxThreadDestroyed>
  10ab30:	bd70      	pop	{r4, r5, r6, pc}
  10ab32:	bf00      	nop
  10ab34:	3fff40f0 	.word	0x3fff40f0

0010ab38 <svcRtxThreadTerminate>:
  10ab38:	b538      	push	{r3, r4, r5, lr}
  10ab3a:	4604      	mov	r4, r0
  10ab3c:	b110      	cbz	r0, 10ab44 <svcRtxThreadTerminate+0xc>
  10ab3e:	7803      	ldrb	r3, [r0, #0]
  10ab40:	2b01      	cmp	r3, #1
  10ab42:	d007      	beq.n	10ab54 <svcRtxThreadTerminate+0x1c>
  10ab44:	4620      	mov	r0, r4
  10ab46:	f06f 0103 	mvn.w	r1, #3
  10ab4a:	f7fe f813 	bl	108b74 <EvrRtxThreadError>
  10ab4e:	f06f 0003 	mvn.w	r0, #3
  10ab52:	bd38      	pop	{r3, r4, r5, pc}
  10ab54:	7843      	ldrb	r3, [r0, #1]
  10ab56:	f003 030f 	and.w	r3, r3, #15
  10ab5a:	2b02      	cmp	r3, #2
  10ab5c:	d00e      	beq.n	10ab7c <svcRtxThreadTerminate+0x44>
  10ab5e:	2b03      	cmp	r3, #3
  10ab60:	d004      	beq.n	10ab6c <svcRtxThreadTerminate+0x34>
  10ab62:	2b01      	cmp	r3, #1
  10ab64:	d107      	bne.n	10ab76 <svcRtxThreadTerminate+0x3e>
  10ab66:	f7ff fc4f 	bl	10a408 <osRtxThreadListRemove>
  10ab6a:	e007      	b.n	10ab7c <svcRtxThreadTerminate+0x44>
  10ab6c:	f7ff fc4c 	bl	10a408 <osRtxThreadListRemove>
  10ab70:	f7ff fc92 	bl	10a498 <osRtxThreadDelayRemove>
  10ab74:	e002      	b.n	10ab7c <svcRtxThreadTerminate+0x44>
  10ab76:	f06f 0102 	mvn.w	r1, #2
  10ab7a:	e01e      	b.n	10abba <svcRtxThreadTerminate+0x82>
  10ab7c:	4b24      	ldr	r3, [pc, #144]	; (10ac10 <svcRtxThreadTerminate+0xd8>)
  10ab7e:	681b      	ldr	r3, [r3, #0]
  10ab80:	b11b      	cbz	r3, 10ab8a <svcRtxThreadTerminate+0x52>
  10ab82:	68db      	ldr	r3, [r3, #12]
  10ab84:	b10b      	cbz	r3, 10ab8a <svcRtxThreadTerminate+0x52>
  10ab86:	6c60      	ldr	r0, [r4, #68]	; 0x44
  10ab88:	4798      	blx	r3
  10ab8a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  10ab8c:	f7fe ffcc 	bl	109b28 <osRtxMutexOwnerRelease>
  10ab90:	69a0      	ldr	r0, [r4, #24]
  10ab92:	b130      	cbz	r0, 10aba2 <svcRtxThreadTerminate+0x6a>
  10ab94:	2200      	movs	r2, #0
  10ab96:	4611      	mov	r1, r2
  10ab98:	f7ff fd80 	bl	10a69c <osRtxThreadWaitExit>
  10ab9c:	69a0      	ldr	r0, [r4, #24]
  10ab9e:	f7fd ffef 	bl	108b80 <EvrRtxThreadJoined>
  10aba2:	7863      	ldrb	r3, [r4, #1]
  10aba4:	2b02      	cmp	r3, #2
  10aba6:	d119      	bne.n	10abdc <svcRtxThreadTerminate+0xa4>
  10aba8:	4d1a      	ldr	r5, [pc, #104]	; (10ac14 <svcRtxThreadTerminate+0xdc>)
  10abaa:	7a2b      	ldrb	r3, [r5, #8]
  10abac:	2b02      	cmp	r3, #2
  10abae:	d101      	bne.n	10abb4 <svcRtxThreadTerminate+0x7c>
  10abb0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
  10abb2:	b93b      	cbnz	r3, 10abc4 <svcRtxThreadTerminate+0x8c>
  10abb4:	4620      	mov	r0, r4
  10abb6:	f06f 0102 	mvn.w	r1, #2
  10abba:	f7fd ffdb 	bl	108b74 <EvrRtxThreadError>
  10abbe:	f06f 0002 	mvn.w	r0, #2
  10abc2:	bd38      	pop	{r3, r4, r5, pc}
  10abc4:	f3ef 8309 	mrs	r3, PSP
  10abc8:	63a3      	str	r3, [r4, #56]	; 0x38
  10abca:	f105 0024 	add.w	r0, r5, #36	; 0x24
  10abce:	f7ff fc0a 	bl	10a3e6 <osRtxThreadListGet>
  10abd2:	f7ff fd25 	bl	10a620 <osRtxThreadSwitch>
  10abd6:	2300      	movs	r3, #0
  10abd8:	61eb      	str	r3, [r5, #28]
  10abda:	e002      	b.n	10abe2 <svcRtxThreadTerminate+0xaa>
  10abdc:	2000      	movs	r0, #0
  10abde:	f7ff fd2f 	bl	10a640 <osRtxThreadDispatch>
  10abe2:	78e3      	ldrb	r3, [r4, #3]
  10abe4:	07db      	lsls	r3, r3, #31
  10abe6:	d501      	bpl.n	10abec <svcRtxThreadTerminate+0xb4>
  10abe8:	69a3      	ldr	r3, [r4, #24]
  10abea:	b11b      	cbz	r3, 10abf4 <svcRtxThreadTerminate+0xbc>
  10abec:	4620      	mov	r0, r4
  10abee:	f7ff fb97 	bl	10a320 <osRtxThreadFree>
  10abf2:	e008      	b.n	10ac06 <svcRtxThreadTerminate+0xce>
  10abf4:	2204      	movs	r2, #4
  10abf6:	60e3      	str	r3, [r4, #12]
  10abf8:	4b06      	ldr	r3, [pc, #24]	; (10ac14 <svcRtxThreadTerminate+0xdc>)
  10abfa:	7062      	strb	r2, [r4, #1]
  10abfc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
  10abfe:	60a2      	str	r2, [r4, #8]
  10ac00:	b102      	cbz	r2, 10ac04 <svcRtxThreadTerminate+0xcc>
  10ac02:	60d4      	str	r4, [r2, #12]
  10ac04:	63dc      	str	r4, [r3, #60]	; 0x3c
  10ac06:	4620      	mov	r0, r4
  10ac08:	f7fd ffc0 	bl	108b8c <EvrRtxThreadDestroyed>
  10ac0c:	2000      	movs	r0, #0
  10ac0e:	bd38      	pop	{r3, r4, r5, pc}
  10ac10:	3fff9f08 	.word	0x3fff9f08
  10ac14:	3fff40f0 	.word	0x3fff40f0

0010ac18 <osThreadContextNew>:
  10ac18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10ac1a:	4607      	mov	r7, r0
  10ac1c:	460e      	mov	r6, r1
  10ac1e:	4615      	mov	r5, r2
  10ac20:	461c      	mov	r4, r3
  10ac22:	f7fd ffa8 	bl	108b76 <EvrRtxThreadNew>
  10ac26:	f3ef 8305 	mrs	r3, IPSR
  10ac2a:	b92b      	cbnz	r3, 10ac38 <osThreadContextNew+0x20>
  10ac2c:	f3ef 8310 	mrs	r3, PRIMASK
  10ac30:	b913      	cbnz	r3, 10ac38 <osThreadContextNew+0x20>
  10ac32:	f3ef 8311 	mrs	r3, BASEPRI
  10ac36:	b133      	cbz	r3, 10ac46 <osThreadContextNew+0x2e>
  10ac38:	f06f 0105 	mvn.w	r1, #5
  10ac3c:	2000      	movs	r0, #0
  10ac3e:	f7fd ff99 	bl	108b74 <EvrRtxThreadError>
  10ac42:	2000      	movs	r0, #0
  10ac44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10ac46:	4638      	mov	r0, r7
  10ac48:	4631      	mov	r1, r6
  10ac4a:	462a      	mov	r2, r5
  10ac4c:	4623      	mov	r3, r4
  10ac4e:	f8df c020 	ldr.w	r12, [pc, #32]	; 10ac70 <osThreadContextNew+0x58>
  10ac52:	f3ef 8414 	mrs	r4, CONTROL
  10ac56:	f014 0f02 	tst.w	r4, #2
  10ac5a:	d106      	bne.n	10ac6a <osThreadContextNew+0x52>
  10ac5c:	f3ef 8408 	mrs	r4, MSP
  10ac60:	3c20      	subs	r4, #32
  10ac62:	f024 0407 	bic.w	r4, r4, #7
  10ac66:	f384 8809 	msr	PSP, r4
  10ac6a:	df00      	svc	0
  10ac6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10ac6e:	bf00      	nop
  10ac70:	0010a78d 	.word	0x0010a78d

0010ac74 <osThreadNew>:
  10ac74:	2300      	movs	r3, #0
  10ac76:	f7ff bfcf 	b.w	10ac18 <osThreadContextNew>
	...

0010ac7c <osThreadGetName>:
  10ac7c:	b508      	push	{r3, lr}
  10ac7e:	4603      	mov	r3, r0
  10ac80:	f3ef 8205 	mrs	r2, IPSR
  10ac84:	b92a      	cbnz	r2, 10ac92 <osThreadGetName+0x16>
  10ac86:	f3ef 8210 	mrs	r2, PRIMASK
  10ac8a:	b912      	cbnz	r2, 10ac92 <osThreadGetName+0x16>
  10ac8c:	f3ef 8211 	mrs	r2, BASEPRI
  10ac90:	b12a      	cbz	r2, 10ac9e <osThreadGetName+0x22>
  10ac92:	4618      	mov	r0, r3
  10ac94:	2100      	movs	r1, #0
  10ac96:	f7fd ff70 	bl	108b7a <EvrRtxThreadGetName>
  10ac9a:	2000      	movs	r0, #0
  10ac9c:	bd08      	pop	{r3, pc}
  10ac9e:	f8df c008 	ldr.w	r12, [pc, #8]	; 10aca8 <osThreadGetName+0x2c>
  10aca2:	df00      	svc	0
  10aca4:	bd08      	pop	{r3, pc}
  10aca6:	bf00      	nop
  10aca8:	0010a375 	.word	0x0010a375

0010acac <osThreadGetId>:
  10acac:	b508      	push	{r3, lr}
  10acae:	f3ef 8305 	mrs	r3, IPSR
  10acb2:	b92b      	cbnz	r3, 10acc0 <osThreadGetId+0x14>
  10acb4:	f3ef 8310 	mrs	r3, PRIMASK
  10acb8:	b913      	cbnz	r3, 10acc0 <osThreadGetId+0x14>
  10acba:	f3ef 8311 	mrs	r3, BASEPRI
  10acbe:	b123      	cbz	r3, 10acca <osThreadGetId+0x1e>
  10acc0:	2000      	movs	r0, #0
  10acc2:	f7fd ff5b 	bl	108b7c <EvrRtxThreadGetId>
  10acc6:	2000      	movs	r0, #0
  10acc8:	bd08      	pop	{r3, pc}
  10acca:	f8df c008 	ldr.w	r12, [pc, #8]	; 10acd4 <osThreadGetId+0x28>
  10acce:	df00      	svc	0
  10acd0:	bd08      	pop	{r3, pc}
  10acd2:	bf00      	nop
  10acd4:	0010a285 	.word	0x0010a285

0010acd8 <osThreadSetPriority>:
  10acd8:	b538      	push	{r3, r4, r5, lr}
  10acda:	4604      	mov	r4, r0
  10acdc:	460d      	mov	r5, r1
  10acde:	f7fd ff4e 	bl	108b7e <EvrRtxThreadSetPriority>
  10ace2:	f3ef 8305 	mrs	r3, IPSR
  10ace6:	b92b      	cbnz	r3, 10acf4 <osThreadSetPriority+0x1c>
  10ace8:	f3ef 8310 	mrs	r3, PRIMASK
  10acec:	b913      	cbnz	r3, 10acf4 <osThreadSetPriority+0x1c>
  10acee:	f3ef 8311 	mrs	r3, BASEPRI
  10acf2:	b13b      	cbz	r3, 10ad04 <osThreadSetPriority+0x2c>
  10acf4:	4620      	mov	r0, r4
  10acf6:	f06f 0105 	mvn.w	r1, #5
  10acfa:	f7fd ff3b 	bl	108b74 <EvrRtxThreadError>
  10acfe:	f06f 0005 	mvn.w	r0, #5
  10ad02:	bd38      	pop	{r3, r4, r5, pc}
  10ad04:	4620      	mov	r0, r4
  10ad06:	4629      	mov	r1, r5
  10ad08:	f8df c004 	ldr.w	r12, [pc, #4]	; 10ad10 <osThreadSetPriority+0x38>
  10ad0c:	df00      	svc	0
  10ad0e:	bd38      	pop	{r3, r4, r5, pc}
  10ad10:	0010a991 	.word	0x0010a991

0010ad14 <osThreadTerminate>:
  10ad14:	b510      	push	{r4, lr}
  10ad16:	4604      	mov	r4, r0
  10ad18:	f7fd ff37 	bl	108b8a <EvrRtxThreadTerminate>
  10ad1c:	f3ef 8305 	mrs	r3, IPSR
  10ad20:	b92b      	cbnz	r3, 10ad2e <osThreadTerminate+0x1a>
  10ad22:	f3ef 8310 	mrs	r3, PRIMASK
  10ad26:	b913      	cbnz	r3, 10ad2e <osThreadTerminate+0x1a>
  10ad28:	f3ef 8311 	mrs	r3, BASEPRI
  10ad2c:	b13b      	cbz	r3, 10ad3e <osThreadTerminate+0x2a>
  10ad2e:	4620      	mov	r0, r4
  10ad30:	f06f 0105 	mvn.w	r1, #5
  10ad34:	f7fd ff1e 	bl	108b74 <EvrRtxThreadError>
  10ad38:	f06f 0005 	mvn.w	r0, #5
  10ad3c:	bd10      	pop	{r4, pc}
  10ad3e:	4620      	mov	r0, r4
  10ad40:	f8df c004 	ldr.w	r12, [pc, #4]	; 10ad48 <osThreadTerminate+0x34>
  10ad44:	df00      	svc	0
  10ad46:	bd10      	pop	{r4, pc}
  10ad48:	0010ab39 	.word	0x0010ab39

0010ad4c <osThreadFlagsSet>:
  10ad4c:	b570      	push	{r4, r5, r6, lr}
  10ad4e:	4604      	mov	r4, r0
  10ad50:	460e      	mov	r6, r1
  10ad52:	f7fd ff1c 	bl	108b8e <EvrRtxThreadFlagsSet>
  10ad56:	f3ef 8305 	mrs	r3, IPSR
  10ad5a:	b92b      	cbnz	r3, 10ad68 <osThreadFlagsSet+0x1c>
  10ad5c:	f3ef 8310 	mrs	r3, PRIMASK
  10ad60:	b913      	cbnz	r3, 10ad68 <osThreadFlagsSet+0x1c>
  10ad62:	f3ef 8311 	mrs	r3, BASEPRI
  10ad66:	b363      	cbz	r3, 10adc2 <osThreadFlagsSet+0x76>
  10ad68:	b124      	cbz	r4, 10ad74 <osThreadFlagsSet+0x28>
  10ad6a:	7823      	ldrb	r3, [r4, #0]
  10ad6c:	2b01      	cmp	r3, #1
  10ad6e:	d101      	bne.n	10ad74 <osThreadFlagsSet+0x28>
  10ad70:	2e00      	cmp	r6, #0
  10ad72:	da07      	bge.n	10ad84 <osThreadFlagsSet+0x38>
  10ad74:	4620      	mov	r0, r4
  10ad76:	f06f 0103 	mvn.w	r1, #3
  10ad7a:	f7fd fefb 	bl	108b74 <EvrRtxThreadError>
  10ad7e:	f06f 0003 	mvn.w	r0, #3
  10ad82:	bd70      	pop	{r4, r5, r6, pc}
  10ad84:	7863      	ldrb	r3, [r4, #1]
  10ad86:	f013 0ffb 	tst.w	r3, #251	; 0xfb
  10ad8a:	d107      	bne.n	10ad9c <osThreadFlagsSet+0x50>
  10ad8c:	4620      	mov	r0, r4
  10ad8e:	f06f 0102 	mvn.w	r1, #2
  10ad92:	f7fd feef 	bl	108b74 <EvrRtxThreadError>
  10ad96:	f06f 0002 	mvn.w	r0, #2
  10ad9a:	bd70      	pop	{r4, r5, r6, pc}
  10ad9c:	f104 0328 	add.w	r3, r4, #40	; 0x28
  10ada0:	e853 2f00 	ldrex	r2, [r3]
  10ada4:	ea42 0506 	orr.w	r5, r2, r6
  10ada8:	e843 5100 	strex	r1, r5, [r3]
  10adac:	b101      	cbz	r1, 10adb0 <osThreadFlagsSet+0x64>
  10adae:	e7f7      	b.n	10ada0 <osThreadFlagsSet+0x54>
  10adb0:	4620      	mov	r0, r4
  10adb2:	f7ff f9cf 	bl	10a154 <osRtxPostProcess>
  10adb6:	4620      	mov	r0, r4
  10adb8:	4629      	mov	r1, r5
  10adba:	f7fd fee9 	bl	108b90 <EvrRtxThreadFlagsSetDone>
  10adbe:	4628      	mov	r0, r5
  10adc0:	bd70      	pop	{r4, r5, r6, pc}
  10adc2:	4620      	mov	r0, r4
  10adc4:	4631      	mov	r1, r6
  10adc6:	f8df c008 	ldr.w	r12, [pc, #8]	; 10add0 <osThreadFlagsSet+0x84>
  10adca:	df00      	svc	0
  10adcc:	bd70      	pop	{r4, r5, r6, pc}
  10adce:	bf00      	nop
  10add0:	0010a6fb 	.word	0x0010a6fb

0010add4 <osThreadFlagsWait>:
  10add4:	b570      	push	{r4, r5, r6, lr}
  10add6:	4606      	mov	r6, r0
  10add8:	460d      	mov	r5, r1
  10adda:	4614      	mov	r4, r2
  10addc:	f7fd fed9 	bl	108b92 <EvrRtxThreadFlagsWait>
  10ade0:	f3ef 8305 	mrs	r3, IPSR
  10ade4:	b92b      	cbnz	r3, 10adf2 <osThreadFlagsWait+0x1e>
  10ade6:	f3ef 8310 	mrs	r3, PRIMASK
  10adea:	b913      	cbnz	r3, 10adf2 <osThreadFlagsWait+0x1e>
  10adec:	f3ef 8311 	mrs	r3, BASEPRI
  10adf0:	b13b      	cbz	r3, 10ae02 <osThreadFlagsWait+0x2e>
  10adf2:	f06f 0105 	mvn.w	r1, #5
  10adf6:	2000      	movs	r0, #0
  10adf8:	f7fd febc 	bl	108b74 <EvrRtxThreadError>
  10adfc:	f06f 0005 	mvn.w	r0, #5
  10ae00:	bd70      	pop	{r4, r5, r6, pc}
  10ae02:	4630      	mov	r0, r6
  10ae04:	4629      	mov	r1, r5
  10ae06:	4622      	mov	r2, r4
  10ae08:	f8df c004 	ldr.w	r12, [pc, #4]	; 10ae10 <osThreadFlagsWait+0x3c>
  10ae0c:	df00      	svc	0
  10ae0e:	bd70      	pop	{r4, r5, r6, pc}
  10ae10:	0010aa31 	.word	0x0010aa31

0010ae14 <TimerInsert>:
  10ae14:	4a0c      	ldr	r2, [pc, #48]	; (10ae48 <TimerInsert+0x34>)
  10ae16:	b530      	push	{r4, r5, lr}
  10ae18:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
  10ae1a:	2400      	movs	r4, #0
  10ae1c:	b133      	cbz	r3, 10ae2c <TimerInsert+0x18>
  10ae1e:	691d      	ldr	r5, [r3, #16]
  10ae20:	42a9      	cmp	r1, r5
  10ae22:	d303      	bcc.n	10ae2c <TimerInsert+0x18>
  10ae24:	461c      	mov	r4, r3
  10ae26:	1b49      	subs	r1, r1, r5
  10ae28:	68db      	ldr	r3, [r3, #12]
  10ae2a:	e7f7      	b.n	10ae1c <TimerInsert+0x8>
  10ae2c:	6101      	str	r1, [r0, #16]
  10ae2e:	6084      	str	r4, [r0, #8]
  10ae30:	60c3      	str	r3, [r0, #12]
  10ae32:	b11b      	cbz	r3, 10ae3c <TimerInsert+0x28>
  10ae34:	691d      	ldr	r5, [r3, #16]
  10ae36:	6098      	str	r0, [r3, #8]
  10ae38:	1a69      	subs	r1, r5, r1
  10ae3a:	6119      	str	r1, [r3, #16]
  10ae3c:	b10c      	cbz	r4, 10ae42 <TimerInsert+0x2e>
  10ae3e:	60e0      	str	r0, [r4, #12]
  10ae40:	bd30      	pop	{r4, r5, pc}
  10ae42:	64d0      	str	r0, [r2, #76]	; 0x4c
  10ae44:	bd30      	pop	{r4, r5, pc}
  10ae46:	bf00      	nop
  10ae48:	3fff40f0 	.word	0x3fff40f0

0010ae4c <osRtxTimerTick>:
  10ae4c:	b570      	push	{r4, r5, r6, lr}
  10ae4e:	4d13      	ldr	r5, [pc, #76]	; (10ae9c <osRtxTimerTick+0x50>)
  10ae50:	6cec      	ldr	r4, [r5, #76]	; 0x4c
  10ae52:	b314      	cbz	r4, 10ae9a <osRtxTimerTick+0x4e>
  10ae54:	6923      	ldr	r3, [r4, #16]
  10ae56:	2601      	movs	r6, #1
  10ae58:	3b01      	subs	r3, #1
  10ae5a:	6123      	str	r3, [r4, #16]
  10ae5c:	6923      	ldr	r3, [r4, #16]
  10ae5e:	b9e3      	cbnz	r3, 10ae9a <osRtxTimerTick+0x4e>
  10ae60:	68e3      	ldr	r3, [r4, #12]
  10ae62:	b10b      	cbz	r3, 10ae68 <osRtxTimerTick+0x1c>
  10ae64:	68a2      	ldr	r2, [r4, #8]
  10ae66:	609a      	str	r2, [r3, #8]
  10ae68:	64eb      	str	r3, [r5, #76]	; 0x4c
  10ae6a:	2300      	movs	r3, #0
  10ae6c:	461a      	mov	r2, r3
  10ae6e:	f104 0118 	add.w	r1, r4, #24
  10ae72:	6d68      	ldr	r0, [r5, #84]	; 0x54
  10ae74:	f7fe fc32 	bl	1096dc <osMessageQueuePut>
  10ae78:	b118      	cbz	r0, 10ae82 <osRtxTimerTick+0x36>
  10ae7a:	4621      	mov	r1, r4
  10ae7c:	2003      	movs	r0, #3
  10ae7e:	f7fd fe09 	bl	108a94 <osRtxErrorNotify>
  10ae82:	78e3      	ldrb	r3, [r4, #3]
  10ae84:	2b01      	cmp	r3, #1
  10ae86:	d104      	bne.n	10ae92 <osRtxTimerTick+0x46>
  10ae88:	6961      	ldr	r1, [r4, #20]
  10ae8a:	4620      	mov	r0, r4
  10ae8c:	f7ff ffc2 	bl	10ae14 <TimerInsert>
  10ae90:	e000      	b.n	10ae94 <osRtxTimerTick+0x48>
  10ae92:	7066      	strb	r6, [r4, #1]
  10ae94:	6cec      	ldr	r4, [r5, #76]	; 0x4c
  10ae96:	2c00      	cmp	r4, #0
  10ae98:	d1e0      	bne.n	10ae5c <osRtxTimerTick+0x10>
  10ae9a:	bd70      	pop	{r4, r5, r6, pc}
  10ae9c:	3fff40f0 	.word	0x3fff40f0

0010aea0 <osRtxTimerThread>:
  10aea0:	4b0f      	ldr	r3, [pc, #60]	; (10aee0 <osRtxTimerThread+0x40>)
  10aea2:	b513      	push	{r0, r1, r4, lr}
  10aea4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
  10aea6:	2108      	movs	r1, #8
  10aea8:	6e58      	ldr	r0, [r3, #100]	; 0x64
  10aeaa:	f7fe fbeb 	bl	109684 <osMessageQueueNew>
  10aeae:	4c0d      	ldr	r4, [pc, #52]	; (10aee4 <osRtxTimerThread+0x44>)
  10aeb0:	6560      	str	r0, [r4, #84]	; 0x54
  10aeb2:	b190      	cbz	r0, 10aeda <osRtxTimerThread+0x3a>
  10aeb4:	4b0c      	ldr	r3, [pc, #48]	; (10aee8 <osRtxTimerThread+0x48>)
  10aeb6:	65a3      	str	r3, [r4, #88]	; 0x58
  10aeb8:	f04f 33ff 	mov.w	r3, #4294967295
  10aebc:	2200      	movs	r2, #0
  10aebe:	4669      	mov	r1, sp
  10aec0:	6d60      	ldr	r0, [r4, #84]	; 0x54
  10aec2:	f7fe fc65 	bl	109790 <osMessageQueueGet>
  10aec6:	2800      	cmp	r0, #0
  10aec8:	d1f6      	bne.n	10aeb8 <osRtxTimerThread+0x18>
  10aeca:	e89d 0003 	ldmia.w	sp, {r0, r1}
  10aece:	f7fd fe67 	bl	108ba0 <EvrRtxTimerCallback>
  10aed2:	9801      	ldr	r0, [sp, #4]
  10aed4:	9b00      	ldr	r3, [sp, #0]
  10aed6:	4798      	blx	r3
  10aed8:	e7ee      	b.n	10aeb8 <osRtxTimerThread+0x18>
  10aeda:	b002      	add	sp, #8
  10aedc:	bd10      	pop	{r4, pc}
  10aede:	bf00      	nop
  10aee0:	00119150 	.word	0x00119150
  10aee4:	3fff40f0 	.word	0x3fff40f0
  10aee8:	0010ae4d 	.word	0x0010ae4d

0010aeec <HardFault_Handler>:
  10aeec:	e7fe      	b.n	10aeec <HardFault_Handler>

0010aeee <fIrqTim0Handler>:
  10aeee:	f000 bc91 	b.w	10b814 <us_timer_isr>

0010aef2 <fIrqTim1Handler>:
  10aef2:	f000 bd0b 	b.w	10b90c <us_ticker_isr>

0010aef6 <fIrqGpioHandler>:
  10aef6:	f000 b873 	b.w	10afe0 <fGpioHandler>

0010aefa <fIrqSpiHandler>:
  10aefa:	e7fe      	b.n	10aefa <fIrqSpiHandler>

0010aefc <fIrqUart1Handler>:
  10aefc:	f001 b83e 	b.w	10bf7c <Uart1_Irq>

0010af00 <fIrqUart2Handler>:
  10af00:	f001 b854 	b.w	10bfac <Uart2_Irq>

0010af04 <fIrqRtcHandler>:
  10af04:	f000 bf1a 	b.w	10bd3c <fRtcHandler>

0010af08 <fIrqI2CHandler>:
  10af08:	e7fe      	b.n	10af08 <fIrqI2CHandler>

0010af0a <fIrqI2C2Handler>:
  10af0a:	e7fe      	b.n	10af0a <fIrqI2C2Handler>

0010af0c <fIrqSpi2Handler>:
  10af0c:	e7fe      	b.n	10af0c <fIrqSpi2Handler>

0010af0e <fIrqUviHandler>:
  10af0e:	e7fe      	b.n	10af0e <fIrqUviHandler>

0010af10 <fIrqAdcHandler>:
  10af10:	e7fe      	b.n	10af10 <fIrqAdcHandler>

0010af12 <gpio_set>:
  10af12:	1c43      	adds	r3, r0, #1
  10af14:	b510      	push	{r4, lr}
  10af16:	4604      	mov	r4, r0
  10af18:	d005      	beq.n	10af26 <gpio_set+0x14>
  10af1a:	2100      	movs	r1, #0
  10af1c:	f000 febe 	bl	10bc9c <pin_function>
  10af20:	2001      	movs	r0, #1
  10af22:	40a0      	lsls	r0, r4
  10af24:	bd10      	pop	{r4, pc}
  10af26:	2000      	movs	r0, #0
  10af28:	bd10      	pop	{r4, pc}
	...

0010af2c <gpio_init>:
  10af2c:	b538      	push	{r3, r4, r5, lr}
  10af2e:	4605      	mov	r5, r0
  10af30:	4b0f      	ldr	r3, [pc, #60]	; (10af70 <gpio_init+0x44>)
  10af32:	460c      	mov	r4, r1
  10af34:	6003      	str	r3, [r0, #0]
  10af36:	7129      	strb	r1, [r5, #4]
  10af38:	4608      	mov	r0, r1
  10af3a:	f7ff ffea 	bl	10af12 <gpio_set>
  10af3e:	4b0d      	ldr	r3, [pc, #52]	; (10af74 <gpio_init+0x48>)
  10af40:	60a8      	str	r0, [r5, #8]
  10af42:	691a      	ldr	r2, [r3, #16]
  10af44:	00a1      	lsls	r1, r4, #2
  10af46:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  10af4a:	611a      	str	r2, [r3, #16]
  10af4c:	691a      	ldr	r2, [r3, #16]
  10af4e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
  10af52:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
  10af56:	611a      	str	r2, [r3, #16]
  10af58:	f501 31e0 	add.w	r1, r1, #114688	; 0x1c000
  10af5c:	780a      	ldrb	r2, [r1, #0]
  10af5e:	2001      	movs	r0, #1
  10af60:	f360 0284 	bfi	r2, r0, #2, #3
  10af64:	700a      	strb	r2, [r1, #0]
  10af66:	691a      	ldr	r2, [r3, #16]
  10af68:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
  10af6c:	611a      	str	r2, [r3, #16]
  10af6e:	bd38      	pop	{r3, r4, r5, pc}
  10af70:	4000c000 	.word	0x4000c000
  10af74:	4001b000 	.word	0x4001b000

0010af78 <gpio_mode>:
  10af78:	f990 0004 	ldrsb.w	r0, [r0, #4]
  10af7c:	f000 bea0 	b.w	10bcc0 <pin_mode>

0010af80 <gpio_dir>:
  10af80:	4a07      	ldr	r2, [pc, #28]	; (10afa0 <gpio_dir+0x20>)
  10af82:	6913      	ldr	r3, [r2, #16]
  10af84:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10af88:	6113      	str	r3, [r2, #16]
  10af8a:	b919      	cbnz	r1, 10af94 <gpio_dir+0x14>
  10af8c:	6803      	ldr	r3, [r0, #0]
  10af8e:	6882      	ldr	r2, [r0, #8]
  10af90:	60da      	str	r2, [r3, #12]
  10af92:	4770      	bx	lr
  10af94:	2901      	cmp	r1, #1
  10af96:	bf02      	ittt	eq
  10af98:	6803      	ldreq	r3, [r0, #0]
  10af9a:	6882      	ldreq	r2, [r0, #8]
  10af9c:	609a      	streq	r2, [r3, #8]
  10af9e:	4770      	bx	lr
  10afa0:	4001b000 	.word	0x4001b000

0010afa4 <gpio_write>:
  10afa4:	4a05      	ldr	r2, [pc, #20]	; (10afbc <gpio_write+0x18>)
  10afa6:	6913      	ldr	r3, [r2, #16]
  10afa8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10afac:	6113      	str	r3, [r2, #16]
  10afae:	6803      	ldr	r3, [r0, #0]
  10afb0:	6882      	ldr	r2, [r0, #8]
  10afb2:	b109      	cbz	r1, 10afb8 <gpio_write+0x14>
  10afb4:	601a      	str	r2, [r3, #0]
  10afb6:	4770      	bx	lr
  10afb8:	605a      	str	r2, [r3, #4]
  10afba:	4770      	bx	lr
  10afbc:	4001b000 	.word	0x4001b000

0010afc0 <gpio_read>:
  10afc0:	4a06      	ldr	r2, [pc, #24]	; (10afdc <gpio_read+0x1c>)
  10afc2:	6913      	ldr	r3, [r2, #16]
  10afc4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10afc8:	6113      	str	r3, [r2, #16]
  10afca:	6803      	ldr	r3, [r0, #0]
  10afcc:	681a      	ldr	r2, [r3, #0]
  10afce:	6883      	ldr	r3, [r0, #8]
  10afd0:	421a      	tst	r2, r3
  10afd2:	bf14      	ite	ne
  10afd4:	2001      	movne	r0, #1
  10afd6:	2000      	moveq	r0, #0
  10afd8:	4770      	bx	lr
  10afda:	bf00      	nop
  10afdc:	4001b000 	.word	0x4001b000

0010afe0 <fGpioHandler>:
  10afe0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  10afe4:	4a2c      	ldr	r2, [pc, #176]	; (10b098 <fGpioHandler+0xb8>)
  10afe6:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 10b0a8 <fGpioHandler+0xc8>
  10afea:	6913      	ldr	r3, [r2, #16]
  10afec:	4e2b      	ldr	r6, [pc, #172]	; (10b09c <fGpioHandler+0xbc>)
  10afee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10aff2:	6113      	str	r3, [r2, #16]
  10aff4:	2300      	movs	r3, #0
  10aff6:	461c      	mov	r4, r3
  10aff8:	f8d8 2004 	ldr.w	r2, [r8, #4]
  10affc:	2a00      	cmp	r2, #0
  10affe:	d046      	beq.n	10b08e <fGpioHandler+0xae>
  10b000:	f8d8 7004 	ldr.w	r7, [r8, #4]
  10b004:	220a      	movs	r2, #10
  10b006:	2101      	movs	r1, #1
  10b008:	f8d8 0004 	ldr.w	r0, [r8, #4]
  10b00c:	fa01 f502 	lsl.w	r5, r1, r2
  10b010:	4205      	tst	r5, r0
  10b012:	d024      	beq.n	10b05e <fGpioHandler+0x7e>
  10b014:	3a0a      	subs	r2, #10
  10b016:	2a07      	cmp	r2, #7
  10b018:	d825      	bhi.n	10b066 <fGpioHandler+0x86>
  10b01a:	e8df f002 	tbb	[pc, r2]
  10b01e:	2404      	.short	0x2404
  10b020:	063a2424 	.word	0x063a2424
  10b024:	0a08      	.short	0x0a08
  10b026:	2400      	movs	r4, #0
  10b028:	e01d      	b.n	10b066 <fGpioHandler+0x86>
  10b02a:	2402      	movs	r4, #2
  10b02c:	e01b      	b.n	10b066 <fGpioHandler+0x86>
  10b02e:	2403      	movs	r4, #3
  10b030:	e019      	b.n	10b066 <fGpioHandler+0x86>
  10b032:	4d1b      	ldr	r5, [pc, #108]	; (10b0a0 <fGpioHandler+0xc0>)
  10b034:	f8df 906c 	ldr.w	r9, [pc, #108]	; 10b0a4 <fGpioHandler+0xc4>
  10b038:	f105 0a20 	add.w	r10, r5, #32
  10b03c:	2300      	movs	r3, #0
  10b03e:	f855 0f04 	ldr.w	r0, [r5, #4]!
  10b042:	b148      	cbz	r0, 10b058 <fGpioHandler+0x78>
  10b044:	f8d9 3000 	ldr.w	r3, [r9]
  10b048:	2101      	movs	r1, #1
  10b04a:	4798      	blx	r3
  10b04c:	f8d9 3000 	ldr.w	r3, [r9]
  10b050:	2102      	movs	r1, #2
  10b052:	6828      	ldr	r0, [r5, #0]
  10b054:	4798      	blx	r3
  10b056:	2301      	movs	r3, #1
  10b058:	4555      	cmp	r5, r10
  10b05a:	d1f0      	bne.n	10b03e <fGpioHandler+0x5e>
  10b05c:	e002      	b.n	10b064 <fGpioHandler+0x84>
  10b05e:	3201      	adds	r2, #1
  10b060:	2a12      	cmp	r2, #18
  10b062:	d1d1      	bne.n	10b008 <fGpioHandler+0x28>
  10b064:	b96b      	cbnz	r3, 10b082 <fGpioHandler+0xa2>
  10b066:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
  10b06a:	b160      	cbz	r0, 10b086 <fGpioHandler+0xa6>
  10b06c:	4d0d      	ldr	r5, [pc, #52]	; (10b0a4 <fGpioHandler+0xc4>)
  10b06e:	2101      	movs	r1, #1
  10b070:	682b      	ldr	r3, [r5, #0]
  10b072:	4798      	blx	r3
  10b074:	682b      	ldr	r3, [r5, #0]
  10b076:	2102      	movs	r1, #2
  10b078:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
  10b07c:	4798      	blx	r3
  10b07e:	2300      	movs	r3, #0
  10b080:	e002      	b.n	10b088 <fGpioHandler+0xa8>
  10b082:	2301      	movs	r3, #1
  10b084:	e000      	b.n	10b088 <fGpioHandler+0xa8>
  10b086:	4603      	mov	r3, r0
  10b088:	f8c8 7030 	str.w	r7, [r8, #48]	; 0x30
  10b08c:	e7b4      	b.n	10aff8 <fGpioHandler+0x18>
  10b08e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  10b092:	2401      	movs	r4, #1
  10b094:	e7e7      	b.n	10b066 <fGpioHandler+0x86>
  10b096:	bf00      	nop
  10b098:	4001b000 	.word	0x4001b000
  10b09c:	3fff8af0 	.word	0x3fff8af0
  10b0a0:	3fff8afc 	.word	0x3fff8afc
  10b0a4:	3fff8b38 	.word	0x3fff8b38
  10b0a8:	4000c000 	.word	0x4000c000

0010b0ac <gpio_irq_init>:
  10b0ac:	b510      	push	{r4, lr}
  10b0ae:	1c4c      	adds	r4, r1, #1
  10b0b0:	d102      	bne.n	10b0b8 <gpio_irq_init+0xc>
  10b0b2:	f04f 30ff 	mov.w	r0, #4294967295
  10b0b6:	bd10      	pop	{r4, pc}
  10b0b8:	2401      	movs	r4, #1
  10b0ba:	408c      	lsls	r4, r1
  10b0bc:	6001      	str	r1, [r0, #0]
  10b0be:	390a      	subs	r1, #10
  10b0c0:	6044      	str	r4, [r0, #4]
  10b0c2:	2907      	cmp	r1, #7
  10b0c4:	d832      	bhi.n	10b12c <gpio_irq_init+0x80>
  10b0c6:	e8df f001 	tbb	[pc, r1]
  10b0ca:	3104      	.short	0x3104
  10b0cc:	0a073131 	.word	0x0a073131
  10b0d0:	100d      	.short	0x100d
  10b0d2:	4923      	ldr	r1, [pc, #140]	; (10b160 <gpio_irq_init+0xb4>)
  10b0d4:	600b      	str	r3, [r1, #0]
  10b0d6:	e029      	b.n	10b12c <gpio_irq_init+0x80>
  10b0d8:	4921      	ldr	r1, [pc, #132]	; (10b160 <gpio_irq_init+0xb4>)
  10b0da:	604b      	str	r3, [r1, #4]
  10b0dc:	e026      	b.n	10b12c <gpio_irq_init+0x80>
  10b0de:	4920      	ldr	r1, [pc, #128]	; (10b160 <gpio_irq_init+0xb4>)
  10b0e0:	608b      	str	r3, [r1, #8]
  10b0e2:	e023      	b.n	10b12c <gpio_irq_init+0x80>
  10b0e4:	491e      	ldr	r1, [pc, #120]	; (10b160 <gpio_irq_init+0xb4>)
  10b0e6:	60cb      	str	r3, [r1, #12]
  10b0e8:	e020      	b.n	10b12c <gpio_irq_init+0x80>
  10b0ea:	491d      	ldr	r1, [pc, #116]	; (10b160 <gpio_irq_init+0xb4>)
  10b0ec:	690c      	ldr	r4, [r1, #16]
  10b0ee:	b90c      	cbnz	r4, 10b0f4 <gpio_irq_init+0x48>
  10b0f0:	610b      	str	r3, [r1, #16]
  10b0f2:	e01b      	b.n	10b12c <gpio_irq_init+0x80>
  10b0f4:	694c      	ldr	r4, [r1, #20]
  10b0f6:	b90c      	cbnz	r4, 10b0fc <gpio_irq_init+0x50>
  10b0f8:	614b      	str	r3, [r1, #20]
  10b0fa:	e017      	b.n	10b12c <gpio_irq_init+0x80>
  10b0fc:	698c      	ldr	r4, [r1, #24]
  10b0fe:	b90c      	cbnz	r4, 10b104 <gpio_irq_init+0x58>
  10b100:	618b      	str	r3, [r1, #24]
  10b102:	e013      	b.n	10b12c <gpio_irq_init+0x80>
  10b104:	69cc      	ldr	r4, [r1, #28]
  10b106:	b90c      	cbnz	r4, 10b10c <gpio_irq_init+0x60>
  10b108:	61cb      	str	r3, [r1, #28]
  10b10a:	e00f      	b.n	10b12c <gpio_irq_init+0x80>
  10b10c:	6a0c      	ldr	r4, [r1, #32]
  10b10e:	b90c      	cbnz	r4, 10b114 <gpio_irq_init+0x68>
  10b110:	620b      	str	r3, [r1, #32]
  10b112:	e00b      	b.n	10b12c <gpio_irq_init+0x80>
  10b114:	6a4c      	ldr	r4, [r1, #36]	; 0x24
  10b116:	b90c      	cbnz	r4, 10b11c <gpio_irq_init+0x70>
  10b118:	624b      	str	r3, [r1, #36]	; 0x24
  10b11a:	e007      	b.n	10b12c <gpio_irq_init+0x80>
  10b11c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
  10b11e:	b90c      	cbnz	r4, 10b124 <gpio_irq_init+0x78>
  10b120:	628b      	str	r3, [r1, #40]	; 0x28
  10b122:	e003      	b.n	10b12c <gpio_irq_init+0x80>
  10b124:	6acc      	ldr	r4, [r1, #44]	; 0x2c
  10b126:	2c00      	cmp	r4, #0
  10b128:	d1c3      	bne.n	10b0b2 <gpio_irq_init+0x6>
  10b12a:	62cb      	str	r3, [r1, #44]	; 0x2c
  10b12c:	490d      	ldr	r1, [pc, #52]	; (10b164 <gpio_irq_init+0xb8>)
  10b12e:	690b      	ldr	r3, [r1, #16]
  10b130:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10b134:	610b      	str	r3, [r1, #16]
  10b136:	6841      	ldr	r1, [r0, #4]
  10b138:	4b0b      	ldr	r3, [pc, #44]	; (10b168 <gpio_irq_init+0xbc>)
  10b13a:	6083      	str	r3, [r0, #8]
  10b13c:	60d9      	str	r1, [r3, #12]
  10b13e:	6319      	str	r1, [r3, #48]	; 0x30
  10b140:	6199      	str	r1, [r3, #24]
  10b142:	6219      	str	r1, [r3, #32]
  10b144:	6119      	str	r1, [r3, #16]
  10b146:	4b09      	ldr	r3, [pc, #36]	; (10b16c <gpio_irq_init+0xc0>)
  10b148:	2000      	movs	r0, #0
  10b14a:	601a      	str	r2, [r3, #0]
  10b14c:	4b08      	ldr	r3, [pc, #32]	; (10b170 <gpio_irq_init+0xc4>)
  10b14e:	2220      	movs	r2, #32
  10b150:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
  10b154:	2240      	movs	r2, #64	; 0x40
  10b156:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
  10b15a:	601a      	str	r2, [r3, #0]
  10b15c:	bd10      	pop	{r4, pc}
  10b15e:	bf00      	nop
  10b160:	3fff8af0 	.word	0x3fff8af0
  10b164:	4001b000 	.word	0x4001b000
  10b168:	4000c000 	.word	0x4000c000
  10b16c:	3fff8b38 	.word	0x3fff8b38
  10b170:	e000e100 	.word	0xe000e100

0010b174 <gpio_irq_free>:
  10b174:	4a06      	ldr	r2, [pc, #24]	; (10b190 <gpio_irq_free+0x1c>)
  10b176:	2100      	movs	r1, #0
  10b178:	6913      	ldr	r3, [r2, #16]
  10b17a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10b17e:	6113      	str	r3, [r2, #16]
  10b180:	6883      	ldr	r3, [r0, #8]
  10b182:	6842      	ldr	r2, [r0, #4]
  10b184:	615a      	str	r2, [r3, #20]
  10b186:	6802      	ldr	r2, [r0, #0]
  10b188:	4b02      	ldr	r3, [pc, #8]	; (10b194 <gpio_irq_free+0x20>)
  10b18a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  10b18e:	4770      	bx	lr
  10b190:	4001b000 	.word	0x4001b000
  10b194:	3fff8af0 	.word	0x3fff8af0

0010b198 <gpio_irq_set>:
  10b198:	b510      	push	{r4, lr}
  10b19a:	4c0a      	ldr	r4, [pc, #40]	; (10b1c4 <gpio_irq_set+0x2c>)
  10b19c:	2901      	cmp	r1, #1
  10b19e:	6923      	ldr	r3, [r4, #16]
  10b1a0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10b1a4:	6123      	str	r3, [r4, #16]
  10b1a6:	6883      	ldr	r3, [r0, #8]
  10b1a8:	6840      	ldr	r0, [r0, #4]
  10b1aa:	6198      	str	r0, [r3, #24]
  10b1ac:	d003      	beq.n	10b1b6 <gpio_irq_set+0x1e>
  10b1ae:	2902      	cmp	r1, #2
  10b1b0:	d102      	bne.n	10b1b8 <gpio_irq_set+0x20>
  10b1b2:	6258      	str	r0, [r3, #36]	; 0x24
  10b1b4:	e000      	b.n	10b1b8 <gpio_irq_set+0x20>
  10b1b6:	6218      	str	r0, [r3, #32]
  10b1b8:	b10a      	cbz	r2, 10b1be <gpio_irq_set+0x26>
  10b1ba:	6118      	str	r0, [r3, #16]
  10b1bc:	bd10      	pop	{r4, pc}
  10b1be:	6158      	str	r0, [r3, #20]
  10b1c0:	bd10      	pop	{r4, pc}
  10b1c2:	bf00      	nop
  10b1c4:	4001b000 	.word	0x4001b000

0010b1c8 <i2c_wait>:
  10b1c8:	b082      	sub	sp, #8
  10b1ca:	2300      	movs	r3, #0
  10b1cc:	9301      	str	r3, [sp, #4]
  10b1ce:	9001      	str	r0, [sp, #4]
  10b1d0:	9b01      	ldr	r3, [sp, #4]
  10b1d2:	b123      	cbz	r3, 10b1de <i2c_wait+0x16>
  10b1d4:	bf00      	nop
  10b1d6:	9b01      	ldr	r3, [sp, #4]
  10b1d8:	3b01      	subs	r3, #1
  10b1da:	9301      	str	r3, [sp, #4]
  10b1dc:	e7f8      	b.n	10b1d0 <i2c_wait+0x8>
  10b1de:	b002      	add	sp, #8
  10b1e0:	4770      	bx	lr
	...

0010b1e4 <i2c_do_Write.isra.0>:
  10b1e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10b1e6:	4606      	mov	r6, r0
  10b1e8:	4c17      	ldr	r4, [pc, #92]	; (10b248 <i2c_do_Write.isra.0+0x64>)
  10b1ea:	2500      	movs	r5, #0
  10b1ec:	2712      	movs	r7, #18
  10b1ee:	4295      	cmp	r5, r2
  10b1f0:	d228      	bcs.n	10b244 <i2c_do_Write.isra.0+0x60>
  10b1f2:	60a7      	str	r7, [r4, #8]
  10b1f4:	20c8      	movs	r0, #200	; 0xc8
  10b1f6:	f7ff ffe7 	bl	10b1c8 <i2c_wait>
  10b1fa:	5d4b      	ldrb	r3, [r1, r5]
  10b1fc:	2b13      	cmp	r3, #19
  10b1fe:	d10a      	bne.n	10b216 <i2c_do_Write.isra.0+0x32>
  10b200:	2310      	movs	r3, #16
  10b202:	2011      	movs	r0, #17
  10b204:	60a3      	str	r3, [r4, #8]
  10b206:	60a3      	str	r3, [r4, #8]
  10b208:	60a3      	str	r3, [r4, #8]
  10b20a:	60a0      	str	r0, [r4, #8]
  10b20c:	60a3      	str	r3, [r4, #8]
  10b20e:	60a3      	str	r3, [r4, #8]
  10b210:	60a0      	str	r0, [r4, #8]
  10b212:	60a0      	str	r0, [r4, #8]
  10b214:	e001      	b.n	10b21a <i2c_do_Write.isra.0+0x36>
  10b216:	3501      	adds	r5, #1
  10b218:	60a3      	str	r3, [r4, #8]
  10b21a:	20c8      	movs	r0, #200	; 0xc8
  10b21c:	f7ff ffd4 	bl	10b1c8 <i2c_wait>
  10b220:	2316      	movs	r3, #22
  10b222:	20c8      	movs	r0, #200	; 0xc8
  10b224:	60a3      	str	r3, [r4, #8]
  10b226:	f7ff ffcf 	bl	10b1c8 <i2c_wait>
  10b22a:	6830      	ldr	r0, [r6, #0]
  10b22c:	6803      	ldr	r3, [r0, #0]
  10b22e:	06db      	lsls	r3, r3, #27
  10b230:	d4fc      	bmi.n	10b22c <i2c_do_Write.isra.0+0x48>
  10b232:	20c8      	movs	r0, #200	; 0xc8
  10b234:	f7ff ffc8 	bl	10b1c8 <i2c_wait>
  10b238:	6833      	ldr	r3, [r6, #0]
  10b23a:	681b      	ldr	r3, [r3, #0]
  10b23c:	075b      	lsls	r3, r3, #29
  10b23e:	d5d6      	bpl.n	10b1ee <i2c_do_Write.isra.0+0xa>
  10b240:	2002      	movs	r0, #2
  10b242:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10b244:	2000      	movs	r0, #0
  10b246:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10b248:	40007000 	.word	0x40007000

0010b24c <i2c_init>:
  10b24c:	f000 b928 	b.w	10b4a0 <fI2cInit>

0010b250 <i2c_frequency>:
  10b250:	f000 b9c6 	b.w	10b5e0 <fI2cFrequency>

0010b254 <i2c_start>:
  10b254:	f000 b9d7 	b.w	10b606 <fI2cStart>

0010b258 <i2c_stop>:
  10b258:	f000 b9e3 	b.w	10b622 <fI2cStop>

0010b25c <i2c_read>:
  10b25c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  10b260:	4606      	mov	r6, r0
  10b262:	9101      	str	r1, [sp, #4]
  10b264:	4617      	mov	r7, r2
  10b266:	461c      	mov	r4, r3
  10b268:	f7ff fff4 	bl	10b254 <i2c_start>
  10b26c:	9b01      	ldr	r3, [sp, #4]
  10b26e:	a902      	add	r1, sp, #8
  10b270:	f043 0301 	orr.w	r3, r3, #1
  10b274:	f841 3d04 	str.w	r3, [r1, #-4]!
  10b278:	2201      	movs	r2, #1
  10b27a:	f106 000c 	add.w	r0, r6, #12
  10b27e:	f7ff ffb1 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b282:	4605      	mov	r5, r0
  10b284:	bb28      	cbnz	r0, 10b2d2 <i2c_read+0x76>
  10b286:	4601      	mov	r1, r0
  10b288:	1e7a      	subs	r2, r7, #1
  10b28a:	4f1a      	ldr	r7, [pc, #104]	; (10b2f4 <i2c_read+0x98>)
  10b28c:	f04f 0813 	mov.w	r8, #19
  10b290:	428c      	cmp	r4, r1
  10b292:	d91d      	bls.n	10b2d0 <i2c_read+0x74>
  10b294:	f8c7 8008 	str.w	r8, [r7, #8]
  10b298:	20c8      	movs	r0, #200	; 0xc8
  10b29a:	f7ff ff95 	bl	10b1c8 <i2c_wait>
  10b29e:	68f3      	ldr	r3, [r6, #12]
  10b2a0:	6818      	ldr	r0, [r3, #0]
  10b2a2:	0780      	lsls	r0, r0, #30
  10b2a4:	d403      	bmi.n	10b2ae <i2c_read+0x52>
  10b2a6:	6818      	ldr	r0, [r3, #0]
  10b2a8:	0740      	lsls	r0, r0, #29
  10b2aa:	d5f9      	bpl.n	10b2a0 <i2c_read+0x44>
  10b2ac:	2502      	movs	r5, #2
  10b2ae:	687b      	ldr	r3, [r7, #4]
  10b2b0:	3101      	adds	r1, #1
  10b2b2:	428c      	cmp	r4, r1
  10b2b4:	f802 3f01 	strb.w	r3, [r2, #1]!
  10b2b8:	bf84      	itt	hi
  10b2ba:	2310      	movhi	r3, #16
  10b2bc:	60bb      	strhi	r3, [r7, #8]
  10b2be:	68f3      	ldr	r3, [r6, #12]
  10b2c0:	6818      	ldr	r0, [r3, #0]
  10b2c2:	0600      	lsls	r0, r0, #24
  10b2c4:	d411      	bmi.n	10b2ea <i2c_read+0x8e>
  10b2c6:	681b      	ldr	r3, [r3, #0]
  10b2c8:	075b      	lsls	r3, r3, #29
  10b2ca:	d5e1      	bpl.n	10b290 <i2c_read+0x34>
  10b2cc:	2502      	movs	r5, #2
  10b2ce:	e000      	b.n	10b2d2 <i2c_read+0x76>
  10b2d0:	b125      	cbz	r5, 10b2dc <i2c_read+0x80>
  10b2d2:	4630      	mov	r0, r6
  10b2d4:	f7ff ffc0 	bl	10b258 <i2c_stop>
  10b2d8:	4628      	mov	r0, r5
  10b2da:	e008      	b.n	10b2ee <i2c_read+0x92>
  10b2dc:	9b08      	ldr	r3, [sp, #32]
  10b2de:	b113      	cbz	r3, 10b2e6 <i2c_read+0x8a>
  10b2e0:	4630      	mov	r0, r6
  10b2e2:	f7ff ffb9 	bl	10b258 <i2c_stop>
  10b2e6:	4620      	mov	r0, r4
  10b2e8:	e001      	b.n	10b2ee <i2c_read+0x92>
  10b2ea:	2503      	movs	r5, #3
  10b2ec:	e7f1      	b.n	10b2d2 <i2c_read+0x76>
  10b2ee:	b002      	add	sp, #8
  10b2f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10b2f4:	40007000 	.word	0x40007000

0010b2f8 <i2c_write>:
  10b2f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  10b2fc:	4605      	mov	r5, r0
  10b2fe:	ae02      	add	r6, sp, #8
  10b300:	f846 1d04 	str.w	r1, [r6, #-4]!
  10b304:	f105 070c 	add.w	r7, r5, #12
  10b308:	4690      	mov	r8, r2
  10b30a:	461c      	mov	r4, r3
  10b30c:	f7ff ffa2 	bl	10b254 <i2c_start>
  10b310:	4631      	mov	r1, r6
  10b312:	2201      	movs	r2, #1
  10b314:	4638      	mov	r0, r7
  10b316:	f7ff ff65 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b31a:	4606      	mov	r6, r0
  10b31c:	b930      	cbnz	r0, 10b32c <i2c_write+0x34>
  10b31e:	4622      	mov	r2, r4
  10b320:	4641      	mov	r1, r8
  10b322:	4638      	mov	r0, r7
  10b324:	f7ff ff5e 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b328:	4606      	mov	r6, r0
  10b32a:	b120      	cbz	r0, 10b336 <i2c_write+0x3e>
  10b32c:	4628      	mov	r0, r5
  10b32e:	f7ff ff93 	bl	10b258 <i2c_stop>
  10b332:	4630      	mov	r0, r6
  10b334:	e005      	b.n	10b342 <i2c_write+0x4a>
  10b336:	9b08      	ldr	r3, [sp, #32]
  10b338:	b113      	cbz	r3, 10b340 <i2c_write+0x48>
  10b33a:	4628      	mov	r0, r5
  10b33c:	f7ff ff8c 	bl	10b258 <i2c_stop>
  10b340:	4620      	mov	r0, r4
  10b342:	b002      	add	sp, #8
  10b344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0010b348 <expReset_AppLedON>:
  10b348:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  10b34a:	2400      	movs	r4, #0
  10b34c:	4b4e      	ldr	r3, [pc, #312]	; (10b488 <expReset_AppLedON+0x140>)
  10b34e:	f8ad 4000 	strh.w	r4, [sp]
  10b352:	f88d 4002 	strb.w	r4, [sp, #2]
  10b356:	691a      	ldr	r2, [r3, #16]
  10b358:	494c      	ldr	r1, [pc, #304]	; (10b48c <expReset_AppLedON+0x144>)
  10b35a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  10b35e:	611a      	str	r2, [r3, #16]
  10b360:	688a      	ldr	r2, [r1, #8]
  10b362:	4620      	mov	r0, r4
  10b364:	f042 020c 	orr.w	r2, r2, #12
  10b368:	608a      	str	r2, [r1, #8]
  10b36a:	691a      	ldr	r2, [r3, #16]
  10b36c:	212f      	movs	r1, #47	; 0x2f
  10b36e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
  10b372:	611a      	str	r2, [r3, #16]
  10b374:	4a46      	ldr	r2, [pc, #280]	; (10b490 <expReset_AppLedON+0x148>)
  10b376:	2620      	movs	r6, #32
  10b378:	6091      	str	r1, [r2, #8]
  10b37a:	60d1      	str	r1, [r2, #12]
  10b37c:	691a      	ldr	r2, [r3, #16]
  10b37e:	2105      	movs	r1, #5
  10b380:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
  10b384:	611a      	str	r2, [r3, #16]
  10b386:	4a43      	ldr	r2, [pc, #268]	; (10b494 <expReset_AppLedON+0x14c>)
  10b388:	2503      	movs	r5, #3
  10b38a:	6091      	str	r1, [r2, #8]
  10b38c:	60d1      	str	r1, [r2, #12]
  10b38e:	691a      	ldr	r2, [r3, #16]
  10b390:	4941      	ldr	r1, [pc, #260]	; (10b498 <expReset_AppLedON+0x150>)
  10b392:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  10b396:	611a      	str	r2, [r3, #16]
  10b398:	691a      	ldr	r2, [r3, #16]
  10b39a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  10b39e:	611a      	str	r2, [r3, #16]
  10b3a0:	f5a3 33a0 	sub.w	r3, r3, #81920	; 0x14000
  10b3a4:	7c1a      	ldrb	r2, [r3, #16]
  10b3a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  10b3aa:	741a      	strb	r2, [r3, #16]
  10b3ac:	7c1a      	ldrb	r2, [r3, #16]
  10b3ae:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  10b3b2:	741a      	strb	r2, [r3, #16]
  10b3b4:	7c1a      	ldrb	r2, [r3, #16]
  10b3b6:	f042 0220 	orr.w	r2, r2, #32
  10b3ba:	741a      	strb	r2, [r3, #16]
  10b3bc:	f000 f910 	bl	10b5e0 <fI2cFrequency>
  10b3c0:	2307      	movs	r3, #7
  10b3c2:	4620      	mov	r0, r4
  10b3c4:	f88d 3001 	strb.w	r3, [sp, #1]
  10b3c8:	f88d 6000 	strb.w	r6, [sp]
  10b3cc:	f88d 4002 	strb.w	r4, [sp, #2]
  10b3d0:	f7ff ff40 	bl	10b254 <i2c_start>
  10b3d4:	2203      	movs	r2, #3
  10b3d6:	4669      	mov	r1, sp
  10b3d8:	200c      	movs	r0, #12
  10b3da:	f7ff ff03 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b3de:	4620      	mov	r0, r4
  10b3e0:	f7ff ff3a 	bl	10b258 <i2c_stop>
  10b3e4:	4620      	mov	r0, r4
  10b3e6:	f88d 6000 	strb.w	r6, [sp]
  10b3ea:	f88d 5001 	strb.w	r5, [sp, #1]
  10b3ee:	f88d 4002 	strb.w	r4, [sp, #2]
  10b3f2:	f7ff ff2f 	bl	10b254 <i2c_start>
  10b3f6:	462a      	mov	r2, r5
  10b3f8:	4669      	mov	r1, sp
  10b3fa:	200c      	movs	r0, #12
  10b3fc:	f7ff fef2 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b400:	4620      	mov	r0, r4
  10b402:	f7ff ff29 	bl	10b258 <i2c_stop>
  10b406:	f64f 70ff 	movw	r0, #65535	; 0xffff
  10b40a:	f7ff fedd 	bl	10b1c8 <i2c_wait>
  10b40e:	f88d 6000 	strb.w	r6, [sp]
  10b412:	4620      	mov	r0, r4
  10b414:	26ff      	movs	r6, #255	; 0xff
  10b416:	f88d 5001 	strb.w	r5, [sp, #1]
  10b41a:	f88d 6002 	strb.w	r6, [sp, #2]
  10b41e:	f7ff ff19 	bl	10b254 <i2c_start>
  10b422:	462a      	mov	r2, r5
  10b424:	4669      	mov	r1, sp
  10b426:	200c      	movs	r0, #12
  10b428:	f7ff fedc 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b42c:	4620      	mov	r0, r4
  10b42e:	f7ff ff13 	bl	10b258 <i2c_stop>
  10b432:	4a1a      	ldr	r2, [pc, #104]	; (10b49c <expReset_AppLedON+0x154>)
  10b434:	ab01      	add	r3, sp, #4
  10b436:	6851      	ldr	r1, [r2, #4]
  10b438:	6810      	ldr	r0, [r2, #0]
  10b43a:	f88d 6001 	strb.w	r6, [sp, #1]
  10b43e:	c303      	stmia	r3!, {r0, r1}
  10b440:	8911      	ldrh	r1, [r2, #8]
  10b442:	7a92      	ldrb	r2, [r2, #10]
  10b444:	8019      	strh	r1, [r3, #0]
  10b446:	709a      	strb	r2, [r3, #2]
  10b448:	2306      	movs	r3, #6
  10b44a:	f88d 3000 	strb.w	r3, [sp]
  10b44e:	f88d 6002 	strb.w	r6, [sp, #2]
  10b452:	2000      	movs	r0, #0
  10b454:	f7ff fefe 	bl	10b254 <i2c_start>
  10b458:	ab01      	add	r3, sp, #4
  10b45a:	1919      	adds	r1, r3, r4
  10b45c:	2201      	movs	r2, #1
  10b45e:	200c      	movs	r0, #12
  10b460:	f7ff fec0 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b464:	2203      	movs	r2, #3
  10b466:	4669      	mov	r1, sp
  10b468:	200c      	movs	r0, #12
  10b46a:	f7ff febb 	bl	10b1e4 <i2c_do_Write.isra.0>
  10b46e:	2000      	movs	r0, #0
  10b470:	f7ff fef2 	bl	10b258 <i2c_stop>
  10b474:	3401      	adds	r4, #1
  10b476:	f64f 70ff 	movw	r0, #65535	; 0xffff
  10b47a:	f7ff fea5 	bl	10b1c8 <i2c_wait>
  10b47e:	2c0c      	cmp	r4, #12
  10b480:	d1e7      	bne.n	10b452 <expReset_AppLedON+0x10a>
  10b482:	b004      	add	sp, #16
  10b484:	bd70      	pop	{r4, r5, r6, pc}
  10b486:	bf00      	nop
  10b488:	4001b000 	.word	0x4001b000
  10b48c:	4000c000 	.word	0x4000c000
  10b490:	4001c000 	.word	0x4001c000
  10b494:	40010000 	.word	0x40010000
  10b498:	000f4240 	.word	0x000f4240
  10b49c:	0011921c 	.word	0x0011921c

0010b4a0 <fI2cInit>:
  10b4a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10b4a2:	460d      	mov	r5, r1
  10b4a4:	4604      	mov	r4, r0
  10b4a6:	4945      	ldr	r1, [pc, #276]	; (10b5bc <fI2cInit+0x11c>)
  10b4a8:	4628      	mov	r0, r5
  10b4aa:	4616      	mov	r6, r2
  10b4ac:	f7fd f89a 	bl	1085e4 <pinmap_peripheral>
  10b4b0:	4943      	ldr	r1, [pc, #268]	; (10b5c0 <fI2cInit+0x120>)
  10b4b2:	4607      	mov	r7, r0
  10b4b4:	4630      	mov	r0, r6
  10b4b6:	f7fd f895 	bl	1085e4 <pinmap_peripheral>
  10b4ba:	4601      	mov	r1, r0
  10b4bc:	4638      	mov	r0, r7
  10b4be:	f7fd f873 	bl	1085a8 <pinmap_merge>
  10b4c2:	60e0      	str	r0, [r4, #12]
  10b4c4:	3001      	adds	r0, #1
  10b4c6:	d104      	bne.n	10b4d2 <fI2cInit+0x32>
  10b4c8:	2249      	movs	r2, #73	; 0x49
  10b4ca:	493e      	ldr	r1, [pc, #248]	; (10b5c4 <fI2cInit+0x124>)
  10b4cc:	483e      	ldr	r0, [pc, #248]	; (10b5c8 <fI2cInit+0x128>)
  10b4ce:	f7fd f967 	bl	1087a0 <mbed_assert_internal>
  10b4d2:	68e3      	ldr	r3, [r4, #12]
  10b4d4:	2200      	movs	r2, #0
  10b4d6:	60da      	str	r2, [r3, #12]
  10b4d8:	68e2      	ldr	r2, [r4, #12]
  10b4da:	4b3c      	ldr	r3, [pc, #240]	; (10b5cc <fI2cInit+0x12c>)
  10b4dc:	429a      	cmp	r2, r3
  10b4de:	4a3c      	ldr	r2, [pc, #240]	; (10b5d0 <fI2cInit+0x130>)
  10b4e0:	4b3c      	ldr	r3, [pc, #240]	; (10b5d4 <fI2cInit+0x134>)
  10b4e2:	6911      	ldr	r1, [r2, #16]
  10b4e4:	bf0b      	itete	eq
  10b4e6:	f021 0180 	biceq.w	r1, r1, #128	; 0x80
  10b4ea:	f421 5100 	bicne.w	r1, r1, #8192	; 0x2000
  10b4ee:	6111      	streq	r1, [r2, #16]
  10b4f0:	6111      	strne	r1, [r2, #16]
  10b4f2:	bf0c      	ite	eq
  10b4f4:	2220      	moveq	r2, #32
  10b4f6:	f44f 2280 	movne.w	r2, #262144	; 0x40000
  10b4fa:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
  10b4fe:	601a      	str	r2, [r3, #0]
  10b500:	68e2      	ldr	r2, [r4, #12]
  10b502:	7c13      	ldrb	r3, [r2, #16]
  10b504:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  10b508:	7413      	strb	r3, [r2, #16]
  10b50a:	68e2      	ldr	r2, [r4, #12]
  10b50c:	7c13      	ldrb	r3, [r2, #16]
  10b50e:	f043 0320 	orr.w	r3, r3, #32
  10b512:	7413      	strb	r3, [r2, #16]
  10b514:	f000 fb7e 	bl	10bc14 <fClockGetPeriphClockfrequency>
  10b518:	4b2f      	ldr	r3, [pc, #188]	; (10b5d8 <fI2cInit+0x138>)
  10b51a:	68e2      	ldr	r2, [r4, #12]
  10b51c:	fbb0 f0f3 	udiv	r0, r0, r3
  10b520:	7c13      	ldrb	r3, [r2, #16]
  10b522:	0880      	lsrs	r0, r0, #2
  10b524:	3802      	subs	r0, #2
  10b526:	f360 0304 	bfi	r3, r0, #0, #5
  10b52a:	7413      	strb	r3, [r2, #16]
  10b52c:	68e3      	ldr	r3, [r4, #12]
  10b52e:	f3c0 1047 	ubfx	r0, r0, #5, #8
  10b532:	6158      	str	r0, [r3, #20]
  10b534:	4921      	ldr	r1, [pc, #132]	; (10b5bc <fI2cInit+0x11c>)
  10b536:	4628      	mov	r0, r5
  10b538:	f7fd f818 	bl	10856c <pinmap_pinout>
  10b53c:	4630      	mov	r0, r6
  10b53e:	4920      	ldr	r1, [pc, #128]	; (10b5c0 <fI2cInit+0x120>)
  10b540:	f7fd f814 	bl	10856c <pinmap_pinout>
  10b544:	4628      	mov	r0, r5
  10b546:	2105      	movs	r1, #5
  10b548:	f000 fbba 	bl	10bcc0 <pin_mode>
  10b54c:	4630      	mov	r0, r6
  10b54e:	2105      	movs	r1, #5
  10b550:	f000 fbb6 	bl	10bcc0 <pin_mode>
  10b554:	4b1e      	ldr	r3, [pc, #120]	; (10b5d0 <fI2cInit+0x130>)
  10b556:	00a8      	lsls	r0, r5, #2
  10b558:	691a      	ldr	r2, [r3, #16]
  10b55a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  10b55e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
  10b562:	611a      	str	r2, [r3, #16]
  10b564:	f500 30e0 	add.w	r0, r0, #114688	; 0x1c000
  10b568:	7807      	ldrb	r7, [r0, #0]
  10b56a:	2201      	movs	r2, #1
  10b56c:	00b1      	lsls	r1, r6, #2
  10b56e:	f362 0784 	bfi	r7, r2, #2, #3
  10b572:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
  10b576:	7007      	strb	r7, [r0, #0]
  10b578:	f501 31e0 	add.w	r1, r1, #114688	; 0x1c000
  10b57c:	7808      	ldrb	r0, [r1, #0]
  10b57e:	fa02 f505 	lsl.w	r5, r2, r5
  10b582:	f362 0084 	bfi	r0, r2, #2, #3
  10b586:	7008      	strb	r0, [r1, #0]
  10b588:	6919      	ldr	r1, [r3, #16]
  10b58a:	4814      	ldr	r0, [pc, #80]	; (10b5dc <fI2cInit+0x13c>)
  10b58c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
  10b590:	6119      	str	r1, [r3, #16]
  10b592:	6919      	ldr	r1, [r3, #16]
  10b594:	fa02 f606 	lsl.w	r6, r2, r6
  10b598:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  10b59c:	6119      	str	r1, [r3, #16]
  10b59e:	6881      	ldr	r1, [r0, #8]
  10b5a0:	432e      	orrs	r6, r5
  10b5a2:	430e      	orrs	r6, r1
  10b5a4:	6086      	str	r6, [r0, #8]
  10b5a6:	691a      	ldr	r2, [r3, #16]
  10b5a8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  10b5ac:	611a      	str	r2, [r3, #16]
  10b5ae:	68e2      	ldr	r2, [r4, #12]
  10b5b0:	7c13      	ldrb	r3, [r2, #16]
  10b5b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  10b5b6:	7413      	strb	r3, [r2, #16]
  10b5b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10b5ba:	bf00      	nop
  10b5bc:	00119344 	.word	0x00119344
  10b5c0:	001193bc 	.word	0x001193bc
  10b5c4:	00119227 	.word	0x00119227
  10b5c8:	00119273 	.word	0x00119273
  10b5cc:	40007000 	.word	0x40007000
  10b5d0:	4001b000 	.word	0x4001b000
  10b5d4:	e000e100 	.word	0xe000e100
  10b5d8:	000186a0 	.word	0x000186a0
  10b5dc:	4000c000 	.word	0x4000c000

0010b5e0 <fI2cFrequency>:
  10b5e0:	b538      	push	{r3, r4, r5, lr}
  10b5e2:	4605      	mov	r5, r0
  10b5e4:	460c      	mov	r4, r1
  10b5e6:	f000 fb15 	bl	10bc14 <fClockGetPeriphClockfrequency>
  10b5ea:	fbb0 f0f4 	udiv	r0, r0, r4
  10b5ee:	68ea      	ldr	r2, [r5, #12]
  10b5f0:	0880      	lsrs	r0, r0, #2
  10b5f2:	7c13      	ldrb	r3, [r2, #16]
  10b5f4:	3802      	subs	r0, #2
  10b5f6:	f360 0304 	bfi	r3, r0, #0, #5
  10b5fa:	7413      	strb	r3, [r2, #16]
  10b5fc:	68eb      	ldr	r3, [r5, #12]
  10b5fe:	f3c0 1047 	ubfx	r0, r0, #5, #8
  10b602:	6158      	str	r0, [r3, #20]
  10b604:	bd38      	pop	{r3, r4, r5, pc}

0010b606 <fI2cStart>:
  10b606:	b510      	push	{r4, lr}
  10b608:	4604      	mov	r4, r0
  10b60a:	68c2      	ldr	r2, [r0, #12]
  10b60c:	6813      	ldr	r3, [r2, #0]
  10b60e:	07db      	lsls	r3, r3, #31
  10b610:	d5fc      	bpl.n	10b60c <fI2cStart+0x6>
  10b612:	2001      	movs	r0, #1
  10b614:	f002 f95a 	bl	10d8cc <wait_us>
  10b618:	68e3      	ldr	r3, [r4, #12]
  10b61a:	2215      	movs	r2, #21
  10b61c:	609a      	str	r2, [r3, #8]
  10b61e:	2000      	movs	r0, #0
  10b620:	bd10      	pop	{r4, pc}

0010b622 <fI2cStop>:
  10b622:	b510      	push	{r4, lr}
  10b624:	4604      	mov	r4, r0
  10b626:	68c2      	ldr	r2, [r0, #12]
  10b628:	6813      	ldr	r3, [r2, #0]
  10b62a:	07db      	lsls	r3, r3, #31
  10b62c:	d5fc      	bpl.n	10b628 <fI2cStop+0x6>
  10b62e:	2001      	movs	r0, #1
  10b630:	f002 f94c 	bl	10d8cc <wait_us>
  10b634:	68e3      	ldr	r3, [r4, #12]
  10b636:	2214      	movs	r2, #20
  10b638:	609a      	str	r2, [r3, #8]
  10b63a:	681b      	ldr	r3, [r3, #0]
  10b63c:	f013 0f34 	tst.w	r3, #52	; 0x34
  10b640:	bf14      	ite	ne
  10b642:	f06f 0001 	mvnne.w	r0, #1
  10b646:	2000      	moveq	r0, #0
  10b648:	bd10      	pop	{r4, pc}

0010b64a <lp_ticker_init>:
  10b64a:	f000 bb91 	b.w	10bd70 <fRtcInit>

0010b64e <lp_ticker_read>:
  10b64e:	b508      	push	{r3, lr}
  10b650:	f000 fbe0 	bl	10be14 <fRtcRead>
  10b654:	bd08      	pop	{r3, pc}

0010b656 <lp_ticker_set_interrupt>:
  10b656:	f000 bc0f 	b.w	10be78 <fRtcSetInterrupt>

0010b65a <lp_ticker_disable_interrupt>:
  10b65a:	f000 bbc5 	b.w	10bde8 <fRtcDisableInterrupt>

0010b65e <lp_ticker_clear_interrupt>:
  10b65e:	f000 bbcf 	b.w	10be00 <fRtcClearInterrupt>
	...

0010b664 <fSpiInit>:
  10b664:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  10b668:	468a      	mov	r10, r1
  10b66a:	4606      	mov	r6, r0
  10b66c:	495f      	ldr	r1, [pc, #380]	; (10b7ec <fSpiInit+0x188>)
  10b66e:	4650      	mov	r0, r10
  10b670:	4691      	mov	r9, r2
  10b672:	461c      	mov	r4, r3
  10b674:	f99d 8030 	ldrsb.w	r8, [sp, #48]	; 0x30
  10b678:	f7fc ffb4 	bl	1085e4 <pinmap_peripheral>
  10b67c:	495c      	ldr	r1, [pc, #368]	; (10b7f0 <fSpiInit+0x18c>)
  10b67e:	4605      	mov	r5, r0
  10b680:	4648      	mov	r0, r9
  10b682:	f7fc ffaf 	bl	1085e4 <pinmap_peripheral>
  10b686:	495b      	ldr	r1, [pc, #364]	; (10b7f4 <fSpiInit+0x190>)
  10b688:	9001      	str	r0, [sp, #4]
  10b68a:	4620      	mov	r0, r4
  10b68c:	f7fc ffaa 	bl	1085e4 <pinmap_peripheral>
  10b690:	4959      	ldr	r1, [pc, #356]	; (10b7f8 <fSpiInit+0x194>)
  10b692:	4607      	mov	r7, r0
  10b694:	4640      	mov	r0, r8
  10b696:	f7fc ffa5 	bl	1085e4 <pinmap_peripheral>
  10b69a:	9b01      	ldr	r3, [sp, #4]
  10b69c:	4683      	mov	r11, r0
  10b69e:	4619      	mov	r1, r3
  10b6a0:	4628      	mov	r0, r5
  10b6a2:	f7fc ff81 	bl	1085a8 <pinmap_merge>
  10b6a6:	4659      	mov	r1, r11
  10b6a8:	4605      	mov	r5, r0
  10b6aa:	4638      	mov	r0, r7
  10b6ac:	f7fc ff7c 	bl	1085a8 <pinmap_merge>
  10b6b0:	4601      	mov	r1, r0
  10b6b2:	4628      	mov	r0, r5
  10b6b4:	f7fc ff78 	bl	1085a8 <pinmap_merge>
  10b6b8:	6030      	str	r0, [r6, #0]
  10b6ba:	3001      	adds	r0, #1
  10b6bc:	d104      	bne.n	10b6c8 <fSpiInit+0x64>
  10b6be:	2243      	movs	r2, #67	; 0x43
  10b6c0:	494e      	ldr	r1, [pc, #312]	; (10b7fc <fSpiInit+0x198>)
  10b6c2:	484f      	ldr	r0, [pc, #316]	; (10b800 <fSpiInit+0x19c>)
  10b6c4:	f7fd f86c 	bl	1087a0 <mbed_assert_internal>
  10b6c8:	4d4e      	ldr	r5, [pc, #312]	; (10b804 <fSpiInit+0x1a0>)
  10b6ca:	6832      	ldr	r2, [r6, #0]
  10b6cc:	4b4e      	ldr	r3, [pc, #312]	; (10b808 <fSpiInit+0x1a4>)
  10b6ce:	4620      	mov	r0, r4
  10b6d0:	429a      	cmp	r2, r3
  10b6d2:	692b      	ldr	r3, [r5, #16]
  10b6d4:	4947      	ldr	r1, [pc, #284]	; (10b7f4 <fSpiInit+0x190>)
  10b6d6:	bf0c      	ite	eq
  10b6d8:	f023 0340 	biceq.w	r3, r3, #64	; 0x40
  10b6dc:	f423 7300 	bicne.w	r3, r3, #512	; 0x200
  10b6e0:	612b      	str	r3, [r5, #16]
  10b6e2:	692b      	ldr	r3, [r5, #16]
  10b6e4:	2701      	movs	r7, #1
  10b6e6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  10b6ea:	612b      	str	r3, [r5, #16]
  10b6ec:	f7fc ff3e 	bl	10856c <pinmap_pinout>
  10b6f0:	493e      	ldr	r1, [pc, #248]	; (10b7ec <fSpiInit+0x188>)
  10b6f2:	4650      	mov	r0, r10
  10b6f4:	f7fc ff3a 	bl	10856c <pinmap_pinout>
  10b6f8:	692b      	ldr	r3, [r5, #16]
  10b6fa:	fa07 f004 	lsl.w	r0, r7, r4
  10b6fe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  10b702:	612b      	str	r3, [r5, #16]
  10b704:	4b41      	ldr	r3, [pc, #260]	; (10b80c <fSpiInit+0x1a8>)
  10b706:	fa07 f208 	lsl.w	r2, r7, r8
  10b70a:	6899      	ldr	r1, [r3, #8]
  10b70c:	4302      	orrs	r2, r0
  10b70e:	fa07 f00a 	lsl.w	r0, r7, r10
  10b712:	4302      	orrs	r2, r0
  10b714:	430a      	orrs	r2, r1
  10b716:	609a      	str	r2, [r3, #8]
  10b718:	68da      	ldr	r2, [r3, #12]
  10b71a:	fa07 f109 	lsl.w	r1, r7, r9
  10b71e:	430a      	orrs	r2, r1
  10b720:	60da      	str	r2, [r3, #12]
  10b722:	692b      	ldr	r3, [r5, #16]
  10b724:	4620      	mov	r0, r4
  10b726:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
  10b72a:	00a4      	lsls	r4, r4, #2
  10b72c:	612b      	str	r3, [r5, #16]
  10b72e:	2100      	movs	r1, #0
  10b730:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
  10b734:	f000 fac4 	bl	10bcc0 <pin_mode>
  10b738:	f504 34e0 	add.w	r4, r4, #114688	; 0x1c000
  10b73c:	2102      	movs	r1, #2
  10b73e:	4650      	mov	r0, r10
  10b740:	f000 fabe 	bl	10bcc0 <pin_mode>
  10b744:	7823      	ldrb	r3, [r4, #0]
  10b746:	f1b9 3fff 	cmp.w	r9, #4294967295
  10b74a:	f367 0384 	bfi	r3, r7, #2, #3
  10b74e:	7023      	strb	r3, [r4, #0]
  10b750:	7923      	ldrb	r3, [r4, #4]
  10b752:	f367 0384 	bfi	r3, r7, #2, #3
  10b756:	7123      	strb	r3, [r4, #4]
  10b758:	d00b      	beq.n	10b772 <fSpiInit+0x10e>
  10b75a:	4925      	ldr	r1, [pc, #148]	; (10b7f0 <fSpiInit+0x18c>)
  10b75c:	4648      	mov	r0, r9
  10b75e:	f7fc ff05 	bl	10856c <pinmap_pinout>
  10b762:	4639      	mov	r1, r7
  10b764:	4648      	mov	r0, r9
  10b766:	f000 faab 	bl	10bcc0 <pin_mode>
  10b76a:	7a23      	ldrb	r3, [r4, #8]
  10b76c:	f367 0384 	bfi	r3, r7, #2, #3
  10b770:	7223      	strb	r3, [r4, #8]
  10b772:	f1b8 3fff 	cmp.w	r8, #4294967295
  10b776:	d011      	beq.n	10b79c <fSpiInit+0x138>
  10b778:	491f      	ldr	r1, [pc, #124]	; (10b7f8 <fSpiInit+0x194>)
  10b77a:	4640      	mov	r0, r8
  10b77c:	f7fc fef6 	bl	10856c <pinmap_pinout>
  10b780:	2102      	movs	r1, #2
  10b782:	4640      	mov	r0, r8
  10b784:	f000 fa9c 	bl	10bcc0 <pin_mode>
  10b788:	7b23      	ldrb	r3, [r4, #12]
  10b78a:	2201      	movs	r2, #1
  10b78c:	f362 0384 	bfi	r3, r2, #2, #3
  10b790:	4a1d      	ldr	r2, [pc, #116]	; (10b808 <fSpiInit+0x1a4>)
  10b792:	7323      	strb	r3, [r4, #12]
  10b794:	7d13      	ldrb	r3, [r2, #20]
  10b796:	f36f 0303 	bfc	r3, #0, #4
  10b79a:	7513      	strb	r3, [r2, #20]
  10b79c:	4b19      	ldr	r3, [pc, #100]	; (10b804 <fSpiInit+0x1a0>)
  10b79e:	2400      	movs	r4, #0
  10b7a0:	691a      	ldr	r2, [r3, #16]
  10b7a2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
  10b7a6:	611a      	str	r2, [r3, #16]
  10b7a8:	691a      	ldr	r2, [r3, #16]
  10b7aa:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  10b7ae:	611a      	str	r2, [r3, #16]
  10b7b0:	691a      	ldr	r2, [r3, #16]
  10b7b2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  10b7b6:	611a      	str	r2, [r3, #16]
  10b7b8:	6833      	ldr	r3, [r6, #0]
  10b7ba:	60dc      	str	r4, [r3, #12]
  10b7bc:	f000 fa2a 	bl	10bc14 <fClockGetPeriphClockfrequency>
  10b7c0:	4b13      	ldr	r3, [pc, #76]	; (10b810 <fSpiInit+0x1ac>)
  10b7c2:	2201      	movs	r2, #1
  10b7c4:	fbb0 f0f3 	udiv	r0, r0, r3
  10b7c8:	6833      	ldr	r3, [r6, #0]
  10b7ca:	0840      	lsrs	r0, r0, #1
  10b7cc:	3801      	subs	r0, #1
  10b7ce:	6098      	str	r0, [r3, #8]
  10b7d0:	629a      	str	r2, [r3, #40]	; 0x28
  10b7d2:	62da      	str	r2, [r3, #44]	; 0x2c
  10b7d4:	22ff      	movs	r2, #255	; 0xff
  10b7d6:	61dc      	str	r4, [r3, #28]
  10b7d8:	625a      	str	r2, [r3, #36]	; 0x24
  10b7da:	2210      	movs	r2, #16
  10b7dc:	615a      	str	r2, [r3, #20]
  10b7de:	6833      	ldr	r3, [r6, #0]
  10b7e0:	2225      	movs	r2, #37	; 0x25
  10b7e2:	619c      	str	r4, [r3, #24]
  10b7e4:	60da      	str	r2, [r3, #12]
  10b7e6:	b003      	add	sp, #12
  10b7e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10b7ec:	00119434 	.word	0x00119434
  10b7f0:	001192e4 	.word	0x001192e4
  10b7f4:	00119314 	.word	0x00119314
  10b7f8:	00119464 	.word	0x00119464
  10b7fc:	0011928b 	.word	0x0011928b
  10b800:	00119273 	.word	0x00119273
  10b804:	4001b000 	.word	0x4001b000
  10b808:	40006000 	.word	0x40006000
  10b80c:	4000c000 	.word	0x4000c000
  10b810:	000f4240 	.word	0x000f4240

0010b814 <us_timer_isr>:
  10b814:	2200      	movs	r2, #0
  10b816:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  10b81a:	60da      	str	r2, [r3, #12]
  10b81c:	4a02      	ldr	r2, [pc, #8]	; (10b828 <us_timer_isr+0x14>)
  10b81e:	6813      	ldr	r3, [r2, #0]
  10b820:	3301      	adds	r3, #1
  10b822:	6013      	str	r3, [r2, #0]
  10b824:	4770      	bx	lr
  10b826:	bf00      	nop
  10b828:	3fff8b3c 	.word	0x3fff8b3c

0010b82c <us_timer_init>:
  10b82c:	4b16      	ldr	r3, [pc, #88]	; (10b888 <us_timer_init+0x5c>)
  10b82e:	21d4      	movs	r1, #212	; 0xd4
  10b830:	691a      	ldr	r2, [r3, #16]
  10b832:	f022 0201 	bic.w	r2, r2, #1
  10b836:	611a      	str	r2, [r3, #16]
  10b838:	691a      	ldr	r2, [r3, #16]
  10b83a:	f022 0202 	bic.w	r2, r2, #2
  10b83e:	611a      	str	r2, [r3, #16]
  10b840:	f64f 72ff 	movw	r2, #65535	; 0xffff
  10b844:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  10b848:	601a      	str	r2, [r3, #0]
  10b84a:	6099      	str	r1, [r3, #8]
  10b84c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  10b850:	601a      	str	r2, [r3, #0]
  10b852:	2254      	movs	r2, #84	; 0x54
  10b854:	609a      	str	r2, [r3, #8]
  10b856:	4b0d      	ldr	r3, [pc, #52]	; (10b88c <us_timer_init+0x60>)
  10b858:	490d      	ldr	r1, [pc, #52]	; (10b890 <us_timer_init+0x64>)
  10b85a:	689a      	ldr	r2, [r3, #8]
  10b85c:	6411      	str	r1, [r2, #64]	; 0x40
  10b85e:	689b      	ldr	r3, [r3, #8]
  10b860:	4a0c      	ldr	r2, [pc, #48]	; (10b894 <us_timer_init+0x68>)
  10b862:	2102      	movs	r1, #2
  10b864:	645a      	str	r2, [r3, #68]	; 0x44
  10b866:	4b0c      	ldr	r3, [pc, #48]	; (10b898 <us_timer_init+0x6c>)
  10b868:	2210      	movs	r2, #16
  10b86a:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  10b86e:	2220      	movs	r2, #32
  10b870:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
  10b874:	2201      	movs	r2, #1
  10b876:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
  10b87a:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
  10b87e:	601a      	str	r2, [r3, #0]
  10b880:	6019      	str	r1, [r3, #0]
  10b882:	4b06      	ldr	r3, [pc, #24]	; (10b89c <us_timer_init+0x70>)
  10b884:	601a      	str	r2, [r3, #0]
  10b886:	4770      	bx	lr
  10b888:	4001b000 	.word	0x4001b000
  10b88c:	e000ed00 	.word	0xe000ed00
  10b890:	0010b815 	.word	0x0010b815
  10b894:	0010b90d 	.word	0x0010b90d
  10b898:	e000e100 	.word	0xe000e100
  10b89c:	3fff8b44 	.word	0x3fff8b44

0010b8a0 <us_ticker_init>:
  10b8a0:	4b02      	ldr	r3, [pc, #8]	; (10b8ac <us_ticker_init+0xc>)
  10b8a2:	681b      	ldr	r3, [r3, #0]
  10b8a4:	b90b      	cbnz	r3, 10b8aa <us_ticker_init+0xa>
  10b8a6:	f7ff bfc1 	b.w	10b82c <us_timer_init>
  10b8aa:	4770      	bx	lr
  10b8ac:	3fff8b44 	.word	0x3fff8b44

0010b8b0 <us_ticker_read>:
  10b8b0:	b508      	push	{r3, lr}
  10b8b2:	4b13      	ldr	r3, [pc, #76]	; (10b900 <us_ticker_read+0x50>)
  10b8b4:	681b      	ldr	r3, [r3, #0]
  10b8b6:	b90b      	cbnz	r3, 10b8bc <us_ticker_read+0xc>
  10b8b8:	f7ff ffb8 	bl	10b82c <us_timer_init>
  10b8bc:	4911      	ldr	r1, [pc, #68]	; (10b904 <us_ticker_read+0x54>)
  10b8be:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  10b8c2:	2001      	movs	r0, #1
  10b8c4:	6853      	ldr	r3, [r2, #4]
  10b8c6:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
  10b8ca:	f3bf 8f4f 	dsb	sy
  10b8ce:	f3bf 8f6f 	isb	sy
  10b8d2:	6891      	ldr	r1, [r2, #8]
  10b8d4:	f411 7f80 	tst.w	r1, #256	; 0x100
  10b8d8:	bf18      	it	ne
  10b8da:	2300      	movne	r3, #0
  10b8dc:	490a      	ldr	r1, [pc, #40]	; (10b908 <us_ticker_read+0x58>)
  10b8de:	bf1f      	itttt	ne
  10b8e0:	60d3      	strne	r3, [r2, #12]
  10b8e2:	680b      	ldrne	r3, [r1, #0]
  10b8e4:	3301      	addne	r3, #1
  10b8e6:	600b      	strne	r3, [r1, #0]
  10b8e8:	bf18      	it	ne
  10b8ea:	6853      	ldrne	r3, [r2, #4]
  10b8ec:	6808      	ldr	r0, [r1, #0]
  10b8ee:	4a05      	ldr	r2, [pc, #20]	; (10b904 <us_ticker_read+0x54>)
  10b8f0:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
  10b8f4:	33ff      	adds	r3, #255	; 0xff
  10b8f6:	2101      	movs	r1, #1
  10b8f8:	6011      	str	r1, [r2, #0]
  10b8fa:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  10b8fe:	bd08      	pop	{r3, pc}
  10b900:	3fff8b44 	.word	0x3fff8b44
  10b904:	e000e100 	.word	0xe000e100
  10b908:	3fff8b3c 	.word	0x3fff8b3c

0010b90c <us_ticker_isr>:
  10b90c:	b570      	push	{r4, r5, r6, lr}
  10b90e:	4c10      	ldr	r4, [pc, #64]	; (10b950 <us_ticker_isr+0x44>)
  10b910:	2600      	movs	r6, #0
  10b912:	4b10      	ldr	r3, [pc, #64]	; (10b954 <us_ticker_isr+0x48>)
  10b914:	60e6      	str	r6, [r4, #12]
  10b916:	681d      	ldr	r5, [r3, #0]
  10b918:	f7ff ffca 	bl	10b8b0 <us_ticker_read>
  10b91c:	1a28      	subs	r0, r5, r0
  10b91e:	42b0      	cmp	r0, r6
  10b920:	dc07      	bgt.n	10b932 <us_ticker_isr+0x26>
  10b922:	8923      	ldrh	r3, [r4, #8]
  10b924:	f366 13c7 	bfi	r3, r6, #7, #1
  10b928:	8123      	strh	r3, [r4, #8]
  10b92a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10b92e:	f7fc bf31 	b.w	108794 <us_ticker_irq_handler>
  10b932:	f64f 73ff 	movw	r3, #65535	; 0xffff
  10b936:	4298      	cmp	r0, r3
  10b938:	bfa8      	it	ge
  10b93a:	4618      	movge	r0, r3
  10b93c:	8923      	ldrh	r3, [r4, #8]
  10b93e:	f366 13c7 	bfi	r3, r6, #7, #1
  10b942:	8123      	strh	r3, [r4, #8]
  10b944:	6020      	str	r0, [r4, #0]
  10b946:	8923      	ldrh	r3, [r4, #8]
  10b948:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  10b94c:	8123      	strh	r3, [r4, #8]
  10b94e:	bd70      	pop	{r4, r5, r6, pc}
  10b950:	40001000 	.word	0x40001000
  10b954:	3fff8b40 	.word	0x3fff8b40

0010b958 <us_ticker_disable_interrupt>:
  10b958:	4b02      	ldr	r3, [pc, #8]	; (10b964 <us_ticker_disable_interrupt+0xc>)
  10b95a:	891a      	ldrh	r2, [r3, #8]
  10b95c:	f36f 12c7 	bfc	r2, #7, #1
  10b960:	811a      	strh	r2, [r3, #8]
  10b962:	4770      	bx	lr
  10b964:	40001000 	.word	0x40001000

0010b968 <us_ticker_clear_interrupt>:
  10b968:	4b01      	ldr	r3, [pc, #4]	; (10b970 <us_ticker_clear_interrupt+0x8>)
  10b96a:	2200      	movs	r2, #0
  10b96c:	60da      	str	r2, [r3, #12]
  10b96e:	4770      	bx	lr
  10b970:	40001000 	.word	0x40001000

0010b974 <us_ticker_set_interrupt>:
  10b974:	4b0e      	ldr	r3, [pc, #56]	; (10b9b0 <us_ticker_set_interrupt+0x3c>)
  10b976:	b510      	push	{r4, lr}
  10b978:	4604      	mov	r4, r0
  10b97a:	6018      	str	r0, [r3, #0]
  10b97c:	f7ff ff98 	bl	10b8b0 <us_ticker_read>
  10b980:	1a20      	subs	r0, r4, r0
  10b982:	2800      	cmp	r0, #0
  10b984:	dc04      	bgt.n	10b990 <us_ticker_set_interrupt+0x1c>
  10b986:	4b0b      	ldr	r3, [pc, #44]	; (10b9b4 <us_ticker_set_interrupt+0x40>)
  10b988:	2202      	movs	r2, #2
  10b98a:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
  10b98e:	bd10      	pop	{r4, pc}
  10b990:	f64f 74ff 	movw	r4, #65535	; 0xffff
  10b994:	42a0      	cmp	r0, r4
  10b996:	bfa8      	it	ge
  10b998:	4620      	movge	r0, r4
  10b99a:	4b07      	ldr	r3, [pc, #28]	; (10b9b8 <us_ticker_set_interrupt+0x44>)
  10b99c:	891a      	ldrh	r2, [r3, #8]
  10b99e:	f36f 12c7 	bfc	r2, #7, #1
  10b9a2:	811a      	strh	r2, [r3, #8]
  10b9a4:	6018      	str	r0, [r3, #0]
  10b9a6:	891a      	ldrh	r2, [r3, #8]
  10b9a8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  10b9ac:	811a      	strh	r2, [r3, #8]
  10b9ae:	bd10      	pop	{r4, pc}
  10b9b0:	3fff8b40 	.word	0x3fff8b40
  10b9b4:	e000e100 	.word	0xe000e100
  10b9b8:	40001000 	.word	0x40001000

0010b9bc <fTrim>:
  10b9bc:	f44f 53fd 	mov.w	r3, #8096	; 0x1fa0
  10b9c0:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  10b9c2:	3201      	adds	r2, #1
  10b9c4:	f000 8092 	beq.w	10baec <fTrim+0x130>
  10b9c8:	685a      	ldr	r2, [r3, #4]
  10b9ca:	3201      	adds	r2, #1
  10b9cc:	bf1e      	ittt	ne
  10b9ce:	6859      	ldrne	r1, [r3, #4]
  10b9d0:	4a48      	ldrne	r2, [pc, #288]	; (10baf4 <fTrim+0x138>)
  10b9d2:	6251      	strne	r1, [r2, #36]	; 0x24
  10b9d4:	689b      	ldr	r3, [r3, #8]
  10b9d6:	3301      	adds	r3, #1
  10b9d8:	bf1f      	itttt	ne
  10b9da:	f44f 53fd 	movne.w	r3, #8096	; 0x1fa0
  10b9de:	689a      	ldrne	r2, [r3, #8]
  10b9e0:	4b44      	ldrne	r3, [pc, #272]	; (10baf4 <fTrim+0x138>)
  10b9e2:	621a      	strne	r2, [r3, #32]
  10b9e4:	f44f 53fd 	mov.w	r3, #8096	; 0x1fa0
  10b9e8:	68da      	ldr	r2, [r3, #12]
  10b9ea:	0c12      	lsrs	r2, r2, #16
  10b9ec:	0412      	lsls	r2, r2, #16
  10b9ee:	f512 3f80 	cmn.w	r2, #65536	; 0x10000
  10b9f2:	bf1e      	ittt	ne
  10b9f4:	68d9      	ldrne	r1, [r3, #12]
  10b9f6:	4a40      	ldrne	r2, [pc, #256]	; (10baf8 <fTrim+0x13c>)
  10b9f8:	62d1      	strne	r1, [r2, #44]	; 0x2c
  10b9fa:	691b      	ldr	r3, [r3, #16]
  10b9fc:	0c1b      	lsrs	r3, r3, #16
  10b9fe:	041b      	lsls	r3, r3, #16
  10ba00:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
  10ba04:	bf1f      	itttt	ne
  10ba06:	f44f 53fd 	movne.w	r3, #8096	; 0x1fa0
  10ba0a:	691a      	ldrne	r2, [r3, #16]
  10ba0c:	4b3a      	ldrne	r3, [pc, #232]	; (10baf8 <fTrim+0x13c>)
  10ba0e:	629a      	strne	r2, [r3, #40]	; 0x28
  10ba10:	4b38      	ldr	r3, [pc, #224]	; (10baf4 <fTrim+0x138>)
  10ba12:	f44f 52fd 	mov.w	r2, #8096	; 0x1fa0
  10ba16:	6b50      	ldr	r0, [r2, #52]	; 0x34
  10ba18:	f8b3 108c 	ldrh.w	r1, [r3, #140]	; 0x8c
  10ba1c:	f360 210b 	bfi	r1, r0, #8, #4
  10ba20:	f8a3 108c 	strh.w	r1, [r3, #140]	; 0x8c
  10ba24:	6b93      	ldr	r3, [r2, #56]	; 0x38
  10ba26:	0c1b      	lsrs	r3, r3, #16
  10ba28:	041b      	lsls	r3, r3, #16
  10ba2a:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
  10ba2e:	bf18      	it	ne
  10ba30:	6b91      	ldrne	r1, [r2, #56]	; 0x38
  10ba32:	4b32      	ldr	r3, [pc, #200]	; (10bafc <fTrim+0x140>)
  10ba34:	bf18      	it	ne
  10ba36:	6159      	strne	r1, [r3, #20]
  10ba38:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
  10ba3a:	6119      	str	r1, [r3, #16]
  10ba3c:	6c11      	ldr	r1, [r2, #64]	; 0x40
  10ba3e:	60d9      	str	r1, [r3, #12]
  10ba40:	6c52      	ldr	r2, [r2, #68]	; 0x44
  10ba42:	0c12      	lsrs	r2, r2, #16
  10ba44:	0412      	lsls	r2, r2, #16
  10ba46:	f512 3f80 	cmn.w	r2, #65536	; 0x10000
  10ba4a:	d007      	beq.n	10ba5c <fTrim+0xa0>
  10ba4c:	f44f 52fd 	mov.w	r2, #8096	; 0x1fa0
  10ba50:	6c50      	ldr	r0, [r2, #68]	; 0x44
  10ba52:	4a2b      	ldr	r2, [pc, #172]	; (10bb00 <fTrim+0x144>)
  10ba54:	8911      	ldrh	r1, [r2, #8]
  10ba56:	f360 210d 	bfi	r1, r0, #8, #6
  10ba5a:	8111      	strh	r1, [r2, #8]
  10ba5c:	f44f 52fd 	mov.w	r2, #8096	; 0x1fa0
  10ba60:	6c91      	ldr	r1, [r2, #72]	; 0x48
  10ba62:	6099      	str	r1, [r3, #8]
  10ba64:	6cd1      	ldr	r1, [r2, #76]	; 0x4c
  10ba66:	6019      	str	r1, [r3, #0]
  10ba68:	6d10      	ldr	r0, [r2, #80]	; 0x50
  10ba6a:	4926      	ldr	r1, [pc, #152]	; (10bb04 <fTrim+0x148>)
  10ba6c:	6008      	str	r0, [r1, #0]
  10ba6e:	6a11      	ldr	r1, [r2, #32]
  10ba70:	61d9      	str	r1, [r3, #28]
  10ba72:	6a51      	ldr	r1, [r2, #36]	; 0x24
  10ba74:	6199      	str	r1, [r3, #24]
  10ba76:	6991      	ldr	r1, [r2, #24]
  10ba78:	6259      	str	r1, [r3, #36]	; 0x24
  10ba7a:	69d2      	ldr	r2, [r2, #28]
  10ba7c:	621a      	str	r2, [r3, #32]
  10ba7e:	f44f 5220 	mov.w	r2, #10240	; 0x2800
  10ba82:	6811      	ldr	r1, [r2, #0]
  10ba84:	3101      	adds	r1, #1
  10ba86:	d007      	beq.n	10ba98 <fTrim+0xdc>
  10ba88:	6851      	ldr	r1, [r2, #4]
  10ba8a:	3101      	adds	r1, #1
  10ba8c:	d004      	beq.n	10ba98 <fTrim+0xdc>
  10ba8e:	6810      	ldr	r0, [r2, #0]
  10ba90:	4918      	ldr	r1, [pc, #96]	; (10baf4 <fTrim+0x138>)
  10ba92:	6248      	str	r0, [r1, #36]	; 0x24
  10ba94:	6852      	ldr	r2, [r2, #4]
  10ba96:	620a      	str	r2, [r1, #32]
  10ba98:	f44f 5220 	mov.w	r2, #10240	; 0x2800
  10ba9c:	6891      	ldr	r1, [r2, #8]
  10ba9e:	3101      	adds	r1, #1
  10baa0:	bf1f      	itttt	ne
  10baa2:	6892      	ldrne	r2, [r2, #8]
  10baa4:	4914      	ldrne	r1, [pc, #80]	; (10baf8 <fTrim+0x13c>)
  10baa6:	f3c2 020b 	ubfxne	r2, r2, #0, #12
  10baaa:	62ca      	strne	r2, [r1, #44]	; 0x2c
  10baac:	f44f 5220 	mov.w	r2, #10240	; 0x2800
  10bab0:	6891      	ldr	r1, [r2, #8]
  10bab2:	3101      	adds	r1, #1
  10bab4:	bf1f      	itttt	ne
  10bab6:	6892      	ldrne	r2, [r2, #8]
  10bab8:	490f      	ldrne	r1, [pc, #60]	; (10baf8 <fTrim+0x13c>)
  10baba:	f3c2 020b 	ubfxne	r2, r2, #0, #12
  10babe:	62ca      	strne	r2, [r1, #44]	; 0x2c
  10bac0:	f44f 5220 	mov.w	r2, #10240	; 0x2800
  10bac4:	6911      	ldr	r1, [r2, #16]
  10bac6:	3101      	adds	r1, #1
  10bac8:	d005      	beq.n	10bad6 <fTrim+0x11a>
  10baca:	6910      	ldr	r0, [r2, #16]
  10bacc:	4a0c      	ldr	r2, [pc, #48]	; (10bb00 <fTrim+0x144>)
  10bace:	8911      	ldrh	r1, [r2, #8]
  10bad0:	f360 210d 	bfi	r1, r0, #8, #6
  10bad4:	8111      	strh	r1, [r2, #8]
  10bad6:	f44f 5220 	mov.w	r2, #10240	; 0x2800
  10bada:	6951      	ldr	r1, [r2, #20]
  10badc:	3101      	adds	r1, #1
  10bade:	d007      	beq.n	10baf0 <fTrim+0x134>
  10bae0:	6951      	ldr	r1, [r2, #20]
  10bae2:	8a9a      	ldrh	r2, [r3, #20]
  10bae4:	f361 0203 	bfi	r2, r1, #0, #4
  10bae8:	829a      	strh	r2, [r3, #20]
  10baea:	e001      	b.n	10baf0 <fTrim+0x134>
  10baec:	2000      	movs	r0, #0
  10baee:	4770      	bx	lr
  10baf0:	2001      	movs	r0, #1
  10baf2:	4770      	bx	lr
  10baf4:	40014000 	.word	0x40014000
  10baf8:	4001b000 	.word	0x4001b000
  10bafc:	40019080 	.word	0x40019080
  10bb00:	40014100 	.word	0x40014100
  10bb04:	40011000 	.word	0x40011000

0010bb08 <fClockInit>:
  10bb08:	4b28      	ldr	r3, [pc, #160]	; (10bbac <fClockInit+0xa4>)
  10bb0a:	b082      	sub	sp, #8
  10bb0c:	781a      	ldrb	r2, [r3, #0]
  10bb0e:	f042 0201 	orr.w	r2, r2, #1
  10bb12:	701a      	strb	r2, [r3, #0]
  10bb14:	685a      	ldr	r2, [r3, #4]
  10bb16:	07d0      	lsls	r0, r2, #31
  10bb18:	d5fc      	bpl.n	10bb14 <fClockInit+0xc>
  10bb1a:	4b25      	ldr	r3, [pc, #148]	; (10bbb0 <fClockInit+0xa8>)
  10bb1c:	881a      	ldrh	r2, [r3, #0]
  10bb1e:	f36f 1245 	bfc	r2, #5, #1
  10bb22:	801a      	strh	r2, [r3, #0]
  10bb24:	2300      	movs	r3, #0
  10bb26:	f88d 3007 	strb.w	r3, [sp, #7]
  10bb2a:	f89d 3007 	ldrb.w	r3, [sp, #7]
  10bb2e:	2b09      	cmp	r3, #9
  10bb30:	d804      	bhi.n	10bb3c <fClockInit+0x34>
  10bb32:	f89d 3007 	ldrb.w	r3, [sp, #7]
  10bb36:	3301      	adds	r3, #1
  10bb38:	b2db      	uxtb	r3, r3
  10bb3a:	e7f4      	b.n	10bb26 <fClockInit+0x1e>
  10bb3c:	4b1b      	ldr	r3, [pc, #108]	; (10bbac <fClockInit+0xa4>)
  10bb3e:	781a      	ldrb	r2, [r3, #0]
  10bb40:	f042 0208 	orr.w	r2, r2, #8
  10bb44:	701a      	strb	r2, [r3, #0]
  10bb46:	685a      	ldr	r2, [r3, #4]
  10bb48:	0691      	lsls	r1, r2, #26
  10bb4a:	d5fc      	bpl.n	10bb46 <fClockInit+0x3e>
  10bb4c:	685a      	ldr	r2, [r3, #4]
  10bb4e:	06d2      	lsls	r2, r2, #27
  10bb50:	d4fc      	bmi.n	10bb4c <fClockInit+0x44>
  10bb52:	4b17      	ldr	r3, [pc, #92]	; (10bbb0 <fClockInit+0xa8>)
  10bb54:	881a      	ldrh	r2, [r3, #0]
  10bb56:	f042 0220 	orr.w	r2, r2, #32
  10bb5a:	801a      	strh	r2, [r3, #0]
  10bb5c:	881a      	ldrh	r2, [r3, #0]
  10bb5e:	f36f 1204 	bfc	r2, #4, #1
  10bb62:	801a      	strh	r2, [r3, #0]
  10bb64:	2300      	movs	r3, #0
  10bb66:	f88d 3007 	strb.w	r3, [sp, #7]
  10bb6a:	f89d 3007 	ldrb.w	r3, [sp, #7]
  10bb6e:	2b09      	cmp	r3, #9
  10bb70:	d804      	bhi.n	10bb7c <fClockInit+0x74>
  10bb72:	f89d 3007 	ldrb.w	r3, [sp, #7]
  10bb76:	3301      	adds	r3, #1
  10bb78:	b2db      	uxtb	r3, r3
  10bb7a:	e7f4      	b.n	10bb66 <fClockInit+0x5e>
  10bb7c:	4b0b      	ldr	r3, [pc, #44]	; (10bbac <fClockInit+0xa4>)
  10bb7e:	781a      	ldrb	r2, [r3, #0]
  10bb80:	f042 0204 	orr.w	r2, r2, #4
  10bb84:	701a      	strb	r2, [r3, #0]
  10bb86:	685a      	ldr	r2, [r3, #4]
  10bb88:	0710      	lsls	r0, r2, #28
  10bb8a:	d5fc      	bpl.n	10bb86 <fClockInit+0x7e>
  10bb8c:	6859      	ldr	r1, [r3, #4]
  10bb8e:	4a07      	ldr	r2, [pc, #28]	; (10bbac <fClockInit+0xa4>)
  10bb90:	0749      	lsls	r1, r1, #29
  10bb92:	d4fb      	bmi.n	10bb8c <fClockInit+0x84>
  10bb94:	4906      	ldr	r1, [pc, #24]	; (10bbb0 <fClockInit+0xa8>)
  10bb96:	880b      	ldrh	r3, [r1, #0]
  10bb98:	f043 0308 	orr.w	r3, r3, #8
  10bb9c:	800b      	strh	r3, [r1, #0]
  10bb9e:	f04f 33ff 	mov.w	r3, #4294967295
  10bba2:	6113      	str	r3, [r2, #16]
  10bba4:	2300      	movs	r3, #0
  10bba6:	6153      	str	r3, [r2, #20]
  10bba8:	b002      	add	sp, #8
  10bbaa:	4770      	bx	lr
  10bbac:	4001b000 	.word	0x4001b000
  10bbb0:	4001d000 	.word	0x4001d000

0010bbb4 <fPmuInit>:
  10bbb4:	4a14      	ldr	r2, [pc, #80]	; (10bc08 <fPmuInit+0x54>)
  10bbb6:	6913      	ldr	r3, [r2, #16]
  10bbb8:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
  10bbbc:	6113      	str	r3, [r2, #16]
  10bbbe:	4b13      	ldr	r3, [pc, #76]	; (10bc0c <fPmuInit+0x58>)
  10bbc0:	6919      	ldr	r1, [r3, #16]
  10bbc2:	f021 0110 	bic.w	r1, r1, #16
  10bbc6:	6119      	str	r1, [r3, #16]
  10bbc8:	6919      	ldr	r1, [r3, #16]
  10bbca:	f021 0102 	bic.w	r1, r1, #2
  10bbce:	6119      	str	r1, [r3, #16]
  10bbd0:	4b0f      	ldr	r3, [pc, #60]	; (10bc10 <fPmuInit+0x5c>)
  10bbd2:	21a0      	movs	r1, #160	; 0xa0
  10bbd4:	6159      	str	r1, [r3, #20]
  10bbd6:	f44f 71c8 	mov.w	r1, #400	; 0x190
  10bbda:	60d9      	str	r1, [r3, #12]
  10bbdc:	8819      	ldrh	r1, [r3, #0]
  10bbde:	f36f 0141 	bfc	r1, #1, #1
  10bbe2:	8019      	strh	r1, [r3, #0]
  10bbe4:	8819      	ldrh	r1, [r3, #0]
  10bbe6:	f36f 0182 	bfc	r1, #2, #1
  10bbea:	8019      	strh	r1, [r3, #0]
  10bbec:	8819      	ldrh	r1, [r3, #0]
  10bbee:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  10bbf2:	8019      	strh	r1, [r3, #0]
  10bbf4:	8819      	ldrh	r1, [r3, #0]
  10bbf6:	f041 0140 	orr.w	r1, r1, #64	; 0x40
  10bbfa:	8019      	strh	r1, [r3, #0]
  10bbfc:	6913      	ldr	r3, [r2, #16]
  10bbfe:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  10bc02:	6113      	str	r3, [r2, #16]
  10bc04:	4770      	bx	lr
  10bc06:	bf00      	nop
  10bc08:	4001b000 	.word	0x4001b000
  10bc0c:	e000ed00 	.word	0xe000ed00
  10bc10:	4001d000 	.word	0x4001d000

0010bc14 <fClockGetPeriphClockfrequency>:
  10bc14:	4800      	ldr	r0, [pc, #0]	; (10bc18 <fClockGetPeriphClockfrequency+0x4>)
  10bc16:	4770      	bx	lr
  10bc18:	01e84800 	.word	0x01e84800

0010bc1c <fNcs36510Init>:
  10bc1c:	b538      	push	{r3, r4, r5, lr}
  10bc1e:	4c1c      	ldr	r4, [pc, #112]	; (10bc90 <fNcs36510Init+0x74>)
  10bc20:	4d1c      	ldr	r5, [pc, #112]	; (10bc94 <fNcs36510Init+0x78>)
  10bc22:	231f      	movs	r3, #31
  10bc24:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
  10bc28:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
  10bc2c:	f04f 6320 	mov.w	r3, #167772160	; 0xa000000
  10bc30:	606b      	str	r3, [r5, #4]
  10bc32:	4b19      	ldr	r3, [pc, #100]	; (10bc98 <fNcs36510Init+0x7c>)
  10bc34:	60ab      	str	r3, [r5, #8]
  10bc36:	f7ff fec1 	bl	10b9bc <fTrim>
  10bc3a:	f7ff ff65 	bl	10bb08 <fClockInit>
  10bc3e:	f7ff ffb9 	bl	10bbb4 <fPmuInit>
  10bc42:	2320      	movs	r3, #32
  10bc44:	77eb      	strb	r3, [r5, #31]
  10bc46:	22d0      	movs	r2, #208	; 0xd0
  10bc48:	f885 3022 	strb.w	r3, [r5, #34]	; 0x22
  10bc4c:	f885 3023 	strb.w	r3, [r5, #35]	; 0x23
  10bc50:	23e0      	movs	r3, #224	; 0xe0
  10bc52:	f884 3303 	strb.w	r3, [r4, #771]	; 0x303
  10bc56:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
  10bc5a:	f884 3305 	strb.w	r3, [r4, #773]	; 0x305
  10bc5e:	f884 3306 	strb.w	r3, [r4, #774]	; 0x306
  10bc62:	f884 3307 	strb.w	r3, [r4, #775]	; 0x307
  10bc66:	f884 2309 	strb.w	r2, [r4, #777]	; 0x309
  10bc6a:	f884 230a 	strb.w	r2, [r4, #778]	; 0x30a
  10bc6e:	f884 330b 	strb.w	r3, [r4, #779]	; 0x30b
  10bc72:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
  10bc76:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
  10bc7a:	f884 330f 	strb.w	r3, [r4, #783]	; 0x30f
  10bc7e:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
  10bc82:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
  10bc86:	f884 3311 	strb.w	r3, [r4, #785]	; 0x311
  10bc8a:	f884 3312 	strb.w	r3, [r4, #786]	; 0x312
  10bc8e:	bd38      	pop	{r3, r4, r5, pc}
  10bc90:	e000e100 	.word	0xe000e100
  10bc94:	e000ed00 	.word	0xe000ed00
  10bc98:	00102000 	.word	0x00102000

0010bc9c <pin_function>:
  10bc9c:	4b07      	ldr	r3, [pc, #28]	; (10bcbc <pin_function+0x20>)
  10bc9e:	0080      	lsls	r0, r0, #2
  10bca0:	691a      	ldr	r2, [r3, #16]
  10bca2:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  10bca6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
  10bcaa:	f500 3080 	add.w	r0, r0, #65536	; 0x10000
  10bcae:	611a      	str	r2, [r3, #16]
  10bcb0:	6001      	str	r1, [r0, #0]
  10bcb2:	691a      	ldr	r2, [r3, #16]
  10bcb4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  10bcb8:	611a      	str	r2, [r3, #16]
  10bcba:	4770      	bx	lr
  10bcbc:	4001b000 	.word	0x4001b000

0010bcc0 <pin_mode>:
  10bcc0:	4a1d      	ldr	r2, [pc, #116]	; (10bd38 <pin_mode+0x78>)
  10bcc2:	0080      	lsls	r0, r0, #2
  10bcc4:	6913      	ldr	r3, [r2, #16]
  10bcc6:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  10bcca:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
  10bcce:	f500 30e0 	add.w	r0, r0, #114688	; 0x1c000
  10bcd2:	6113      	str	r3, [r2, #16]
  10bcd4:	2905      	cmp	r1, #5
  10bcd6:	d829      	bhi.n	10bd2c <pin_mode+0x6c>
  10bcd8:	e8df f001 	tbb	[pc, r1]
  10bcdc:	0f0b0703 	.word	0x0f0b0703
  10bce0:	2017      	.short	0x2017
  10bce2:	7803      	ldrb	r3, [r0, #0]
  10bce4:	f36f 1345 	bfc	r3, #5, #1
  10bce8:	e00a      	b.n	10bd00 <pin_mode+0x40>
  10bcea:	7803      	ldrb	r3, [r0, #0]
  10bcec:	f36f 1345 	bfc	r3, #5, #1
  10bcf0:	e00e      	b.n	10bd10 <pin_mode+0x50>
  10bcf2:	7803      	ldrb	r3, [r0, #0]
  10bcf4:	f36f 1345 	bfc	r3, #5, #1
  10bcf8:	e013      	b.n	10bd22 <pin_mode+0x62>
  10bcfa:	7803      	ldrb	r3, [r0, #0]
  10bcfc:	f043 0320 	orr.w	r3, r3, #32
  10bd00:	7003      	strb	r3, [r0, #0]
  10bd02:	7803      	ldrb	r3, [r0, #0]
  10bd04:	f36f 0301 	bfc	r3, #0, #2
  10bd08:	e00f      	b.n	10bd2a <pin_mode+0x6a>
  10bd0a:	7803      	ldrb	r3, [r0, #0]
  10bd0c:	f043 0320 	orr.w	r3, r3, #32
  10bd10:	7003      	strb	r3, [r0, #0]
  10bd12:	7803      	ldrb	r3, [r0, #0]
  10bd14:	2201      	movs	r2, #1
  10bd16:	f362 0301 	bfi	r3, r2, #0, #2
  10bd1a:	e006      	b.n	10bd2a <pin_mode+0x6a>
  10bd1c:	7803      	ldrb	r3, [r0, #0]
  10bd1e:	f043 0320 	orr.w	r3, r3, #32
  10bd22:	7003      	strb	r3, [r0, #0]
  10bd24:	7803      	ldrb	r3, [r0, #0]
  10bd26:	f043 0303 	orr.w	r3, r3, #3
  10bd2a:	7003      	strb	r3, [r0, #0]
  10bd2c:	4a02      	ldr	r2, [pc, #8]	; (10bd38 <pin_mode+0x78>)
  10bd2e:	6913      	ldr	r3, [r2, #16]
  10bd30:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
  10bd34:	6113      	str	r3, [r2, #16]
  10bd36:	4770      	bx	lr
  10bd38:	4001b000 	.word	0x4001b000

0010bd3c <fRtcHandler>:
  10bd3c:	490a      	ldr	r1, [pc, #40]	; (10bd68 <fRtcHandler+0x2c>)
  10bd3e:	2080      	movs	r0, #128	; 0x80
  10bd40:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
  10bd44:	f3bf 8f4f 	dsb	sy
  10bd48:	f3bf 8f6f 	isb	sy
  10bd4c:	4b07      	ldr	r3, [pc, #28]	; (10bd6c <fRtcHandler+0x30>)
  10bd4e:	2203      	movs	r2, #3
  10bd50:	619a      	str	r2, [r3, #24]
  10bd52:	691a      	ldr	r2, [r3, #16]
  10bd54:	f022 020c 	bic.w	r2, r2, #12
  10bd58:	611a      	str	r2, [r3, #16]
  10bd5a:	6008      	str	r0, [r1, #0]
  10bd5c:	695a      	ldr	r2, [r3, #20]
  10bd5e:	f412 6fe0 	tst.w	r2, #1792	; 0x700
  10bd62:	d1fb      	bne.n	10bd5c <fRtcHandler+0x20>
  10bd64:	f7fc bbfc 	b.w	108560 <lp_ticker_irq_handler>
  10bd68:	e000e100 	.word	0xe000e100
  10bd6c:	4000f000 	.word	0x4000f000

0010bd70 <fRtcInit>:
  10bd70:	b530      	push	{r4, r5, lr}
  10bd72:	4b17      	ldr	r3, [pc, #92]	; (10bdd0 <fRtcInit+0x60>)
  10bd74:	4917      	ldr	r1, [pc, #92]	; (10bdd4 <fRtcInit+0x64>)
  10bd76:	691a      	ldr	r2, [r3, #16]
  10bd78:	2400      	movs	r4, #0
  10bd7a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
  10bd7e:	611a      	str	r2, [r3, #16]
  10bd80:	781a      	ldrb	r2, [r3, #0]
  10bd82:	2500      	movs	r5, #0
  10bd84:	f042 0210 	orr.w	r2, r2, #16
  10bd88:	701a      	strb	r2, [r3, #0]
  10bd8a:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
  10bd8e:	2200      	movs	r2, #0
  10bd90:	611a      	str	r2, [r3, #16]
  10bd92:	605a      	str	r2, [r3, #4]
  10bd94:	601a      	str	r2, [r3, #0]
  10bd96:	60da      	str	r2, [r3, #12]
  10bd98:	609a      	str	r2, [r3, #8]
  10bd9a:	e9c1 4500 	strd	r4, r5, [r1]
  10bd9e:	615a      	str	r2, [r3, #20]
  10bda0:	2203      	movs	r2, #3
  10bda2:	619a      	str	r2, [r3, #24]
  10bda4:	6959      	ldr	r1, [r3, #20]
  10bda6:	4a0c      	ldr	r2, [pc, #48]	; (10bdd8 <fRtcInit+0x68>)
  10bda8:	05c9      	lsls	r1, r1, #23
  10bdaa:	d4fb      	bmi.n	10bda4 <fRtcInit+0x34>
  10bdac:	6913      	ldr	r3, [r2, #16]
  10bdae:	490b      	ldr	r1, [pc, #44]	; (10bddc <fRtcInit+0x6c>)
  10bdb0:	f043 0303 	orr.w	r3, r3, #3
  10bdb4:	6113      	str	r3, [r2, #16]
  10bdb6:	4b0a      	ldr	r3, [pc, #40]	; (10bde0 <fRtcInit+0x70>)
  10bdb8:	689b      	ldr	r3, [r3, #8]
  10bdba:	65d9      	str	r1, [r3, #92]	; 0x5c
  10bdbc:	4b09      	ldr	r3, [pc, #36]	; (10bde4 <fRtcInit+0x74>)
  10bdbe:	2180      	movs	r1, #128	; 0x80
  10bdc0:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
  10bdc4:	6019      	str	r1, [r3, #0]
  10bdc6:	6953      	ldr	r3, [r2, #20]
  10bdc8:	05db      	lsls	r3, r3, #23
  10bdca:	d4fc      	bmi.n	10bdc6 <fRtcInit+0x56>
  10bdcc:	bd30      	pop	{r4, r5, pc}
  10bdce:	bf00      	nop
  10bdd0:	4001b000 	.word	0x4001b000
  10bdd4:	3fff8b48 	.word	0x3fff8b48
  10bdd8:	4000f000 	.word	0x4000f000
  10bddc:	0010bd3d 	.word	0x0010bd3d
  10bde0:	e000ed00 	.word	0xe000ed00
  10bde4:	e000e100 	.word	0xe000e100

0010bde8 <fRtcDisableInterrupt>:
  10bde8:	4b04      	ldr	r3, [pc, #16]	; (10bdfc <fRtcDisableInterrupt+0x14>)
  10bdea:	2280      	movs	r2, #128	; 0x80
  10bdec:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  10bdf0:	f3bf 8f4f 	dsb	sy
  10bdf4:	f3bf 8f6f 	isb	sy
  10bdf8:	4770      	bx	lr
  10bdfa:	bf00      	nop
  10bdfc:	e000e100 	.word	0xe000e100

0010be00 <fRtcClearInterrupt>:
  10be00:	4b03      	ldr	r3, [pc, #12]	; (10be10 <fRtcClearInterrupt+0x10>)
  10be02:	2203      	movs	r2, #3
  10be04:	619a      	str	r2, [r3, #24]
  10be06:	695a      	ldr	r2, [r3, #20]
  10be08:	f412 6fc0 	tst.w	r2, #1536	; 0x600
  10be0c:	d1fb      	bne.n	10be06 <fRtcClearInterrupt+0x6>
  10be0e:	4770      	bx	lr
  10be10:	4000f000 	.word	0x4000f000

0010be14 <fRtcRead>:
  10be14:	b570      	push	{r4, r5, r6, lr}
  10be16:	4b13      	ldr	r3, [pc, #76]	; (10be64 <fRtcRead+0x50>)
  10be18:	685c      	ldr	r4, [r3, #4]
  10be1a:	681a      	ldr	r2, [r3, #0]
  10be1c:	6859      	ldr	r1, [r3, #4]
  10be1e:	3a01      	subs	r2, #1
  10be20:	428c      	cmp	r4, r1
  10be22:	f3c2 020e 	ubfx	r2, r2, #0, #15
  10be26:	d1f7      	bne.n	10be18 <fRtcRead+0x4>
  10be28:	4d0f      	ldr	r5, [pc, #60]	; (10be68 <fRtcRead+0x54>)
  10be2a:	fba2 2305 	umull	r2, r3, r2, r5
  10be2e:	0bd0      	lsrs	r0, r2, #15
  10be30:	ea40 4043 	orr.w	r0, r0, r3, lsl #17
  10be34:	0bd9      	lsrs	r1, r3, #15
  10be36:	fbe5 0104 	umlal	r0, r1, r5, r4
  10be3a:	460d      	mov	r5, r1
  10be3c:	4604      	mov	r4, r0
  10be3e:	4b0b      	ldr	r3, [pc, #44]	; (10be6c <fRtcRead+0x58>)
  10be40:	e9d3 0100 	ldrd	r0, r1, [r3]
  10be44:	428d      	cmp	r5, r1
  10be46:	bf08      	it	eq
  10be48:	4284      	cmpeq	r4, r0
  10be4a:	461e      	mov	r6, r3
  10be4c:	d204      	bcs.n	10be58 <fRtcRead+0x44>
  10be4e:	22ee      	movs	r2, #238	; 0xee
  10be50:	4907      	ldr	r1, [pc, #28]	; (10be70 <fRtcRead+0x5c>)
  10be52:	4808      	ldr	r0, [pc, #32]	; (10be74 <fRtcRead+0x60>)
  10be54:	f7fc fca4 	bl	1087a0 <mbed_assert_internal>
  10be58:	e9c6 4500 	strd	r4, r5, [r6]
  10be5c:	4620      	mov	r0, r4
  10be5e:	4629      	mov	r1, r5
  10be60:	bd70      	pop	{r4, r5, r6, pc}
  10be62:	bf00      	nop
  10be64:	4000f000 	.word	0x4000f000
  10be68:	000f4240 	.word	0x000f4240
  10be6c:	3fff8b48 	.word	0x3fff8b48
  10be70:	001194e8 	.word	0x001194e8
  10be74:	0011952b 	.word	0x0011952b

0010be78 <fRtcSetInterrupt>:
  10be78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10be7a:	4606      	mov	r6, r0
  10be7c:	f7ff ffca 	bl	10be14 <fRtcRead>
  10be80:	1a33      	subs	r3, r6, r0
  10be82:	2b00      	cmp	r3, #0
  10be84:	4f2b      	ldr	r7, [pc, #172]	; (10bf34 <fRtcSetInterrupt+0xbc>)
  10be86:	dc03      	bgt.n	10be90 <fRtcSetInterrupt+0x18>
  10be88:	2380      	movs	r3, #128	; 0x80
  10be8a:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
  10be8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10be90:	42b0      	cmp	r0, r6
  10be92:	4634      	mov	r4, r6
  10be94:	f04f 0500 	mov.w	r5, #0
  10be98:	d902      	bls.n	10bea0 <fRtcSetInterrupt+0x28>
  10be9a:	1c34      	adds	r4, r6, #0
  10be9c:	f145 0501 	adc.w	r5, r5, #1
  10bea0:	4a25      	ldr	r2, [pc, #148]	; (10bf38 <fRtcSetInterrupt+0xc0>)
  10bea2:	2300      	movs	r3, #0
  10bea4:	4620      	mov	r0, r4
  10bea6:	4629      	mov	r1, r5
  10bea8:	f003 fae4 	bl	10f474 <__aeabi_uldivmod>
  10beac:	2380      	movs	r3, #128	; 0x80
  10beae:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  10beb2:	f3bf 8f4f 	dsb	sy
  10beb6:	f3bf 8f6f 	isb	sy
  10beba:	4e20      	ldr	r6, [pc, #128]	; (10bf3c <fRtcSetInterrupt+0xc4>)
  10bebc:	6873      	ldr	r3, [r6, #4]
  10bebe:	4298      	cmp	r0, r3
  10bec0:	d007      	beq.n	10bed2 <fRtcSetInterrupt+0x5a>
  10bec2:	60f0      	str	r0, [r6, #12]
  10bec4:	6933      	ldr	r3, [r6, #16]
  10bec6:	f023 0304 	bic.w	r3, r3, #4
  10beca:	f043 0308 	orr.w	r3, r3, #8
  10bece:	6133      	str	r3, [r6, #16]
  10bed0:	e027      	b.n	10bf22 <fRtcSetInterrupt+0xaa>
  10bed2:	2500      	movs	r5, #0
  10bed4:	03e9      	lsls	r1, r5, #15
  10bed6:	2300      	movs	r3, #0
  10bed8:	4a17      	ldr	r2, [pc, #92]	; (10bf38 <fRtcSetInterrupt+0xc0>)
  10beda:	03e0      	lsls	r0, r4, #15
  10bedc:	ea41 4154 	orr.w	r1, r1, r4, lsr #17
  10bee0:	f003 fac8 	bl	10f474 <__aeabi_uldivmod>
  10bee4:	6833      	ldr	r3, [r6, #0]
  10bee6:	f3c0 000e 	ubfx	r0, r0, #0, #15
  10beea:	b29b      	uxth	r3, r3
  10beec:	4283      	cmp	r3, r0
  10beee:	d00b      	beq.n	10bf08 <fRtcSetInterrupt+0x90>
  10bef0:	d202      	bcs.n	10bef8 <fRtcSetInterrupt+0x80>
  10bef2:	1ac2      	subs	r2, r0, r3
  10bef4:	2a04      	cmp	r2, #4
  10bef6:	dd07      	ble.n	10bf08 <fRtcSetInterrupt+0x90>
  10bef8:	4283      	cmp	r3, r0
  10befa:	d90a      	bls.n	10bf12 <fRtcSetInterrupt+0x9a>
  10befc:	1a1b      	subs	r3, r3, r0
  10befe:	f5c3 43ff 	rsb	r3, r3, #32640	; 0x7f80
  10bf02:	337f      	adds	r3, #127	; 0x7f
  10bf04:	2b04      	cmp	r3, #4
  10bf06:	dc04      	bgt.n	10bf12 <fRtcSetInterrupt+0x9a>
  10bf08:	4b0a      	ldr	r3, [pc, #40]	; (10bf34 <fRtcSetInterrupt+0xbc>)
  10bf0a:	2280      	movs	r2, #128	; 0x80
  10bf0c:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
  10bf10:	e007      	b.n	10bf22 <fRtcSetInterrupt+0xaa>
  10bf12:	4a0a      	ldr	r2, [pc, #40]	; (10bf3c <fRtcSetInterrupt+0xc4>)
  10bf14:	6090      	str	r0, [r2, #8]
  10bf16:	6913      	ldr	r3, [r2, #16]
  10bf18:	f023 0308 	bic.w	r3, r3, #8
  10bf1c:	f043 0304 	orr.w	r3, r3, #4
  10bf20:	6113      	str	r3, [r2, #16]
  10bf22:	4b04      	ldr	r3, [pc, #16]	; (10bf34 <fRtcSetInterrupt+0xbc>)
  10bf24:	2280      	movs	r2, #128	; 0x80
  10bf26:	601a      	str	r2, [r3, #0]
  10bf28:	4a04      	ldr	r2, [pc, #16]	; (10bf3c <fRtcSetInterrupt+0xc4>)
  10bf2a:	6953      	ldr	r3, [r2, #20]
  10bf2c:	f413 7fe0 	tst.w	r3, #448	; 0x1c0
  10bf30:	d1fb      	bne.n	10bf2a <fRtcSetInterrupt+0xb2>
  10bf32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10bf34:	e000e100 	.word	0xe000e100
  10bf38:	000f4240 	.word	0x000f4240
  10bf3c:	4000f000 	.word	0x4000f000

0010bf40 <uart_irq>:
  10bf40:	4b0c      	ldr	r3, [pc, #48]	; (10bf74 <uart_irq+0x34>)
  10bf42:	b570      	push	{r4, r5, r6, lr}
  10bf44:	4606      	mov	r6, r0
  10bf46:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
  10bf4a:	460d      	mov	r5, r1
  10bf4c:	461c      	mov	r4, r3
  10bf4e:	b178      	cbz	r0, 10bf70 <uart_irq+0x30>
  10bf50:	0672      	lsls	r2, r6, #25
  10bf52:	d503      	bpl.n	10bf5c <uart_irq+0x1c>
  10bf54:	4b08      	ldr	r3, [pc, #32]	; (10bf78 <uart_irq+0x38>)
  10bf56:	2101      	movs	r1, #1
  10bf58:	681b      	ldr	r3, [r3, #0]
  10bf5a:	4798      	blx	r3
  10bf5c:	07f3      	lsls	r3, r6, #31
  10bf5e:	d507      	bpl.n	10bf70 <uart_irq+0x30>
  10bf60:	4b05      	ldr	r3, [pc, #20]	; (10bf78 <uart_irq+0x38>)
  10bf62:	f854 0025 	ldr.w	r0, [r4, r5, lsl #2]
  10bf66:	681b      	ldr	r3, [r3, #0]
  10bf68:	2100      	movs	r1, #0
  10bf6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10bf6e:	4718      	bx	r3
  10bf70:	bd70      	pop	{r4, r5, r6, pc}
  10bf72:	bf00      	nop
  10bf74:	3fff8b50 	.word	0x3fff8b50
  10bf78:	3fff8b58 	.word	0x3fff8b58

0010bf7c <Uart1_Irq>:
  10bf7c:	b410      	push	{r4}
  10bf7e:	490a      	ldr	r1, [pc, #40]	; (10bfa8 <Uart1_Irq+0x2c>)
  10bf80:	694a      	ldr	r2, [r1, #20]
  10bf82:	684b      	ldr	r3, [r1, #4]
  10bf84:	b2d4      	uxtb	r4, r2
  10bf86:	f013 0002 	ands.w	r0, r3, #2
  10bf8a:	684b      	ldr	r3, [r1, #4]
  10bf8c:	bf1c      	itt	ne
  10bf8e:	f002 0040 	andne.w	r0, r2, #64	; 0x40
  10bf92:	b2c0      	uxtbne	r0, r0
  10bf94:	07db      	lsls	r3, r3, #31
  10bf96:	bf44      	itt	mi
  10bf98:	f002 0201 	andmi.w	r2, r2, #1
  10bf9c:	4310      	orrmi	r0, r2
  10bf9e:	4020      	ands	r0, r4
  10bfa0:	2100      	movs	r1, #0
  10bfa2:	bc10      	pop	{r4}
  10bfa4:	f7ff bfcc 	b.w	10bf40 <uart_irq>
  10bfa8:	40005000 	.word	0x40005000

0010bfac <Uart2_Irq>:
  10bfac:	b410      	push	{r4}
  10bfae:	490a      	ldr	r1, [pc, #40]	; (10bfd8 <Uart2_Irq+0x2c>)
  10bfb0:	694a      	ldr	r2, [r1, #20]
  10bfb2:	684b      	ldr	r3, [r1, #4]
  10bfb4:	b2d4      	uxtb	r4, r2
  10bfb6:	f013 0002 	ands.w	r0, r3, #2
  10bfba:	684b      	ldr	r3, [r1, #4]
  10bfbc:	bf1c      	itt	ne
  10bfbe:	f002 0040 	andne.w	r0, r2, #64	; 0x40
  10bfc2:	b2c0      	uxtbne	r0, r0
  10bfc4:	07db      	lsls	r3, r3, #31
  10bfc6:	bf44      	itt	mi
  10bfc8:	f002 0201 	andmi.w	r2, r2, #1
  10bfcc:	4310      	orrmi	r0, r2
  10bfce:	4020      	ands	r0, r4
  10bfd0:	2101      	movs	r1, #1
  10bfd2:	bc10      	pop	{r4}
  10bfd4:	f7ff bfb4 	b.w	10bf40 <uart_irq>
  10bfd8:	40008000 	.word	0x40008000

0010bfdc <serial_init>:
  10bfdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  10bfe0:	4688      	mov	r8, r1
  10bfe2:	4604      	mov	r4, r0
  10bfe4:	4956      	ldr	r1, [pc, #344]	; (10c140 <serial_init+0x164>)
  10bfe6:	4640      	mov	r0, r8
  10bfe8:	4615      	mov	r5, r2
  10bfea:	f7fc fafb 	bl	1085e4 <pinmap_peripheral>
  10bfee:	4955      	ldr	r1, [pc, #340]	; (10c144 <serial_init+0x168>)
  10bff0:	4606      	mov	r6, r0
  10bff2:	4628      	mov	r0, r5
  10bff4:	f7fc faf6 	bl	1085e4 <pinmap_peripheral>
  10bff8:	4601      	mov	r1, r0
  10bffa:	4630      	mov	r0, r6
  10bffc:	f7fc fad4 	bl	1085a8 <pinmap_merge>
  10c000:	6020      	str	r0, [r4, #0]
  10c002:	3001      	adds	r0, #1
  10c004:	d104      	bne.n	10c010 <serial_init+0x34>
  10c006:	2250      	movs	r2, #80	; 0x50
  10c008:	494f      	ldr	r1, [pc, #316]	; (10c148 <serial_init+0x16c>)
  10c00a:	4850      	ldr	r0, [pc, #320]	; (10c14c <serial_init+0x170>)
  10c00c:	f7fc fbc8 	bl	1087a0 <mbed_assert_internal>
  10c010:	494b      	ldr	r1, [pc, #300]	; (10c140 <serial_init+0x164>)
  10c012:	4640      	mov	r0, r8
  10c014:	f7fc faaa 	bl	10856c <pinmap_pinout>
  10c018:	494a      	ldr	r1, [pc, #296]	; (10c144 <serial_init+0x168>)
  10c01a:	4628      	mov	r0, r5
  10c01c:	f7fc faa6 	bl	10856c <pinmap_pinout>
  10c020:	6822      	ldr	r2, [r4, #0]
  10c022:	4b4b      	ldr	r3, [pc, #300]	; (10c150 <serial_init+0x174>)
  10c024:	429a      	cmp	r2, r3
  10c026:	d108      	bne.n	10c03a <serial_init+0x5e>
  10c028:	4b4a      	ldr	r3, [pc, #296]	; (10c154 <serial_init+0x178>)
  10c02a:	2201      	movs	r2, #1
  10c02c:	601a      	str	r2, [r3, #0]
  10c02e:	6820      	ldr	r0, [r4, #0]
  10c030:	6861      	ldr	r1, [r4, #4]
  10c032:	4b49      	ldr	r3, [pc, #292]	; (10c158 <serial_init+0x17c>)
  10c034:	c303      	stmia	r3!, {r0, r1}
  10c036:	68a0      	ldr	r0, [r4, #8]
  10c038:	6018      	str	r0, [r3, #0]
  10c03a:	4b45      	ldr	r3, [pc, #276]	; (10c150 <serial_init+0x174>)
  10c03c:	6822      	ldr	r2, [r4, #0]
  10c03e:	4e47      	ldr	r6, [pc, #284]	; (10c15c <serial_init+0x180>)
  10c040:	429a      	cmp	r2, r3
  10c042:	f503 3398 	add.w	r3, r3, #77824	; 0x13000
  10c046:	d105      	bne.n	10c054 <serial_init+0x78>
  10c048:	691a      	ldr	r2, [r3, #16]
  10c04a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  10c04e:	611a      	str	r2, [r3, #16]
  10c050:	230d      	movs	r3, #13
  10c052:	e007      	b.n	10c064 <serial_init+0x88>
  10c054:	4942      	ldr	r1, [pc, #264]	; (10c160 <serial_init+0x184>)
  10c056:	428a      	cmp	r2, r1
  10c058:	d106      	bne.n	10c068 <serial_init+0x8c>
  10c05a:	691a      	ldr	r2, [r3, #16]
  10c05c:	f022 0220 	bic.w	r2, r2, #32
  10c060:	611a      	str	r2, [r3, #16]
  10c062:	2303      	movs	r3, #3
  10c064:	7033      	strb	r3, [r6, #0]
  10c066:	e004      	b.n	10c072 <serial_init+0x96>
  10c068:	226f      	movs	r2, #111	; 0x6f
  10c06a:	4937      	ldr	r1, [pc, #220]	; (10c148 <serial_init+0x16c>)
  10c06c:	483d      	ldr	r0, [pc, #244]	; (10c164 <serial_init+0x188>)
  10c06e:	f7fc fb97 	bl	1087a0 <mbed_assert_internal>
  10c072:	4b3d      	ldr	r3, [pc, #244]	; (10c168 <serial_init+0x18c>)
  10c074:	ea4f 0188 	mov.w	r1, r8, lsl #2
  10c078:	691a      	ldr	r2, [r3, #16]
  10c07a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
  10c07e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  10c082:	611a      	str	r2, [r3, #16]
  10c084:	691a      	ldr	r2, [r3, #16]
  10c086:	2007      	movs	r0, #7
  10c088:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
  10c08c:	611a      	str	r2, [r3, #16]
  10c08e:	691a      	ldr	r2, [r3, #16]
  10c090:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
  10c094:	611a      	str	r2, [r3, #16]
  10c096:	f501 3280 	add.w	r2, r1, #65536	; 0x10000
  10c09a:	6010      	str	r0, [r2, #0]
  10c09c:	00aa      	lsls	r2, r5, #2
  10c09e:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
  10c0a2:	f502 3780 	add.w	r7, r2, #65536	; 0x10000
  10c0a6:	f501 31e0 	add.w	r1, r1, #114688	; 0x1c000
  10c0aa:	6038      	str	r0, [r7, #0]
  10c0ac:	f502 32e0 	add.w	r2, r2, #114688	; 0x1c000
  10c0b0:	6008      	str	r0, [r1, #0]
  10c0b2:	2127      	movs	r1, #39	; 0x27
  10c0b4:	6011      	str	r1, [r2, #0]
  10c0b6:	2701      	movs	r7, #1
  10c0b8:	492c      	ldr	r1, [pc, #176]	; (10c16c <serial_init+0x190>)
  10c0ba:	fa07 f208 	lsl.w	r2, r7, r8
  10c0be:	fa07 f505 	lsl.w	r5, r7, r5
  10c0c2:	608a      	str	r2, [r1, #8]
  10c0c4:	60cd      	str	r5, [r1, #12]
  10c0c6:	691a      	ldr	r2, [r3, #16]
  10c0c8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
  10c0cc:	611a      	str	r2, [r3, #16]
  10c0ce:	691a      	ldr	r2, [r3, #16]
  10c0d0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  10c0d4:	611a      	str	r2, [r3, #16]
  10c0d6:	691a      	ldr	r2, [r3, #16]
  10c0d8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  10c0dc:	611a      	str	r2, [r3, #16]
  10c0de:	f7ff fd99 	bl	10bc14 <fClockGetPeriphClockfrequency>
  10c0e2:	f44f 5316 	mov.w	r3, #9600	; 0x2580
  10c0e6:	fbb0 f0f3 	udiv	r0, r0, r3
  10c0ea:	6823      	ldr	r3, [r4, #0]
  10c0ec:	0900      	lsrs	r0, r0, #4
  10c0ee:	2280      	movs	r2, #128	; 0x80
  10c0f0:	60da      	str	r2, [r3, #12]
  10c0f2:	b2c2      	uxtb	r2, r0
  10c0f4:	601a      	str	r2, [r3, #0]
  10c0f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
  10c0fa:	2203      	movs	r2, #3
  10c0fc:	6058      	str	r0, [r3, #4]
  10c0fe:	60da      	str	r2, [r3, #12]
  10c100:	228f      	movs	r2, #143	; 0x8f
  10c102:	609a      	str	r2, [r3, #8]
  10c104:	699a      	ldr	r2, [r3, #24]
  10c106:	61da      	str	r2, [r3, #28]
  10c108:	4a11      	ldr	r2, [pc, #68]	; (10c150 <serial_init+0x174>)
  10c10a:	4293      	cmp	r3, r2
  10c10c:	d107      	bne.n	10c11e <serial_init+0x142>
  10c10e:	4b11      	ldr	r3, [pc, #68]	; (10c154 <serial_init+0x178>)
  10c110:	6861      	ldr	r1, [r4, #4]
  10c112:	601f      	str	r7, [r3, #0]
  10c114:	6820      	ldr	r0, [r4, #0]
  10c116:	4b10      	ldr	r3, [pc, #64]	; (10c158 <serial_init+0x17c>)
  10c118:	c303      	stmia	r3!, {r0, r1}
  10c11a:	68a0      	ldr	r0, [r4, #8]
  10c11c:	6018      	str	r0, [r3, #0]
  10c11e:	7832      	ldrb	r2, [r6, #0]
  10c120:	b253      	sxtb	r3, r2
  10c122:	2b00      	cmp	r3, #0
  10c124:	db09      	blt.n	10c13a <serial_init+0x15e>
  10c126:	2101      	movs	r1, #1
  10c128:	f002 021f 	and.w	r2, r2, #31
  10c12c:	fa01 f202 	lsl.w	r2, r1, r2
  10c130:	095b      	lsrs	r3, r3, #5
  10c132:	490f      	ldr	r1, [pc, #60]	; (10c170 <serial_init+0x194>)
  10c134:	3360      	adds	r3, #96	; 0x60
  10c136:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  10c13a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10c13e:	bf00      	nop
  10c140:	00119410 	.word	0x00119410
  10c144:	00119398 	.word	0x00119398
  10c148:	0011954a 	.word	0x0011954a
  10c14c:	00119594 	.word	0x00119594
  10c150:	40008000 	.word	0x40008000
  10c154:	3fff8b60 	.word	0x3fff8b60
  10c158:	3fff9f0c 	.word	0x3fff9f0c
  10c15c:	3fff8b5c 	.word	0x3fff8b5c
  10c160:	40005000 	.word	0x40005000
  10c164:	001195ba 	.word	0x001195ba
  10c168:	4001b000 	.word	0x4001b000
  10c16c:	4000c000 	.word	0x4000c000
  10c170:	e000e100 	.word	0xe000e100

0010c174 <serial_baud>:
  10c174:	b538      	push	{r3, r4, r5, lr}
  10c176:	4605      	mov	r5, r0
  10c178:	460c      	mov	r4, r1
  10c17a:	f7ff fd4b 	bl	10bc14 <fClockGetPeriphClockfrequency>
  10c17e:	fbb0 f0f4 	udiv	r0, r0, r4
  10c182:	682b      	ldr	r3, [r5, #0]
  10c184:	0900      	lsrs	r0, r0, #4
  10c186:	7b1a      	ldrb	r2, [r3, #12]
  10c188:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  10c18c:	731a      	strb	r2, [r3, #12]
  10c18e:	b2c2      	uxtb	r2, r0
  10c190:	f3c0 2007 	ubfx	r0, r0, #8, #8
  10c194:	601a      	str	r2, [r3, #0]
  10c196:	6058      	str	r0, [r3, #4]
  10c198:	7b1a      	ldrb	r2, [r3, #12]
  10c19a:	f36f 12c7 	bfc	r2, #7, #1
  10c19e:	731a      	strb	r2, [r3, #12]
  10c1a0:	bd38      	pop	{r3, r4, r5, pc}
	...

0010c1a4 <serial_irq_handler>:
  10c1a4:	4b03      	ldr	r3, [pc, #12]	; (10c1b4 <serial_irq_handler+0x10>)
  10c1a6:	6019      	str	r1, [r3, #0]
  10c1a8:	6881      	ldr	r1, [r0, #8]
  10c1aa:	4b03      	ldr	r3, [pc, #12]	; (10c1b8 <serial_irq_handler+0x14>)
  10c1ac:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
  10c1b0:	4770      	bx	lr
  10c1b2:	bf00      	nop
  10c1b4:	3fff8b58 	.word	0x3fff8b58
  10c1b8:	3fff8b50 	.word	0x3fff8b50

0010c1bc <serial_getc>:
  10c1bc:	6803      	ldr	r3, [r0, #0]
  10c1be:	695a      	ldr	r2, [r3, #20]
  10c1c0:	07d2      	lsls	r2, r2, #31
  10c1c2:	d5fc      	bpl.n	10c1be <serial_getc+0x2>
  10c1c4:	6818      	ldr	r0, [r3, #0]
  10c1c6:	b2c0      	uxtb	r0, r0
  10c1c8:	4770      	bx	lr

0010c1ca <serial_putc>:
  10c1ca:	6803      	ldr	r3, [r0, #0]
  10c1cc:	695a      	ldr	r2, [r3, #20]
  10c1ce:	0692      	lsls	r2, r2, #26
  10c1d0:	d5fc      	bpl.n	10c1cc <serial_putc+0x2>
  10c1d2:	6019      	str	r1, [r3, #0]
  10c1d4:	4770      	bx	lr
	...

0010c1d8 <fncs36510_sleep>:
  10c1d8:	4a06      	ldr	r2, [pc, #24]	; (10c1f4 <fncs36510_sleep+0x1c>)
  10c1da:	6913      	ldr	r3, [r2, #16]
  10c1dc:	f023 0304 	bic.w	r3, r3, #4
  10c1e0:	6113      	str	r3, [r2, #16]
  10c1e2:	4b05      	ldr	r3, [pc, #20]	; (10c1f8 <fncs36510_sleep+0x20>)
  10c1e4:	881a      	ldrh	r2, [r3, #0]
  10c1e6:	f36f 0200 	bfc	r2, #0, #1
  10c1ea:	801a      	strh	r2, [r3, #0]
  10c1ec:	f3bf 8f6f 	isb	sy
  10c1f0:	bf30      	wfi
  10c1f2:	4770      	bx	lr
  10c1f4:	e000ed00 	.word	0xe000ed00
  10c1f8:	4001d000 	.word	0x4001d000

0010c1fc <hal_sleep>:
  10c1fc:	f7ff bfec 	b.w	10c1d8 <fncs36510_sleep>

0010c200 <spi_init>:
  10c200:	b410      	push	{r4}
  10c202:	f99d 4004 	ldrsb.w	r4, [sp, #4]
  10c206:	9401      	str	r4, [sp, #4]
  10c208:	bc10      	pop	{r4}
  10c20a:	f7ff ba2b 	b.w	10b664 <fSpiInit>
	...

0010c210 <spi_format>:
  10c210:	b570      	push	{r4, r5, r6, lr}
  10c212:	4616      	mov	r6, r2
  10c214:	6802      	ldr	r2, [r0, #0]
  10c216:	4605      	mov	r5, r0
  10c218:	7b13      	ldrb	r3, [r2, #12]
  10c21a:	460c      	mov	r4, r1
  10c21c:	f36f 0300 	bfc	r3, #0, #1
  10c220:	7313      	strb	r3, [r2, #12]
  10c222:	f1a1 0208 	sub.w	r2, r1, #8
  10c226:	2a18      	cmp	r2, #24
  10c228:	d805      	bhi.n	10c236 <spi_format+0x26>
  10c22a:	4b21      	ldr	r3, [pc, #132]	; (10c2b0 <spi_format+0xa0>)
  10c22c:	40d3      	lsrs	r3, r2
  10c22e:	07db      	lsls	r3, r3, #31
  10c230:	d501      	bpl.n	10c236 <spi_format+0x26>
  10c232:	2e03      	cmp	r6, #3
  10c234:	d904      	bls.n	10c240 <spi_format+0x30>
  10c236:	225e      	movs	r2, #94	; 0x5e
  10c238:	491e      	ldr	r1, [pc, #120]	; (10c2b4 <spi_format+0xa4>)
  10c23a:	481f      	ldr	r0, [pc, #124]	; (10c2b8 <spi_format+0xa8>)
  10c23c:	f7fc fab0 	bl	1087a0 <mbed_assert_internal>
  10c240:	2c10      	cmp	r4, #16
  10c242:	d005      	beq.n	10c250 <spi_format+0x40>
  10c244:	2c20      	cmp	r4, #32
  10c246:	d005      	beq.n	10c254 <spi_format+0x44>
  10c248:	2c08      	cmp	r4, #8
  10c24a:	bf08      	it	eq
  10c24c:	2400      	moveq	r4, #0
  10c24e:	e002      	b.n	10c256 <spi_format+0x46>
  10c250:	2401      	movs	r4, #1
  10c252:	e000      	b.n	10c256 <spi_format+0x46>
  10c254:	2402      	movs	r4, #2
  10c256:	682a      	ldr	r2, [r5, #0]
  10c258:	7b13      	ldrb	r3, [r2, #12]
  10c25a:	f364 1387 	bfi	r3, r4, #6, #2
  10c25e:	7313      	strb	r3, [r2, #12]
  10c260:	682a      	ldr	r2, [r5, #0]
  10c262:	7b13      	ldrb	r3, [r2, #12]
  10c264:	f043 0320 	orr.w	r3, r3, #32
  10c268:	7313      	strb	r3, [r2, #12]
  10c26a:	1e72      	subs	r2, r6, #1
  10c26c:	2a02      	cmp	r2, #2
  10c26e:	bf86      	itte	hi
  10c270:	2200      	movhi	r2, #0
  10c272:	4610      	movhi	r0, r2
  10c274:	4b11      	ldrls	r3, [pc, #68]	; (10c2bc <spi_format+0xac>)
  10c276:	6829      	ldr	r1, [r5, #0]
  10c278:	bf9e      	ittt	ls
  10c27a:	5698      	ldrsbls	r0, [r3, r2]
  10c27c:	4b10      	ldrls	r3, [pc, #64]	; (10c2c0 <spi_format+0xb0>)
  10c27e:	569a      	ldrsbls	r2, [r3, r2]
  10c280:	7b0b      	ldrb	r3, [r1, #12]
  10c282:	f360 1304 	bfi	r3, r0, #4, #1
  10c286:	730b      	strb	r3, [r1, #12]
  10c288:	6829      	ldr	r1, [r5, #0]
  10c28a:	7b0b      	ldrb	r3, [r1, #12]
  10c28c:	f362 03c3 	bfi	r3, r2, #3, #1
  10c290:	730b      	strb	r3, [r1, #12]
  10c292:	682a      	ldr	r2, [r5, #0]
  10c294:	7b13      	ldrb	r3, [r2, #12]
  10c296:	f043 0304 	orr.w	r3, r3, #4
  10c29a:	7313      	strb	r3, [r2, #12]
  10c29c:	682b      	ldr	r3, [r5, #0]
  10c29e:	7b1a      	ldrb	r2, [r3, #12]
  10c2a0:	f042 0202 	orr.w	r2, r2, #2
  10c2a4:	731a      	strb	r2, [r3, #12]
  10c2a6:	7b1a      	ldrb	r2, [r3, #12]
  10c2a8:	f042 0201 	orr.w	r2, r2, #1
  10c2ac:	731a      	strb	r2, [r3, #12]
  10c2ae:	bd70      	pop	{r4, r5, r6, pc}
  10c2b0:	01000101 	.word	0x01000101
  10c2b4:	001195c0 	.word	0x001195c0
  10c2b8:	00119614 	.word	0x00119614
  10c2bc:	0011967f 	.word	0x0011967f
  10c2c0:	00119682 	.word	0x00119682

0010c2c4 <spi_frequency>:
  10c2c4:	b538      	push	{r3, r4, r5, lr}
  10c2c6:	460d      	mov	r5, r1
  10c2c8:	6804      	ldr	r4, [r0, #0]
  10c2ca:	f7ff fca3 	bl	10bc14 <fClockGetPeriphClockfrequency>
  10c2ce:	4b05      	ldr	r3, [pc, #20]	; (10c2e4 <spi_frequency+0x20>)
  10c2d0:	4629      	mov	r1, r5
  10c2d2:	429d      	cmp	r5, r3
  10c2d4:	bfa8      	it	ge
  10c2d6:	4619      	movge	r1, r3
  10c2d8:	fbb0 f0f1 	udiv	r0, r0, r1
  10c2dc:	0841      	lsrs	r1, r0, #1
  10c2de:	3901      	subs	r1, #1
  10c2e0:	60a1      	str	r1, [r4, #8]
  10c2e2:	bd38      	pop	{r3, r4, r5, pc}
  10c2e4:	003d0900 	.word	0x003d0900

0010c2e8 <spi_master_write>:
  10c2e8:	6803      	ldr	r3, [r0, #0]
  10c2ea:	691a      	ldr	r2, [r3, #16]
  10c2ec:	0750      	lsls	r0, r2, #29
  10c2ee:	d5fc      	bpl.n	10c2ea <spi_master_write+0x2>
  10c2f0:	6019      	str	r1, [r3, #0]
  10c2f2:	691a      	ldr	r2, [r3, #16]
  10c2f4:	07d1      	lsls	r1, r2, #31
  10c2f6:	d4fc      	bmi.n	10c2f2 <spi_master_write+0xa>
  10c2f8:	691a      	ldr	r2, [r3, #16]
  10c2fa:	0692      	lsls	r2, r2, #26
  10c2fc:	d4fc      	bmi.n	10c2f8 <spi_master_write+0x10>
  10c2fe:	6858      	ldr	r0, [r3, #4]
  10c300:	4770      	bx	lr

0010c302 <spi_master_block_write>:
  10c302:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  10c306:	9f08      	ldr	r7, [sp, #32]
  10c308:	4680      	mov	r8, r0
  10c30a:	4297      	cmp	r7, r2
  10c30c:	463d      	mov	r5, r7
  10c30e:	4689      	mov	r9, r1
  10c310:	4616      	mov	r6, r2
  10c312:	469a      	mov	r10, r3
  10c314:	bfb8      	it	lt
  10c316:	4615      	movlt	r5, r2
  10c318:	2400      	movs	r4, #0
  10c31a:	42ac      	cmp	r4, r5
  10c31c:	da0d      	bge.n	10c33a <spi_master_block_write+0x38>
  10c31e:	42b4      	cmp	r4, r6
  10c320:	bfb4      	ite	lt
  10c322:	f819 1004 	ldrblt.w	r1, [r9, r4]
  10c326:	21ff      	movge	r1, #255	; 0xff
  10c328:	4640      	mov	r0, r8
  10c32a:	f7ff ffdd 	bl	10c2e8 <spi_master_write>
  10c32e:	42bc      	cmp	r4, r7
  10c330:	bfb8      	it	lt
  10c332:	f80a 0004 	strblt.w	r0, [r10, r4]
  10c336:	3401      	adds	r4, #1
  10c338:	e7ef      	b.n	10c31a <spi_master_block_write+0x18>
  10c33a:	4628      	mov	r0, r5
  10c33c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0010c340 <SystemInit>:
  10c340:	4a02      	ldr	r2, [pc, #8]	; (10c34c <SystemInit+0xc>)
  10c342:	4b03      	ldr	r3, [pc, #12]	; (10c350 <SystemInit+0x10>)
  10c344:	601a      	str	r2, [r3, #0]
  10c346:	f7ff bc69 	b.w	10bc1c <fNcs36510Init>
  10c34a:	bf00      	nop
  10c34c:	01e84800 	.word	0x01e84800
  10c350:	3fff41a0 	.word	0x3fff41a0

0010c354 <mbed::I2C::I2C(PinName, PinName)>:
  10c354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10c356:	4605      	mov	r5, r0
  10c358:	4604      	mov	r4, r0
  10c35a:	460e      	mov	r6, r1
  10c35c:	4617      	mov	r7, r2
  10c35e:	4b09      	ldr	r3, [pc, #36]	; (10c384 <mbed::I2C::I2C(PinName, PinName)+0x30>)
  10c360:	2214      	movs	r2, #20
  10c362:	f845 3b04 	str.w	r3, [r5], #4
  10c366:	2100      	movs	r1, #0
  10c368:	4628      	mov	r0, r5
  10c36a:	f003 fddc 	bl	10ff26 <memset>
  10c36e:	4b06      	ldr	r3, [pc, #24]	; (10c388 <mbed::I2C::I2C(PinName, PinName)+0x34>)
  10c370:	4628      	mov	r0, r5
  10c372:	61a3      	str	r3, [r4, #24]
  10c374:	463a      	mov	r2, r7
  10c376:	4631      	mov	r1, r6
  10c378:	f7fe ff68 	bl	10b24c <i2c_init>
  10c37c:	4b03      	ldr	r3, [pc, #12]	; (10c38c <mbed::I2C::I2C(PinName, PinName)+0x38>)
  10c37e:	4620      	mov	r0, r4
  10c380:	601c      	str	r4, [r3, #0]
  10c382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10c384:	00119690 	.word	0x00119690
  10c388:	000186a0 	.word	0x000186a0
  10c38c:	3fff8b64 	.word	0x3fff8b64

0010c390 <mbed::I2C::frequency(int)>:
  10c390:	b570      	push	{r4, r5, r6, lr}
  10c392:	4604      	mov	r4, r0
  10c394:	460d      	mov	r5, r1
  10c396:	6803      	ldr	r3, [r0, #0]
  10c398:	681b      	ldr	r3, [r3, #0]
  10c39a:	4798      	blx	r3
  10c39c:	1d20      	adds	r0, r4, #4
  10c39e:	61a5      	str	r5, [r4, #24]
  10c3a0:	4629      	mov	r1, r5
  10c3a2:	f7fe ff55 	bl	10b250 <i2c_frequency>
  10c3a6:	4b04      	ldr	r3, [pc, #16]	; (10c3b8 <mbed::I2C::frequency(int)+0x28>)
  10c3a8:	4620      	mov	r0, r4
  10c3aa:	601c      	str	r4, [r3, #0]
  10c3ac:	6823      	ldr	r3, [r4, #0]
  10c3ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10c3b2:	685b      	ldr	r3, [r3, #4]
  10c3b4:	4718      	bx	r3
  10c3b6:	bf00      	nop
  10c3b8:	3fff8b64 	.word	0x3fff8b64

0010c3bc <mbed::I2C::aquire()>:
  10c3bc:	b570      	push	{r4, r5, r6, lr}
  10c3be:	4604      	mov	r4, r0
  10c3c0:	6803      	ldr	r3, [r0, #0]
  10c3c2:	4d08      	ldr	r5, [pc, #32]	; (10c3e4 <mbed::I2C::aquire()+0x28>)
  10c3c4:	681b      	ldr	r3, [r3, #0]
  10c3c6:	4798      	blx	r3
  10c3c8:	682b      	ldr	r3, [r5, #0]
  10c3ca:	429c      	cmp	r4, r3
  10c3cc:	d004      	beq.n	10c3d8 <mbed::I2C::aquire()+0x1c>
  10c3ce:	69a1      	ldr	r1, [r4, #24]
  10c3d0:	1d20      	adds	r0, r4, #4
  10c3d2:	f7fe ff3d 	bl	10b250 <i2c_frequency>
  10c3d6:	602c      	str	r4, [r5, #0]
  10c3d8:	6823      	ldr	r3, [r4, #0]
  10c3da:	4620      	mov	r0, r4
  10c3dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10c3e0:	685b      	ldr	r3, [r3, #4]
  10c3e2:	4718      	bx	r3
  10c3e4:	3fff8b64 	.word	0x3fff8b64

0010c3e8 <mbed::I2C::write(int, char const*, int, bool)>:
  10c3e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  10c3ea:	4604      	mov	r4, r0
  10c3ec:	460e      	mov	r6, r1
  10c3ee:	4617      	mov	r7, r2
  10c3f0:	461d      	mov	r5, r3
  10c3f2:	6803      	ldr	r3, [r0, #0]
  10c3f4:	681b      	ldr	r3, [r3, #0]
  10c3f6:	4798      	blx	r3
  10c3f8:	4620      	mov	r0, r4
  10c3fa:	f7ff ffdf 	bl	10c3bc <mbed::I2C::aquire()>
  10c3fe:	f89d 3020 	ldrb.w	r3, [sp, #32]
  10c402:	4631      	mov	r1, r6
  10c404:	f083 0301 	eor.w	r3, r3, #1
  10c408:	9300      	str	r3, [sp, #0]
  10c40a:	463a      	mov	r2, r7
  10c40c:	462b      	mov	r3, r5
  10c40e:	1d20      	adds	r0, r4, #4
  10c410:	f7fe ff72 	bl	10b2f8 <i2c_write>
  10c414:	6823      	ldr	r3, [r4, #0]
  10c416:	4606      	mov	r6, r0
  10c418:	685b      	ldr	r3, [r3, #4]
  10c41a:	4620      	mov	r0, r4
  10c41c:	4798      	blx	r3
  10c41e:	1ba8      	subs	r0, r5, r6
  10c420:	bf18      	it	ne
  10c422:	2001      	movne	r0, #1
  10c424:	b003      	add	sp, #12
  10c426:	bdf0      	pop	{r4, r5, r6, r7, pc}

0010c428 <mbed::I2C::read(int, char*, int, bool)>:
  10c428:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  10c42a:	4604      	mov	r4, r0
  10c42c:	460e      	mov	r6, r1
  10c42e:	4617      	mov	r7, r2
  10c430:	461d      	mov	r5, r3
  10c432:	6803      	ldr	r3, [r0, #0]
  10c434:	681b      	ldr	r3, [r3, #0]
  10c436:	4798      	blx	r3
  10c438:	4620      	mov	r0, r4
  10c43a:	f7ff ffbf 	bl	10c3bc <mbed::I2C::aquire()>
  10c43e:	f89d 3020 	ldrb.w	r3, [sp, #32]
  10c442:	4631      	mov	r1, r6
  10c444:	f083 0301 	eor.w	r3, r3, #1
  10c448:	9300      	str	r3, [sp, #0]
  10c44a:	463a      	mov	r2, r7
  10c44c:	462b      	mov	r3, r5
  10c44e:	1d20      	adds	r0, r4, #4
  10c450:	f7fe ff04 	bl	10b25c <i2c_read>
  10c454:	6823      	ldr	r3, [r4, #0]
  10c456:	4606      	mov	r6, r0
  10c458:	685b      	ldr	r3, [r3, #4]
  10c45a:	4620      	mov	r0, r4
  10c45c:	4798      	blx	r3
  10c45e:	1ba8      	subs	r0, r5, r6
  10c460:	bf18      	it	ne
  10c462:	2001      	movne	r0, #1
  10c464:	b003      	add	sp, #12
  10c466:	bdf0      	pop	{r4, r5, r6, r7, pc}

0010c468 <mbed::I2C::lock()>:
  10c468:	b508      	push	{r3, lr}
  10c46a:	4804      	ldr	r0, [pc, #16]	; (10c47c <mbed::I2C::lock()+0x14>)
  10c46c:	f7f9 fac2 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10c470:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10c474:	f04f 31ff 	mov.w	r1, #4294967295
  10c478:	f001 bb37 	b.w	10daea <rtos::Mutex::lock(unsigned long)>
  10c47c:	3fff8b68 	.word	0x3fff8b68

0010c480 <mbed::I2C::unlock()>:
  10c480:	b508      	push	{r3, lr}
  10c482:	4803      	ldr	r0, [pc, #12]	; (10c490 <mbed::I2C::unlock()+0x10>)
  10c484:	f7f9 fab6 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10c488:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10c48c:	f001 bb30 	b.w	10daf0 <rtos::Mutex::unlock()>
  10c490:	3fff8b68 	.word	0x3fff8b68

0010c494 <mbed::donothing()>:
  10c494:	4770      	bx	lr

0010c496 <mbed::InterruptIn::read()>:
  10c496:	3004      	adds	r0, #4
  10c498:	f7fe bd92 	b.w	10afc0 <gpio_read>

0010c49c <mbed::InterruptIn::~InterruptIn()>:
  10c49c:	b510      	push	{r4, lr}
  10c49e:	4604      	mov	r4, r0
  10c4a0:	4b07      	ldr	r3, [pc, #28]	; (10c4c0 <mbed::InterruptIn::~InterruptIn()+0x24>)
  10c4a2:	f840 3b10 	str.w	r3, [r0], #16
  10c4a6:	f7fe fe65 	bl	10b174 <gpio_irq_free>
  10c4aa:	f104 002c 	add.w	r0, r4, #44	; 0x2c
  10c4ae:	f7f6 f89b 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c4b2:	f104 001c 	add.w	r0, r4, #28
  10c4b6:	f7f6 f897 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c4ba:	4620      	mov	r0, r4
  10c4bc:	bd10      	pop	{r4, pc}
  10c4be:	bf00      	nop
  10c4c0:	001196a8 	.word	0x001196a8

0010c4c4 <mbed::InterruptIn::~InterruptIn()>:
  10c4c4:	b510      	push	{r4, lr}
  10c4c6:	4604      	mov	r4, r0
  10c4c8:	f7ff ffe8 	bl	10c49c <mbed::InterruptIn::~InterruptIn()>
  10c4cc:	4620      	mov	r0, r4
  10c4ce:	f001 f943 	bl	10d758 <operator delete(void*)>
  10c4d2:	4620      	mov	r0, r4
  10c4d4:	bd10      	pop	{r4, pc}

0010c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
  10c4d6:	4288      	cmp	r0, r1
  10c4d8:	b538      	push	{r3, r4, r5, lr}
  10c4da:	4604      	mov	r4, r0
  10c4dc:	460d      	mov	r5, r1
  10c4de:	d00a      	beq.n	10c4f6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
  10c4e0:	f7f6 f882 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c4e4:	b13c      	cbz	r4, 10c4f6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
  10c4e6:	68eb      	ldr	r3, [r5, #12]
  10c4e8:	b11b      	cbz	r3, 10c4f2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
  10c4ea:	685b      	ldr	r3, [r3, #4]
  10c4ec:	4629      	mov	r1, r5
  10c4ee:	4620      	mov	r0, r4
  10c4f0:	4798      	blx	r3
  10c4f2:	68eb      	ldr	r3, [r5, #12]
  10c4f4:	60e3      	str	r3, [r4, #12]
  10c4f6:	4620      	mov	r0, r4
  10c4f8:	bd38      	pop	{r3, r4, r5, pc}
	...

0010c4fc <mbed::InterruptIn::InterruptIn(PinName)>:
  10c4fc:	b5f0      	push	{r4, r5, r6, r7, lr}
  10c4fe:	4604      	mov	r4, r0
  10c500:	460d      	mov	r5, r1
  10c502:	4b17      	ldr	r3, [pc, #92]	; (10c560 <mbed::InterruptIn::InterruptIn(PinName)+0x64>)
  10c504:	b085      	sub	sp, #20
  10c506:	6003      	str	r3, [r0, #0]
  10c508:	4f16      	ldr	r7, [pc, #88]	; (10c564 <mbed::InterruptIn::InterruptIn(PinName)+0x68>)
  10c50a:	2300      	movs	r3, #0
  10c50c:	4e16      	ldr	r6, [pc, #88]	; (10c568 <mbed::InterruptIn::InterruptIn(PinName)+0x6c>)
  10c50e:	6043      	str	r3, [r0, #4]
  10c510:	7203      	strb	r3, [r0, #8]
  10c512:	60c3      	str	r3, [r0, #12]
  10c514:	6103      	str	r3, [r0, #16]
  10c516:	6143      	str	r3, [r0, #20]
  10c518:	6183      	str	r3, [r0, #24]
  10c51a:	6283      	str	r3, [r0, #40]	; 0x28
  10c51c:	6383      	str	r3, [r0, #56]	; 0x38
  10c51e:	4669      	mov	r1, sp
  10c520:	301c      	adds	r0, #28
  10c522:	9700      	str	r7, [sp, #0]
  10c524:	9603      	str	r6, [sp, #12]
  10c526:	f7ff ffd6 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c52a:	4668      	mov	r0, sp
  10c52c:	f7f6 f85c 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c530:	4669      	mov	r1, sp
  10c532:	f104 002c 	add.w	r0, r4, #44	; 0x2c
  10c536:	9700      	str	r7, [sp, #0]
  10c538:	9603      	str	r6, [sp, #12]
  10c53a:	f7ff ffcc 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c53e:	4668      	mov	r0, sp
  10c540:	f7f6 f852 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c544:	4623      	mov	r3, r4
  10c546:	4a09      	ldr	r2, [pc, #36]	; (10c56c <mbed::InterruptIn::InterruptIn(PinName)+0x70>)
  10c548:	4629      	mov	r1, r5
  10c54a:	f104 0010 	add.w	r0, r4, #16
  10c54e:	f7fe fdad 	bl	10b0ac <gpio_irq_init>
  10c552:	1d20      	adds	r0, r4, #4
  10c554:	4629      	mov	r1, r5
  10c556:	f7fb ffd8 	bl	10850a <gpio_init_in>
  10c55a:	4620      	mov	r0, r4
  10c55c:	b005      	add	sp, #20
  10c55e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  10c560:	001196a8 	.word	0x001196a8
  10c564:	0010c495 	.word	0x0010c495
  10c568:	00115ff4 	.word	0x00115ff4
  10c56c:	0010c635 	.word	0x0010c635

0010c570 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>:
  10c570:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  10c572:	460e      	mov	r6, r1
  10c574:	4604      	mov	r4, r0
  10c576:	f7fc f96b 	bl	108850 <core_util_critical_section_enter>
  10c57a:	68f5      	ldr	r5, [r6, #12]
  10c57c:	f104 001c 	add.w	r0, r4, #28
  10c580:	3410      	adds	r4, #16
  10c582:	b12d      	cbz	r5, 10c590 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x20>
  10c584:	4631      	mov	r1, r6
  10c586:	f7ff ffa6 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c58a:	2201      	movs	r2, #1
  10c58c:	4611      	mov	r1, r2
  10c58e:	e00b      	b.n	10c5a8 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x38>
  10c590:	4b09      	ldr	r3, [pc, #36]	; (10c5b8 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x48>)
  10c592:	4669      	mov	r1, sp
  10c594:	9300      	str	r3, [sp, #0]
  10c596:	4b09      	ldr	r3, [pc, #36]	; (10c5bc <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x4c>)
  10c598:	9303      	str	r3, [sp, #12]
  10c59a:	f7ff ff9c 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c59e:	4668      	mov	r0, sp
  10c5a0:	f7f6 f822 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c5a4:	462a      	mov	r2, r5
  10c5a6:	2101      	movs	r1, #1
  10c5a8:	4620      	mov	r0, r4
  10c5aa:	f7fe fdf5 	bl	10b198 <gpio_irq_set>
  10c5ae:	f7fc f97b 	bl	1088a8 <core_util_critical_section_exit>
  10c5b2:	b004      	add	sp, #16
  10c5b4:	bd70      	pop	{r4, r5, r6, pc}
  10c5b6:	bf00      	nop
  10c5b8:	0010c495 	.word	0x0010c495
  10c5bc:	00115ff4 	.word	0x00115ff4

0010c5c0 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>:
  10c5c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  10c5c2:	460e      	mov	r6, r1
  10c5c4:	4604      	mov	r4, r0
  10c5c6:	f7fc f943 	bl	108850 <core_util_critical_section_enter>
  10c5ca:	68f5      	ldr	r5, [r6, #12]
  10c5cc:	f104 002c 	add.w	r0, r4, #44	; 0x2c
  10c5d0:	3410      	adds	r4, #16
  10c5d2:	b125      	cbz	r5, 10c5de <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x1e>
  10c5d4:	4631      	mov	r1, r6
  10c5d6:	f7ff ff7e 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c5da:	2201      	movs	r2, #1
  10c5dc:	e00a      	b.n	10c5f4 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x34>
  10c5de:	4b09      	ldr	r3, [pc, #36]	; (10c604 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x44>)
  10c5e0:	4669      	mov	r1, sp
  10c5e2:	9300      	str	r3, [sp, #0]
  10c5e4:	4b08      	ldr	r3, [pc, #32]	; (10c608 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x48>)
  10c5e6:	9303      	str	r3, [sp, #12]
  10c5e8:	f7ff ff75 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c5ec:	4668      	mov	r0, sp
  10c5ee:	f7f5 fffb 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c5f2:	462a      	mov	r2, r5
  10c5f4:	2102      	movs	r1, #2
  10c5f6:	4620      	mov	r0, r4
  10c5f8:	f7fe fdce 	bl	10b198 <gpio_irq_set>
  10c5fc:	f7fc f954 	bl	1088a8 <core_util_critical_section_exit>
  10c600:	b004      	add	sp, #16
  10c602:	bd70      	pop	{r4, r5, r6, pc}
  10c604:	0010c495 	.word	0x0010c495
  10c608:	00115ff4 	.word	0x00115ff4

0010c60c <mbed::Callback<void ()>::call() const>:
  10c60c:	68c3      	ldr	r3, [r0, #12]
  10c60e:	b510      	push	{r4, lr}
  10c610:	4604      	mov	r4, r0
  10c612:	b92b      	cbnz	r3, 10c620 <mbed::Callback<void ()>::call() const+0x14>
  10c614:	f240 220e 	movw	r2, #526	; 0x20e
  10c618:	4904      	ldr	r1, [pc, #16]	; (10c62c <mbed::Callback<void ()>::call() const+0x20>)
  10c61a:	4805      	ldr	r0, [pc, #20]	; (10c630 <mbed::Callback<void ()>::call() const+0x24>)
  10c61c:	f7fc f8c0 	bl	1087a0 <mbed_assert_internal>
  10c620:	68e3      	ldr	r3, [r4, #12]
  10c622:	4620      	mov	r0, r4
  10c624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10c628:	681b      	ldr	r3, [r3, #0]
  10c62a:	4718      	bx	r3
  10c62c:	001196b0 	.word	0x001196b0
  10c630:	0011608b 	.word	0x0011608b

0010c634 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)>:
  10c634:	2901      	cmp	r1, #1
  10c636:	b508      	push	{r3, lr}
  10c638:	d002      	beq.n	10c640 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xc>
  10c63a:	2902      	cmp	r1, #2
  10c63c:	d002      	beq.n	10c644 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0x10>
  10c63e:	bd08      	pop	{r3, pc}
  10c640:	301c      	adds	r0, #28
  10c642:	e000      	b.n	10c646 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0x12>
  10c644:	302c      	adds	r0, #44	; 0x2c
  10c646:	f7ff ffe1 	bl	10c60c <mbed::Callback<void ()>::call() const>
  10c64a:	bd08      	pop	{r3, pc}

0010c64c <mbed::FileHandle::lseek(long, int)>:
  10c64c:	6803      	ldr	r3, [r0, #0]
  10c64e:	691b      	ldr	r3, [r3, #16]
  10c650:	4718      	bx	r3

0010c652 <mbed::FileHandle::fsync()>:
  10c652:	6803      	ldr	r3, [r0, #0]
  10c654:	699b      	ldr	r3, [r3, #24]
  10c656:	4718      	bx	r3

0010c658 <mbed::FileHandle::flen()>:
  10c658:	6803      	ldr	r3, [r0, #0]
  10c65a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  10c65c:	4718      	bx	r3

0010c65e <mbed::FileHandle::set_blocking(bool)>:
  10c65e:	f04f 30ff 	mov.w	r0, #4294967295
  10c662:	4770      	bx	lr

0010c664 <mbed::FileHandle::poll(short) const>:
  10c664:	2011      	movs	r0, #17
  10c666:	4770      	bx	lr

0010c668 <mbed::FileHandle::sigio(mbed::Callback<void ()>)>:
  10c668:	4770      	bx	lr

0010c66a <mbed::Serial::_getc()>:
  10c66a:	f000 b853 	b.w	10c714 <mbed::SerialBase::_base_getc()>

0010c66e <non-virtual thunk to mbed::Serial::_getc()>:
  10c66e:	f1a0 0034 	sub.w	r0, r0, #52	; 0x34
  10c672:	f7ff bffa 	b.w	10c66a <mbed::Serial::_getc()>

0010c676 <mbed::Serial::_putc(int)>:
  10c676:	f000 b850 	b.w	10c71a <mbed::SerialBase::_base_putc(int)>

0010c67a <non-virtual thunk to mbed::Serial::_putc(int)>:
  10c67a:	f1a0 0034 	sub.w	r0, r0, #52	; 0x34
  10c67e:	f7ff bffa 	b.w	10c676 <mbed::Serial::_putc(int)>

0010c682 <mbed::Serial::lock()>:
  10c682:	f04f 31ff 	mov.w	r1, #4294967295
  10c686:	304c      	adds	r0, #76	; 0x4c
  10c688:	f001 ba2f 	b.w	10daea <rtos::Mutex::lock(unsigned long)>

0010c68c <non-virtual thunk to mbed::Serial::lock()>:
  10c68c:	f1a0 0034 	sub.w	r0, r0, #52	; 0x34
  10c690:	f7ff bff7 	b.w	10c682 <mbed::Serial::lock()>

0010c694 <mbed::Serial::unlock()>:
  10c694:	304c      	adds	r0, #76	; 0x4c
  10c696:	f001 ba2b 	b.w	10daf0 <rtos::Mutex::unlock()>

0010c69a <non-virtual thunk to mbed::Serial::unlock()>:
  10c69a:	f1a0 0034 	sub.w	r0, r0, #52	; 0x34
  10c69e:	f7ff bff9 	b.w	10c694 <mbed::Serial::unlock()>
	...

0010c6a4 <mbed::Serial::Serial(PinName, PinName, char const*, int)>:
  10c6a4:	b538      	push	{r3, r4, r5, lr}
  10c6a6:	4604      	mov	r4, r0
  10c6a8:	461d      	mov	r5, r3
  10c6aa:	9b04      	ldr	r3, [sp, #16]
  10c6ac:	f000 f83c 	bl	10c728 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
  10c6b0:	4629      	mov	r1, r5
  10c6b2:	f104 0034 	add.w	r0, r4, #52	; 0x34
  10c6b6:	f001 f98b 	bl	10d9d0 <mbed::Stream::Stream(char const*)>
  10c6ba:	4b07      	ldr	r3, [pc, #28]	; (10c6d8 <mbed::Serial::Serial(PinName, PinName, char const*, int)+0x34>)
  10c6bc:	f104 004c 	add.w	r0, r4, #76	; 0x4c
  10c6c0:	f103 0208 	add.w	r2, r3, #8
  10c6c4:	6022      	str	r2, [r4, #0]
  10c6c6:	f103 0228 	add.w	r2, r3, #40	; 0x28
  10c6ca:	3384      	adds	r3, #132	; 0x84
  10c6cc:	6362      	str	r2, [r4, #52]	; 0x34
  10c6ce:	63a3      	str	r3, [r4, #56]	; 0x38
  10c6d0:	f001 fa04 	bl	10dadc <rtos::Mutex::Mutex()>
  10c6d4:	4620      	mov	r0, r4
  10c6d6:	bd38      	pop	{r3, r4, r5, pc}
  10c6d8:	001196dc 	.word	0x001196dc

0010c6dc <mbed::donothing()>:
  10c6dc:	4770      	bx	lr

0010c6de <mbed::SerialBase::lock()>:
  10c6de:	4770      	bx	lr

0010c6e0 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
  10c6e0:	b570      	push	{r4, r5, r6, lr}
  10c6e2:	010c      	lsls	r4, r1, #4
  10c6e4:	1903      	adds	r3, r0, r4
  10c6e6:	69db      	ldr	r3, [r3, #28]
  10c6e8:	1c4d      	adds	r5, r1, #1
  10c6ea:	4606      	mov	r6, r0
  10c6ec:	eb00 1505 	add.w	r5, r0, r5, lsl #4
  10c6f0:	b92b      	cbnz	r3, 10c6fe <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)+0x1e>
  10c6f2:	f240 220e 	movw	r2, #526	; 0x20e
  10c6f6:	4905      	ldr	r1, [pc, #20]	; (10c70c <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)+0x2c>)
  10c6f8:	4805      	ldr	r0, [pc, #20]	; (10c710 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)+0x30>)
  10c6fa:	f7fc f851 	bl	1087a0 <mbed_assert_internal>
  10c6fe:	4434      	add	r4, r6
  10c700:	69e3      	ldr	r3, [r4, #28]
  10c702:	4628      	mov	r0, r5
  10c704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10c708:	681b      	ldr	r3, [r3, #0]
  10c70a:	4718      	bx	r3
  10c70c:	001196b0 	.word	0x001196b0
  10c710:	0011608b 	.word	0x0011608b

0010c714 <mbed::SerialBase::_base_getc()>:
  10c714:	3004      	adds	r0, #4
  10c716:	f7ff bd51 	b.w	10c1bc <serial_getc>

0010c71a <mbed::SerialBase::_base_putc(int)>:
  10c71a:	b510      	push	{r4, lr}
  10c71c:	460c      	mov	r4, r1
  10c71e:	3004      	adds	r0, #4
  10c720:	f7ff fd53 	bl	10c1ca <serial_putc>
  10c724:	4620      	mov	r0, r4
  10c726:	bd10      	pop	{r4, pc}

0010c728 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
  10c728:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  10c72c:	4605      	mov	r5, r0
  10c72e:	4604      	mov	r4, r0
  10c730:	4688      	mov	r8, r1
  10c732:	4691      	mov	r9, r2
  10c734:	4a18      	ldr	r2, [pc, #96]	; (10c798 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x70>)
  10c736:	b085      	sub	sp, #20
  10c738:	f845 2b04 	str.w	r2, [r5], #4
  10c73c:	2100      	movs	r1, #0
  10c73e:	4f17      	ldr	r7, [pc, #92]	; (10c79c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x74>)
  10c740:	4e17      	ldr	r6, [pc, #92]	; (10c7a0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
  10c742:	6041      	str	r1, [r0, #4]
  10c744:	6069      	str	r1, [r5, #4]
  10c746:	60a9      	str	r1, [r5, #8]
  10c748:	3010      	adds	r0, #16
  10c74a:	6203      	str	r3, [r0, #32]
  10c74c:	60c1      	str	r1, [r0, #12]
  10c74e:	61c1      	str	r1, [r0, #28]
  10c750:	4669      	mov	r1, sp
  10c752:	9700      	str	r7, [sp, #0]
  10c754:	9603      	str	r6, [sp, #12]
  10c756:	f7ff febe 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c75a:	4668      	mov	r0, sp
  10c75c:	f7f5 ff44 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c760:	4669      	mov	r1, sp
  10c762:	f104 0020 	add.w	r0, r4, #32
  10c766:	9700      	str	r7, [sp, #0]
  10c768:	9603      	str	r6, [sp, #12]
  10c76a:	f7ff feb4 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10c76e:	4668      	mov	r0, sp
  10c770:	f7f5 ff3a 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c774:	464a      	mov	r2, r9
  10c776:	4641      	mov	r1, r8
  10c778:	4628      	mov	r0, r5
  10c77a:	f7ff fc2f 	bl	10bfdc <serial_init>
  10c77e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  10c780:	4628      	mov	r0, r5
  10c782:	f7ff fcf7 	bl	10c174 <serial_baud>
  10c786:	4628      	mov	r0, r5
  10c788:	4622      	mov	r2, r4
  10c78a:	4906      	ldr	r1, [pc, #24]	; (10c7a4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x7c>)
  10c78c:	f7ff fd0a 	bl	10c1a4 <serial_irq_handler>
  10c790:	4620      	mov	r0, r4
  10c792:	b005      	add	sp, #20
  10c794:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  10c798:	00119770 	.word	0x00119770
  10c79c:	0010c6dd 	.word	0x0010c6dd
  10c7a0:	00115ff4 	.word	0x00115ff4
  10c7a4:	0010c6e1 	.word	0x0010c6e1

0010c7a8 <mbed::SPI::~SPI()>:
  10c7a8:	4770      	bx	lr

0010c7aa <mbed::SPI::~SPI()>:
  10c7aa:	b510      	push	{r4, lr}
  10c7ac:	4604      	mov	r4, r0
  10c7ae:	f000 ffd3 	bl	10d758 <operator delete(void*)>
  10c7b2:	4620      	mov	r0, r4
  10c7b4:	bd10      	pop	{r4, pc}
	...

0010c7b8 <mbed::SPI::aquire()>:
  10c7b8:	b570      	push	{r4, r5, r6, lr}
  10c7ba:	4604      	mov	r4, r0
  10c7bc:	6803      	ldr	r3, [r0, #0]
  10c7be:	4e0c      	ldr	r6, [pc, #48]	; (10c7f0 <mbed::SPI::aquire()+0x38>)
  10c7c0:	689b      	ldr	r3, [r3, #8]
  10c7c2:	4798      	blx	r3
  10c7c4:	6833      	ldr	r3, [r6, #0]
  10c7c6:	429c      	cmp	r4, r3
  10c7c8:	d00b      	beq.n	10c7e2 <mbed::SPI::aquire()+0x2a>
  10c7ca:	1d25      	adds	r5, r4, #4
  10c7cc:	2300      	movs	r3, #0
  10c7ce:	6a62      	ldr	r2, [r4, #36]	; 0x24
  10c7d0:	6a21      	ldr	r1, [r4, #32]
  10c7d2:	4628      	mov	r0, r5
  10c7d4:	f7ff fd1c 	bl	10c210 <spi_format>
  10c7d8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
  10c7da:	4628      	mov	r0, r5
  10c7dc:	f7ff fd72 	bl	10c2c4 <spi_frequency>
  10c7e0:	6034      	str	r4, [r6, #0]
  10c7e2:	6823      	ldr	r3, [r4, #0]
  10c7e4:	4620      	mov	r0, r4
  10c7e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10c7ea:	68db      	ldr	r3, [r3, #12]
  10c7ec:	4718      	bx	r3
  10c7ee:	bf00      	nop
  10c7f0:	3fff8b9c 	.word	0x3fff8b9c

0010c7f4 <mbed::SPI::SPI(PinName, PinName, PinName, PinName)>:
  10c7f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  10c7f8:	4605      	mov	r5, r0
  10c7fa:	4604      	mov	r4, r0
  10c7fc:	460e      	mov	r6, r1
  10c7fe:	4617      	mov	r7, r2
  10c800:	4698      	mov	r8, r3
  10c802:	4b0f      	ldr	r3, [pc, #60]	; (10c840 <mbed::SPI::SPI(PinName, PinName, PinName, PinName)+0x4c>)
  10c804:	221c      	movs	r2, #28
  10c806:	f845 3b04 	str.w	r3, [r5], #4
  10c80a:	2100      	movs	r1, #0
  10c80c:	4628      	mov	r0, r5
  10c80e:	f003 fb8a 	bl	10ff26 <memset>
  10c812:	2308      	movs	r3, #8
  10c814:	6223      	str	r3, [r4, #32]
  10c816:	2300      	movs	r3, #0
  10c818:	6263      	str	r3, [r4, #36]	; 0x24
  10c81a:	4b0a      	ldr	r3, [pc, #40]	; (10c844 <mbed::SPI::SPI(PinName, PinName, PinName, PinName)+0x50>)
  10c81c:	463a      	mov	r2, r7
  10c81e:	62a3      	str	r3, [r4, #40]	; 0x28
  10c820:	f99d 3020 	ldrsb.w	r3, [sp, #32]
  10c824:	4631      	mov	r1, r6
  10c826:	9300      	str	r3, [sp, #0]
  10c828:	4628      	mov	r0, r5
  10c82a:	4643      	mov	r3, r8
  10c82c:	f7ff fce8 	bl	10c200 <spi_init>
  10c830:	4620      	mov	r0, r4
  10c832:	f7ff ffc1 	bl	10c7b8 <mbed::SPI::aquire()>
  10c836:	4620      	mov	r0, r4
  10c838:	b002      	add	sp, #8
  10c83a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10c83e:	bf00      	nop
  10c840:	00119788 	.word	0x00119788
  10c844:	000f4240 	.word	0x000f4240

0010c848 <mbed::SPI::format(int, int)>:
  10c848:	b570      	push	{r4, r5, r6, lr}
  10c84a:	4604      	mov	r4, r0
  10c84c:	460e      	mov	r6, r1
  10c84e:	4615      	mov	r5, r2
  10c850:	6803      	ldr	r3, [r0, #0]
  10c852:	689b      	ldr	r3, [r3, #8]
  10c854:	4798      	blx	r3
  10c856:	4b07      	ldr	r3, [pc, #28]	; (10c874 <mbed::SPI::format(int, int)+0x2c>)
  10c858:	4620      	mov	r0, r4
  10c85a:	6226      	str	r6, [r4, #32]
  10c85c:	6265      	str	r5, [r4, #36]	; 0x24
  10c85e:	2200      	movs	r2, #0
  10c860:	601a      	str	r2, [r3, #0]
  10c862:	f7ff ffa9 	bl	10c7b8 <mbed::SPI::aquire()>
  10c866:	6823      	ldr	r3, [r4, #0]
  10c868:	4620      	mov	r0, r4
  10c86a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10c86e:	68db      	ldr	r3, [r3, #12]
  10c870:	4718      	bx	r3
  10c872:	bf00      	nop
  10c874:	3fff8b9c 	.word	0x3fff8b9c

0010c878 <mbed::SPI::frequency(int)>:
  10c878:	b570      	push	{r4, r5, r6, lr}
  10c87a:	4604      	mov	r4, r0
  10c87c:	460d      	mov	r5, r1
  10c87e:	6803      	ldr	r3, [r0, #0]
  10c880:	689b      	ldr	r3, [r3, #8]
  10c882:	4798      	blx	r3
  10c884:	4b06      	ldr	r3, [pc, #24]	; (10c8a0 <mbed::SPI::frequency(int)+0x28>)
  10c886:	4620      	mov	r0, r4
  10c888:	62a5      	str	r5, [r4, #40]	; 0x28
  10c88a:	2200      	movs	r2, #0
  10c88c:	601a      	str	r2, [r3, #0]
  10c88e:	f7ff ff93 	bl	10c7b8 <mbed::SPI::aquire()>
  10c892:	6823      	ldr	r3, [r4, #0]
  10c894:	4620      	mov	r0, r4
  10c896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10c89a:	68db      	ldr	r3, [r3, #12]
  10c89c:	4718      	bx	r3
  10c89e:	bf00      	nop
  10c8a0:	3fff8b9c 	.word	0x3fff8b9c

0010c8a4 <mbed::SPI::write(int)>:
  10c8a4:	b538      	push	{r3, r4, r5, lr}
  10c8a6:	4604      	mov	r4, r0
  10c8a8:	460d      	mov	r5, r1
  10c8aa:	6803      	ldr	r3, [r0, #0]
  10c8ac:	689b      	ldr	r3, [r3, #8]
  10c8ae:	4798      	blx	r3
  10c8b0:	4620      	mov	r0, r4
  10c8b2:	f7ff ff81 	bl	10c7b8 <mbed::SPI::aquire()>
  10c8b6:	4629      	mov	r1, r5
  10c8b8:	1d20      	adds	r0, r4, #4
  10c8ba:	f7ff fd15 	bl	10c2e8 <spi_master_write>
  10c8be:	4605      	mov	r5, r0
  10c8c0:	6823      	ldr	r3, [r4, #0]
  10c8c2:	4620      	mov	r0, r4
  10c8c4:	68db      	ldr	r3, [r3, #12]
  10c8c6:	4798      	blx	r3
  10c8c8:	4628      	mov	r0, r5
  10c8ca:	bd38      	pop	{r3, r4, r5, pc}

0010c8cc <mbed::SPI::write(char const*, int, char*, int)>:
  10c8cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  10c8ce:	4604      	mov	r4, r0
  10c8d0:	460d      	mov	r5, r1
  10c8d2:	4616      	mov	r6, r2
  10c8d4:	461f      	mov	r7, r3
  10c8d6:	6803      	ldr	r3, [r0, #0]
  10c8d8:	689b      	ldr	r3, [r3, #8]
  10c8da:	4798      	blx	r3
  10c8dc:	4620      	mov	r0, r4
  10c8de:	f7ff ff6b 	bl	10c7b8 <mbed::SPI::aquire()>
  10c8e2:	9b08      	ldr	r3, [sp, #32]
  10c8e4:	4629      	mov	r1, r5
  10c8e6:	9300      	str	r3, [sp, #0]
  10c8e8:	4632      	mov	r2, r6
  10c8ea:	463b      	mov	r3, r7
  10c8ec:	1d20      	adds	r0, r4, #4
  10c8ee:	f7ff fd08 	bl	10c302 <spi_master_block_write>
  10c8f2:	4605      	mov	r5, r0
  10c8f4:	6823      	ldr	r3, [r4, #0]
  10c8f6:	4620      	mov	r0, r4
  10c8f8:	68db      	ldr	r3, [r3, #12]
  10c8fa:	4798      	blx	r3
  10c8fc:	4628      	mov	r0, r5
  10c8fe:	b003      	add	sp, #12
  10c900:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0010c904 <mbed::SPI::lock()>:
  10c904:	b508      	push	{r3, lr}
  10c906:	4804      	ldr	r0, [pc, #16]	; (10c918 <mbed::SPI::lock()+0x14>)
  10c908:	f7f9 f874 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10c90c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10c910:	f04f 31ff 	mov.w	r1, #4294967295
  10c914:	f001 b8e9 	b.w	10daea <rtos::Mutex::lock(unsigned long)>
  10c918:	3fff8ba0 	.word	0x3fff8ba0

0010c91c <mbed::SPI::unlock()>:
  10c91c:	b508      	push	{r3, lr}
  10c91e:	4803      	ldr	r0, [pc, #12]	; (10c92c <mbed::SPI::unlock()+0x10>)
  10c920:	f7f9 f868 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10c924:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10c928:	f001 b8e2 	b.w	10daf0 <rtos::Mutex::unlock()>
  10c92c:	3fff8ba0 	.word	0x3fff8ba0

0010c930 <mbed::Ticker::handler()>:
  10c930:	b570      	push	{r4, r5, r6, lr}
  10c932:	e9d0 2308 	ldrd	r2, r3, [r0, #32]
  10c936:	e9d0 4502 	ldrd	r4, r5, [r0, #8]
  10c93a:	4606      	mov	r6, r0
  10c93c:	1912      	adds	r2, r2, r4
  10c93e:	416b      	adcs	r3, r5
  10c940:	f000 f8e0 	bl	10cb04 <mbed::TimerEvent::insert_absolute(unsigned long long)>
  10c944:	6b73      	ldr	r3, [r6, #52]	; 0x34
  10c946:	f106 0428 	add.w	r4, r6, #40	; 0x28
  10c94a:	b92b      	cbnz	r3, 10c958 <mbed::Ticker::handler()+0x28>
  10c94c:	f240 220e 	movw	r2, #526	; 0x20e
  10c950:	4904      	ldr	r1, [pc, #16]	; (10c964 <mbed::Ticker::handler()+0x34>)
  10c952:	4805      	ldr	r0, [pc, #20]	; (10c968 <mbed::Ticker::handler()+0x38>)
  10c954:	f7fb ff24 	bl	1087a0 <mbed_assert_internal>
  10c958:	6b73      	ldr	r3, [r6, #52]	; 0x34
  10c95a:	4620      	mov	r0, r4
  10c95c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10c960:	681b      	ldr	r3, [r3, #0]
  10c962:	4718      	bx	r3
  10c964:	001196b0 	.word	0x001196b0
  10c968:	0011608b 	.word	0x0011608b

0010c96c <mbed::Ticker::setup(unsigned long long)>:
  10c96c:	b5d0      	push	{r4, r6, r7, lr}
  10c96e:	4604      	mov	r4, r0
  10c970:	4616      	mov	r6, r2
  10c972:	461f      	mov	r7, r3
  10c974:	f7fb ff6c 	bl	108850 <core_util_critical_section_enter>
  10c978:	4620      	mov	r0, r4
  10c97a:	f000 f8cd 	bl	10cb18 <mbed::TimerEvent::remove()>
  10c97e:	e9c4 6708 	strd	r6, r7, [r4, #32]
  10c982:	69a0      	ldr	r0, [r4, #24]
  10c984:	f7fb fef9 	bl	10877a <ticker_read_us>
  10c988:	1832      	adds	r2, r6, r0
  10c98a:	eb47 0301 	adc.w	r3, r7, r1
  10c98e:	4620      	mov	r0, r4
  10c990:	f000 f8b8 	bl	10cb04 <mbed::TimerEvent::insert_absolute(unsigned long long)>
  10c994:	e8bd 40d0 	ldmia.w	sp!, {r4, r6, r7, lr}
  10c998:	f7fb bf86 	b.w	1088a8 <core_util_critical_section_exit>

0010c99c <mbed::Ticker::detach()>:
  10c99c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  10c99e:	4606      	mov	r6, r0
  10c9a0:	466d      	mov	r5, sp
  10c9a2:	f7fb ff55 	bl	108850 <core_util_critical_section_enter>
  10c9a6:	f106 0428 	add.w	r4, r6, #40	; 0x28
  10c9aa:	4630      	mov	r0, r6
  10c9ac:	f000 f8b4 	bl	10cb18 <mbed::TimerEvent::remove()>
  10c9b0:	2300      	movs	r3, #0
  10c9b2:	42ac      	cmp	r4, r5
  10c9b4:	9303      	str	r3, [sp, #12]
  10c9b6:	d00b      	beq.n	10c9d0 <mbed::Ticker::detach()+0x34>
  10c9b8:	4620      	mov	r0, r4
  10c9ba:	f7f5 fe15 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c9be:	b13c      	cbz	r4, 10c9d0 <mbed::Ticker::detach()+0x34>
  10c9c0:	9b03      	ldr	r3, [sp, #12]
  10c9c2:	b11b      	cbz	r3, 10c9cc <mbed::Ticker::detach()+0x30>
  10c9c4:	685b      	ldr	r3, [r3, #4]
  10c9c6:	4669      	mov	r1, sp
  10c9c8:	4620      	mov	r0, r4
  10c9ca:	4798      	blx	r3
  10c9cc:	9b03      	ldr	r3, [sp, #12]
  10c9ce:	6373      	str	r3, [r6, #52]	; 0x34
  10c9d0:	4628      	mov	r0, r5
  10c9d2:	f7f5 fe09 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10c9d6:	f7fb ff67 	bl	1088a8 <core_util_critical_section_exit>
  10c9da:	b004      	add	sp, #16
  10c9dc:	bd70      	pop	{r4, r5, r6, pc}

0010c9de <mbed::Timer::start()>:
  10c9de:	b510      	push	{r4, lr}
  10c9e0:	4604      	mov	r4, r0
  10c9e2:	f7fb ff35 	bl	108850 <core_util_critical_section_enter>
  10c9e6:	6823      	ldr	r3, [r4, #0]
  10c9e8:	b933      	cbnz	r3, 10c9f8 <mbed::Timer::start()+0x1a>
  10c9ea:	69a0      	ldr	r0, [r4, #24]
  10c9ec:	f7fb fec5 	bl	10877a <ticker_read_us>
  10c9f0:	e9c4 0102 	strd	r0, r1, [r4, #8]
  10c9f4:	2301      	movs	r3, #1
  10c9f6:	6023      	str	r3, [r4, #0]
  10c9f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10c9fc:	f7fb bf54 	b.w	1088a8 <core_util_critical_section_exit>

0010ca00 <mbed::Timer::slicetime()>:
  10ca00:	b538      	push	{r3, r4, r5, lr}
  10ca02:	4604      	mov	r4, r0
  10ca04:	f7fb ff24 	bl	108850 <core_util_critical_section_enter>
  10ca08:	6823      	ldr	r3, [r4, #0]
  10ca0a:	b153      	cbz	r3, 10ca22 <mbed::Timer::slicetime()+0x22>
  10ca0c:	69a0      	ldr	r0, [r4, #24]
  10ca0e:	f7fb feb4 	bl	10877a <ticker_read_us>
  10ca12:	f104 0508 	add.w	r5, r4, #8
  10ca16:	e9d5 4500 	ldrd	r4, r5, [r5]
  10ca1a:	1b04      	subs	r4, r0, r4
  10ca1c:	eb61 0505 	sbc.w	r5, r1, r5
  10ca20:	e001      	b.n	10ca26 <mbed::Timer::slicetime()+0x26>
  10ca22:	2400      	movs	r4, #0
  10ca24:	2500      	movs	r5, #0
  10ca26:	f7fb ff3f 	bl	1088a8 <core_util_critical_section_exit>
  10ca2a:	4620      	mov	r0, r4
  10ca2c:	4629      	mov	r1, r5
  10ca2e:	bd38      	pop	{r3, r4, r5, pc}

0010ca30 <mbed::Timer::stop()>:
  10ca30:	b510      	push	{r4, lr}
  10ca32:	4604      	mov	r4, r0
  10ca34:	f7fb ff0c 	bl	108850 <core_util_critical_section_enter>
  10ca38:	4620      	mov	r0, r4
  10ca3a:	f7ff ffe1 	bl	10ca00 <mbed::Timer::slicetime()>
  10ca3e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
  10ca42:	1880      	adds	r0, r0, r2
  10ca44:	4159      	adcs	r1, r3
  10ca46:	2300      	movs	r3, #0
  10ca48:	e9c4 0104 	strd	r0, r1, [r4, #16]
  10ca4c:	6023      	str	r3, [r4, #0]
  10ca4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10ca52:	f7fb bf29 	b.w	1088a8 <core_util_critical_section_exit>

0010ca56 <mbed::Timer::read_high_resolution_us()>:
  10ca56:	b570      	push	{r4, r5, r6, lr}
  10ca58:	4606      	mov	r6, r0
  10ca5a:	f7fb fef9 	bl	108850 <core_util_critical_section_enter>
  10ca5e:	e9d6 4504 	ldrd	r4, r5, [r6, #16]
  10ca62:	4630      	mov	r0, r6
  10ca64:	f7ff ffcc 	bl	10ca00 <mbed::Timer::slicetime()>
  10ca68:	1824      	adds	r4, r4, r0
  10ca6a:	414d      	adcs	r5, r1
  10ca6c:	f7fb ff1c 	bl	1088a8 <core_util_critical_section_exit>
  10ca70:	4620      	mov	r0, r4
  10ca72:	4629      	mov	r1, r5
  10ca74:	bd70      	pop	{r4, r5, r6, pc}

0010ca76 <mbed::Timer::read_ms()>:
  10ca76:	b508      	push	{r3, lr}
  10ca78:	f7ff ffed 	bl	10ca56 <mbed::Timer::read_high_resolution_us()>
  10ca7c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
  10ca80:	2300      	movs	r3, #0
  10ca82:	f002 fcf7 	bl	10f474 <__aeabi_uldivmod>
  10ca86:	bd08      	pop	{r3, pc}

0010ca88 <mbed::Timer::reset()>:
  10ca88:	b510      	push	{r4, lr}
  10ca8a:	4604      	mov	r4, r0
  10ca8c:	f7fb fee0 	bl	108850 <core_util_critical_section_enter>
  10ca90:	69a0      	ldr	r0, [r4, #24]
  10ca92:	f7fb fe72 	bl	10877a <ticker_read_us>
  10ca96:	2200      	movs	r2, #0
  10ca98:	2300      	movs	r3, #0
  10ca9a:	e9c4 0102 	strd	r0, r1, [r4, #8]
  10ca9e:	e9c4 2304 	strd	r2, r3, [r4, #16]
  10caa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10caa6:	f7fb beff 	b.w	1088a8 <core_util_critical_section_exit>

0010caaa <mbed::Timer::Timer()>:
  10caaa:	2300      	movs	r3, #0
  10caac:	b510      	push	{r4, lr}
  10caae:	2200      	movs	r2, #0
  10cab0:	6003      	str	r3, [r0, #0]
  10cab2:	2300      	movs	r3, #0
  10cab4:	e9c0 2302 	strd	r2, r3, [r0, #8]
  10cab8:	e9c0 2304 	strd	r2, r3, [r0, #16]
  10cabc:	4604      	mov	r4, r0
  10cabe:	f7fb fe65 	bl	10878c <get_us_ticker_data>
  10cac2:	61a0      	str	r0, [r4, #24]
  10cac4:	4620      	mov	r0, r4
  10cac6:	f7ff ffdf 	bl	10ca88 <mbed::Timer::reset()>
  10caca:	4620      	mov	r0, r4
  10cacc:	bd10      	pop	{r4, pc}

0010cace <mbed::TimerEvent::irq(unsigned long)>:
  10cace:	6803      	ldr	r3, [r0, #0]
  10cad0:	689b      	ldr	r3, [r3, #8]
  10cad2:	4718      	bx	r3

0010cad4 <mbed::TimerEvent::TimerEvent()>:
  10cad4:	4b09      	ldr	r3, [pc, #36]	; (10cafc <mbed::TimerEvent::TimerEvent()+0x28>)
  10cad6:	b510      	push	{r4, lr}
  10cad8:	2200      	movs	r2, #0
  10cada:	6003      	str	r3, [r0, #0]
  10cadc:	2300      	movs	r3, #0
  10cade:	e9c0 2302 	strd	r2, r3, [r0, #8]
  10cae2:	2300      	movs	r3, #0
  10cae4:	6103      	str	r3, [r0, #16]
  10cae6:	6143      	str	r3, [r0, #20]
  10cae8:	4604      	mov	r4, r0
  10caea:	f7fb fe4f 	bl	10878c <get_us_ticker_data>
  10caee:	4904      	ldr	r1, [pc, #16]	; (10cb00 <mbed::TimerEvent::TimerEvent()+0x2c>)
  10caf0:	61a0      	str	r0, [r4, #24]
  10caf2:	f7fb fdc1 	bl	108678 <ticker_set_handler>
  10caf6:	4620      	mov	r0, r4
  10caf8:	bd10      	pop	{r4, pc}
  10cafa:	bf00      	nop
  10cafc:	001197bc 	.word	0x001197bc
  10cb00:	0010cacf 	.word	0x0010cacf

0010cb04 <mbed::TimerEvent::insert_absolute(unsigned long long)>:
  10cb04:	b507      	push	{r0, r1, r2, lr}
  10cb06:	9000      	str	r0, [sp, #0]
  10cb08:	f100 0108 	add.w	r1, r0, #8
  10cb0c:	6980      	ldr	r0, [r0, #24]
  10cb0e:	f7fb fdf0 	bl	1086f2 <ticker_insert_event_us>
  10cb12:	b003      	add	sp, #12
  10cb14:	f85d fb04 	ldr.w	pc, [sp], #4

0010cb18 <mbed::TimerEvent::remove()>:
  10cb18:	f100 0108 	add.w	r1, r0, #8
  10cb1c:	6980      	ldr	r0, [r0, #24]
  10cb1e:	f7fb be12 	b.w	108746 <ticker_remove_event>
	...

0010cb24 <mbed::TimerEvent::~TimerEvent()>:
  10cb24:	b510      	push	{r4, lr}
  10cb26:	4604      	mov	r4, r0
  10cb28:	4b02      	ldr	r3, [pc, #8]	; (10cb34 <mbed::TimerEvent::~TimerEvent()+0x10>)
  10cb2a:	6003      	str	r3, [r0, #0]
  10cb2c:	f7ff fff4 	bl	10cb18 <mbed::TimerEvent::remove()>
  10cb30:	4620      	mov	r0, r4
  10cb32:	bd10      	pop	{r4, pc}
  10cb34:	001197bc 	.word	0x001197bc

0010cb38 <mbed::FileHandle::tell()>:
  10cb38:	6803      	ldr	r3, [r0, #0]
  10cb3a:	2201      	movs	r2, #1
  10cb3c:	691b      	ldr	r3, [r3, #16]
  10cb3e:	2100      	movs	r1, #0
  10cb40:	4718      	bx	r3

0010cb42 <mbed::FileHandle::rewind()>:
  10cb42:	6803      	ldr	r3, [r0, #0]
  10cb44:	2200      	movs	r2, #0
  10cb46:	691b      	ldr	r3, [r3, #16]
  10cb48:	4611      	mov	r1, r2
  10cb4a:	4718      	bx	r3

0010cb4c <NetworkInterface::get_gateway()>:
  10cb4c:	2000      	movs	r0, #0
  10cb4e:	4770      	bx	lr

0010cb50 <NetworkInterface::set_network(char const*, char const*, char const*)>:
  10cb50:	4800      	ldr	r0, [pc, #0]	; (10cb54 <NetworkInterface::set_network(char const*, char const*, char const*)+0x4>)
  10cb52:	4770      	bx	lr
  10cb54:	fffff446 	.word	0xfffff446

0010cb58 <NetworkInterface::set_dhcp(bool)>:
  10cb58:	2900      	cmp	r1, #0
  10cb5a:	4802      	ldr	r0, [pc, #8]	; (10cb64 <NetworkInterface::set_dhcp(bool)+0xc>)
  10cb5c:	bf18      	it	ne
  10cb5e:	2000      	movne	r0, #0
  10cb60:	4770      	bx	lr
  10cb62:	bf00      	nop
  10cb64:	fffff446 	.word	0xfffff446

0010cb68 <NetworkInterface::add_dns_server(SocketAddress const&)>:
  10cb68:	6803      	ldr	r3, [r0, #0]
  10cb6a:	b510      	push	{r4, lr}
  10cb6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  10cb6e:	460c      	mov	r4, r1
  10cb70:	4798      	blx	r3
  10cb72:	6803      	ldr	r3, [r0, #0]
  10cb74:	4621      	mov	r1, r4
  10cb76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10cb7a:	691b      	ldr	r3, [r3, #16]
  10cb7c:	4718      	bx	r3
	...

0010cb80 <NetworkStack::setstackopt(int, int, void const*, unsigned int)>:
  10cb80:	4800      	ldr	r0, [pc, #0]	; (10cb84 <NetworkStack::setstackopt(int, int, void const*, unsigned int)+0x4>)
  10cb82:	4770      	bx	lr
  10cb84:	fffff446 	.word	0xfffff446

0010cb88 <NetworkStack::getstackopt(int, int, void*, unsigned int*)>:
  10cb88:	4800      	ldr	r0, [pc, #0]	; (10cb8c <NetworkStack::getstackopt(int, int, void*, unsigned int*)+0x4>)
  10cb8a:	4770      	bx	lr
  10cb8c:	fffff446 	.word	0xfffff446

0010cb90 <NetworkStack::setsockopt(void*, int, int, void const*, unsigned int)>:
  10cb90:	4800      	ldr	r0, [pc, #0]	; (10cb94 <NetworkStack::setsockopt(void*, int, int, void const*, unsigned int)+0x4>)
  10cb92:	4770      	bx	lr
  10cb94:	fffff446 	.word	0xfffff446

0010cb98 <NetworkStack::getsockopt(void*, int, int, void*, unsigned int*)>:
  10cb98:	4800      	ldr	r0, [pc, #0]	; (10cb9c <NetworkStack::getsockopt(void*, int, int, void*, unsigned int*)+0x4>)
  10cb9a:	4770      	bx	lr
  10cb9c:	fffff446 	.word	0xfffff446

0010cba0 <nsapi_dns_add_server(SocketAddress const&)>:
  10cba0:	b510      	push	{r4, lr}
  10cba2:	b088      	sub	sp, #32
  10cba4:	ac03      	add	r4, sp, #12
  10cba6:	4601      	mov	r1, r0
  10cba8:	4620      	mov	r0, r4
  10cbaa:	f000 f9ef 	bl	10cf8c <SocketAddress::get_addr() const>
  10cbae:	f89d 301c 	ldrb.w	r3, [sp, #28]
  10cbb2:	f88d 3000 	strb.w	r3, [sp]
  10cbb6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
  10cbba:	f000 f807 	bl	10cbcc <nsapi_dns_add_server>
  10cbbe:	b008      	add	sp, #32
  10cbc0:	bd10      	pop	{r4, pc}

0010cbc2 <NetworkStack::add_dns_server(SocketAddress const&)>:
  10cbc2:	4608      	mov	r0, r1
  10cbc4:	f7ff bfec 	b.w	10cba0 <nsapi_dns_add_server(SocketAddress const&)>

0010cbc8 <nsapi_create_stack(NetworkStack*)>:
  10cbc8:	4770      	bx	lr
	...

0010cbcc <nsapi_dns_add_server>:
  10cbcc:	b084      	sub	sp, #16
  10cbce:	b538      	push	{r3, r4, r5, lr}
  10cbd0:	ac04      	add	r4, sp, #16
  10cbd2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  10cbd6:	490c      	ldr	r1, [pc, #48]	; (10cc08 <nsapi_dns_add_server+0x3c>)
  10cbd8:	2244      	movs	r2, #68	; 0x44
  10cbda:	f101 0011 	add.w	r0, r1, #17
  10cbde:	f003 f987 	bl	10fef0 <memmove>
  10cbe2:	4b09      	ldr	r3, [pc, #36]	; (10cc08 <nsapi_dns_add_server+0x3c>)
  10cbe4:	ac04      	add	r4, sp, #16
  10cbe6:	ad08      	add	r5, sp, #32
  10cbe8:	4622      	mov	r2, r4
  10cbea:	ca03      	ldmia	r2!, {r0, r1}
  10cbec:	42aa      	cmp	r2, r5
  10cbee:	6018      	str	r0, [r3, #0]
  10cbf0:	6059      	str	r1, [r3, #4]
  10cbf2:	4614      	mov	r4, r2
  10cbf4:	f103 0308 	add.w	r3, r3, #8
  10cbf8:	d1f6      	bne.n	10cbe8 <nsapi_dns_add_server+0x1c>
  10cbfa:	7812      	ldrb	r2, [r2, #0]
  10cbfc:	2000      	movs	r0, #0
  10cbfe:	701a      	strb	r2, [r3, #0]
  10cc00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  10cc04:	b004      	add	sp, #16
  10cc06:	4770      	bx	lr
  10cc08:	3fff41a4 	.word	0x3fff41a4

0010cc0c <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Socket, void (Socket::*)()> >(void*, void const*)>:
  10cc0c:	4603      	mov	r3, r0
  10cc0e:	b110      	cbz	r0, 10cc16 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Socket, void (Socket::*)()> >(void*, void const*)+0xa>
  10cc10:	c907      	ldmia	r1, {r0, r1, r2}
  10cc12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  10cc16:	4770      	bx	lr

0010cc18 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<Socket, void (Socket::*)()> >(void*)>:
  10cc18:	4770      	bx	lr

0010cc1a <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<Socket, void (Socket::*)()> >(void const*)>:
  10cc1a:	6842      	ldr	r2, [r0, #4]
  10cc1c:	6803      	ldr	r3, [r0, #0]
  10cc1e:	6880      	ldr	r0, [r0, #8]
  10cc20:	f012 0f01 	tst.w	r2, #1
  10cc24:	ea4f 0262 	mov.w	r2, r2, asr #1
  10cc28:	bf18      	it	ne
  10cc2a:	5881      	ldrne	r1, [r0, r2]
  10cc2c:	4410      	add	r0, r2
  10cc2e:	bf18      	it	ne
  10cc30:	58cb      	ldrne	r3, [r1, r3]
  10cc32:	4718      	bx	r3

0010cc34 <mbed::Callback<void ()>::thunk(void*)>:
  10cc34:	68c3      	ldr	r3, [r0, #12]
  10cc36:	b510      	push	{r4, lr}
  10cc38:	4604      	mov	r4, r0
  10cc3a:	b92b      	cbnz	r3, 10cc48 <mbed::Callback<void ()>::thunk(void*)+0x14>
  10cc3c:	f240 220e 	movw	r2, #526	; 0x20e
  10cc40:	4904      	ldr	r1, [pc, #16]	; (10cc54 <mbed::Callback<void ()>::thunk(void*)+0x20>)
  10cc42:	4805      	ldr	r0, [pc, #20]	; (10cc58 <mbed::Callback<void ()>::thunk(void*)+0x24>)
  10cc44:	f7fb fdac 	bl	1087a0 <mbed_assert_internal>
  10cc48:	68e3      	ldr	r3, [r4, #12]
  10cc4a:	4620      	mov	r0, r4
  10cc4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10cc50:	681b      	ldr	r3, [r3, #0]
  10cc52:	4718      	bx	r3
  10cc54:	001196b0 	.word	0x001196b0
  10cc58:	0011608b 	.word	0x0011608b

0010cc5c <Socket::Socket()>:
  10cc5c:	b510      	push	{r4, lr}
  10cc5e:	4604      	mov	r4, r0
  10cc60:	4b07      	ldr	r3, [pc, #28]	; (10cc80 <Socket::Socket()+0x24>)
  10cc62:	f04f 32ff 	mov.w	r2, #4294967295
  10cc66:	6003      	str	r3, [r0, #0]
  10cc68:	2300      	movs	r3, #0
  10cc6a:	6043      	str	r3, [r0, #4]
  10cc6c:	6083      	str	r3, [r0, #8]
  10cc6e:	60c2      	str	r2, [r0, #12]
  10cc70:	61c3      	str	r3, [r0, #28]
  10cc72:	62c3      	str	r3, [r0, #44]	; 0x2c
  10cc74:	3030      	adds	r0, #48	; 0x30
  10cc76:	f000 ff31 	bl	10dadc <rtos::Mutex::Mutex()>
  10cc7a:	4620      	mov	r0, r4
  10cc7c:	bd10      	pop	{r4, pc}
  10cc7e:	bf00      	nop
  10cc80:	001197d0 	.word	0x001197d0

0010cc84 <Socket::close()>:
  10cc84:	b570      	push	{r4, r5, r6, lr}
  10cc86:	4604      	mov	r4, r0
  10cc88:	f100 0630 	add.w	r6, r0, #48	; 0x30
  10cc8c:	f04f 31ff 	mov.w	r1, #4294967295
  10cc90:	4630      	mov	r0, r6
  10cc92:	f000 ff2a 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10cc96:	68a1      	ldr	r1, [r4, #8]
  10cc98:	b171      	cbz	r1, 10ccb8 <Socket::close()+0x34>
  10cc9a:	6860      	ldr	r0, [r4, #4]
  10cc9c:	6803      	ldr	r3, [r0, #0]
  10cc9e:	6c5d      	ldr	r5, [r3, #68]	; 0x44
  10cca0:	2300      	movs	r3, #0
  10cca2:	461a      	mov	r2, r3
  10cca4:	47a8      	blx	r5
  10cca6:	6860      	ldr	r0, [r4, #4]
  10cca8:	2300      	movs	r3, #0
  10ccaa:	68a1      	ldr	r1, [r4, #8]
  10ccac:	60a3      	str	r3, [r4, #8]
  10ccae:	6803      	ldr	r3, [r0, #0]
  10ccb0:	6a1b      	ldr	r3, [r3, #32]
  10ccb2:	4798      	blx	r3
  10ccb4:	4605      	mov	r5, r0
  10ccb6:	e000      	b.n	10ccba <Socket::close()+0x36>
  10ccb8:	460d      	mov	r5, r1
  10ccba:	2300      	movs	r3, #0
  10ccbc:	6063      	str	r3, [r4, #4]
  10ccbe:	6823      	ldr	r3, [r4, #0]
  10ccc0:	4620      	mov	r0, r4
  10ccc2:	68db      	ldr	r3, [r3, #12]
  10ccc4:	4798      	blx	r3
  10ccc6:	4630      	mov	r0, r6
  10ccc8:	f000 ff12 	bl	10daf0 <rtos::Mutex::unlock()>
  10cccc:	4628      	mov	r0, r5
  10ccce:	bd70      	pop	{r4, r5, r6, pc}

0010ccd0 <Socket::open(NetworkStack*)>:
  10ccd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  10ccd4:	4604      	mov	r4, r0
  10ccd6:	f100 0630 	add.w	r6, r0, #48	; 0x30
  10ccda:	b086      	sub	sp, #24
  10ccdc:	460d      	mov	r5, r1
  10ccde:	4630      	mov	r0, r6
  10cce0:	f04f 31ff 	mov.w	r1, #4294967295
  10cce4:	f000 ff01 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10cce8:	6863      	ldr	r3, [r4, #4]
  10ccea:	b903      	cbnz	r3, 10ccee <Socket::open(NetworkStack*)+0x1e>
  10ccec:	b925      	cbnz	r5, 10ccf8 <Socket::open(NetworkStack*)+0x28>
  10ccee:	4630      	mov	r0, r6
  10ccf0:	f000 fefe 	bl	10daf0 <rtos::Mutex::unlock()>
  10ccf4:	4817      	ldr	r0, [pc, #92]	; (10cd54 <Socket::open(NetworkStack*)+0x84>)
  10ccf6:	e02a      	b.n	10cd4e <Socket::open(NetworkStack*)+0x7e>
  10ccf8:	682b      	ldr	r3, [r5, #0]
  10ccfa:	6065      	str	r5, [r4, #4]
  10ccfc:	69df      	ldr	r7, [r3, #28]
  10ccfe:	6823      	ldr	r3, [r4, #0]
  10cd00:	4620      	mov	r0, r4
  10cd02:	689b      	ldr	r3, [r3, #8]
  10cd04:	4798      	blx	r3
  10cd06:	a901      	add	r1, sp, #4
  10cd08:	4602      	mov	r2, r0
  10cd0a:	4628      	mov	r0, r5
  10cd0c:	47b8      	blx	r7
  10cd0e:	4605      	mov	r5, r0
  10cd10:	b9c8      	cbnz	r0, 10cd46 <Socket::open(NetworkStack*)+0x76>
  10cd12:	9b01      	ldr	r3, [sp, #4]
  10cd14:	f104 0710 	add.w	r7, r4, #16
  10cd18:	60a3      	str	r3, [r4, #8]
  10cd1a:	230c      	movs	r3, #12
  10cd1c:	9302      	str	r3, [sp, #8]
  10cd1e:	2301      	movs	r3, #1
  10cd20:	9303      	str	r3, [sp, #12]
  10cd22:	4b0d      	ldr	r3, [pc, #52]	; (10cd58 <Socket::open(NetworkStack*)+0x88>)
  10cd24:	a902      	add	r1, sp, #8
  10cd26:	4638      	mov	r0, r7
  10cd28:	9305      	str	r3, [sp, #20]
  10cd2a:	9404      	str	r4, [sp, #16]
  10cd2c:	f7ff fbd3 	bl	10c4d6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
  10cd30:	a802      	add	r0, sp, #8
  10cd32:	f7f5 fc59 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10cd36:	6860      	ldr	r0, [r4, #4]
  10cd38:	4a08      	ldr	r2, [pc, #32]	; (10cd5c <Socket::open(NetworkStack*)+0x8c>)
  10cd3a:	6803      	ldr	r3, [r0, #0]
  10cd3c:	68a1      	ldr	r1, [r4, #8]
  10cd3e:	f8d3 8044 	ldr.w	r8, [r3, #68]	; 0x44
  10cd42:	463b      	mov	r3, r7
  10cd44:	47c0      	blx	r8
  10cd46:	4630      	mov	r0, r6
  10cd48:	f000 fed2 	bl	10daf0 <rtos::Mutex::unlock()>
  10cd4c:	4628      	mov	r0, r5
  10cd4e:	b006      	add	sp, #24
  10cd50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10cd54:	fffff445 	.word	0xfffff445
  10cd58:	001197e0 	.word	0x001197e0
  10cd5c:	0010cc35 	.word	0x0010cc35

0010cd60 <ipv6_scan_chunk(unsigned short*, char const*)>:
  10cd60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  10cd62:	4607      	mov	r7, r0
  10cd64:	2000      	movs	r0, #0
  10cd66:	460e      	mov	r6, r1
  10cd68:	4604      	mov	r4, r0
  10cd6a:	1835      	adds	r5, r6, r0
  10cd6c:	f10d 0206 	add.w	r2, sp, #6
  10cd70:	490d      	ldr	r1, [pc, #52]	; (10cda8 <ipv6_scan_chunk(unsigned short*, char const*)+0x48>)
  10cd72:	4628      	mov	r0, r5
  10cd74:	f004 fc96 	bl	1116a4 <siscanf>
  10cd78:	2800      	cmp	r0, #0
  10cd7a:	dd12      	ble.n	10cda2 <ipv6_scan_chunk(unsigned short*, char const*)+0x42>
  10cd7c:	4628      	mov	r0, r5
  10cd7e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
  10cd82:	f827 3014 	strh.w	r3, [r7, r4, lsl #1]
  10cd86:	1b85      	subs	r5, r0, r6
  10cd88:	f810 3b01 	ldrb.w	r3, [r0], #1
  10cd8c:	2b3a      	cmp	r3, #58	; 0x3a
  10cd8e:	d003      	beq.n	10cd98 <ipv6_scan_chunk(unsigned short*, char const*)+0x38>
  10cd90:	2b00      	cmp	r3, #0
  10cd92:	d1f8      	bne.n	10cd86 <ipv6_scan_chunk(unsigned short*, char const*)+0x26>
  10cd94:	1c60      	adds	r0, r4, #1
  10cd96:	e005      	b.n	10cda4 <ipv6_scan_chunk(unsigned short*, char const*)+0x44>
  10cd98:	3401      	adds	r4, #1
  10cd9a:	2c08      	cmp	r4, #8
  10cd9c:	f105 0001 	add.w	r0, r5, #1
  10cda0:	d1e3      	bne.n	10cd6a <ipv6_scan_chunk(unsigned short*, char const*)+0xa>
  10cda2:	4620      	mov	r0, r4
  10cda4:	b003      	add	sp, #12
  10cda6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  10cda8:	001197ec 	.word	0x001197ec

0010cdac <SocketAddress::SocketAddress(nsapi_addr, unsigned short)>:
  10cdac:	b084      	sub	sp, #16
  10cdae:	b5f0      	push	{r4, r5, r6, r7, lr}
  10cdb0:	4605      	mov	r5, r0
  10cdb2:	b087      	sub	sp, #28
  10cdb4:	ac0d      	add	r4, sp, #52	; 0x34
  10cdb6:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  10cdba:	ae01      	add	r6, sp, #4
  10cdbc:	2300      	movs	r3, #0
  10cdbe:	f805 3b28 	strb.w	r3, [r5], #40
  10cdc2:	4607      	mov	r7, r0
  10cdc4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  10cdc6:	c60f      	stmia	r6!, {r0, r1, r2, r3}
  10cdc8:	6823      	ldr	r3, [r4, #0]
  10cdca:	aa01      	add	r2, sp, #4
  10cdcc:	7033      	strb	r3, [r6, #0]
  10cdce:	ac05      	add	r4, sp, #20
  10cdd0:	4613      	mov	r3, r2
  10cdd2:	cb03      	ldmia	r3!, {r0, r1}
  10cdd4:	42a3      	cmp	r3, r4
  10cdd6:	6028      	str	r0, [r5, #0]
  10cdd8:	6069      	str	r1, [r5, #4]
  10cdda:	461a      	mov	r2, r3
  10cddc:	f105 0508 	add.w	r5, r5, #8
  10cde0:	d1f6      	bne.n	10cdd0 <SocketAddress::SocketAddress(nsapi_addr, unsigned short)+0x24>
  10cde2:	4638      	mov	r0, r7
  10cde4:	781b      	ldrb	r3, [r3, #0]
  10cde6:	702b      	strb	r3, [r5, #0]
  10cde8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
  10cdec:	877b      	strh	r3, [r7, #58]	; 0x3a
  10cdee:	b007      	add	sp, #28
  10cdf0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  10cdf4:	b004      	add	sp, #16
  10cdf6:	4770      	bx	lr

0010cdf8 <SocketAddress::set_ip_address(char const*)>:
  10cdf8:	b5f0      	push	{r4, r5, r6, r7, lr}
  10cdfa:	2300      	movs	r3, #0
  10cdfc:	b085      	sub	sp, #20
  10cdfe:	7003      	strb	r3, [r0, #0]
  10ce00:	460d      	mov	r5, r1
  10ce02:	2900      	cmp	r1, #0
  10ce04:	d058      	beq.n	10ceb8 <SocketAddress::set_ip_address(char const*)+0xc0>
  10ce06:	5cea      	ldrb	r2, [r5, r3]
  10ce08:	b13a      	cbz	r2, 10ce1a <SocketAddress::set_ip_address(char const*)+0x22>
  10ce0a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  10ce0e:	2909      	cmp	r1, #9
  10ce10:	d901      	bls.n	10ce16 <SocketAddress::set_ip_address(char const*)+0x1e>
  10ce12:	2a2e      	cmp	r2, #46	; 0x2e
  10ce14:	d108      	bne.n	10ce28 <SocketAddress::set_ip_address(char const*)+0x30>
  10ce16:	3301      	adds	r3, #1
  10ce18:	e7f5      	b.n	10ce06 <SocketAddress::set_ip_address(char const*)+0xe>
  10ce1a:	2b00      	cmp	r3, #0
  10ce1c:	d06d      	beq.n	10cefa <SocketAddress::set_ip_address(char const*)+0x102>
  10ce1e:	442b      	add	r3, r5
  10ce20:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  10ce24:	2b2e      	cmp	r3, #46	; 0x2e
  10ce26:	d168      	bne.n	10cefa <SocketAddress::set_ip_address(char const*)+0x102>
  10ce28:	1e6c      	subs	r4, r5, #1
  10ce2a:	2200      	movs	r2, #0
  10ce2c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  10ce30:	b17b      	cbz	r3, 10ce52 <SocketAddress::set_ip_address(char const*)+0x5a>
  10ce32:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
  10ce36:	2909      	cmp	r1, #9
  10ce38:	d9f8      	bls.n	10ce2c <SocketAddress::set_ip_address(char const*)+0x34>
  10ce3a:	f023 0120 	bic.w	r1, r3, #32
  10ce3e:	3941      	subs	r1, #65	; 0x41
  10ce40:	2905      	cmp	r1, #5
  10ce42:	d902      	bls.n	10ce4a <SocketAddress::set_ip_address(char const*)+0x52>
  10ce44:	2b3a      	cmp	r3, #58	; 0x3a
  10ce46:	d002      	beq.n	10ce4e <SocketAddress::set_ip_address(char const*)+0x56>
  10ce48:	e036      	b.n	10ceb8 <SocketAddress::set_ip_address(char const*)+0xc0>
  10ce4a:	2b3a      	cmp	r3, #58	; 0x3a
  10ce4c:	d1ee      	bne.n	10ce2c <SocketAddress::set_ip_address(char const*)+0x34>
  10ce4e:	3201      	adds	r2, #1
  10ce50:	e7ec      	b.n	10ce2c <SocketAddress::set_ip_address(char const*)+0x34>
  10ce52:	2a01      	cmp	r2, #1
  10ce54:	dd30      	ble.n	10ceb8 <SocketAddress::set_ip_address(char const*)+0xc0>
  10ce56:	2302      	movs	r3, #2
  10ce58:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
  10ce5c:	462b      	mov	r3, r5
  10ce5e:	f100 0429 	add.w	r4, r0, #41	; 0x29
  10ce62:	1b59      	subs	r1, r3, r5
  10ce64:	f813 0b01 	ldrb.w	r0, [r3], #1
  10ce68:	b148      	cbz	r0, 10ce7e <SocketAddress::set_ip_address(char const*)+0x86>
  10ce6a:	283a      	cmp	r0, #58	; 0x3a
  10ce6c:	d1f9      	bne.n	10ce62 <SocketAddress::set_ip_address(char const*)+0x6a>
  10ce6e:	781a      	ldrb	r2, [r3, #0]
  10ce70:	2a3a      	cmp	r2, #58	; 0x3a
  10ce72:	d1f6      	bne.n	10ce62 <SocketAddress::set_ip_address(char const*)+0x6a>
  10ce74:	3102      	adds	r1, #2
  10ce76:	4429      	add	r1, r5
  10ce78:	4668      	mov	r0, sp
  10ce7a:	f7ff ff71 	bl	10cd60 <ipv6_scan_chunk(unsigned short*, char const*)>
  10ce7e:	f1c0 0608 	rsb	r6, r0, #8
  10ce82:	0076      	lsls	r6, r6, #1
  10ce84:	0042      	lsls	r2, r0, #1
  10ce86:	4669      	mov	r1, sp
  10ce88:	eb0d 0006 	add.w	r0, sp, r6
  10ce8c:	f003 f830 	bl	10fef0 <memmove>
  10ce90:	4632      	mov	r2, r6
  10ce92:	2100      	movs	r1, #0
  10ce94:	4668      	mov	r0, sp
  10ce96:	f003 f846 	bl	10ff26 <memset>
  10ce9a:	4629      	mov	r1, r5
  10ce9c:	4668      	mov	r0, sp
  10ce9e:	f7ff ff5f 	bl	10cd60 <ipv6_scan_chunk(unsigned short*, char const*)>
  10cea2:	2300      	movs	r3, #0
  10cea4:	f83d 2003 	ldrh.w	r2, [sp, r3]
  10cea8:	1211      	asrs	r1, r2, #8
  10ceaa:	54e1      	strb	r1, [r4, r3]
  10ceac:	18e1      	adds	r1, r4, r3
  10ceae:	3302      	adds	r3, #2
  10ceb0:	2b10      	cmp	r3, #16
  10ceb2:	704a      	strb	r2, [r1, #1]
  10ceb4:	d1f6      	bne.n	10cea4 <SocketAddress::set_ip_address(char const*)+0xac>
  10ceb6:	e01e      	b.n	10cef6 <SocketAddress::set_ip_address(char const*)+0xfe>
  10ceb8:	2211      	movs	r2, #17
  10ceba:	2100      	movs	r1, #0
  10cebc:	3028      	adds	r0, #40	; 0x28
  10cebe:	f003 f832 	bl	10ff26 <memset>
  10cec2:	2000      	movs	r0, #0
  10cec4:	e021      	b.n	10cf0a <SocketAddress::set_ip_address(char const*)+0x112>
  10cec6:	42bc      	cmp	r4, r7
  10cec8:	f106 0001 	add.w	r0, r6, #1
  10cecc:	d013      	beq.n	10cef6 <SocketAddress::set_ip_address(char const*)+0xfe>
  10cece:	182e      	adds	r6, r5, r0
  10ced0:	466a      	mov	r2, sp
  10ced2:	490f      	ldr	r1, [pc, #60]	; (10cf10 <SocketAddress::set_ip_address(char const*)+0x118>)
  10ced4:	4630      	mov	r0, r6
  10ced6:	f004 fbe5 	bl	1116a4 <siscanf>
  10ceda:	2800      	cmp	r0, #0
  10cedc:	dd0b      	ble.n	10cef6 <SocketAddress::set_ip_address(char const*)+0xfe>
  10cede:	4630      	mov	r0, r6
  10cee0:	f89d 3000 	ldrb.w	r3, [sp]
  10cee4:	f807 3f01 	strb.w	r3, [r7, #1]!
  10cee8:	1b46      	subs	r6, r0, r5
  10ceea:	f810 3b01 	ldrb.w	r3, [r0], #1
  10ceee:	2b2e      	cmp	r3, #46	; 0x2e
  10cef0:	d0e9      	beq.n	10cec6 <SocketAddress::set_ip_address(char const*)+0xce>
  10cef2:	2b00      	cmp	r3, #0
  10cef4:	d1f8      	bne.n	10cee8 <SocketAddress::set_ip_address(char const*)+0xf0>
  10cef6:	2001      	movs	r0, #1
  10cef8:	e007      	b.n	10cf0a <SocketAddress::set_ip_address(char const*)+0x112>
  10cefa:	4607      	mov	r7, r0
  10cefc:	2301      	movs	r3, #1
  10cefe:	f100 042c 	add.w	r4, r0, #44	; 0x2c
  10cf02:	f807 3f28 	strb.w	r3, [r7, #40]!
  10cf06:	2000      	movs	r0, #0
  10cf08:	e7e1      	b.n	10cece <SocketAddress::set_ip_address(char const*)+0xd6>
  10cf0a:	b005      	add	sp, #20
  10cf0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  10cf0e:	bf00      	nop
  10cf10:	001197f0 	.word	0x001197f0

0010cf14 <SocketAddress::set_port(unsigned short)>:
  10cf14:	8741      	strh	r1, [r0, #58]	; 0x3a
  10cf16:	4770      	bx	lr

0010cf18 <SocketAddress::get_ip_address() const>:
  10cf18:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
  10cf1c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  10cf20:	4604      	mov	r4, r0
  10cf22:	b35b      	cbz	r3, 10cf7c <SocketAddress::get_ip_address() const+0x64>
  10cf24:	7805      	ldrb	r5, [r0, #0]
  10cf26:	bb3d      	cbnz	r5, 10cf78 <SocketAddress::get_ip_address() const+0x60>
  10cf28:	2b01      	cmp	r3, #1
  10cf2a:	d10d      	bne.n	10cf48 <SocketAddress::get_ip_address() const+0x30>
  10cf2c:	f890 102c 	ldrb.w	r1, [r0, #44]	; 0x2c
  10cf30:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
  10cf34:	f890 2029 	ldrb.w	r2, [r0, #41]	; 0x29
  10cf38:	9101      	str	r1, [sp, #4]
  10cf3a:	f890 102b 	ldrb.w	r1, [r0, #43]	; 0x2b
  10cf3e:	9100      	str	r1, [sp, #0]
  10cf40:	4910      	ldr	r1, [pc, #64]	; (10cf84 <SocketAddress::get_ip_address() const+0x6c>)
  10cf42:	f004 fb8b 	bl	11165c <siprintf>
  10cf46:	e017      	b.n	10cf78 <SocketAddress::get_ip_address() const+0x60>
  10cf48:	2b02      	cmp	r3, #2
  10cf4a:	d115      	bne.n	10cf78 <SocketAddress::get_ip_address() const+0x60>
  10cf4c:	4606      	mov	r6, r0
  10cf4e:	f100 0729 	add.w	r7, r0, #41	; 0x29
  10cf52:	f04f 083a 	mov.w	r8, #58	; 0x3a
  10cf56:	197b      	adds	r3, r7, r5
  10cf58:	5d7a      	ldrb	r2, [r7, r5]
  10cf5a:	4630      	mov	r0, r6
  10cf5c:	785b      	ldrb	r3, [r3, #1]
  10cf5e:	490a      	ldr	r1, [pc, #40]	; (10cf88 <SocketAddress::get_ip_address() const+0x70>)
  10cf60:	3502      	adds	r5, #2
  10cf62:	f004 fb7b 	bl	11165c <siprintf>
  10cf66:	2d10      	cmp	r5, #16
  10cf68:	f886 8004 	strb.w	r8, [r6, #4]
  10cf6c:	f106 0605 	add.w	r6, r6, #5
  10cf70:	d1f1      	bne.n	10cf56 <SocketAddress::get_ip_address() const+0x3e>
  10cf72:	2300      	movs	r3, #0
  10cf74:	f884 3027 	strb.w	r3, [r4, #39]	; 0x27
  10cf78:	4620      	mov	r0, r4
  10cf7a:	e000      	b.n	10cf7e <SocketAddress::get_ip_address() const+0x66>
  10cf7c:	4618      	mov	r0, r3
  10cf7e:	b002      	add	sp, #8
  10cf80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10cf84:	001197f5 	.word	0x001197f5
  10cf88:	00119801 	.word	0x00119801

0010cf8c <SocketAddress::get_addr() const>:
  10cf8c:	4602      	mov	r2, r0
  10cf8e:	b510      	push	{r4, lr}
  10cf90:	f101 0328 	add.w	r3, r1, #40	; 0x28
  10cf94:	3138      	adds	r1, #56	; 0x38
  10cf96:	f853 4b04 	ldr.w	r4, [r3], #4
  10cf9a:	428b      	cmp	r3, r1
  10cf9c:	f842 4b04 	str.w	r4, [r2], #4
  10cfa0:	d1f9      	bne.n	10cf96 <SocketAddress::get_addr() const+0xa>
  10cfa2:	781b      	ldrb	r3, [r3, #0]
  10cfa4:	7013      	strb	r3, [r2, #0]
  10cfa6:	bd10      	pop	{r4, pc}

0010cfa8 <SocketAddress::get_port() const>:
  10cfa8:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
  10cfaa:	4770      	bx	lr

0010cfac <Socket::~Socket()>:
  10cfac:	b510      	push	{r4, lr}
  10cfae:	4604      	mov	r4, r0
  10cfb0:	4b07      	ldr	r3, [pc, #28]	; (10cfd0 <Socket::~Socket()+0x24>)
  10cfb2:	f840 3b30 	str.w	r3, [r0], #48
  10cfb6:	f000 fd9e 	bl	10daf6 <rtos::Mutex::~Mutex()>
  10cfba:	f104 0020 	add.w	r0, r4, #32
  10cfbe:	f7f5 fb13 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10cfc2:	f104 0010 	add.w	r0, r4, #16
  10cfc6:	f7f5 fb0f 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10cfca:	4620      	mov	r0, r4
  10cfcc:	bd10      	pop	{r4, pc}
  10cfce:	bf00      	nop
  10cfd0:	001197d0 	.word	0x001197d0

0010cfd4 <Socket::~Socket()>:
  10cfd4:	b510      	push	{r4, lr}
  10cfd6:	4604      	mov	r4, r0
  10cfd8:	f7ff ffe8 	bl	10cfac <Socket::~Socket()>
  10cfdc:	4620      	mov	r0, r4
  10cfde:	f000 fbbb 	bl	10d758 <operator delete(void*)>
  10cfe2:	4620      	mov	r0, r4
  10cfe4:	bd10      	pop	{r4, pc}

0010cfe6 <TCPSocket::get_proto()>:
  10cfe6:	2000      	movs	r0, #0
  10cfe8:	4770      	bx	lr

0010cfea <TCPSocket::event()>:
  10cfea:	b510      	push	{r4, lr}
  10cfec:	4604      	mov	r4, r0
  10cfee:	3088      	adds	r0, #136	; 0x88
  10cff0:	f000 fdce 	bl	10db90 <rtos::Semaphore::release()>
  10cff4:	f104 0064 	add.w	r0, r4, #100	; 0x64
  10cff8:	f000 fdca 	bl	10db90 <rtos::Semaphore::release()>
  10cffc:	6e23      	ldr	r3, [r4, #96]	; 0x60
  10cffe:	3301      	adds	r3, #1
  10d000:	6623      	str	r3, [r4, #96]	; 0x60
  10d002:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  10d004:	b143      	cbz	r3, 10d018 <TCPSocket::event()+0x2e>
  10d006:	6e22      	ldr	r2, [r4, #96]	; 0x60
  10d008:	2a01      	cmp	r2, #1
  10d00a:	d105      	bne.n	10d018 <TCPSocket::event()+0x2e>
  10d00c:	f104 0020 	add.w	r0, r4, #32
  10d010:	681b      	ldr	r3, [r3, #0]
  10d012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10d016:	4718      	bx	r3
  10d018:	bd10      	pop	{r4, pc}
	...

0010d01c <TCPSocket::TCPSocket()>:
  10d01c:	b538      	push	{r3, r4, r5, lr}
  10d01e:	4604      	mov	r4, r0
  10d020:	f7ff fe1c 	bl	10cc5c <Socket::Socket()>
  10d024:	4b09      	ldr	r3, [pc, #36]	; (10d04c <TCPSocket::TCPSocket()+0x30>)
  10d026:	2500      	movs	r5, #0
  10d028:	6023      	str	r3, [r4, #0]
  10d02a:	4629      	mov	r1, r5
  10d02c:	6625      	str	r5, [r4, #96]	; 0x60
  10d02e:	f104 0064 	add.w	r0, r4, #100	; 0x64
  10d032:	f000 fd91 	bl	10db58 <rtos::Semaphore::Semaphore(long)>
  10d036:	4629      	mov	r1, r5
  10d038:	f104 0088 	add.w	r0, r4, #136	; 0x88
  10d03c:	f000 fd8c 	bl	10db58 <rtos::Semaphore::Semaphore(long)>
  10d040:	f884 50ac 	strb.w	r5, [r4, #172]	; 0xac
  10d044:	f884 50ad 	strb.w	r5, [r4, #173]	; 0xad
  10d048:	4620      	mov	r0, r4
  10d04a:	bd38      	pop	{r3, r4, r5, pc}
  10d04c:	00119814 	.word	0x00119814

0010d050 <TCPSocket::connect(SocketAddress const&)>:
  10d050:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  10d054:	4604      	mov	r4, r0
  10d056:	f100 0630 	add.w	r6, r0, #48	; 0x30
  10d05a:	4689      	mov	r9, r1
  10d05c:	4630      	mov	r0, r6
  10d05e:	f04f 31ff 	mov.w	r1, #4294967295
  10d062:	f000 fd42 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d066:	f894 30ad 	ldrb.w	r3, [r4, #173]	; 0xad
  10d06a:	b123      	cbz	r3, 10d076 <TCPSocket::connect(SocketAddress const&)+0x26>
  10d06c:	222d      	movs	r2, #45	; 0x2d
  10d06e:	491f      	ldr	r1, [pc, #124]	; (10d0ec <TCPSocket::connect(SocketAddress const&)+0x9c>)
  10d070:	481f      	ldr	r0, [pc, #124]	; (10d0f0 <TCPSocket::connect(SocketAddress const&)+0xa0>)
  10d072:	f7fb fb95 	bl	1087a0 <mbed_assert_internal>
  10d076:	2700      	movs	r7, #0
  10d078:	46ba      	mov	r10, r7
  10d07a:	2301      	movs	r3, #1
  10d07c:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
  10d080:	f104 0888 	add.w	r8, r4, #136	; 0x88
  10d084:	68a1      	ldr	r1, [r4, #8]
  10d086:	b301      	cbz	r1, 10d0ca <TCPSocket::connect(SocketAddress const&)+0x7a>
  10d088:	6860      	ldr	r0, [r4, #4]
  10d08a:	f8c4 a060 	str.w	r10, [r4, #96]	; 0x60
  10d08e:	6803      	ldr	r3, [r0, #0]
  10d090:	464a      	mov	r2, r9
  10d092:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  10d094:	4798      	blx	r3
  10d096:	68e3      	ldr	r3, [r4, #12]
  10d098:	4605      	mov	r5, r0
  10d09a:	b1bb      	cbz	r3, 10d0cc <TCPSocket::connect(SocketAddress const&)+0x7c>
  10d09c:	f600 33c6 	addw	r3, r0, #3014	; 0xbc6
  10d0a0:	2b01      	cmp	r3, #1
  10d0a2:	d813      	bhi.n	10d0cc <TCPSocket::connect(SocketAddress const&)+0x7c>
  10d0a4:	4630      	mov	r0, r6
  10d0a6:	f000 fd23 	bl	10daf0 <rtos::Mutex::unlock()>
  10d0aa:	68e1      	ldr	r1, [r4, #12]
  10d0ac:	4640      	mov	r0, r8
  10d0ae:	f000 fd5b 	bl	10db68 <rtos::Semaphore::wait(unsigned long)>
  10d0b2:	4683      	mov	r11, r0
  10d0b4:	f04f 31ff 	mov.w	r1, #4294967295
  10d0b8:	4630      	mov	r0, r6
  10d0ba:	f000 fd16 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d0be:	f1bb 0f00 	cmp.w	r11, #0
  10d0c2:	f04f 0701 	mov.w	r7, #1
  10d0c6:	dcdd      	bgt.n	10d084 <TCPSocket::connect(SocketAddress const&)+0x34>
  10d0c8:	e000      	b.n	10d0cc <TCPSocket::connect(SocketAddress const&)+0x7c>
  10d0ca:	4d0a      	ldr	r5, [pc, #40]	; (10d0f4 <TCPSocket::connect(SocketAddress const&)+0xa4>)
  10d0cc:	2300      	movs	r3, #0
  10d0ce:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
  10d0d2:	f6a3 33c7 	subw	r3, r3, #3015	; 0xbc7
  10d0d6:	429d      	cmp	r5, r3
  10d0d8:	d102      	bne.n	10d0e0 <TCPSocket::connect(SocketAddress const&)+0x90>
  10d0da:	2f00      	cmp	r7, #0
  10d0dc:	bf18      	it	ne
  10d0de:	2500      	movne	r5, #0
  10d0e0:	4630      	mov	r0, r6
  10d0e2:	f000 fd05 	bl	10daf0 <rtos::Mutex::unlock()>
  10d0e6:	4628      	mov	r0, r5
  10d0e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10d0ec:	00119824 	.word	0x00119824
  10d0f0:	0011985c 	.word	0x0011985c
  10d0f4:	fffff443 	.word	0xfffff443

0010d0f8 <TCPSocket::connect(char const*, unsigned short)>:
  10d0f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  10d0fc:	4605      	mov	r5, r0
  10d0fe:	4688      	mov	r8, r1
  10d100:	b098      	sub	sp, #96	; 0x60
  10d102:	ac04      	add	r4, sp, #16
  10d104:	2100      	movs	r1, #0
  10d106:	4620      	mov	r0, r4
  10d108:	2600      	movs	r6, #0
  10d10a:	4617      	mov	r7, r2
  10d10c:	2211      	movs	r2, #17
  10d10e:	f002 ff0a 	bl	10ff26 <memset>
  10d112:	9602      	str	r6, [sp, #8]
  10d114:	ab07      	add	r3, sp, #28
  10d116:	e893 0003 	ldmia.w	r3, {r0, r1}
  10d11a:	9000      	str	r0, [sp, #0]
  10d11c:	f88d 1004 	strb.w	r1, [sp, #4]
  10d120:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
  10d124:	a809      	add	r0, sp, #36	; 0x24
  10d126:	f7ff fe41 	bl	10cdac <SocketAddress::SocketAddress(nsapi_addr, unsigned short)>
  10d12a:	6868      	ldr	r0, [r5, #4]
  10d12c:	aa09      	add	r2, sp, #36	; 0x24
  10d12e:	6803      	ldr	r3, [r0, #0]
  10d130:	4641      	mov	r1, r8
  10d132:	68dc      	ldr	r4, [r3, #12]
  10d134:	4633      	mov	r3, r6
  10d136:	47a0      	blx	r4
  10d138:	b940      	cbnz	r0, 10d14c <TCPSocket::connect(char const*, unsigned short)+0x54>
  10d13a:	4639      	mov	r1, r7
  10d13c:	a809      	add	r0, sp, #36	; 0x24
  10d13e:	f7ff fee9 	bl	10cf14 <SocketAddress::set_port(unsigned short)>
  10d142:	a909      	add	r1, sp, #36	; 0x24
  10d144:	4628      	mov	r0, r5
  10d146:	f7ff ff83 	bl	10d050 <TCPSocket::connect(SocketAddress const&)>
  10d14a:	e001      	b.n	10d150 <TCPSocket::connect(char const*, unsigned short)+0x58>
  10d14c:	f46f 603c 	mvn.w	r0, #3008	; 0xbc0
  10d150:	b018      	add	sp, #96	; 0x60
  10d152:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0010d158 <TCPSocket::send(void const*, unsigned int)>:
  10d158:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  10d15c:	4604      	mov	r4, r0
  10d15e:	f100 0530 	add.w	r5, r0, #48	; 0x30
  10d162:	4688      	mov	r8, r1
  10d164:	4628      	mov	r0, r5
  10d166:	f04f 31ff 	mov.w	r1, #4294967295
  10d16a:	4691      	mov	r9, r2
  10d16c:	f000 fcbd 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d170:	f894 30ad 	ldrb.w	r3, [r4, #173]	; 0xad
  10d174:	b123      	cbz	r3, 10d180 <TCPSocket::send(void const*, unsigned int)+0x28>
  10d176:	226f      	movs	r2, #111	; 0x6f
  10d178:	491a      	ldr	r1, [pc, #104]	; (10d1e4 <TCPSocket::send(void const*, unsigned int)+0x8c>)
  10d17a:	481b      	ldr	r0, [pc, #108]	; (10d1e8 <TCPSocket::send(void const*, unsigned int)+0x90>)
  10d17c:	f7fb fb10 	bl	1087a0 <mbed_assert_internal>
  10d180:	2301      	movs	r3, #1
  10d182:	f8df b06c 	ldr.w	r11, [pc, #108]	; 10d1f0 <TCPSocket::send(void const*, unsigned int)+0x98>
  10d186:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
  10d18a:	f104 0788 	add.w	r7, r4, #136	; 0x88
  10d18e:	68a1      	ldr	r1, [r4, #8]
  10d190:	b1e9      	cbz	r1, 10d1ce <TCPSocket::send(void const*, unsigned int)+0x76>
  10d192:	6860      	ldr	r0, [r4, #4]
  10d194:	2300      	movs	r3, #0
  10d196:	6623      	str	r3, [r4, #96]	; 0x60
  10d198:	6803      	ldr	r3, [r0, #0]
  10d19a:	4642      	mov	r2, r8
  10d19c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
  10d19e:	464b      	mov	r3, r9
  10d1a0:	47b0      	blx	r6
  10d1a2:	68e3      	ldr	r3, [r4, #12]
  10d1a4:	4606      	mov	r6, r0
  10d1a6:	b19b      	cbz	r3, 10d1d0 <TCPSocket::send(void const*, unsigned int)+0x78>
  10d1a8:	4558      	cmp	r0, r11
  10d1aa:	d111      	bne.n	10d1d0 <TCPSocket::send(void const*, unsigned int)+0x78>
  10d1ac:	4628      	mov	r0, r5
  10d1ae:	f000 fc9f 	bl	10daf0 <rtos::Mutex::unlock()>
  10d1b2:	68e1      	ldr	r1, [r4, #12]
  10d1b4:	4638      	mov	r0, r7
  10d1b6:	f000 fcd7 	bl	10db68 <rtos::Semaphore::wait(unsigned long)>
  10d1ba:	4682      	mov	r10, r0
  10d1bc:	f04f 31ff 	mov.w	r1, #4294967295
  10d1c0:	4628      	mov	r0, r5
  10d1c2:	f000 fc92 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d1c6:	f1ba 0f00 	cmp.w	r10, #0
  10d1ca:	dce0      	bgt.n	10d18e <TCPSocket::send(void const*, unsigned int)+0x36>
  10d1cc:	e000      	b.n	10d1d0 <TCPSocket::send(void const*, unsigned int)+0x78>
  10d1ce:	4e07      	ldr	r6, [pc, #28]	; (10d1ec <TCPSocket::send(void const*, unsigned int)+0x94>)
  10d1d0:	2300      	movs	r3, #0
  10d1d2:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
  10d1d6:	4628      	mov	r0, r5
  10d1d8:	f000 fc8a 	bl	10daf0 <rtos::Mutex::unlock()>
  10d1dc:	4630      	mov	r0, r6
  10d1de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10d1e2:	bf00      	nop
  10d1e4:	00119824 	.word	0x00119824
  10d1e8:	0011985c 	.word	0x0011985c
  10d1ec:	fffff443 	.word	0xfffff443
  10d1f0:	fffff447 	.word	0xfffff447

0010d1f4 <TCPSocket::recv(void*, unsigned int)>:
  10d1f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  10d1f8:	4604      	mov	r4, r0
  10d1fa:	f100 0530 	add.w	r5, r0, #48	; 0x30
  10d1fe:	4688      	mov	r8, r1
  10d200:	4628      	mov	r0, r5
  10d202:	f04f 31ff 	mov.w	r1, #4294967295
  10d206:	4691      	mov	r9, r2
  10d208:	f000 fc6f 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d20c:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
  10d210:	b123      	cbz	r3, 10d21c <TCPSocket::recv(void*, unsigned int)+0x28>
  10d212:	229a      	movs	r2, #154	; 0x9a
  10d214:	491a      	ldr	r1, [pc, #104]	; (10d280 <TCPSocket::recv(void*, unsigned int)+0x8c>)
  10d216:	481b      	ldr	r0, [pc, #108]	; (10d284 <TCPSocket::recv(void*, unsigned int)+0x90>)
  10d218:	f7fb fac2 	bl	1087a0 <mbed_assert_internal>
  10d21c:	2301      	movs	r3, #1
  10d21e:	f8df b06c 	ldr.w	r11, [pc, #108]	; 10d28c <TCPSocket::recv(void*, unsigned int)+0x98>
  10d222:	f884 30ac 	strb.w	r3, [r4, #172]	; 0xac
  10d226:	f104 0764 	add.w	r7, r4, #100	; 0x64
  10d22a:	68a1      	ldr	r1, [r4, #8]
  10d22c:	b1e9      	cbz	r1, 10d26a <TCPSocket::recv(void*, unsigned int)+0x76>
  10d22e:	6860      	ldr	r0, [r4, #4]
  10d230:	2300      	movs	r3, #0
  10d232:	6623      	str	r3, [r4, #96]	; 0x60
  10d234:	6803      	ldr	r3, [r0, #0]
  10d236:	4642      	mov	r2, r8
  10d238:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  10d23a:	464b      	mov	r3, r9
  10d23c:	47b0      	blx	r6
  10d23e:	68e3      	ldr	r3, [r4, #12]
  10d240:	4606      	mov	r6, r0
  10d242:	b19b      	cbz	r3, 10d26c <TCPSocket::recv(void*, unsigned int)+0x78>
  10d244:	4558      	cmp	r0, r11
  10d246:	d111      	bne.n	10d26c <TCPSocket::recv(void*, unsigned int)+0x78>
  10d248:	4628      	mov	r0, r5
  10d24a:	f000 fc51 	bl	10daf0 <rtos::Mutex::unlock()>
  10d24e:	68e1      	ldr	r1, [r4, #12]
  10d250:	4638      	mov	r0, r7
  10d252:	f000 fc89 	bl	10db68 <rtos::Semaphore::wait(unsigned long)>
  10d256:	4682      	mov	r10, r0
  10d258:	f04f 31ff 	mov.w	r1, #4294967295
  10d25c:	4628      	mov	r0, r5
  10d25e:	f000 fc44 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d262:	f1ba 0f00 	cmp.w	r10, #0
  10d266:	dce0      	bgt.n	10d22a <TCPSocket::recv(void*, unsigned int)+0x36>
  10d268:	e000      	b.n	10d26c <TCPSocket::recv(void*, unsigned int)+0x78>
  10d26a:	4e07      	ldr	r6, [pc, #28]	; (10d288 <TCPSocket::recv(void*, unsigned int)+0x94>)
  10d26c:	2300      	movs	r3, #0
  10d26e:	f884 30ac 	strb.w	r3, [r4, #172]	; 0xac
  10d272:	4628      	mov	r0, r5
  10d274:	f000 fc3c 	bl	10daf0 <rtos::Mutex::unlock()>
  10d278:	4630      	mov	r0, r6
  10d27a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10d27e:	bf00      	nop
  10d280:	00119824 	.word	0x00119824
  10d284:	00119870 	.word	0x00119870
  10d288:	fffff443 	.word	0xfffff443
  10d28c:	fffff447 	.word	0xfffff447

0010d290 <TCPSocket::~TCPSocket()>:
  10d290:	b538      	push	{r3, r4, r5, lr}
  10d292:	4605      	mov	r5, r0
  10d294:	4604      	mov	r4, r0
  10d296:	4b08      	ldr	r3, [pc, #32]	; (10d2b8 <TCPSocket::~TCPSocket()+0x28>)
  10d298:	f845 3b88 	str.w	r3, [r5], #136
  10d29c:	f7ff fcf2 	bl	10cc84 <Socket::close()>
  10d2a0:	4628      	mov	r0, r5
  10d2a2:	f000 fc78 	bl	10db96 <rtos::Semaphore::~Semaphore()>
  10d2a6:	f104 0064 	add.w	r0, r4, #100	; 0x64
  10d2aa:	f000 fc74 	bl	10db96 <rtos::Semaphore::~Semaphore()>
  10d2ae:	4620      	mov	r0, r4
  10d2b0:	f7ff fe7c 	bl	10cfac <Socket::~Socket()>
  10d2b4:	4620      	mov	r0, r4
  10d2b6:	bd38      	pop	{r3, r4, r5, pc}
  10d2b8:	00119814 	.word	0x00119814

0010d2bc <TCPSocket::~TCPSocket()>:
  10d2bc:	b510      	push	{r4, lr}
  10d2be:	4604      	mov	r4, r0
  10d2c0:	f7ff ffe6 	bl	10d290 <TCPSocket::~TCPSocket()>
  10d2c4:	4620      	mov	r0, r4
  10d2c6:	f000 fa47 	bl	10d758 <operator delete(void*)>
  10d2ca:	4620      	mov	r0, r4
  10d2cc:	bd10      	pop	{r4, pc}

0010d2ce <mbed::FileBase::getPathType()>:
  10d2ce:	7b00      	ldrb	r0, [r0, #12]
  10d2d0:	4770      	bx	lr
	...

0010d2d4 <mbed::FileBase::FileBase(char const*, mbed::PathType)>:
  10d2d4:	b538      	push	{r3, r4, r5, lr}
  10d2d6:	4604      	mov	r4, r0
  10d2d8:	460d      	mov	r5, r1
  10d2da:	4b0d      	ldr	r3, [pc, #52]	; (10d310 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x3c>)
  10d2dc:	6003      	str	r3, [r0, #0]
  10d2de:	2300      	movs	r3, #0
  10d2e0:	6043      	str	r3, [r0, #4]
  10d2e2:	60a1      	str	r1, [r4, #8]
  10d2e4:	7302      	strb	r2, [r0, #12]
  10d2e6:	480b      	ldr	r0, [pc, #44]	; (10d314 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x40>)
  10d2e8:	f7f8 fb84 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d2ec:	f04f 31ff 	mov.w	r1, #4294967295
  10d2f0:	f000 fbfb 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d2f4:	b125      	cbz	r5, 10d300 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x2c>
  10d2f6:	4b08      	ldr	r3, [pc, #32]	; (10d318 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x44>)
  10d2f8:	681a      	ldr	r2, [r3, #0]
  10d2fa:	601c      	str	r4, [r3, #0]
  10d2fc:	6062      	str	r2, [r4, #4]
  10d2fe:	e000      	b.n	10d302 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x2e>
  10d300:	6065      	str	r5, [r4, #4]
  10d302:	4804      	ldr	r0, [pc, #16]	; (10d314 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x40>)
  10d304:	f7f8 fb76 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d308:	f000 fbf2 	bl	10daf0 <rtos::Mutex::unlock()>
  10d30c:	4620      	mov	r0, r4
  10d30e:	bd38      	pop	{r3, r4, r5, pc}
  10d310:	0011988c 	.word	0x0011988c
  10d314:	3fff8bd8 	.word	0x3fff8bd8
  10d318:	3fff8bd4 	.word	0x3fff8bd4

0010d31c <mbed::FileBase::~FileBase()>:
  10d31c:	b510      	push	{r4, lr}
  10d31e:	4604      	mov	r4, r0
  10d320:	4b12      	ldr	r3, [pc, #72]	; (10d36c <mbed::FileBase::~FileBase()+0x50>)
  10d322:	6003      	str	r3, [r0, #0]
  10d324:	4812      	ldr	r0, [pc, #72]	; (10d370 <mbed::FileBase::~FileBase()+0x54>)
  10d326:	f7f8 fb65 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d32a:	f04f 31ff 	mov.w	r1, #4294967295
  10d32e:	f000 fbdc 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d332:	68a3      	ldr	r3, [r4, #8]
  10d334:	b16b      	cbz	r3, 10d352 <mbed::FileBase::~FileBase()+0x36>
  10d336:	4a0f      	ldr	r2, [pc, #60]	; (10d374 <mbed::FileBase::~FileBase()+0x58>)
  10d338:	6813      	ldr	r3, [r2, #0]
  10d33a:	429c      	cmp	r4, r3
  10d33c:	d102      	bne.n	10d344 <mbed::FileBase::~FileBase()+0x28>
  10d33e:	6863      	ldr	r3, [r4, #4]
  10d340:	6013      	str	r3, [r2, #0]
  10d342:	e006      	b.n	10d352 <mbed::FileBase::~FileBase()+0x36>
  10d344:	685a      	ldr	r2, [r3, #4]
  10d346:	4294      	cmp	r4, r2
  10d348:	d001      	beq.n	10d34e <mbed::FileBase::~FileBase()+0x32>
  10d34a:	4613      	mov	r3, r2
  10d34c:	e7fa      	b.n	10d344 <mbed::FileBase::~FileBase()+0x28>
  10d34e:	6862      	ldr	r2, [r4, #4]
  10d350:	605a      	str	r2, [r3, #4]
  10d352:	4807      	ldr	r0, [pc, #28]	; (10d370 <mbed::FileBase::~FileBase()+0x54>)
  10d354:	f7f8 fb4e 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d358:	f000 fbca 	bl	10daf0 <rtos::Mutex::unlock()>
  10d35c:	7b23      	ldrb	r3, [r4, #12]
  10d35e:	b913      	cbnz	r3, 10d366 <mbed::FileBase::~FileBase()+0x4a>
  10d360:	1f20      	subs	r0, r4, #4
  10d362:	f000 f9fb 	bl	10d75c <mbed::remove_filehandle(mbed::FileHandle*)>
  10d366:	4620      	mov	r0, r4
  10d368:	bd10      	pop	{r4, pc}
  10d36a:	bf00      	nop
  10d36c:	0011988c 	.word	0x0011988c
  10d370:	3fff8bd8 	.word	0x3fff8bd8
  10d374:	3fff8bd4 	.word	0x3fff8bd4

0010d378 <mbed::FileBase::~FileBase()>:
  10d378:	b510      	push	{r4, lr}
  10d37a:	4604      	mov	r4, r0
  10d37c:	f7ff ffce 	bl	10d31c <mbed::FileBase::~FileBase()>
  10d380:	4620      	mov	r0, r4
  10d382:	f000 f9e9 	bl	10d758 <operator delete(void*)>
  10d386:	4620      	mov	r0, r4
  10d388:	bd10      	pop	{r4, pc}
	...

0010d38c <mbed::FileBase::lookup(char const*, unsigned int)>:
  10d38c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10d38e:	4607      	mov	r7, r0
  10d390:	4810      	ldr	r0, [pc, #64]	; (10d3d4 <mbed::FileBase::lookup(char const*, unsigned int)+0x48>)
  10d392:	460e      	mov	r6, r1
  10d394:	f7f8 fb2e 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d398:	f04f 31ff 	mov.w	r1, #4294967295
  10d39c:	f000 fba5 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d3a0:	4b0d      	ldr	r3, [pc, #52]	; (10d3d8 <mbed::FileBase::lookup(char const*, unsigned int)+0x4c>)
  10d3a2:	681c      	ldr	r4, [r3, #0]
  10d3a4:	b174      	cbz	r4, 10d3c4 <mbed::FileBase::lookup(char const*, unsigned int)+0x38>
  10d3a6:	68a5      	ldr	r5, [r4, #8]
  10d3a8:	b155      	cbz	r5, 10d3c0 <mbed::FileBase::lookup(char const*, unsigned int)+0x34>
  10d3aa:	4632      	mov	r2, r6
  10d3ac:	4639      	mov	r1, r7
  10d3ae:	4628      	mov	r0, r5
  10d3b0:	f004 fa01 	bl	1117b6 <strncmp>
  10d3b4:	b920      	cbnz	r0, 10d3c0 <mbed::FileBase::lookup(char const*, unsigned int)+0x34>
  10d3b6:	4628      	mov	r0, r5
  10d3b8:	f004 f9f5 	bl	1117a6 <strlen>
  10d3bc:	4286      	cmp	r6, r0
  10d3be:	d001      	beq.n	10d3c4 <mbed::FileBase::lookup(char const*, unsigned int)+0x38>
  10d3c0:	6864      	ldr	r4, [r4, #4]
  10d3c2:	e7ef      	b.n	10d3a4 <mbed::FileBase::lookup(char const*, unsigned int)+0x18>
  10d3c4:	4803      	ldr	r0, [pc, #12]	; (10d3d4 <mbed::FileBase::lookup(char const*, unsigned int)+0x48>)
  10d3c6:	f7f8 fb15 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d3ca:	f000 fb91 	bl	10daf0 <rtos::Mutex::unlock()>
  10d3ce:	4620      	mov	r0, r4
  10d3d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10d3d2:	bf00      	nop
  10d3d4:	3fff8bd8 	.word	0x3fff8bd8
  10d3d8:	3fff8bd4 	.word	0x3fff8bd4

0010d3dc <mbed::FileHandle::sync()>:
  10d3dc:	2000      	movs	r0, #0
  10d3de:	4770      	bx	lr

0010d3e0 <mbed::FileHandle::isatty()>:
  10d3e0:	2000      	movs	r0, #0
  10d3e2:	4770      	bx	lr

0010d3e4 <mbed::FileHandle::size()>:
  10d3e4:	6803      	ldr	r3, [r0, #0]
  10d3e6:	b570      	push	{r4, r5, r6, lr}
  10d3e8:	691b      	ldr	r3, [r3, #16]
  10d3ea:	2201      	movs	r2, #1
  10d3ec:	2100      	movs	r1, #0
  10d3ee:	4605      	mov	r5, r0
  10d3f0:	4798      	blx	r3
  10d3f2:	1e04      	subs	r4, r0, #0
  10d3f4:	db0e      	blt.n	10d414 <mbed::FileHandle::size()+0x30>
  10d3f6:	682b      	ldr	r3, [r5, #0]
  10d3f8:	2202      	movs	r2, #2
  10d3fa:	691b      	ldr	r3, [r3, #16]
  10d3fc:	2100      	movs	r1, #0
  10d3fe:	4628      	mov	r0, r5
  10d400:	4798      	blx	r3
  10d402:	4606      	mov	r6, r0
  10d404:	682b      	ldr	r3, [r5, #0]
  10d406:	2200      	movs	r2, #0
  10d408:	691b      	ldr	r3, [r3, #16]
  10d40a:	4621      	mov	r1, r4
  10d40c:	4628      	mov	r0, r5
  10d40e:	4798      	blx	r3
  10d410:	4630      	mov	r0, r6
  10d412:	bd70      	pop	{r4, r5, r6, pc}
  10d414:	4620      	mov	r0, r4
  10d416:	bd70      	pop	{r4, r5, r6, pc}

0010d418 <mbed::fdopen(mbed::FileHandle*, char const*)>:
  10d418:	f000 b966 	b.w	10d6e8 <mbed::mbed_fdopen(mbed::FileHandle*, char const*)>

0010d41c <mbed::FilePath::FilePath(char const*)>:
  10d41c:	b510      	push	{r4, lr}
  10d41e:	2300      	movs	r3, #0
  10d420:	6003      	str	r3, [r0, #0]
  10d422:	6043      	str	r3, [r0, #4]
  10d424:	780a      	ldrb	r2, [r1, #0]
  10d426:	4604      	mov	r4, r0
  10d428:	2a2f      	cmp	r2, #47	; 0x2f
  10d42a:	d113      	bne.n	10d454 <mbed::FilePath::FilePath(char const*)+0x38>
  10d42c:	784a      	ldrb	r2, [r1, #1]
  10d42e:	b18a      	cbz	r2, 10d454 <mbed::FilePath::FilePath(char const*)+0x38>
  10d430:	1c48      	adds	r0, r1, #1
  10d432:	4619      	mov	r1, r3
  10d434:	6020      	str	r0, [r4, #0]
  10d436:	6823      	ldr	r3, [r4, #0]
  10d438:	781a      	ldrb	r2, [r3, #0]
  10d43a:	2a2f      	cmp	r2, #47	; 0x2f
  10d43c:	d102      	bne.n	10d444 <mbed::FilePath::FilePath(char const*)+0x28>
  10d43e:	3301      	adds	r3, #1
  10d440:	6023      	str	r3, [r4, #0]
  10d442:	e004      	b.n	10d44e <mbed::FilePath::FilePath(char const*)+0x32>
  10d444:	b11a      	cbz	r2, 10d44e <mbed::FilePath::FilePath(char const*)+0x32>
  10d446:	3301      	adds	r3, #1
  10d448:	3101      	adds	r1, #1
  10d44a:	6023      	str	r3, [r4, #0]
  10d44c:	e7f3      	b.n	10d436 <mbed::FilePath::FilePath(char const*)+0x1a>
  10d44e:	f7ff ff9d 	bl	10d38c <mbed::FileBase::lookup(char const*, unsigned int)>
  10d452:	6060      	str	r0, [r4, #4]
  10d454:	4620      	mov	r0, r4
  10d456:	bd10      	pop	{r4, pc}

0010d458 <mbed::FilePath::fileName()>:
  10d458:	6800      	ldr	r0, [r0, #0]
  10d45a:	4770      	bx	lr

0010d45c <mbed::FilePath::isFileSystem()>:
  10d45c:	6840      	ldr	r0, [r0, #4]
  10d45e:	b508      	push	{r3, lr}
  10d460:	b120      	cbz	r0, 10d46c <mbed::FilePath::isFileSystem()+0x10>
  10d462:	f7ff ff34 	bl	10d2ce <mbed::FileBase::getPathType()>
  10d466:	1e43      	subs	r3, r0, #1
  10d468:	4258      	negs	r0, r3
  10d46a:	4158      	adcs	r0, r3
  10d46c:	bd08      	pop	{r3, pc}

0010d46e <mbed::FilePath::fileSystem()>:
  10d46e:	b510      	push	{r4, lr}
  10d470:	4604      	mov	r4, r0
  10d472:	f7ff fff3 	bl	10d45c <mbed::FilePath::isFileSystem()>
  10d476:	b110      	cbz	r0, 10d47e <mbed::FilePath::fileSystem()+0x10>
  10d478:	6860      	ldr	r0, [r4, #4]
  10d47a:	b100      	cbz	r0, 10d47e <mbed::FilePath::fileSystem()+0x10>
  10d47c:	3804      	subs	r0, #4
  10d47e:	bd10      	pop	{r4, pc}

0010d480 <mbed::FilePath::isFile()>:
  10d480:	6840      	ldr	r0, [r0, #4]
  10d482:	b508      	push	{r3, lr}
  10d484:	b120      	cbz	r0, 10d490 <mbed::FilePath::isFile()+0x10>
  10d486:	f7ff ff22 	bl	10d2ce <mbed::FileBase::getPathType()>
  10d48a:	fab0 f080 	clz	r0, r0
  10d48e:	0940      	lsrs	r0, r0, #5
  10d490:	bd08      	pop	{r3, pc}

0010d492 <mbed::FilePath::file()>:
  10d492:	b510      	push	{r4, lr}
  10d494:	4604      	mov	r4, r0
  10d496:	f7ff fff3 	bl	10d480 <mbed::FilePath::isFile()>
  10d49a:	b110      	cbz	r0, 10d4a2 <mbed::FilePath::file()+0x10>
  10d49c:	6860      	ldr	r0, [r4, #4]
  10d49e:	b100      	cbz	r0, 10d4a2 <mbed::FilePath::file()+0x10>
  10d4a0:	3804      	subs	r0, #4
  10d4a2:	bd10      	pop	{r4, pc}

0010d4a4 <mbed::FilePath::exists()>:
  10d4a4:	6840      	ldr	r0, [r0, #4]
  10d4a6:	3000      	adds	r0, #0
  10d4a8:	bf18      	it	ne
  10d4aa:	2001      	movne	r0, #1
  10d4ac:	4770      	bx	lr

0010d4ae <__wrap__malloc_r>:
  10d4ae:	f002 bd95 	b.w	10ffdc <_malloc_r>

0010d4b2 <__wrap__realloc_r>:
  10d4b2:	f002 bde7 	b.w	110084 <_realloc_r>

0010d4b6 <__wrap__free_r>:
  10d4b6:	f002 bd4d 	b.w	10ff54 <_free_r>

0010d4ba <__wrap__calloc_r>:
  10d4ba:	f002 bd3c 	b.w	10ff36 <_calloc_r>
	...

0010d4c0 <init_serial()>:
  10d4c0:	b508      	push	{r3, lr}
  10d4c2:	4b08      	ldr	r3, [pc, #32]	; (10d4e4 <init_serial()+0x24>)
  10d4c4:	681b      	ldr	r3, [r3, #0]
  10d4c6:	b95b      	cbnz	r3, 10d4e0 <init_serial()+0x20>
  10d4c8:	2108      	movs	r1, #8
  10d4ca:	4807      	ldr	r0, [pc, #28]	; (10d4e8 <init_serial()+0x28>)
  10d4cc:	2209      	movs	r2, #9
  10d4ce:	f7fe fd85 	bl	10bfdc <serial_init>
  10d4d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10d4d6:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
  10d4da:	4803      	ldr	r0, [pc, #12]	; (10d4e8 <init_serial()+0x28>)
  10d4dc:	f7fe be4a 	b.w	10c174 <serial_baud>
  10d4e0:	bd08      	pop	{r3, pc}
  10d4e2:	bf00      	nop
  10d4e4:	3fff8b60 	.word	0x3fff8b60
  10d4e8:	3fff9f0c 	.word	0x3fff9f0c

0010d4ec <_close>:
  10d4ec:	2802      	cmp	r0, #2
  10d4ee:	b510      	push	{r4, lr}
  10d4f0:	dc01      	bgt.n	10d4f6 <_close+0xa>
  10d4f2:	2000      	movs	r0, #0
  10d4f4:	bd10      	pop	{r4, pc}
  10d4f6:	4a0c      	ldr	r2, [pc, #48]	; (10d528 <_close+0x3c>)
  10d4f8:	1ec3      	subs	r3, r0, #3
  10d4fa:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
  10d4fe:	2100      	movs	r1, #0
  10d500:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
  10d504:	b920      	cbnz	r0, 10d510 <_close+0x24>
  10d506:	f002 f96f 	bl	10f7e8 <__errno>
  10d50a:	2309      	movs	r3, #9
  10d50c:	6003      	str	r3, [r0, #0]
  10d50e:	e008      	b.n	10d522 <_close+0x36>
  10d510:	6803      	ldr	r3, [r0, #0]
  10d512:	695b      	ldr	r3, [r3, #20]
  10d514:	4798      	blx	r3
  10d516:	1e04      	subs	r4, r0, #0
  10d518:	daeb      	bge.n	10d4f2 <_close+0x6>
  10d51a:	f002 f965 	bl	10f7e8 <__errno>
  10d51e:	4264      	negs	r4, r4
  10d520:	6004      	str	r4, [r0, #0]
  10d522:	f04f 30ff 	mov.w	r0, #4294967295
  10d526:	bd10      	pop	{r4, pc}
  10d528:	3fff8c44 	.word	0x3fff8c44

0010d52c <_write>:
  10d52c:	2802      	cmp	r0, #2
  10d52e:	b570      	push	{r4, r5, r6, lr}
  10d530:	460d      	mov	r5, r1
  10d532:	4614      	mov	r4, r2
  10d534:	dc0d      	bgt.n	10d552 <_write+0x26>
  10d536:	4b12      	ldr	r3, [pc, #72]	; (10d580 <_write+0x54>)
  10d538:	681b      	ldr	r3, [r3, #0]
  10d53a:	b90b      	cbnz	r3, 10d540 <_write+0x14>
  10d53c:	f7ff ffc0 	bl	10d4c0 <init_serial()>
  10d540:	192e      	adds	r6, r5, r4
  10d542:	42b5      	cmp	r5, r6
  10d544:	d01a      	beq.n	10d57c <_write+0x50>
  10d546:	f815 1b01 	ldrb.w	r1, [r5], #1
  10d54a:	480e      	ldr	r0, [pc, #56]	; (10d584 <_write+0x58>)
  10d54c:	f7fe fe3d 	bl	10c1ca <serial_putc>
  10d550:	e7f7      	b.n	10d542 <_write+0x16>
  10d552:	4b0d      	ldr	r3, [pc, #52]	; (10d588 <_write+0x5c>)
  10d554:	3803      	subs	r0, #3
  10d556:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
  10d55a:	b930      	cbnz	r0, 10d56a <_write+0x3e>
  10d55c:	f002 f944 	bl	10f7e8 <__errno>
  10d560:	2309      	movs	r3, #9
  10d562:	6003      	str	r3, [r0, #0]
  10d564:	f04f 30ff 	mov.w	r0, #4294967295
  10d568:	bd70      	pop	{r4, r5, r6, pc}
  10d56a:	6803      	ldr	r3, [r0, #0]
  10d56c:	68db      	ldr	r3, [r3, #12]
  10d56e:	4798      	blx	r3
  10d570:	1e04      	subs	r4, r0, #0
  10d572:	da03      	bge.n	10d57c <_write+0x50>
  10d574:	f002 f938 	bl	10f7e8 <__errno>
  10d578:	4263      	negs	r3, r4
  10d57a:	6003      	str	r3, [r0, #0]
  10d57c:	4620      	mov	r0, r4
  10d57e:	bd70      	pop	{r4, r5, r6, pc}
  10d580:	3fff8b60 	.word	0x3fff8b60
  10d584:	3fff9f0c 	.word	0x3fff9f0c
  10d588:	3fff8c44 	.word	0x3fff8c44

0010d58c <_read>:
  10d58c:	2802      	cmp	r0, #2
  10d58e:	b510      	push	{r4, lr}
  10d590:	460c      	mov	r4, r1
  10d592:	dc0a      	bgt.n	10d5aa <_read+0x1e>
  10d594:	4b10      	ldr	r3, [pc, #64]	; (10d5d8 <_read+0x4c>)
  10d596:	681b      	ldr	r3, [r3, #0]
  10d598:	b90b      	cbnz	r3, 10d59e <_read+0x12>
  10d59a:	f7ff ff91 	bl	10d4c0 <init_serial()>
  10d59e:	480f      	ldr	r0, [pc, #60]	; (10d5dc <_read+0x50>)
  10d5a0:	f7fe fe0c 	bl	10c1bc <serial_getc>
  10d5a4:	7020      	strb	r0, [r4, #0]
  10d5a6:	2001      	movs	r0, #1
  10d5a8:	bd10      	pop	{r4, pc}
  10d5aa:	4b0d      	ldr	r3, [pc, #52]	; (10d5e0 <_read+0x54>)
  10d5ac:	3803      	subs	r0, #3
  10d5ae:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
  10d5b2:	b930      	cbnz	r0, 10d5c2 <_read+0x36>
  10d5b4:	f002 f918 	bl	10f7e8 <__errno>
  10d5b8:	2309      	movs	r3, #9
  10d5ba:	6003      	str	r3, [r0, #0]
  10d5bc:	f04f 30ff 	mov.w	r0, #4294967295
  10d5c0:	bd10      	pop	{r4, pc}
  10d5c2:	6803      	ldr	r3, [r0, #0]
  10d5c4:	689b      	ldr	r3, [r3, #8]
  10d5c6:	4798      	blx	r3
  10d5c8:	1e04      	subs	r4, r0, #0
  10d5ca:	da03      	bge.n	10d5d4 <_read+0x48>
  10d5cc:	f002 f90c 	bl	10f7e8 <__errno>
  10d5d0:	4263      	negs	r3, r4
  10d5d2:	6003      	str	r3, [r0, #0]
  10d5d4:	4620      	mov	r0, r4
  10d5d6:	bd10      	pop	{r4, pc}
  10d5d8:	3fff8b60 	.word	0x3fff8b60
  10d5dc:	3fff9f0c 	.word	0x3fff9f0c
  10d5e0:	3fff8c44 	.word	0x3fff8c44

0010d5e4 <_isatty>:
  10d5e4:	2802      	cmp	r0, #2
  10d5e6:	b510      	push	{r4, lr}
  10d5e8:	dd15      	ble.n	10d616 <_isatty+0x32>
  10d5ea:	4b0d      	ldr	r3, [pc, #52]	; (10d620 <_isatty+0x3c>)
  10d5ec:	3803      	subs	r0, #3
  10d5ee:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
  10d5f2:	b924      	cbnz	r4, 10d5fe <_isatty+0x1a>
  10d5f4:	f002 f8f8 	bl	10f7e8 <__errno>
  10d5f8:	2309      	movs	r3, #9
  10d5fa:	6003      	str	r3, [r0, #0]
  10d5fc:	e00d      	b.n	10d61a <_isatty+0x36>
  10d5fe:	6823      	ldr	r3, [r4, #0]
  10d600:	4620      	mov	r0, r4
  10d602:	69db      	ldr	r3, [r3, #28]
  10d604:	4798      	blx	r3
  10d606:	1e04      	subs	r4, r0, #0
  10d608:	da07      	bge.n	10d61a <_isatty+0x36>
  10d60a:	f002 f8ed 	bl	10f7e8 <__errno>
  10d60e:	4264      	negs	r4, r4
  10d610:	6004      	str	r4, [r0, #0]
  10d612:	2000      	movs	r0, #0
  10d614:	bd10      	pop	{r4, pc}
  10d616:	2001      	movs	r0, #1
  10d618:	bd10      	pop	{r4, pc}
  10d61a:	4620      	mov	r0, r4
  10d61c:	bd10      	pop	{r4, pc}
  10d61e:	bf00      	nop
  10d620:	3fff8c44 	.word	0x3fff8c44

0010d624 <_lseek>:
  10d624:	2802      	cmp	r0, #2
  10d626:	b510      	push	{r4, lr}
  10d628:	dc03      	bgt.n	10d632 <_lseek+0xe>
  10d62a:	f002 f8dd 	bl	10f7e8 <__errno>
  10d62e:	231d      	movs	r3, #29
  10d630:	e007      	b.n	10d642 <_lseek+0x1e>
  10d632:	4b0c      	ldr	r3, [pc, #48]	; (10d664 <_lseek+0x40>)
  10d634:	3803      	subs	r0, #3
  10d636:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
  10d63a:	b920      	cbnz	r0, 10d646 <_lseek+0x22>
  10d63c:	f002 f8d4 	bl	10f7e8 <__errno>
  10d640:	2309      	movs	r3, #9
  10d642:	6003      	str	r3, [r0, #0]
  10d644:	e008      	b.n	10d658 <_lseek+0x34>
  10d646:	6803      	ldr	r3, [r0, #0]
  10d648:	691b      	ldr	r3, [r3, #16]
  10d64a:	4798      	blx	r3
  10d64c:	1e04      	subs	r4, r0, #0
  10d64e:	da06      	bge.n	10d65e <_lseek+0x3a>
  10d650:	f002 f8ca 	bl	10f7e8 <__errno>
  10d654:	4264      	negs	r4, r4
  10d656:	6004      	str	r4, [r0, #0]
  10d658:	f04f 30ff 	mov.w	r0, #4294967295
  10d65c:	bd10      	pop	{r4, pc}
  10d65e:	4620      	mov	r0, r4
  10d660:	bd10      	pop	{r4, pc}
  10d662:	bf00      	nop
  10d664:	3fff8c44 	.word	0x3fff8c44

0010d668 <_fstat>:
  10d668:	2802      	cmp	r0, #2
  10d66a:	b508      	push	{r3, lr}
  10d66c:	dc04      	bgt.n	10d678 <_fstat+0x10>
  10d66e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  10d672:	604b      	str	r3, [r1, #4]
  10d674:	2000      	movs	r0, #0
  10d676:	bd08      	pop	{r3, pc}
  10d678:	f002 f8b6 	bl	10f7e8 <__errno>
  10d67c:	2309      	movs	r3, #9
  10d67e:	6003      	str	r3, [r0, #0]
  10d680:	f04f 30ff 	mov.w	r0, #4294967295
  10d684:	bd08      	pop	{r3, pc}
	...

0010d688 <_sbrk>:
  10d688:	4a0c      	ldr	r2, [pc, #48]	; (10d6bc <_sbrk+0x34>)
  10d68a:	b510      	push	{r4, lr}
  10d68c:	6813      	ldr	r3, [r2, #0]
  10d68e:	4418      	add	r0, r3
  10d690:	f3ef 8108 	mrs	r1, MSP
  10d694:	4288      	cmp	r0, r1
  10d696:	d305      	bcc.n	10d6a4 <_sbrk+0x1c>
  10d698:	4b09      	ldr	r3, [pc, #36]	; (10d6c0 <_sbrk+0x38>)
  10d69a:	220c      	movs	r2, #12
  10d69c:	601a      	str	r2, [r3, #0]
  10d69e:	f04f 30ff 	mov.w	r0, #4294967295
  10d6a2:	bd10      	pop	{r4, pc}
  10d6a4:	4907      	ldr	r1, [pc, #28]	; (10d6c4 <_sbrk+0x3c>)
  10d6a6:	6809      	ldr	r1, [r1, #0]
  10d6a8:	b121      	cbz	r1, 10d6b4 <_sbrk+0x2c>
  10d6aa:	4c07      	ldr	r4, [pc, #28]	; (10d6c8 <_sbrk+0x40>)
  10d6ac:	6824      	ldr	r4, [r4, #0]
  10d6ae:	4421      	add	r1, r4
  10d6b0:	4288      	cmp	r0, r1
  10d6b2:	d2f1      	bcs.n	10d698 <_sbrk+0x10>
  10d6b4:	6010      	str	r0, [r2, #0]
  10d6b6:	4618      	mov	r0, r3
  10d6b8:	bd10      	pop	{r4, pc}
  10d6ba:	bf00      	nop
  10d6bc:	3fff41fc 	.word	0x3fff41fc
  10d6c0:	3fff9f18 	.word	0x3fff9f18
  10d6c4:	3fff8c40 	.word	0x3fff8c40
  10d6c8:	3fff8d44 	.word	0x3fff8d44

0010d6cc <_exit>:
  10d6cc:	b508      	push	{r3, lr}
  10d6ce:	b108      	cbz	r0, 10d6d4 <_exit+0x8>
  10d6d0:	f7fb f878 	bl	1087c4 <mbed_die>
  10d6d4:	e7fe      	b.n	10d6d4 <_exit+0x8>

0010d6d6 <__aeabi_atexit>:
  10d6d6:	2001      	movs	r0, #1
  10d6d8:	4770      	bx	lr

0010d6da <__wrap_exit>:
  10d6da:	b508      	push	{r3, lr}
  10d6dc:	f7ff fff6 	bl	10d6cc <_exit>

0010d6e0 <mbed::mbed_set_unbuffered_stream(__sFILE*)>:
  10d6e0:	2100      	movs	r1, #0
  10d6e2:	f003 bef5 	b.w	1114d0 <setbuf>
	...

0010d6e8 <mbed::mbed_fdopen(mbed::FileHandle*, char const*)>:
  10d6e8:	b530      	push	{r4, r5, lr}
  10d6ea:	460c      	mov	r4, r1
  10d6ec:	b085      	sub	sp, #20
  10d6ee:	4602      	mov	r2, r0
  10d6f0:	490a      	ldr	r1, [pc, #40]	; (10d71c <mbed::mbed_fdopen(mbed::FileHandle*, char const*)+0x34>)
  10d6f2:	4605      	mov	r5, r0
  10d6f4:	a801      	add	r0, sp, #4
  10d6f6:	f003 ffb1 	bl	11165c <siprintf>
  10d6fa:	4621      	mov	r1, r4
  10d6fc:	a801      	add	r0, sp, #4
  10d6fe:	f002 fa83 	bl	10fc08 <fopen>
  10d702:	4604      	mov	r4, r0
  10d704:	b138      	cbz	r0, 10d716 <mbed::mbed_fdopen(mbed::FileHandle*, char const*)+0x2e>
  10d706:	682b      	ldr	r3, [r5, #0]
  10d708:	4628      	mov	r0, r5
  10d70a:	69db      	ldr	r3, [r3, #28]
  10d70c:	4798      	blx	r3
  10d70e:	b110      	cbz	r0, 10d716 <mbed::mbed_fdopen(mbed::FileHandle*, char const*)+0x2e>
  10d710:	4620      	mov	r0, r4
  10d712:	f7ff ffe5 	bl	10d6e0 <mbed::mbed_set_unbuffered_stream(__sFILE*)>
  10d716:	4620      	mov	r0, r4
  10d718:	b005      	add	sp, #20
  10d71a:	bd30      	pop	{r4, r5, pc}
  10d71c:	001198f9 	.word	0x001198f9

0010d720 <operator new(unsigned int)>:
  10d720:	b510      	push	{r4, lr}
  10d722:	f002 fbad 	bl	10fe80 <malloc>
  10d726:	4604      	mov	r4, r0
  10d728:	b910      	cbnz	r0, 10d730 <operator new(unsigned int)+0x10>
  10d72a:	4802      	ldr	r0, [pc, #8]	; (10d734 <operator new(unsigned int)+0x14>)
  10d72c:	f7fb f8da 	bl	1088e4 <error>
  10d730:	4620      	mov	r0, r4
  10d732:	bd10      	pop	{r4, pc}
  10d734:	00119994 	.word	0x00119994

0010d738 <operator new[](unsigned int)>:
  10d738:	b510      	push	{r4, lr}
  10d73a:	f002 fba1 	bl	10fe80 <malloc>
  10d73e:	4604      	mov	r4, r0
  10d740:	b910      	cbnz	r0, 10d748 <operator new[](unsigned int)+0x10>
  10d742:	4802      	ldr	r0, [pc, #8]	; (10d74c <operator new[](unsigned int)+0x14>)
  10d744:	f7fb f8ce 	bl	1088e4 <error>
  10d748:	4620      	mov	r0, r4
  10d74a:	bd10      	pop	{r4, pc}
  10d74c:	001199b1 	.word	0x001199b1

0010d750 <operator delete[](void*)>:
  10d750:	b108      	cbz	r0, 10d756 <operator delete[](void*)+0x6>
  10d752:	f002 bb9d 	b.w	10fe90 <free>
  10d756:	4770      	bx	lr

0010d758 <operator delete(void*)>:
  10d758:	f7ff bffa 	b.w	10d750 <operator delete[](void*)>

0010d75c <mbed::remove_filehandle(mbed::FileHandle*)>:
  10d75c:	b510      	push	{r4, lr}
  10d75e:	4604      	mov	r4, r0
  10d760:	480c      	ldr	r0, [pc, #48]	; (10d794 <mbed::remove_filehandle(mbed::FileHandle*)+0x38>)
  10d762:	f7f8 f947 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d766:	f04f 31ff 	mov.w	r1, #4294967295
  10d76a:	f000 f9be 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d76e:	2300      	movs	r3, #0
  10d770:	4619      	mov	r1, r3
  10d772:	4a09      	ldr	r2, [pc, #36]	; (10d798 <mbed::remove_filehandle(mbed::FileHandle*)+0x3c>)
  10d774:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
  10d778:	42a0      	cmp	r0, r4
  10d77a:	bf08      	it	eq
  10d77c:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
  10d780:	3301      	adds	r3, #1
  10d782:	2b40      	cmp	r3, #64	; 0x40
  10d784:	d1f6      	bne.n	10d774 <mbed::remove_filehandle(mbed::FileHandle*)+0x18>
  10d786:	4803      	ldr	r0, [pc, #12]	; (10d794 <mbed::remove_filehandle(mbed::FileHandle*)+0x38>)
  10d788:	f7f8 f934 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d78c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10d790:	f000 b9ae 	b.w	10daf0 <rtos::Mutex::unlock()>
  10d794:	3fff8c0c 	.word	0x3fff8c0c
  10d798:	3fff8c44 	.word	0x3fff8c44

0010d79c <_open>:
  10d79c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
  10d7a0:	4689      	mov	r9, r1
  10d7a2:	4944      	ldr	r1, [pc, #272]	; (10d8b4 <_open+0x118>)
  10d7a4:	4605      	mov	r5, r0
  10d7a6:	f003 ffec 	bl	111782 <strcmp>
  10d7aa:	4604      	mov	r4, r0
  10d7ac:	b910      	cbnz	r0, 10d7b4 <_open+0x18>
  10d7ae:	f7ff fe87 	bl	10d4c0 <init_serial()>
  10d7b2:	e07b      	b.n	10d8ac <_open+0x110>
  10d7b4:	4940      	ldr	r1, [pc, #256]	; (10d8b8 <_open+0x11c>)
  10d7b6:	4628      	mov	r0, r5
  10d7b8:	f003 ffe3 	bl	111782 <strcmp>
  10d7bc:	b918      	cbnz	r0, 10d7c6 <_open+0x2a>
  10d7be:	f7ff fe7f 	bl	10d4c0 <init_serial()>
  10d7c2:	2401      	movs	r4, #1
  10d7c4:	e072      	b.n	10d8ac <_open+0x110>
  10d7c6:	493d      	ldr	r1, [pc, #244]	; (10d8bc <_open+0x120>)
  10d7c8:	4628      	mov	r0, r5
  10d7ca:	f003 ffda 	bl	111782 <strcmp>
  10d7ce:	b918      	cbnz	r0, 10d7d8 <_open+0x3c>
  10d7d0:	f7ff fe76 	bl	10d4c0 <init_serial()>
  10d7d4:	2402      	movs	r4, #2
  10d7d6:	e069      	b.n	10d8ac <_open+0x110>
  10d7d8:	4839      	ldr	r0, [pc, #228]	; (10d8c0 <_open+0x124>)
  10d7da:	f7f8 f90b 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d7de:	f04f 31ff 	mov.w	r1, #4294967295
  10d7e2:	f000 f982 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10d7e6:	4b37      	ldr	r3, [pc, #220]	; (10d8c4 <_open+0x128>)
  10d7e8:	2400      	movs	r4, #0
  10d7ea:	4e36      	ldr	r6, [pc, #216]	; (10d8c4 <_open+0x128>)
  10d7ec:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
  10d7f0:	46b0      	mov	r8, r6
  10d7f2:	b167      	cbz	r7, 10d80e <_open+0x72>
  10d7f4:	3401      	adds	r4, #1
  10d7f6:	2c40      	cmp	r4, #64	; 0x40
  10d7f8:	d1f7      	bne.n	10d7ea <_open+0x4e>
  10d7fa:	f001 fff5 	bl	10f7e8 <__errno>
  10d7fe:	2318      	movs	r3, #24
  10d800:	6003      	str	r3, [r0, #0]
  10d802:	482f      	ldr	r0, [pc, #188]	; (10d8c0 <_open+0x124>)
  10d804:	f7f8 f8f6 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d808:	f000 f972 	bl	10daf0 <rtos::Mutex::unlock()>
  10d80c:	e04c      	b.n	10d8a8 <_open+0x10c>
  10d80e:	f04f 33ff 	mov.w	r3, #4294967295
  10d812:	482b      	ldr	r0, [pc, #172]	; (10d8c0 <_open+0x124>)
  10d814:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
  10d818:	f7f8 f8ec 	bl	1059f4 <SingletonPtr<rtos::Mutex>::get()>
  10d81c:	f000 f968 	bl	10daf0 <rtos::Mutex::unlock()>
  10d820:	782b      	ldrb	r3, [r5, #0]
  10d822:	9701      	str	r7, [sp, #4]
  10d824:	2b3a      	cmp	r3, #58	; 0x3a
  10d826:	d107      	bne.n	10d838 <_open+0x9c>
  10d828:	aa02      	add	r2, sp, #8
  10d82a:	4927      	ldr	r1, [pc, #156]	; (10d8c8 <_open+0x12c>)
  10d82c:	4628      	mov	r0, r5
  10d82e:	f003 ff39 	bl	1116a4 <siscanf>
  10d832:	9b02      	ldr	r3, [sp, #8]
  10d834:	9301      	str	r3, [sp, #4]
  10d836:	e032      	b.n	10d89e <_open+0x102>
  10d838:	4629      	mov	r1, r5
  10d83a:	a802      	add	r0, sp, #8
  10d83c:	f7ff fdee 	bl	10d41c <mbed::FilePath::FilePath(char const*)>
  10d840:	a802      	add	r0, sp, #8
  10d842:	f7ff fe2f 	bl	10d4a4 <mbed::FilePath::exists()>
  10d846:	4605      	mov	r5, r0
  10d848:	b168      	cbz	r0, 10d866 <_open+0xca>
  10d84a:	a802      	add	r0, sp, #8
  10d84c:	f7ff fe18 	bl	10d480 <mbed::FilePath::isFile()>
  10d850:	4607      	mov	r7, r0
  10d852:	a802      	add	r0, sp, #8
  10d854:	b11f      	cbz	r7, 10d85e <_open+0xc2>
  10d856:	f7ff fe1c 	bl	10d492 <mbed::FilePath::file()>
  10d85a:	9001      	str	r0, [sp, #4]
  10d85c:	e01f      	b.n	10d89e <_open+0x102>
  10d85e:	f7ff fe06 	bl	10d46e <mbed::FilePath::fileSystem()>
  10d862:	4605      	mov	r5, r0
  10d864:	b930      	cbnz	r0, 10d874 <_open+0xd8>
  10d866:	f001 ffbf 	bl	10f7e8 <__errno>
  10d86a:	2302      	movs	r3, #2
  10d86c:	6003      	str	r3, [r0, #0]
  10d86e:	f846 5024 	str.w	r5, [r6, r4, lsl #2]
  10d872:	e019      	b.n	10d8a8 <_open+0x10c>
  10d874:	6803      	ldr	r3, [r0, #0]
  10d876:	a802      	add	r0, sp, #8
  10d878:	f8d3 a008 	ldr.w	r10, [r3, #8]
  10d87c:	f7ff fdec 	bl	10d458 <mbed::FilePath::fileName()>
  10d880:	f429 3380 	bic.w	r3, r9, #65536	; 0x10000
  10d884:	4602      	mov	r2, r0
  10d886:	a901      	add	r1, sp, #4
  10d888:	4628      	mov	r0, r5
  10d88a:	47d0      	blx	r10
  10d88c:	4605      	mov	r5, r0
  10d88e:	b130      	cbz	r0, 10d89e <_open+0x102>
  10d890:	f001 ffaa 	bl	10f7e8 <__errno>
  10d894:	426d      	negs	r5, r5
  10d896:	6005      	str	r5, [r0, #0]
  10d898:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
  10d89c:	e004      	b.n	10d8a8 <_open+0x10c>
  10d89e:	9b01      	ldr	r3, [sp, #4]
  10d8a0:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
  10d8a4:	3403      	adds	r4, #3
  10d8a6:	e001      	b.n	10d8ac <_open+0x110>
  10d8a8:	f04f 34ff 	mov.w	r4, #4294967295
  10d8ac:	4620      	mov	r0, r4
  10d8ae:	b004      	add	sp, #16
  10d8b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  10d8b4:	001198e0 	.word	0x001198e0
  10d8b8:	001199ff 	.word	0x001199ff
  10d8bc:	001198e7 	.word	0x001198e7
  10d8c0:	3fff8c0c 	.word	0x3fff8c0c
  10d8c4:	3fff8c44 	.word	0x3fff8c44
  10d8c8:	001198f9 	.word	0x001198f9

0010d8cc <wait_us>:
  10d8cc:	b570      	push	{r4, r5, r6, lr}
  10d8ce:	4605      	mov	r5, r0
  10d8d0:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
  10d8d4:	f7fd ffec 	bl	10b8b0 <us_ticker_read>
  10d8d8:	fb95 f4f4 	sdiv	r4, r5, r4
  10d8dc:	2c00      	cmp	r4, #0
  10d8de:	4606      	mov	r6, r0
  10d8e0:	dd02      	ble.n	10d8e8 <wait_us+0x1c>
  10d8e2:	f7fa ffae 	bl	108842 <core_util_are_interrupts_enabled>
  10d8e6:	b928      	cbnz	r0, 10d8f4 <wait_us+0x28>
  10d8e8:	f7fd ffe2 	bl	10b8b0 <us_ticker_read>
  10d8ec:	1b80      	subs	r0, r0, r6
  10d8ee:	42a8      	cmp	r0, r5
  10d8f0:	d3fa      	bcc.n	10d8e8 <wait_us+0x1c>
  10d8f2:	bd70      	pop	{r4, r5, r6, pc}
  10d8f4:	4620      	mov	r0, r4
  10d8f6:	f000 f9ea 	bl	10dcce <rtos::Thread::wait(unsigned long)>
  10d8fa:	e7f5      	b.n	10d8e8 <wait_us+0x1c>

0010d8fc <wait>:
  10d8fc:	b508      	push	{r3, lr}
  10d8fe:	4904      	ldr	r1, [pc, #16]	; (10d910 <wait+0x14>)
  10d900:	f001 fc42 	bl	10f188 <__aeabi_fmul>
  10d904:	f001 fd90 	bl	10f428 <__aeabi_f2iz>
  10d908:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10d90c:	f7ff bfde 	b.w	10d8cc <wait_us>
  10d910:	49742400 	.word	0x49742400

0010d914 <wait_ms>:
  10d914:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
  10d918:	4358      	muls	r0, r3
  10d91a:	f7ff bfd7 	b.w	10d8cc <wait_us>

0010d91e <mbed::Stream::lock()>:
  10d91e:	4770      	bx	lr

0010d920 <mbed::Stream::unlock()>:
  10d920:	4770      	bx	lr

0010d922 <mbed::Stream::write(void const*, unsigned int)>:
  10d922:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10d924:	460e      	mov	r6, r1
  10d926:	6803      	ldr	r3, [r0, #0]
  10d928:	4604      	mov	r4, r0
  10d92a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
  10d92c:	188f      	adds	r7, r1, r2
  10d92e:	4635      	mov	r5, r6
  10d930:	4798      	blx	r3
  10d932:	42bd      	cmp	r5, r7
  10d934:	d008      	beq.n	10d948 <mbed::Stream::write(void const*, unsigned int)+0x26>
  10d936:	6823      	ldr	r3, [r4, #0]
  10d938:	f815 1b01 	ldrb.w	r1, [r5], #1
  10d93c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
  10d93e:	4620      	mov	r0, r4
  10d940:	4798      	blx	r3
  10d942:	3001      	adds	r0, #1
  10d944:	d1f5      	bne.n	10d932 <mbed::Stream::write(void const*, unsigned int)+0x10>
  10d946:	462f      	mov	r7, r5
  10d948:	6823      	ldr	r3, [r4, #0]
  10d94a:	4620      	mov	r0, r4
  10d94c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
  10d94e:	4798      	blx	r3
  10d950:	1bb8      	subs	r0, r7, r6
  10d952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0010d954 <mbed::Stream::read(void*, unsigned int)>:
  10d954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10d956:	460e      	mov	r6, r1
  10d958:	6803      	ldr	r3, [r0, #0]
  10d95a:	4604      	mov	r4, r0
  10d95c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
  10d95e:	188f      	adds	r7, r1, r2
  10d960:	4635      	mov	r5, r6
  10d962:	4798      	blx	r3
  10d964:	42bd      	cmp	r5, r7
  10d966:	d008      	beq.n	10d97a <mbed::Stream::read(void*, unsigned int)+0x26>
  10d968:	6823      	ldr	r3, [r4, #0]
  10d96a:	4620      	mov	r0, r4
  10d96c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
  10d96e:	4798      	blx	r3
  10d970:	1c43      	adds	r3, r0, #1
  10d972:	d002      	beq.n	10d97a <mbed::Stream::read(void*, unsigned int)+0x26>
  10d974:	f805 0b01 	strb.w	r0, [r5], #1
  10d978:	e7f4      	b.n	10d964 <mbed::Stream::read(void*, unsigned int)+0x10>
  10d97a:	6823      	ldr	r3, [r4, #0]
  10d97c:	4620      	mov	r0, r4
  10d97e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
  10d980:	4798      	blx	r3
  10d982:	1ba8      	subs	r0, r5, r6
  10d984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0010d986 <mbed::Stream::seek(long, int)>:
  10d986:	2000      	movs	r0, #0
  10d988:	4770      	bx	lr

0010d98a <mbed::Stream::rewind()>:
  10d98a:	4770      	bx	lr

0010d98c <mbed::Stream::sync()>:
  10d98c:	2000      	movs	r0, #0
  10d98e:	4770      	bx	lr

0010d990 <mbed::Stream::size()>:
  10d990:	2000      	movs	r0, #0
  10d992:	4770      	bx	lr

0010d994 <mbed::FileLike::~FileLike()>:
  10d994:	b510      	push	{r4, lr}
  10d996:	4604      	mov	r4, r0
  10d998:	4b04      	ldr	r3, [pc, #16]	; (10d9ac <mbed::FileLike::~FileLike()+0x18>)
  10d99a:	6003      	str	r3, [r0, #0]
  10d99c:	334c      	adds	r3, #76	; 0x4c
  10d99e:	f840 3f04 	str.w	r3, [r0, #4]!
  10d9a2:	f7ff fcbb 	bl	10d31c <mbed::FileBase::~FileBase()>
  10d9a6:	4620      	mov	r0, r4
  10d9a8:	bd10      	pop	{r4, pc}
  10d9aa:	bf00      	nop
  10d9ac:	00119a10 	.word	0x00119a10

0010d9b0 <non-virtual thunk to mbed::FileLike::~FileLike()>:
  10d9b0:	f1a0 0004 	sub.w	r0, r0, #4
  10d9b4:	e7ee      	b.n	10d994 <mbed::FileLike::~FileLike()>
  10d9b6:	bf00      	nop

0010d9b8 <mbed::FileLike::~FileLike()>:
  10d9b8:	b510      	push	{r4, lr}
  10d9ba:	4604      	mov	r4, r0
  10d9bc:	f7ff ffea 	bl	10d994 <mbed::FileLike::~FileLike()>
  10d9c0:	4620      	mov	r0, r4
  10d9c2:	f7ff fec9 	bl	10d758 <operator delete(void*)>
  10d9c6:	4620      	mov	r0, r4
  10d9c8:	bd10      	pop	{r4, pc}

0010d9ca <non-virtual thunk to mbed::FileLike::~FileLike()>:
  10d9ca:	f1a0 0004 	sub.w	r0, r0, #4
  10d9ce:	e7f3      	b.n	10d9b8 <mbed::FileLike::~FileLike()>

0010d9d0 <mbed::Stream::Stream(char const*)>:
  10d9d0:	b510      	push	{r4, lr}
  10d9d2:	4604      	mov	r4, r0
  10d9d4:	4b0e      	ldr	r3, [pc, #56]	; (10da10 <mbed::Stream::Stream(char const*)+0x40>)
  10d9d6:	2200      	movs	r2, #0
  10d9d8:	f840 3b04 	str.w	r3, [r0], #4
  10d9dc:	f7ff fc7a 	bl	10d2d4 <mbed::FileBase::FileBase(char const*, mbed::PathType)>
  10d9e0:	4b0c      	ldr	r3, [pc, #48]	; (10da14 <mbed::Stream::Stream(char const*)+0x44>)
  10d9e2:	490d      	ldr	r1, [pc, #52]	; (10da18 <mbed::Stream::Stream(char const*)+0x48>)
  10d9e4:	6023      	str	r3, [r4, #0]
  10d9e6:	335c      	adds	r3, #92	; 0x5c
  10d9e8:	6063      	str	r3, [r4, #4]
  10d9ea:	2300      	movs	r3, #0
  10d9ec:	6163      	str	r3, [r4, #20]
  10d9ee:	4620      	mov	r0, r4
  10d9f0:	f7ff fd12 	bl	10d418 <mbed::fdopen(mbed::FileHandle*, char const*)>
  10d9f4:	6160      	str	r0, [r4, #20]
  10d9f6:	b110      	cbz	r0, 10d9fe <mbed::Stream::Stream(char const*)+0x2e>
  10d9f8:	f7ff fe72 	bl	10d6e0 <mbed::mbed_set_unbuffered_stream(__sFILE*)>
  10d9fc:	e005      	b.n	10da0a <mbed::Stream::Stream(char const*)+0x3a>
  10d9fe:	f001 fef3 	bl	10f7e8 <__errno>
  10da02:	6801      	ldr	r1, [r0, #0]
  10da04:	4805      	ldr	r0, [pc, #20]	; (10da1c <mbed::Stream::Stream(char const*)+0x4c>)
  10da06:	f7fa ff6d 	bl	1088e4 <error>
  10da0a:	4620      	mov	r0, r4
  10da0c:	bd10      	pop	{r4, pc}
  10da0e:	bf00      	nop
  10da10:	0011989c 	.word	0x0011989c
  10da14:	00119a6c 	.word	0x00119a6c
  10da18:	00119ad0 	.word	0x00119ad0
  10da1c:	00119ad3 	.word	0x00119ad3

0010da20 <mbed::Stream::~Stream()>:
  10da20:	b510      	push	{r4, lr}
  10da22:	4604      	mov	r4, r0
  10da24:	4b06      	ldr	r3, [pc, #24]	; (10da40 <mbed::Stream::~Stream()+0x20>)
  10da26:	f103 0208 	add.w	r2, r3, #8
  10da2a:	3364      	adds	r3, #100	; 0x64
  10da2c:	6002      	str	r2, [r0, #0]
  10da2e:	6043      	str	r3, [r0, #4]
  10da30:	6940      	ldr	r0, [r0, #20]
  10da32:	f001 ff31 	bl	10f898 <fclose>
  10da36:	4620      	mov	r0, r4
  10da38:	f7ff ffac 	bl	10d994 <mbed::FileLike::~FileLike()>
  10da3c:	4620      	mov	r0, r4
  10da3e:	bd10      	pop	{r4, pc}
  10da40:	00119a64 	.word	0x00119a64

0010da44 <mbed::Stream::printf(char const*, ...)>:
  10da44:	b40e      	push	{r1, r2, r3}
  10da46:	b577      	push	{r0, r1, r2, r4, r5, r6, lr}
  10da48:	4604      	mov	r4, r0
  10da4a:	6803      	ldr	r3, [r0, #0]
  10da4c:	ad07      	add	r5, sp, #28
  10da4e:	f855 6b04 	ldr.w	r6, [r5], #4
  10da52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
  10da54:	4798      	blx	r3
  10da56:	6960      	ldr	r0, [r4, #20]
  10da58:	9501      	str	r5, [sp, #4]
  10da5a:	f001 ffd5 	bl	10fa08 <fflush>
  10da5e:	9a01      	ldr	r2, [sp, #4]
  10da60:	4631      	mov	r1, r6
  10da62:	6960      	ldr	r0, [r4, #20]
  10da64:	f002 fc78 	bl	110358 <vfiprintf>
  10da68:	4605      	mov	r5, r0
  10da6a:	6823      	ldr	r3, [r4, #0]
  10da6c:	4620      	mov	r0, r4
  10da6e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
  10da70:	4798      	blx	r3
  10da72:	4628      	mov	r0, r5
  10da74:	b003      	add	sp, #12
  10da76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  10da7a:	b003      	add	sp, #12
  10da7c:	4770      	bx	lr
	...

0010da80 <rtos::Mutex::constructor(char const*)>:
  10da80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10da82:	4604      	mov	r4, r0
  10da84:	460d      	mov	r5, r1
  10da86:	f100 0714 	add.w	r7, r0, #20
  10da8a:	221c      	movs	r2, #28
  10da8c:	2100      	movs	r1, #0
  10da8e:	1d26      	adds	r6, r4, #4
  10da90:	4638      	mov	r0, r7
  10da92:	f002 fa48 	bl	10ff26 <memset>
  10da96:	2210      	movs	r2, #16
  10da98:	2100      	movs	r1, #0
  10da9a:	4630      	mov	r0, r6
  10da9c:	f002 fa43 	bl	10ff26 <memset>
  10daa0:	4b0b      	ldr	r3, [pc, #44]	; (10dad0 <rtos::Mutex::constructor(char const*)+0x50>)
  10daa2:	60e7      	str	r7, [r4, #12]
  10daa4:	2d00      	cmp	r5, #0
  10daa6:	bf08      	it	eq
  10daa8:	461d      	moveq	r5, r3
  10daaa:	231c      	movs	r3, #28
  10daac:	6123      	str	r3, [r4, #16]
  10daae:	230b      	movs	r3, #11
  10dab0:	6065      	str	r5, [r4, #4]
  10dab2:	60a3      	str	r3, [r4, #8]
  10dab4:	4630      	mov	r0, r6
  10dab6:	f7fc f85f 	bl	109b78 <osMutexNew>
  10daba:	6020      	str	r0, [r4, #0]
  10dabc:	b930      	cbnz	r0, 10dacc <rtos::Mutex::constructor(char const*)+0x4c>
  10dabe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  10dac2:	2231      	movs	r2, #49	; 0x31
  10dac4:	4903      	ldr	r1, [pc, #12]	; (10dad4 <rtos::Mutex::constructor(char const*)+0x54>)
  10dac6:	4804      	ldr	r0, [pc, #16]	; (10dad8 <rtos::Mutex::constructor(char const*)+0x58>)
  10dac8:	f7fa be6a 	b.w	1087a0 <mbed_assert_internal>
  10dacc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10dace:	bf00      	nop
  10dad0:	00119af2 	.word	0x00119af2
  10dad4:	00119b0b 	.word	0x00119b0b
  10dad8:	00119b31 	.word	0x00119b31

0010dadc <rtos::Mutex::Mutex()>:
  10dadc:	b510      	push	{r4, lr}
  10dade:	4604      	mov	r4, r0
  10dae0:	2100      	movs	r1, #0
  10dae2:	f7ff ffcd 	bl	10da80 <rtos::Mutex::constructor(char const*)>
  10dae6:	4620      	mov	r0, r4
  10dae8:	bd10      	pop	{r4, pc}

0010daea <rtos::Mutex::lock(unsigned long)>:
  10daea:	6800      	ldr	r0, [r0, #0]
  10daec:	f7fc b86c 	b.w	109bc8 <osMutexAcquire>

0010daf0 <rtos::Mutex::unlock()>:
  10daf0:	6800      	ldr	r0, [r0, #0]
  10daf2:	f7fc b887 	b.w	109c04 <osMutexRelease>

0010daf6 <rtos::Mutex::~Mutex()>:
  10daf6:	b510      	push	{r4, lr}
  10daf8:	4604      	mov	r4, r0
  10dafa:	6800      	ldr	r0, [r0, #0]
  10dafc:	f7fc f89e 	bl	109c3c <osMutexDelete>
  10db00:	4620      	mov	r0, r4
  10db02:	bd10      	pop	{r4, pc}

0010db04 <rtos::Semaphore::constructor(long, unsigned short)>:
  10db04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  10db08:	4604      	mov	r4, r0
  10db0a:	4689      	mov	r9, r1
  10db0c:	4690      	mov	r8, r2
  10db0e:	2510      	movs	r5, #16
  10db10:	f100 0714 	add.w	r7, r0, #20
  10db14:	462a      	mov	r2, r5
  10db16:	2100      	movs	r1, #0
  10db18:	1d26      	adds	r6, r4, #4
  10db1a:	4638      	mov	r0, r7
  10db1c:	f002 fa03 	bl	10ff26 <memset>
  10db20:	462a      	mov	r2, r5
  10db22:	2100      	movs	r1, #0
  10db24:	4630      	mov	r0, r6
  10db26:	f002 f9fe 	bl	10ff26 <memset>
  10db2a:	60e7      	str	r7, [r4, #12]
  10db2c:	6125      	str	r5, [r4, #16]
  10db2e:	4632      	mov	r2, r6
  10db30:	4649      	mov	r1, r9
  10db32:	4640      	mov	r0, r8
  10db34:	f7fc f9ea 	bl	109f0c <osSemaphoreNew>
  10db38:	6020      	str	r0, [r4, #0]
  10db3a:	b930      	cbnz	r0, 10db4a <rtos::Semaphore::constructor(long, unsigned short)+0x46>
  10db3c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  10db40:	222b      	movs	r2, #43	; 0x2b
  10db42:	4903      	ldr	r1, [pc, #12]	; (10db50 <rtos::Semaphore::constructor(long, unsigned short)+0x4c>)
  10db44:	4803      	ldr	r0, [pc, #12]	; (10db54 <rtos::Semaphore::constructor(long, unsigned short)+0x50>)
  10db46:	f7fa be2b 	b.w	1087a0 <mbed_assert_internal>
  10db4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  10db4e:	bf00      	nop
  10db50:	00119b35 	.word	0x00119b35
  10db54:	00119b5f 	.word	0x00119b5f

0010db58 <rtos::Semaphore::Semaphore(long)>:
  10db58:	b510      	push	{r4, lr}
  10db5a:	4604      	mov	r4, r0
  10db5c:	f44f 6280 	mov.w	r2, #1024	; 0x400
  10db60:	f7ff ffd0 	bl	10db04 <rtos::Semaphore::constructor(long, unsigned short)>
  10db64:	4620      	mov	r0, r4
  10db66:	bd10      	pop	{r4, pc}

0010db68 <rtos::Semaphore::wait(unsigned long)>:
  10db68:	b510      	push	{r4, lr}
  10db6a:	4604      	mov	r4, r0
  10db6c:	6800      	ldr	r0, [r0, #0]
  10db6e:	f7fc f9f9 	bl	109f64 <osSemaphoreAcquire>
  10db72:	1cc2      	adds	r2, r0, #3
  10db74:	db02      	blt.n	10db7c <rtos::Semaphore::wait(unsigned long)+0x14>
  10db76:	1c83      	adds	r3, r0, #2
  10db78:	dd08      	ble.n	10db8c <rtos::Semaphore::wait(unsigned long)+0x24>
  10db7a:	b110      	cbz	r0, 10db82 <rtos::Semaphore::wait(unsigned long)+0x1a>
  10db7c:	f04f 30ff 	mov.w	r0, #4294967295
  10db80:	bd10      	pop	{r4, pc}
  10db82:	6820      	ldr	r0, [r4, #0]
  10db84:	f7fc fa62 	bl	10a04c <osSemaphoreGetCount>
  10db88:	3001      	adds	r0, #1
  10db8a:	bd10      	pop	{r4, pc}
  10db8c:	2000      	movs	r0, #0
  10db8e:	bd10      	pop	{r4, pc}

0010db90 <rtos::Semaphore::release()>:
  10db90:	6800      	ldr	r0, [r0, #0]
  10db92:	f7fc ba21 	b.w	109fd8 <osSemaphoreRelease>

0010db96 <rtos::Semaphore::~Semaphore()>:
  10db96:	b510      	push	{r4, lr}
  10db98:	4604      	mov	r4, r0
  10db9a:	6800      	ldr	r0, [r0, #0]
  10db9c:	f7fc fa6a 	bl	10a074 <osSemaphoreDelete>
  10dba0:	4620      	mov	r0, r4
  10dba2:	bd10      	pop	{r4, pc}

0010dba4 <rtos::Thread::_thunk(void*)>:
  10dba4:	b538      	push	{r3, r4, r5, lr}
  10dba6:	6903      	ldr	r3, [r0, #16]
  10dba8:	4604      	mov	r4, r0
  10dbaa:	1d05      	adds	r5, r0, #4
  10dbac:	b92b      	cbnz	r3, 10dbba <rtos::Thread::_thunk(void*)+0x16>
  10dbae:	f240 220e 	movw	r2, #526	; 0x20e
  10dbb2:	490c      	ldr	r1, [pc, #48]	; (10dbe4 <rtos::Thread::_thunk(void*)+0x40>)
  10dbb4:	480c      	ldr	r0, [pc, #48]	; (10dbe8 <rtos::Thread::_thunk(void*)+0x44>)
  10dbb6:	f7fa fdf3 	bl	1087a0 <mbed_assert_internal>
  10dbba:	6923      	ldr	r3, [r4, #16]
  10dbbc:	4628      	mov	r0, r5
  10dbbe:	681b      	ldr	r3, [r3, #0]
  10dbc0:	4798      	blx	r3
  10dbc2:	f104 0064 	add.w	r0, r4, #100	; 0x64
  10dbc6:	f04f 31ff 	mov.w	r1, #4294967295
  10dbca:	f7ff ff8e 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10dbce:	2300      	movs	r3, #0
  10dbd0:	6163      	str	r3, [r4, #20]
  10dbd2:	2301      	movs	r3, #1
  10dbd4:	f884 30dc 	strb.w	r3, [r4, #220]	; 0xdc
  10dbd8:	f104 0040 	add.w	r0, r4, #64	; 0x40
  10dbdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  10dbe0:	f7ff bfd6 	b.w	10db90 <rtos::Semaphore::release()>
  10dbe4:	001196b0 	.word	0x001196b0
  10dbe8:	0011608b 	.word	0x0011608b

0010dbec <rtos::Thread::constructor(osPriority_t, unsigned long, unsigned char*, char const*)>:
  10dbec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  10dbf0:	461f      	mov	r7, r3
  10dbf2:	fab3 f383 	clz	r3, r3
  10dbf6:	4604      	mov	r4, r0
  10dbf8:	2600      	movs	r6, #0
  10dbfa:	095b      	lsrs	r3, r3, #5
  10dbfc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  10dc00:	4689      	mov	r9, r1
  10dc02:	4690      	mov	r8, r2
  10dc04:	6146      	str	r6, [r0, #20]
  10dc06:	f880 60dc 	strb.w	r6, [r0, #220]	; 0xdc
  10dc0a:	2248      	movs	r2, #72	; 0x48
  10dc0c:	4631      	mov	r1, r6
  10dc0e:	3094      	adds	r0, #148	; 0x94
  10dc10:	9d08      	ldr	r5, [sp, #32]
  10dc12:	f002 f988 	bl	10ff26 <memset>
  10dc16:	2224      	movs	r2, #36	; 0x24
  10dc18:	4631      	mov	r1, r6
  10dc1a:	f104 0018 	add.w	r0, r4, #24
  10dc1e:	f002 f982 	bl	10ff26 <memset>
  10dc22:	4b06      	ldr	r3, [pc, #24]	; (10dc3c <rtos::Thread::constructor(osPriority_t, unsigned long, unsigned char*, char const*)+0x50>)
  10dc24:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
  10dc28:	42b5      	cmp	r5, r6
  10dc2a:	bf08      	it	eq
  10dc2c:	461d      	moveq	r5, r3
  10dc2e:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
  10dc32:	61a5      	str	r5, [r4, #24]
  10dc34:	62a7      	str	r7, [r4, #40]	; 0x28
  10dc36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  10dc3a:	bf00      	nop
  10dc3c:	00119b6b 	.word	0x00119b6b

0010dc40 <rtos::Thread::terminate()>:
  10dc40:	b570      	push	{r4, r5, r6, lr}
  10dc42:	4604      	mov	r4, r0
  10dc44:	f100 0564 	add.w	r5, r0, #100	; 0x64
  10dc48:	f04f 31ff 	mov.w	r1, #4294967295
  10dc4c:	4628      	mov	r0, r5
  10dc4e:	f7ff ff4c 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10dc52:	f104 0040 	add.w	r0, r4, #64	; 0x40
  10dc56:	6966      	ldr	r6, [r4, #20]
  10dc58:	f7ff ff9a 	bl	10db90 <rtos::Semaphore::release()>
  10dc5c:	f894 20dc 	ldrb.w	r2, [r4, #220]	; 0xdc
  10dc60:	2300      	movs	r3, #0
  10dc62:	6163      	str	r3, [r4, #20]
  10dc64:	b93a      	cbnz	r2, 10dc76 <rtos::Thread::terminate()+0x36>
  10dc66:	2301      	movs	r3, #1
  10dc68:	f884 30dc 	strb.w	r3, [r4, #220]	; 0xdc
  10dc6c:	4630      	mov	r0, r6
  10dc6e:	f7fd f851 	bl	10ad14 <osThreadTerminate>
  10dc72:	4604      	mov	r4, r0
  10dc74:	e000      	b.n	10dc78 <rtos::Thread::terminate()+0x38>
  10dc76:	461c      	mov	r4, r3
  10dc78:	4628      	mov	r0, r5
  10dc7a:	f7ff ff39 	bl	10daf0 <rtos::Mutex::unlock()>
  10dc7e:	4620      	mov	r0, r4
  10dc80:	bd70      	pop	{r4, r5, r6, pc}

0010dc82 <rtos::Thread::set_priority(osPriority_t)>:
  10dc82:	b570      	push	{r4, r5, r6, lr}
  10dc84:	4605      	mov	r5, r0
  10dc86:	460e      	mov	r6, r1
  10dc88:	f100 0464 	add.w	r4, r0, #100	; 0x64
  10dc8c:	f04f 31ff 	mov.w	r1, #4294967295
  10dc90:	4620      	mov	r0, r4
  10dc92:	f7ff ff2a 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10dc96:	4631      	mov	r1, r6
  10dc98:	6968      	ldr	r0, [r5, #20]
  10dc9a:	f7fd f81d 	bl	10acd8 <osThreadSetPriority>
  10dc9e:	4605      	mov	r5, r0
  10dca0:	4620      	mov	r0, r4
  10dca2:	f7ff ff25 	bl	10daf0 <rtos::Mutex::unlock()>
  10dca6:	4628      	mov	r0, r5
  10dca8:	bd70      	pop	{r4, r5, r6, pc}

0010dcaa <rtos::Thread::signal_set(long)>:
  10dcaa:	6940      	ldr	r0, [r0, #20]
  10dcac:	f7fd b84e 	b.w	10ad4c <osThreadFlagsSet>

0010dcb0 <rtos::Thread::signal_wait(long, unsigned long)>:
  10dcb0:	b510      	push	{r4, lr}
  10dcb2:	4604      	mov	r4, r0
  10dcb4:	4608      	mov	r0, r1
  10dcb6:	b911      	cbnz	r1, 10dcbe <rtos::Thread::signal_wait(long, unsigned long)+0xe>
  10dcb8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
  10dcbc:	e000      	b.n	10dcc0 <rtos::Thread::signal_wait(long, unsigned long)+0x10>
  10dcbe:	2101      	movs	r1, #1
  10dcc0:	f7fd f888 	bl	10add4 <osThreadFlagsWait>
  10dcc4:	2308      	movs	r3, #8
  10dcc6:	6060      	str	r0, [r4, #4]
  10dcc8:	6023      	str	r3, [r4, #0]
  10dcca:	4620      	mov	r0, r4
  10dccc:	bd10      	pop	{r4, pc}

0010dcce <rtos::Thread::wait(unsigned long)>:
  10dcce:	f7fa bf29 	b.w	108b24 <osDelay>
	...

0010dcd4 <rtos::Thread::~Thread()>:
  10dcd4:	b510      	push	{r4, lr}
  10dcd6:	4604      	mov	r4, r0
  10dcd8:	4b0c      	ldr	r3, [pc, #48]	; (10dd0c <rtos::Thread::~Thread()+0x38>)
  10dcda:	6003      	str	r3, [r0, #0]
  10dcdc:	f7ff ffb0 	bl	10dc40 <rtos::Thread::terminate()>
  10dce0:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
  10dce4:	b12b      	cbz	r3, 10dcf2 <rtos::Thread::~Thread()+0x1e>
  10dce6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
  10dce8:	b108      	cbz	r0, 10dcee <rtos::Thread::~Thread()+0x1a>
  10dcea:	f7ff fd31 	bl	10d750 <operator delete[](void*)>
  10dcee:	2300      	movs	r3, #0
  10dcf0:	62a3      	str	r3, [r4, #40]	; 0x28
  10dcf2:	f104 0064 	add.w	r0, r4, #100	; 0x64
  10dcf6:	f7ff fefe 	bl	10daf6 <rtos::Mutex::~Mutex()>
  10dcfa:	f104 0040 	add.w	r0, r4, #64	; 0x40
  10dcfe:	f7ff ff4a 	bl	10db96 <rtos::Semaphore::~Semaphore()>
  10dd02:	1d20      	adds	r0, r4, #4
  10dd04:	f7f4 fc70 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10dd08:	4620      	mov	r0, r4
  10dd0a:	bd10      	pop	{r4, pc}
  10dd0c:	00119c30 	.word	0x00119c30

0010dd10 <rtos::Thread::~Thread()>:
  10dd10:	b510      	push	{r4, lr}
  10dd12:	4604      	mov	r4, r0
  10dd14:	f7ff ffde 	bl	10dcd4 <rtos::Thread::~Thread()>
  10dd18:	4620      	mov	r0, r4
  10dd1a:	f7ff fd1d 	bl	10d758 <operator delete(void*)>
  10dd1e:	4620      	mov	r0, r4
  10dd20:	bd10      	pop	{r4, pc}
	...

0010dd24 <rtos::Thread::start(mbed::Callback<void ()>)>:
  10dd24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  10dd28:	4604      	mov	r4, r0
  10dd2a:	f100 0564 	add.w	r5, r0, #100	; 0x64
  10dd2e:	460f      	mov	r7, r1
  10dd30:	4628      	mov	r0, r5
  10dd32:	f04f 31ff 	mov.w	r1, #4294967295
  10dd36:	f7ff fed8 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  10dd3a:	6963      	ldr	r3, [r4, #20]
  10dd3c:	b913      	cbnz	r3, 10dd44 <rtos::Thread::start(mbed::Callback<void ()>)+0x20>
  10dd3e:	f894 30dc 	ldrb.w	r3, [r4, #220]	; 0xdc
  10dd42:	b133      	cbz	r3, 10dd52 <rtos::Thread::start(mbed::Callback<void ()>)+0x2e>
  10dd44:	4628      	mov	r0, r5
  10dd46:	f7ff fed3 	bl	10daf0 <rtos::Mutex::unlock()>
  10dd4a:	f06f 0003 	mvn.w	r0, #3
  10dd4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10dd52:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  10dd54:	b983      	cbnz	r3, 10dd78 <rtos::Thread::start(mbed::Callback<void ()>)+0x54>
  10dd56:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  10dd58:	0880      	lsrs	r0, r0, #2
  10dd5a:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
  10dd5e:	bf94      	ite	ls
  10dd60:	0080      	lslls	r0, r0, #2
  10dd62:	f04f 30ff 	movhi.w	r0, #4294967295
  10dd66:	f7ff fce7 	bl	10d738 <operator new[](unsigned int)>
  10dd6a:	62a0      	str	r0, [r4, #40]	; 0x28
  10dd6c:	b920      	cbnz	r0, 10dd78 <rtos::Thread::start(mbed::Callback<void ()>)+0x54>
  10dd6e:	224e      	movs	r2, #78	; 0x4e
  10dd70:	4923      	ldr	r1, [pc, #140]	; (10de00 <rtos::Thread::start(mbed::Callback<void ()>)+0xdc>)
  10dd72:	4824      	ldr	r0, [pc, #144]	; (10de04 <rtos::Thread::start(mbed::Callback<void ()>)+0xe0>)
  10dd74:	f7fa fd14 	bl	1087a0 <mbed_assert_internal>
  10dd78:	4923      	ldr	r1, [pc, #140]	; (10de08 <rtos::Thread::start(mbed::Callback<void ()>)+0xe4>)
  10dd7a:	2300      	movs	r3, #0
  10dd7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  10dd7e:	ebb3 0f92 	cmp.w	r3, r2, lsr #2
  10dd82:	d204      	bcs.n	10dd8e <rtos::Thread::start(mbed::Callback<void ()>)+0x6a>
  10dd84:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  10dd86:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
  10dd8a:	3301      	adds	r3, #1
  10dd8c:	e7f6      	b.n	10dd7c <rtos::Thread::start(mbed::Callback<void ()>)+0x58>
  10dd8e:	f104 0694 	add.w	r6, r4, #148	; 0x94
  10dd92:	f04f 0848 	mov.w	r8, #72	; 0x48
  10dd96:	4630      	mov	r0, r6
  10dd98:	4642      	mov	r2, r8
  10dd9a:	2100      	movs	r1, #0
  10dd9c:	f002 f8c3 	bl	10ff26 <memset>
  10dda0:	6226      	str	r6, [r4, #32]
  10dda2:	1d26      	adds	r6, r4, #4
  10dda4:	42be      	cmp	r6, r7
  10dda6:	f8c4 8024 	str.w	r8, [r4, #36]	; 0x24
  10ddaa:	d007      	beq.n	10ddbc <rtos::Thread::start(mbed::Callback<void ()>)+0x98>
  10ddac:	4630      	mov	r0, r6
  10ddae:	f7f4 fc1b 	bl	1025e8 <mbed::Callback<void ()>::~Callback()>
  10ddb2:	b11e      	cbz	r6, 10ddbc <rtos::Thread::start(mbed::Callback<void ()>)+0x98>
  10ddb4:	4639      	mov	r1, r7
  10ddb6:	4630      	mov	r0, r6
  10ddb8:	f7f4 fc78 	bl	1026ac <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
  10ddbc:	f104 0218 	add.w	r2, r4, #24
  10ddc0:	4621      	mov	r1, r4
  10ddc2:	4812      	ldr	r0, [pc, #72]	; (10de0c <rtos::Thread::start(mbed::Callback<void ()>)+0xe8>)
  10ddc4:	f7fc ff56 	bl	10ac74 <osThreadNew>
  10ddc8:	6160      	str	r0, [r4, #20]
  10ddca:	b998      	cbnz	r0, 10ddf4 <rtos::Thread::start(mbed::Callback<void ()>)+0xd0>
  10ddcc:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
  10ddd0:	b12b      	cbz	r3, 10ddde <rtos::Thread::start(mbed::Callback<void ()>)+0xba>
  10ddd2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
  10ddd4:	b108      	cbz	r0, 10ddda <rtos::Thread::start(mbed::Callback<void ()>)+0xb6>
  10ddd6:	f7ff fcbb 	bl	10d750 <operator delete[](void*)>
  10ddda:	2300      	movs	r3, #0
  10dddc:	62a3      	str	r3, [r4, #40]	; 0x28
  10ddde:	4628      	mov	r0, r5
  10dde0:	f7ff fe86 	bl	10daf0 <rtos::Mutex::unlock()>
  10dde4:	f104 0040 	add.w	r0, r4, #64	; 0x40
  10dde8:	f7ff fed2 	bl	10db90 <rtos::Semaphore::release()>
  10ddec:	f06f 0002 	mvn.w	r0, #2
  10ddf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10ddf4:	4628      	mov	r0, r5
  10ddf6:	f7ff fe7b 	bl	10daf0 <rtos::Mutex::unlock()>
  10ddfa:	2000      	movs	r0, #0
  10ddfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10de00:	00119b86 	.word	0x00119b86
  10de04:	00119bba 	.word	0x00119bba
  10de08:	e25a2ea5 	.word	0xe25a2ea5
  10de0c:	0010dba5 	.word	0x0010dba5

0010de10 <SVC_Handler>:
  10de10:	f3ef 8009 	mrs	r0, PSP
  10de14:	6981      	ldr	r1, [r0, #24]
  10de16:	f811 1c02 	ldrb.w	r1, [r1, #-2]
  10de1a:	bb01      	cbnz	r1, 10de5e <SVC_User>
  10de1c:	b501      	push	{r0, lr}
  10de1e:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
  10de22:	47e0      	blx	r12
  10de24:	e8bd 5000 	ldmia.w	sp!, {r12, lr}
  10de28:	e88c 0003 	stmia.w	r12, {r0, r1}

0010de2c <SVC_Context>:
  10de2c:	4b1a      	ldr	r3, [pc, #104]	; (10de98 <SysTick_Handler+0x10>)
  10de2e:	e893 0006 	ldmia.w	r3, {r1, r2}
  10de32:	4291      	cmp	r1, r2
  10de34:	bf08      	it	eq
  10de36:	4770      	bxeq	lr
  10de38:	b119      	cbz	r1, 10de42 <SVC_ContextSwitch>

0010de3a <SVC_ContextSave>:
  10de3a:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
  10de3e:	f8c1 c038 	str.w	r12, [r1, #56]	; 0x38

0010de42 <SVC_ContextSwitch>:
  10de42:	f7fc fbcb 	bl	10a5dc <thread_switch_helper>
  10de46:	4b14      	ldr	r3, [pc, #80]	; (10de98 <SysTick_Handler+0x10>)
  10de48:	e893 0006 	ldmia.w	r3, {r1, r2}
  10de4c:	601a      	str	r2, [r3, #0]

0010de4e <SVC_ContextRestore>:
  10de4e:	6b90      	ldr	r0, [r2, #56]	; 0x38
  10de50:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
  10de54:	f380 8809 	msr	PSP, r0
  10de58:	f06f 0e02 	mvn.w	lr, #2

0010de5c <SVC_Exit>:
  10de5c:	4770      	bx	lr

0010de5e <SVC_User>:
  10de5e:	b510      	push	{r4, lr}
  10de60:	4a0e      	ldr	r2, [pc, #56]	; (10de9c <SysTick_Handler+0x14>)
  10de62:	6813      	ldr	r3, [r2, #0]
  10de64:	4299      	cmp	r1, r3
  10de66:	d806      	bhi.n	10de76 <SVC_Done>
  10de68:	f852 4021 	ldr.w	r4, [r2, r1, lsl #2]
  10de6c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  10de6e:	47a0      	blx	r4
  10de70:	f3ef 8409 	mrs	r4, PSP
  10de74:	6020      	str	r0, [r4, #0]

0010de76 <SVC_Done>:
  10de76:	bd10      	pop	{r4, pc}

0010de78 <PendSV_Handler>:
  10de78:	b510      	push	{r4, lr}
  10de7a:	f7fc f925 	bl	10a0c8 <osRtxPendSV_Handler>
  10de7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10de82:	f3ef 8c09 	mrs	r12, PSP
  10de86:	e7d1      	b.n	10de2c <SVC_Context>

0010de88 <SysTick_Handler>:
  10de88:	b510      	push	{r4, lr}
  10de8a:	f7fc f9bb 	bl	10a204 <osRtxTick_Handler>
  10de8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  10de92:	f3ef 8c09 	mrs	r12, PSP
  10de96:	e7c9      	b.n	10de2c <SVC_Context>
  10de98:	3fff410c 	.word	0x3fff410c
  10de9c:	001191dc 	.word	0x001191dc

0010dea0 <NMI_Handler>:
  10dea0:	e7fe      	b.n	10dea0 <NMI_Handler>
  10dea2:	e7fe      	b.n	10dea2 <NMI_Handler+0x2>

0010dea4 <MemManage_Handler>:
  10dea4:	e7fe      	b.n	10dea4 <MemManage_Handler>

0010dea6 <BusFault_Handler>:
  10dea6:	e7fe      	b.n	10dea6 <BusFault_Handler>

0010dea8 <UsageFault_Handler>:
  10dea8:	e7fe      	b.n	10dea8 <UsageFault_Handler>
  10deaa:	e7fe      	b.n	10deaa <UsageFault_Handler+0x2>

0010deac <DebugMon_Handler>:
  10deac:	e7fe      	b.n	10deac <DebugMon_Handler>
  10deae:	e7fe      	b.n	10deae <DebugMon_Handler+0x2>
  10deb0:	e7fe      	b.n	10deb0 <DebugMon_Handler+0x4>

0010deb2 <DefaultISR>:
  10deb2:	e7fe      	b.n	10deb2 <DefaultISR>

0010deb4 <Reset_Handler>:
  10deb4:	4907      	ldr	r1, [pc, #28]	; (10ded4 <Reset_Handler+0x20>)
  10deb6:	4a08      	ldr	r2, [pc, #32]	; (10ded8 <Reset_Handler+0x24>)
  10deb8:	4b08      	ldr	r3, [pc, #32]	; (10dedc <Reset_Handler+0x28>)
  10deba:	1a9b      	subs	r3, r3, r2
  10debc:	dd05      	ble.n	10deca <Reset_Handler+0x16>
  10debe:	2400      	movs	r4, #0
  10dec0:	5908      	ldr	r0, [r1, r4]
  10dec2:	5110      	str	r0, [r2, r4]
  10dec4:	3404      	adds	r4, #4
  10dec6:	429c      	cmp	r4, r3
  10dec8:	dbfa      	blt.n	10dec0 <Reset_Handler+0xc>
  10deca:	4805      	ldr	r0, [pc, #20]	; (10dee0 <Reset_Handler+0x2c>)
  10decc:	4780      	blx	r0
  10dece:	4805      	ldr	r0, [pc, #20]	; (10dee4 <Reset_Handler+0x30>)
  10ded0:	4700      	bx	r0
  10ded2:	0000      	.short	0x0000
  10ded4:	0011a464 	.word	0x0011a464
  10ded8:	3fff40a0 	.word	0x3fff40a0
  10dedc:	3fff42e0 	.word	0x3fff42e0
  10dee0:	0010c341 	.word	0x0010c341
  10dee4:	00105a6d 	.word	0x00105a6d

0010dee8 <std::local_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)>:
  10dee8:	68c3      	ldr	r3, [r0, #12]
  10deea:	689a      	ldr	r2, [r3, #8]
  10deec:	60c2      	str	r2, [r0, #12]
  10deee:	b102      	cbz	r2, 10def2 <std::local_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)+0xa>
  10def0:	6050      	str	r0, [r2, #4]
  10def2:	6842      	ldr	r2, [r0, #4]
  10def4:	605a      	str	r2, [r3, #4]
  10def6:	680a      	ldr	r2, [r1, #0]
  10def8:	4290      	cmp	r0, r2
  10defa:	d101      	bne.n	10df00 <std::local_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)+0x18>
  10defc:	600b      	str	r3, [r1, #0]
  10defe:	e005      	b.n	10df0c <std::local_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)+0x24>
  10df00:	6842      	ldr	r2, [r0, #4]
  10df02:	6891      	ldr	r1, [r2, #8]
  10df04:	4288      	cmp	r0, r1
  10df06:	bf0c      	ite	eq
  10df08:	6093      	streq	r3, [r2, #8]
  10df0a:	60d3      	strne	r3, [r2, #12]
  10df0c:	6098      	str	r0, [r3, #8]
  10df0e:	6043      	str	r3, [r0, #4]
  10df10:	4770      	bx	lr

0010df12 <std::local_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)>:
  10df12:	6883      	ldr	r3, [r0, #8]
  10df14:	68da      	ldr	r2, [r3, #12]
  10df16:	6082      	str	r2, [r0, #8]
  10df18:	b102      	cbz	r2, 10df1c <std::local_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)+0xa>
  10df1a:	6050      	str	r0, [r2, #4]
  10df1c:	6842      	ldr	r2, [r0, #4]
  10df1e:	605a      	str	r2, [r3, #4]
  10df20:	680a      	ldr	r2, [r1, #0]
  10df22:	4290      	cmp	r0, r2
  10df24:	d101      	bne.n	10df2a <std::local_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)+0x18>
  10df26:	600b      	str	r3, [r1, #0]
  10df28:	e005      	b.n	10df36 <std::local_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)+0x24>
  10df2a:	6842      	ldr	r2, [r0, #4]
  10df2c:	68d1      	ldr	r1, [r2, #12]
  10df2e:	4288      	cmp	r0, r1
  10df30:	bf0c      	ite	eq
  10df32:	60d3      	streq	r3, [r2, #12]
  10df34:	6093      	strne	r3, [r2, #8]
  10df36:	60d8      	str	r0, [r3, #12]
  10df38:	6043      	str	r3, [r0, #4]
  10df3a:	4770      	bx	lr

0010df3c <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)>:
  10df3c:	7803      	ldrb	r3, [r0, #0]
  10df3e:	b92b      	cbnz	r3, 10df4c <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x10>
  10df40:	6843      	ldr	r3, [r0, #4]
  10df42:	685b      	ldr	r3, [r3, #4]
  10df44:	4298      	cmp	r0, r3
  10df46:	d101      	bne.n	10df4c <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x10>
  10df48:	68c3      	ldr	r3, [r0, #12]
  10df4a:	e00c      	b.n	10df66 <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x2a>
  10df4c:	6883      	ldr	r3, [r0, #8]
  10df4e:	b11b      	cbz	r3, 10df58 <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x1c>
  10df50:	68da      	ldr	r2, [r3, #12]
  10df52:	b142      	cbz	r2, 10df66 <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x2a>
  10df54:	4613      	mov	r3, r2
  10df56:	e7fb      	b.n	10df50 <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x14>
  10df58:	6843      	ldr	r3, [r0, #4]
  10df5a:	689a      	ldr	r2, [r3, #8]
  10df5c:	4282      	cmp	r2, r0
  10df5e:	d102      	bne.n	10df66 <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x2a>
  10df60:	4618      	mov	r0, r3
  10df62:	685b      	ldr	r3, [r3, #4]
  10df64:	e7f9      	b.n	10df5a <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)+0x1e>
  10df66:	4618      	mov	r0, r3
  10df68:	4770      	bx	lr

0010df6a <std::_Rb_tree_increment(std::_Rb_tree_node_base*)>:
  10df6a:	68c3      	ldr	r3, [r0, #12]
  10df6c:	b123      	cbz	r3, 10df78 <std::_Rb_tree_increment(std::_Rb_tree_node_base*)+0xe>
  10df6e:	4618      	mov	r0, r3
  10df70:	689b      	ldr	r3, [r3, #8]
  10df72:	2b00      	cmp	r3, #0
  10df74:	d1fb      	bne.n	10df6e <std::_Rb_tree_increment(std::_Rb_tree_node_base*)+0x4>
  10df76:	e00a      	b.n	10df8e <std::_Rb_tree_increment(std::_Rb_tree_node_base*)+0x24>
  10df78:	6843      	ldr	r3, [r0, #4]
  10df7a:	68da      	ldr	r2, [r3, #12]
  10df7c:	4282      	cmp	r2, r0
  10df7e:	d102      	bne.n	10df86 <std::_Rb_tree_increment(std::_Rb_tree_node_base*)+0x1c>
  10df80:	4618      	mov	r0, r3
  10df82:	685b      	ldr	r3, [r3, #4]
  10df84:	e7f9      	b.n	10df7a <std::_Rb_tree_increment(std::_Rb_tree_node_base*)+0x10>
  10df86:	68c2      	ldr	r2, [r0, #12]
  10df88:	4293      	cmp	r3, r2
  10df8a:	bf18      	it	ne
  10df8c:	4618      	movne	r0, r3
  10df8e:	4770      	bx	lr

0010df90 <std::_Rb_tree_decrement(std::_Rb_tree_node_base*)>:
  10df90:	f7ff bfd4 	b.w	10df3c <std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)>

0010df94 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)>:
  10df94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  10df98:	461f      	mov	r7, r3
  10df9a:	f103 0904 	add.w	r9, r3, #4
  10df9e:	2300      	movs	r3, #0
  10dfa0:	460c      	mov	r4, r1
  10dfa2:	604a      	str	r2, [r1, #4]
  10dfa4:	608b      	str	r3, [r1, #8]
  10dfa6:	60cb      	str	r3, [r1, #12]
  10dfa8:	700b      	strb	r3, [r1, #0]
  10dfaa:	b168      	cbz	r0, 10dfc8 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x34>
  10dfac:	4297      	cmp	r7, r2
  10dfae:	6091      	str	r1, [r2, #8]
  10dfb0:	d101      	bne.n	10dfb6 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x22>
  10dfb2:	6079      	str	r1, [r7, #4]
  10dfb4:	e00c      	b.n	10dfd0 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x3c>
  10dfb6:	68bb      	ldr	r3, [r7, #8]
  10dfb8:	429a      	cmp	r2, r3
  10dfba:	bf08      	it	eq
  10dfbc:	60b9      	streq	r1, [r7, #8]
  10dfbe:	f04f 0801 	mov.w	r8, #1
  10dfc2:	f04f 0a00 	mov.w	r10, #0
  10dfc6:	e017      	b.n	10dff8 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x64>
  10dfc8:	60d1      	str	r1, [r2, #12]
  10dfca:	68fb      	ldr	r3, [r7, #12]
  10dfcc:	429a      	cmp	r2, r3
  10dfce:	d1f6      	bne.n	10dfbe <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x2a>
  10dfd0:	60fc      	str	r4, [r7, #12]
  10dfd2:	e7f4      	b.n	10dfbe <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x2a>
  10dfd4:	6866      	ldr	r6, [r4, #4]
  10dfd6:	7832      	ldrb	r2, [r6, #0]
  10dfd8:	2a00      	cmp	r2, #0
  10dfda:	d13a      	bne.n	10e052 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0xbe>
  10dfdc:	6875      	ldr	r5, [r6, #4]
  10dfde:	68ab      	ldr	r3, [r5, #8]
  10dfe0:	429e      	cmp	r6, r3
  10dfe2:	d11f      	bne.n	10e024 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x90>
  10dfe4:	68eb      	ldr	r3, [r5, #12]
  10dfe6:	b15b      	cbz	r3, 10e000 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x6c>
  10dfe8:	781a      	ldrb	r2, [r3, #0]
  10dfea:	b94a      	cbnz	r2, 10e000 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x6c>
  10dfec:	f886 8000 	strb.w	r8, [r6]
  10dff0:	f883 8000 	strb.w	r8, [r3]
  10dff4:	702a      	strb	r2, [r5, #0]
  10dff6:	462c      	mov	r4, r5
  10dff8:	687b      	ldr	r3, [r7, #4]
  10dffa:	429c      	cmp	r4, r3
  10dffc:	d1ea      	bne.n	10dfd4 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x40>
  10dffe:	e028      	b.n	10e052 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0xbe>
  10e000:	68f3      	ldr	r3, [r6, #12]
  10e002:	429c      	cmp	r4, r3
  10e004:	d104      	bne.n	10e010 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x7c>
  10e006:	4649      	mov	r1, r9
  10e008:	4630      	mov	r0, r6
  10e00a:	f7ff ff6d 	bl	10dee8 <std::local_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)>
  10e00e:	4634      	mov	r4, r6
  10e010:	6863      	ldr	r3, [r4, #4]
  10e012:	4649      	mov	r1, r9
  10e014:	f883 8000 	strb.w	r8, [r3]
  10e018:	4628      	mov	r0, r5
  10e01a:	f885 a000 	strb.w	r10, [r5]
  10e01e:	f7ff ff78 	bl	10df12 <std::local_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)>
  10e022:	e014      	b.n	10e04e <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0xba>
  10e024:	b113      	cbz	r3, 10e02c <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x98>
  10e026:	781a      	ldrb	r2, [r3, #0]
  10e028:	2a00      	cmp	r2, #0
  10e02a:	d0df      	beq.n	10dfec <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x58>
  10e02c:	68b3      	ldr	r3, [r6, #8]
  10e02e:	429c      	cmp	r4, r3
  10e030:	d104      	bne.n	10e03c <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0xa8>
  10e032:	4649      	mov	r1, r9
  10e034:	4630      	mov	r0, r6
  10e036:	f7ff ff6c 	bl	10df12 <std::local_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)>
  10e03a:	4634      	mov	r4, r6
  10e03c:	6863      	ldr	r3, [r4, #4]
  10e03e:	4649      	mov	r1, r9
  10e040:	f883 8000 	strb.w	r8, [r3]
  10e044:	4628      	mov	r0, r5
  10e046:	f885 a000 	strb.w	r10, [r5]
  10e04a:	f7ff ff4d 	bl	10dee8 <std::local_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)>
  10e04e:	4625      	mov	r5, r4
  10e050:	e7d1      	b.n	10dff6 <std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)+0x62>
  10e052:	2201      	movs	r2, #1
  10e054:	701a      	strb	r2, [r3, #0]
  10e056:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0010e05a <std::__throw_logic_error(char const*)>:
  10e05a:	b508      	push	{r3, lr}
  10e05c:	f7f7 fd22 	bl	105aa4 <abort>

0010e060 <std::__throw_length_error(char const*)>:
  10e060:	b508      	push	{r3, lr}
  10e062:	f7f7 fd1f 	bl	105aa4 <abort>

0010e066 <std::char_traits<char>::compare(char const*, char const*, unsigned int)>:
  10e066:	b10a      	cbz	r2, 10e06c <std::char_traits<char>::compare(char const*, char const*, unsigned int)+0x6>
  10e068:	f001 bf28 	b.w	10febc <memcmp>
  10e06c:	4610      	mov	r0, r2
  10e06e:	4770      	bx	lr

0010e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>:
  10e070:	b10a      	cbz	r2, 10e076 <std::char_traits<char>::copy(char*, char const*, unsigned int)+0x6>
  10e072:	f001 bf32 	b.w	10feda <memcpy>
  10e076:	4770      	bx	lr

0010e078 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)>:
  10e078:	b508      	push	{r3, lr}
  10e07a:	680b      	ldr	r3, [r1, #0]
  10e07c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  10e080:	d302      	bcc.n	10e088 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)+0x10>
  10e082:	480a      	ldr	r0, [pc, #40]	; (10e0ac <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)+0x34>)
  10e084:	f7ff ffec 	bl	10e060 <std::__throw_length_error(char const*)>
  10e088:	4293      	cmp	r3, r2
  10e08a:	d909      	bls.n	10e0a0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)+0x28>
  10e08c:	0052      	lsls	r2, r2, #1
  10e08e:	4293      	cmp	r3, r2
  10e090:	d206      	bcs.n	10e0a0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)+0x28>
  10e092:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  10e096:	bf2a      	itet	cs
  10e098:	f06f 4300 	mvncs.w	r3, #2147483648	; 0x80000000
  10e09c:	600a      	strcc	r2, [r1, #0]
  10e09e:	600b      	strcs	r3, [r1, #0]
  10e0a0:	6808      	ldr	r0, [r1, #0]
  10e0a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  10e0a6:	3001      	adds	r0, #1
  10e0a8:	f7ff bb3a 	b.w	10d720 <operator new(unsigned int)>
  10e0ac:	00119c38 	.word	0x00119c38

0010e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>:
  10e0b0:	4603      	mov	r3, r0
  10e0b2:	f853 0b08 	ldr.w	r0, [r3], #8
  10e0b6:	4298      	cmp	r0, r3
  10e0b8:	d001      	beq.n	10e0be <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()+0xe>
  10e0ba:	f7ff bb4d 	b.w	10d758 <operator delete(void*)>
  10e0be:	4770      	bx	lr

0010e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>:
  10e0c0:	2a01      	cmp	r2, #1
  10e0c2:	b510      	push	{r4, lr}
  10e0c4:	d102      	bne.n	10e0cc <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)+0xc>
  10e0c6:	780a      	ldrb	r2, [r1, #0]
  10e0c8:	7002      	strb	r2, [r0, #0]
  10e0ca:	bd10      	pop	{r4, pc}
  10e0cc:	f7ff ffd0 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e0d0:	bd10      	pop	{r4, pc}

0010e0d2 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)>:
  10e0d2:	b508      	push	{r3, lr}
  10e0d4:	1a52      	subs	r2, r2, r1
  10e0d6:	f7ff fff3 	bl	10e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>
  10e0da:	bd08      	pop	{r3, pc}

0010e0dc <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)>:
  10e0dc:	b508      	push	{r3, lr}
  10e0de:	1a52      	subs	r2, r2, r1
  10e0e0:	f7ff ffee 	bl	10e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>
  10e0e4:	bd08      	pop	{r3, pc}

0010e0e6 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>:
  10e0e6:	4288      	cmp	r0, r1
  10e0e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  10e0ea:	4604      	mov	r4, r0
  10e0ec:	460e      	mov	r6, r1
  10e0ee:	d01f      	beq.n	10e130 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x4a>
  10e0f0:	6802      	ldr	r2, [r0, #0]
  10e0f2:	f100 0308 	add.w	r3, r0, #8
  10e0f6:	429a      	cmp	r2, r3
  10e0f8:	684d      	ldr	r5, [r1, #4]
  10e0fa:	bf14      	ite	ne
  10e0fc:	6882      	ldrne	r2, [r0, #8]
  10e0fe:	220f      	moveq	r2, #15
  10e100:	42aa      	cmp	r2, r5
  10e102:	d20b      	bcs.n	10e11c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x36>
  10e104:	a902      	add	r1, sp, #8
  10e106:	f841 5d04 	str.w	r5, [r1, #-4]!
  10e10a:	f7ff ffb5 	bl	10e078 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)>
  10e10e:	4607      	mov	r7, r0
  10e110:	4620      	mov	r0, r4
  10e112:	f7ff ffcd 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  10e116:	9b01      	ldr	r3, [sp, #4]
  10e118:	6027      	str	r7, [r4, #0]
  10e11a:	60a3      	str	r3, [r4, #8]
  10e11c:	b125      	cbz	r5, 10e128 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x42>
  10e11e:	462a      	mov	r2, r5
  10e120:	6831      	ldr	r1, [r6, #0]
  10e122:	6820      	ldr	r0, [r4, #0]
  10e124:	f7ff ffcc 	bl	10e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>
  10e128:	6823      	ldr	r3, [r4, #0]
  10e12a:	2200      	movs	r2, #0
  10e12c:	6065      	str	r5, [r4, #4]
  10e12e:	555a      	strb	r2, [r3, r5]
  10e130:	b003      	add	sp, #12
  10e132:	bdf0      	pop	{r4, r5, r6, r7, pc}

0010e134 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)>:
  10e134:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
  10e138:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  10e13a:	4699      	mov	r9, r3
  10e13c:	6843      	ldr	r3, [r0, #4]
  10e13e:	4617      	mov	r7, r2
  10e140:	ebc1 0803 	rsb	r8, r1, r3
  10e144:	442b      	add	r3, r5
  10e146:	1a9b      	subs	r3, r3, r2
  10e148:	ebc2 0808 	rsb	r8, r2, r8
  10e14c:	6802      	ldr	r2, [r0, #0]
  10e14e:	9301      	str	r3, [sp, #4]
  10e150:	f100 0308 	add.w	r3, r0, #8
  10e154:	429a      	cmp	r2, r3
  10e156:	460e      	mov	r6, r1
  10e158:	bf14      	ite	ne
  10e15a:	6882      	ldrne	r2, [r0, #8]
  10e15c:	220f      	moveq	r2, #15
  10e15e:	a901      	add	r1, sp, #4
  10e160:	4604      	mov	r4, r0
  10e162:	f7ff ff89 	bl	10e078 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)>
  10e166:	4682      	mov	r10, r0
  10e168:	b11e      	cbz	r6, 10e172 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)+0x3e>
  10e16a:	4632      	mov	r2, r6
  10e16c:	6821      	ldr	r1, [r4, #0]
  10e16e:	f7ff ffa7 	bl	10e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>
  10e172:	f1b9 0f00 	cmp.w	r9, #0
  10e176:	d006      	beq.n	10e186 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)+0x52>
  10e178:	b12d      	cbz	r5, 10e186 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)+0x52>
  10e17a:	462a      	mov	r2, r5
  10e17c:	4649      	mov	r1, r9
  10e17e:	eb0a 0006 	add.w	r0, r10, r6
  10e182:	f7ff ff9d 	bl	10e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>
  10e186:	f1b8 0f00 	cmp.w	r8, #0
  10e18a:	d007      	beq.n	10e19c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)+0x68>
  10e18c:	6821      	ldr	r1, [r4, #0]
  10e18e:	4437      	add	r7, r6
  10e190:	1970      	adds	r0, r6, r5
  10e192:	4642      	mov	r2, r8
  10e194:	4439      	add	r1, r7
  10e196:	4450      	add	r0, r10
  10e198:	f7ff ff92 	bl	10e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>
  10e19c:	4620      	mov	r0, r4
  10e19e:	f7ff ff87 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  10e1a2:	9b01      	ldr	r3, [sp, #4]
  10e1a4:	f8c4 a000 	str.w	r10, [r4]
  10e1a8:	60a3      	str	r3, [r4, #8]
  10e1aa:	b002      	add	sp, #8
  10e1ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0010e1b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)>:
  10e1b0:	b570      	push	{r4, r5, r6, lr}
  10e1b2:	4604      	mov	r4, r0
  10e1b4:	460e      	mov	r6, r1
  10e1b6:	3008      	adds	r0, #8
  10e1b8:	6020      	str	r0, [r4, #0]
  10e1ba:	f856 3b08 	ldr.w	r3, [r6], #8
  10e1be:	460d      	mov	r5, r1
  10e1c0:	429e      	cmp	r6, r3
  10e1c2:	d104      	bne.n	10e1ce <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)+0x1e>
  10e1c4:	2210      	movs	r2, #16
  10e1c6:	4631      	mov	r1, r6
  10e1c8:	f7ff ff52 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e1cc:	e002      	b.n	10e1d4 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)+0x24>
  10e1ce:	6023      	str	r3, [r4, #0]
  10e1d0:	688b      	ldr	r3, [r1, #8]
  10e1d2:	60a3      	str	r3, [r4, #8]
  10e1d4:	686b      	ldr	r3, [r5, #4]
  10e1d6:	4620      	mov	r0, r4
  10e1d8:	6063      	str	r3, [r4, #4]
  10e1da:	2300      	movs	r3, #0
  10e1dc:	722b      	strb	r3, [r5, #8]
  10e1de:	602e      	str	r6, [r5, #0]
  10e1e0:	606b      	str	r3, [r5, #4]
  10e1e2:	bd70      	pop	{r4, r5, r6, pc}

0010e1e4 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>:
  10e1e4:	b510      	push	{r4, lr}
  10e1e6:	4604      	mov	r4, r0
  10e1e8:	f7ff ff62 	bl	10e0b0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()>
  10e1ec:	4620      	mov	r0, r4
  10e1ee:	bd10      	pop	{r4, pc}

0010e1f0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)>:
  10e1f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
  10e1f2:	4604      	mov	r4, r0
  10e1f4:	4626      	mov	r6, r4
  10e1f6:	f856 3b08 	ldr.w	r3, [r6], #8
  10e1fa:	6840      	ldr	r0, [r0, #4]
  10e1fc:	42b3      	cmp	r3, r6
  10e1fe:	bf18      	it	ne
  10e200:	68a6      	ldrne	r6, [r4, #8]
  10e202:	eb00 0502 	add.w	r5, r0, r2
  10e206:	bf08      	it	eq
  10e208:	260f      	moveq	r6, #15
  10e20a:	42b5      	cmp	r5, r6
  10e20c:	d804      	bhi.n	10e218 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)+0x28>
  10e20e:	b152      	cbz	r2, 10e226 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)+0x36>
  10e210:	4418      	add	r0, r3
  10e212:	f7ff ff55 	bl	10e0c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)>
  10e216:	e006      	b.n	10e226 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)+0x36>
  10e218:	9200      	str	r2, [sp, #0]
  10e21a:	460b      	mov	r3, r1
  10e21c:	2200      	movs	r2, #0
  10e21e:	4601      	mov	r1, r0
  10e220:	4620      	mov	r0, r4
  10e222:	f7ff ff87 	bl	10e134 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)>
  10e226:	4620      	mov	r0, r4
  10e228:	6823      	ldr	r3, [r4, #0]
  10e22a:	2200      	movs	r2, #0
  10e22c:	6065      	str	r5, [r4, #4]
  10e22e:	555a      	strb	r2, [r3, r5]
  10e230:	b002      	add	sp, #8
  10e232:	bd70      	pop	{r4, r5, r6, pc}

0010e234 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>:
  10e234:	b508      	push	{r3, lr}
  10e236:	c906      	ldmia	r1, {r1, r2}
  10e238:	f7ff ffda 	bl	10e1f0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)>
  10e23c:	bd08      	pop	{r3, pc}

0010e23e <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)>:
  10e23e:	4288      	cmp	r0, r1
  10e240:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  10e244:	4605      	mov	r5, r0
  10e246:	460c      	mov	r4, r1
  10e248:	d062      	beq.n	10e310 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0xd2>
  10e24a:	4606      	mov	r6, r0
  10e24c:	f856 3b08 	ldr.w	r3, [r6], #8
  10e250:	f101 0708 	add.w	r7, r1, #8
  10e254:	429e      	cmp	r6, r3
  10e256:	6809      	ldr	r1, [r1, #0]
  10e258:	d126      	bne.n	10e2a8 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x6a>
  10e25a:	428f      	cmp	r7, r1
  10e25c:	d117      	bne.n	10e28e <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x50>
  10e25e:	6843      	ldr	r3, [r0, #4]
  10e260:	f8d4 8004 	ldr.w	r8, [r4, #4]
  10e264:	2b00      	cmp	r3, #0
  10e266:	d036      	beq.n	10e2d6 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x98>
  10e268:	f1b8 0f00 	cmp.w	r8, #0
  10e26c:	d033      	beq.n	10e2d6 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x98>
  10e26e:	4639      	mov	r1, r7
  10e270:	2210      	movs	r2, #16
  10e272:	4668      	mov	r0, sp
  10e274:	f7ff fefc 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e278:	4631      	mov	r1, r6
  10e27a:	2210      	movs	r2, #16
  10e27c:	4638      	mov	r0, r7
  10e27e:	f7ff fef7 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e282:	2210      	movs	r2, #16
  10e284:	4669      	mov	r1, sp
  10e286:	4630      	mov	r0, r6
  10e288:	f7ff fef2 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e28c:	e01e      	b.n	10e2cc <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x8e>
  10e28e:	2210      	movs	r2, #16
  10e290:	4631      	mov	r1, r6
  10e292:	4638      	mov	r0, r7
  10e294:	f8d4 8008 	ldr.w	r8, [r4, #8]
  10e298:	f7ff feea 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e29c:	6823      	ldr	r3, [r4, #0]
  10e29e:	602b      	str	r3, [r5, #0]
  10e2a0:	6027      	str	r7, [r4, #0]
  10e2a2:	f8c5 8008 	str.w	r8, [r5, #8]
  10e2a6:	e011      	b.n	10e2cc <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x8e>
  10e2a8:	42b9      	cmp	r1, r7
  10e2aa:	f8d0 8008 	ldr.w	r8, [r0, #8]
  10e2ae:	d107      	bne.n	10e2c0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x82>
  10e2b0:	2210      	movs	r2, #16
  10e2b2:	4630      	mov	r0, r6
  10e2b4:	f7ff fedc 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e2b8:	682b      	ldr	r3, [r5, #0]
  10e2ba:	6023      	str	r3, [r4, #0]
  10e2bc:	602e      	str	r6, [r5, #0]
  10e2be:	e003      	b.n	10e2c8 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x8a>
  10e2c0:	6001      	str	r1, [r0, #0]
  10e2c2:	6023      	str	r3, [r4, #0]
  10e2c4:	68a3      	ldr	r3, [r4, #8]
  10e2c6:	6083      	str	r3, [r0, #8]
  10e2c8:	f8c4 8008 	str.w	r8, [r4, #8]
  10e2cc:	686b      	ldr	r3, [r5, #4]
  10e2ce:	6862      	ldr	r2, [r4, #4]
  10e2d0:	606a      	str	r2, [r5, #4]
  10e2d2:	6063      	str	r3, [r4, #4]
  10e2d4:	e01c      	b.n	10e310 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0xd2>
  10e2d6:	f1b8 0f00 	cmp.w	r8, #0
  10e2da:	d00b      	beq.n	10e2f4 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0xb6>
  10e2dc:	2210      	movs	r2, #16
  10e2de:	4639      	mov	r1, r7
  10e2e0:	4630      	mov	r0, r6
  10e2e2:	f7ff fec5 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e2e6:	6863      	ldr	r3, [r4, #4]
  10e2e8:	6822      	ldr	r2, [r4, #0]
  10e2ea:	606b      	str	r3, [r5, #4]
  10e2ec:	2300      	movs	r3, #0
  10e2ee:	6063      	str	r3, [r4, #4]
  10e2f0:	7013      	strb	r3, [r2, #0]
  10e2f2:	e00d      	b.n	10e310 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0xd2>
  10e2f4:	2b00      	cmp	r3, #0
  10e2f6:	d0e9      	beq.n	10e2cc <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x8e>
  10e2f8:	2210      	movs	r2, #16
  10e2fa:	4631      	mov	r1, r6
  10e2fc:	4638      	mov	r0, r7
  10e2fe:	f7ff feb7 	bl	10e070 <std::char_traits<char>::copy(char*, char const*, unsigned int)>
  10e302:	686b      	ldr	r3, [r5, #4]
  10e304:	6063      	str	r3, [r4, #4]
  10e306:	682b      	ldr	r3, [r5, #0]
  10e308:	f8c5 8004 	str.w	r8, [r5, #4]
  10e30c:	f883 8000 	strb.w	r8, [r3]
  10e310:	b004      	add	sp, #16
  10e312:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0010e316 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const>:
  10e316:	b538      	push	{r3, r4, r5, lr}
  10e318:	6845      	ldr	r5, [r0, #4]
  10e31a:	684c      	ldr	r4, [r1, #4]
  10e31c:	462a      	mov	r2, r5
  10e31e:	42a5      	cmp	r5, r4
  10e320:	bf28      	it	cs
  10e322:	4622      	movcs	r2, r4
  10e324:	6809      	ldr	r1, [r1, #0]
  10e326:	6800      	ldr	r0, [r0, #0]
  10e328:	f7ff fe9d 	bl	10e066 <std::char_traits<char>::compare(char const*, char const*, unsigned int)>
  10e32c:	b900      	cbnz	r0, 10e330 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+0x1a>
  10e32e:	1b28      	subs	r0, r5, r4
  10e330:	bd38      	pop	{r3, r4, r5, pc}
	...

0010e334 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)>:
  10e334:	b573      	push	{r0, r1, r4, r5, r6, lr}
  10e336:	4604      	mov	r4, r0
  10e338:	4616      	mov	r6, r2
  10e33a:	460d      	mov	r5, r1
  10e33c:	b901      	cbnz	r1, 10e340 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0xc>
  10e33e:	b9ba      	cbnz	r2, 10e370 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x3c>
  10e340:	1b73      	subs	r3, r6, r5
  10e342:	2b0f      	cmp	r3, #15
  10e344:	9301      	str	r3, [sp, #4]
  10e346:	d907      	bls.n	10e358 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x24>
  10e348:	2200      	movs	r2, #0
  10e34a:	a901      	add	r1, sp, #4
  10e34c:	4620      	mov	r0, r4
  10e34e:	f7ff fe93 	bl	10e078 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)>
  10e352:	9b01      	ldr	r3, [sp, #4]
  10e354:	6020      	str	r0, [r4, #0]
  10e356:	60a3      	str	r3, [r4, #8]
  10e358:	4632      	mov	r2, r6
  10e35a:	4629      	mov	r1, r5
  10e35c:	6820      	ldr	r0, [r4, #0]
  10e35e:	f7ff feb8 	bl	10e0d2 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)>
  10e362:	9b01      	ldr	r3, [sp, #4]
  10e364:	6822      	ldr	r2, [r4, #0]
  10e366:	2100      	movs	r1, #0
  10e368:	6063      	str	r3, [r4, #4]
  10e36a:	54d1      	strb	r1, [r2, r3]
  10e36c:	b002      	add	sp, #8
  10e36e:	bd70      	pop	{r4, r5, r6, pc}
  10e370:	4801      	ldr	r0, [pc, #4]	; (10e378 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)+0x44>)
  10e372:	f7ff fe72 	bl	10e05a <std::__throw_logic_error(char const*)>
  10e376:	bf00      	nop
  10e378:	00116014 	.word	0x00116014

0010e37c <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>:
  10e37c:	b510      	push	{r4, lr}
  10e37e:	4604      	mov	r4, r0
  10e380:	f100 0208 	add.w	r2, r0, #8
  10e384:	6002      	str	r2, [r0, #0]
  10e386:	c906      	ldmia	r1, {r1, r2}
  10e388:	f04f 0300 	mov.w	r3, #0
  10e38c:	440a      	add	r2, r1
  10e38e:	f7ff ffd1 	bl	10e334 <void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)>
  10e392:	4620      	mov	r0, r4
  10e394:	bd10      	pop	{r4, pc}
	...

0010e398 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj>:
  10e398:	4b24      	ldr	r3, [pc, #144]	; (10e42c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x94>)
  10e39a:	681a      	ldr	r2, [r3, #0]
  10e39c:	07d0      	lsls	r0, r2, #31
  10e39e:	bf5c      	itt	pl
  10e3a0:	2201      	movpl	r2, #1
  10e3a2:	601a      	strpl	r2, [r3, #0]
  10e3a4:	4b22      	ldr	r3, [pc, #136]	; (10e430 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x98>)
  10e3a6:	681a      	ldr	r2, [r3, #0]
  10e3a8:	07d1      	lsls	r1, r2, #31
  10e3aa:	bf5c      	itt	pl
  10e3ac:	2201      	movpl	r2, #1
  10e3ae:	601a      	strpl	r2, [r3, #0]
  10e3b0:	4b20      	ldr	r3, [pc, #128]	; (10e434 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x9c>)
  10e3b2:	681a      	ldr	r2, [r3, #0]
  10e3b4:	07d2      	lsls	r2, r2, #31
  10e3b6:	bf5c      	itt	pl
  10e3b8:	2201      	movpl	r2, #1
  10e3ba:	601a      	strpl	r2, [r3, #0]
  10e3bc:	4b1e      	ldr	r3, [pc, #120]	; (10e438 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa0>)
  10e3be:	681a      	ldr	r2, [r3, #0]
  10e3c0:	07d0      	lsls	r0, r2, #31
  10e3c2:	bf5c      	itt	pl
  10e3c4:	2201      	movpl	r2, #1
  10e3c6:	601a      	strpl	r2, [r3, #0]
  10e3c8:	4b1c      	ldr	r3, [pc, #112]	; (10e43c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa4>)
  10e3ca:	681a      	ldr	r2, [r3, #0]
  10e3cc:	07d1      	lsls	r1, r2, #31
  10e3ce:	bf5c      	itt	pl
  10e3d0:	2201      	movpl	r2, #1
  10e3d2:	601a      	strpl	r2, [r3, #0]
  10e3d4:	4b1a      	ldr	r3, [pc, #104]	; (10e440 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa8>)
  10e3d6:	681a      	ldr	r2, [r3, #0]
  10e3d8:	07d2      	lsls	r2, r2, #31
  10e3da:	bf5c      	itt	pl
  10e3dc:	2201      	movpl	r2, #1
  10e3de:	601a      	strpl	r2, [r3, #0]
  10e3e0:	4b18      	ldr	r3, [pc, #96]	; (10e444 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xac>)
  10e3e2:	681a      	ldr	r2, [r3, #0]
  10e3e4:	07d0      	lsls	r0, r2, #31
  10e3e6:	bf5c      	itt	pl
  10e3e8:	2201      	movpl	r2, #1
  10e3ea:	601a      	strpl	r2, [r3, #0]
  10e3ec:	4b16      	ldr	r3, [pc, #88]	; (10e448 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb0>)
  10e3ee:	681a      	ldr	r2, [r3, #0]
  10e3f0:	07d1      	lsls	r1, r2, #31
  10e3f2:	bf5c      	itt	pl
  10e3f4:	2201      	movpl	r2, #1
  10e3f6:	601a      	strpl	r2, [r3, #0]
  10e3f8:	4b14      	ldr	r3, [pc, #80]	; (10e44c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb4>)
  10e3fa:	681a      	ldr	r2, [r3, #0]
  10e3fc:	07d2      	lsls	r2, r2, #31
  10e3fe:	bf5c      	itt	pl
  10e400:	2201      	movpl	r2, #1
  10e402:	601a      	strpl	r2, [r3, #0]
  10e404:	4b12      	ldr	r3, [pc, #72]	; (10e450 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb8>)
  10e406:	681a      	ldr	r2, [r3, #0]
  10e408:	07d0      	lsls	r0, r2, #31
  10e40a:	bf5c      	itt	pl
  10e40c:	2201      	movpl	r2, #1
  10e40e:	601a      	strpl	r2, [r3, #0]
  10e410:	4b10      	ldr	r3, [pc, #64]	; (10e454 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xbc>)
  10e412:	681a      	ldr	r2, [r3, #0]
  10e414:	07d1      	lsls	r1, r2, #31
  10e416:	bf5c      	itt	pl
  10e418:	2201      	movpl	r2, #1
  10e41a:	601a      	strpl	r2, [r3, #0]
  10e41c:	4b0e      	ldr	r3, [pc, #56]	; (10e458 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xc0>)
  10e41e:	681a      	ldr	r2, [r3, #0]
  10e420:	07d2      	lsls	r2, r2, #31
  10e422:	bf5c      	itt	pl
  10e424:	2201      	movpl	r2, #1
  10e426:	601a      	strpl	r2, [r3, #0]
  10e428:	4770      	bx	lr
  10e42a:	bf00      	nop
  10e42c:	3fff8d74 	.word	0x3fff8d74
  10e430:	3fff8d70 	.word	0x3fff8d70
  10e434:	3fff8d6c 	.word	0x3fff8d6c
  10e438:	3fff8d68 	.word	0x3fff8d68
  10e43c:	3fff8d64 	.word	0x3fff8d64
  10e440:	3fff8d60 	.word	0x3fff8d60
  10e444:	3fff8d5c 	.word	0x3fff8d5c
  10e448:	3fff8d58 	.word	0x3fff8d58
  10e44c:	3fff8d54 	.word	0x3fff8d54
  10e450:	3fff8d50 	.word	0x3fff8d50
  10e454:	3fff8d4c 	.word	0x3fff8d4c
  10e458:	3fff8d48 	.word	0x3fff8d48

0010e45c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
  10e45c:	4b18      	ldr	r3, [pc, #96]	; (10e4c0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
  10e45e:	681a      	ldr	r2, [r3, #0]
  10e460:	07d1      	lsls	r1, r2, #31
  10e462:	bf5c      	itt	pl
  10e464:	2201      	movpl	r2, #1
  10e466:	601a      	strpl	r2, [r3, #0]
  10e468:	4b16      	ldr	r3, [pc, #88]	; (10e4c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
  10e46a:	681a      	ldr	r2, [r3, #0]
  10e46c:	07d2      	lsls	r2, r2, #31
  10e46e:	bf5c      	itt	pl
  10e470:	2201      	movpl	r2, #1
  10e472:	601a      	strpl	r2, [r3, #0]
  10e474:	4b14      	ldr	r3, [pc, #80]	; (10e4c8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
  10e476:	681a      	ldr	r2, [r3, #0]
  10e478:	07d0      	lsls	r0, r2, #31
  10e47a:	bf5c      	itt	pl
  10e47c:	2201      	movpl	r2, #1
  10e47e:	601a      	strpl	r2, [r3, #0]
  10e480:	4b12      	ldr	r3, [pc, #72]	; (10e4cc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
  10e482:	681a      	ldr	r2, [r3, #0]
  10e484:	07d1      	lsls	r1, r2, #31
  10e486:	bf5c      	itt	pl
  10e488:	2201      	movpl	r2, #1
  10e48a:	601a      	strpl	r2, [r3, #0]
  10e48c:	4b10      	ldr	r3, [pc, #64]	; (10e4d0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
  10e48e:	681a      	ldr	r2, [r3, #0]
  10e490:	07d2      	lsls	r2, r2, #31
  10e492:	bf5c      	itt	pl
  10e494:	2201      	movpl	r2, #1
  10e496:	601a      	strpl	r2, [r3, #0]
  10e498:	4b0e      	ldr	r3, [pc, #56]	; (10e4d4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
  10e49a:	681a      	ldr	r2, [r3, #0]
  10e49c:	07d0      	lsls	r0, r2, #31
  10e49e:	bf5c      	itt	pl
  10e4a0:	2201      	movpl	r2, #1
  10e4a2:	601a      	strpl	r2, [r3, #0]
  10e4a4:	4b0c      	ldr	r3, [pc, #48]	; (10e4d8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
  10e4a6:	681a      	ldr	r2, [r3, #0]
  10e4a8:	07d1      	lsls	r1, r2, #31
  10e4aa:	bf5c      	itt	pl
  10e4ac:	2201      	movpl	r2, #1
  10e4ae:	601a      	strpl	r2, [r3, #0]
  10e4b0:	4b0a      	ldr	r3, [pc, #40]	; (10e4dc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
  10e4b2:	681a      	ldr	r2, [r3, #0]
  10e4b4:	07d2      	lsls	r2, r2, #31
  10e4b6:	bf5c      	itt	pl
  10e4b8:	2201      	movpl	r2, #1
  10e4ba:	601a      	strpl	r2, [r3, #0]
  10e4bc:	4770      	bx	lr
  10e4be:	bf00      	nop
  10e4c0:	3fff8d94 	.word	0x3fff8d94
  10e4c4:	3fff8d90 	.word	0x3fff8d90
  10e4c8:	3fff8d8c 	.word	0x3fff8d8c
  10e4cc:	3fff8d88 	.word	0x3fff8d88
  10e4d0:	3fff8d84 	.word	0x3fff8d84
  10e4d4:	3fff8d80 	.word	0x3fff8d80
  10e4d8:	3fff8d7c 	.word	0x3fff8d7c
  10e4dc:	3fff8d78 	.word	0x3fff8d78

0010e4e0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj>:
  10e4e0:	4b24      	ldr	r3, [pc, #144]	; (10e574 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x94>)
  10e4e2:	681a      	ldr	r2, [r3, #0]
  10e4e4:	07d0      	lsls	r0, r2, #31
  10e4e6:	bf5c      	itt	pl
  10e4e8:	2201      	movpl	r2, #1
  10e4ea:	601a      	strpl	r2, [r3, #0]
  10e4ec:	4b22      	ldr	r3, [pc, #136]	; (10e578 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x98>)
  10e4ee:	681a      	ldr	r2, [r3, #0]
  10e4f0:	07d1      	lsls	r1, r2, #31
  10e4f2:	bf5c      	itt	pl
  10e4f4:	2201      	movpl	r2, #1
  10e4f6:	601a      	strpl	r2, [r3, #0]
  10e4f8:	4b20      	ldr	r3, [pc, #128]	; (10e57c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x9c>)
  10e4fa:	681a      	ldr	r2, [r3, #0]
  10e4fc:	07d2      	lsls	r2, r2, #31
  10e4fe:	bf5c      	itt	pl
  10e500:	2201      	movpl	r2, #1
  10e502:	601a      	strpl	r2, [r3, #0]
  10e504:	4b1e      	ldr	r3, [pc, #120]	; (10e580 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa0>)
  10e506:	681a      	ldr	r2, [r3, #0]
  10e508:	07d0      	lsls	r0, r2, #31
  10e50a:	bf5c      	itt	pl
  10e50c:	2201      	movpl	r2, #1
  10e50e:	601a      	strpl	r2, [r3, #0]
  10e510:	4b1c      	ldr	r3, [pc, #112]	; (10e584 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa4>)
  10e512:	681a      	ldr	r2, [r3, #0]
  10e514:	07d1      	lsls	r1, r2, #31
  10e516:	bf5c      	itt	pl
  10e518:	2201      	movpl	r2, #1
  10e51a:	601a      	strpl	r2, [r3, #0]
  10e51c:	4b1a      	ldr	r3, [pc, #104]	; (10e588 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa8>)
  10e51e:	681a      	ldr	r2, [r3, #0]
  10e520:	07d2      	lsls	r2, r2, #31
  10e522:	bf5c      	itt	pl
  10e524:	2201      	movpl	r2, #1
  10e526:	601a      	strpl	r2, [r3, #0]
  10e528:	4b18      	ldr	r3, [pc, #96]	; (10e58c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xac>)
  10e52a:	681a      	ldr	r2, [r3, #0]
  10e52c:	07d0      	lsls	r0, r2, #31
  10e52e:	bf5c      	itt	pl
  10e530:	2201      	movpl	r2, #1
  10e532:	601a      	strpl	r2, [r3, #0]
  10e534:	4b16      	ldr	r3, [pc, #88]	; (10e590 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb0>)
  10e536:	681a      	ldr	r2, [r3, #0]
  10e538:	07d1      	lsls	r1, r2, #31
  10e53a:	bf5c      	itt	pl
  10e53c:	2201      	movpl	r2, #1
  10e53e:	601a      	strpl	r2, [r3, #0]
  10e540:	4b14      	ldr	r3, [pc, #80]	; (10e594 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb4>)
  10e542:	681a      	ldr	r2, [r3, #0]
  10e544:	07d2      	lsls	r2, r2, #31
  10e546:	bf5c      	itt	pl
  10e548:	2201      	movpl	r2, #1
  10e54a:	601a      	strpl	r2, [r3, #0]
  10e54c:	4b12      	ldr	r3, [pc, #72]	; (10e598 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb8>)
  10e54e:	681a      	ldr	r2, [r3, #0]
  10e550:	07d0      	lsls	r0, r2, #31
  10e552:	bf5c      	itt	pl
  10e554:	2201      	movpl	r2, #1
  10e556:	601a      	strpl	r2, [r3, #0]
  10e558:	4b10      	ldr	r3, [pc, #64]	; (10e59c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xbc>)
  10e55a:	681a      	ldr	r2, [r3, #0]
  10e55c:	07d1      	lsls	r1, r2, #31
  10e55e:	bf5c      	itt	pl
  10e560:	2201      	movpl	r2, #1
  10e562:	601a      	strpl	r2, [r3, #0]
  10e564:	4b0e      	ldr	r3, [pc, #56]	; (10e5a0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xc0>)
  10e566:	681a      	ldr	r2, [r3, #0]
  10e568:	07d2      	lsls	r2, r2, #31
  10e56a:	bf5c      	itt	pl
  10e56c:	2201      	movpl	r2, #1
  10e56e:	601a      	strpl	r2, [r3, #0]
  10e570:	4770      	bx	lr
  10e572:	bf00      	nop
  10e574:	3fff8dc4 	.word	0x3fff8dc4
  10e578:	3fff8dc0 	.word	0x3fff8dc0
  10e57c:	3fff8dbc 	.word	0x3fff8dbc
  10e580:	3fff8db8 	.word	0x3fff8db8
  10e584:	3fff8db4 	.word	0x3fff8db4
  10e588:	3fff8db0 	.word	0x3fff8db0
  10e58c:	3fff8dac 	.word	0x3fff8dac
  10e590:	3fff8da8 	.word	0x3fff8da8
  10e594:	3fff8da4 	.word	0x3fff8da4
  10e598:	3fff8da0 	.word	0x3fff8da0
  10e59c:	3fff8d9c 	.word	0x3fff8d9c
  10e5a0:	3fff8d98 	.word	0x3fff8d98

0010e5a4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
  10e5a4:	4b18      	ldr	r3, [pc, #96]	; (10e608 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
  10e5a6:	681a      	ldr	r2, [r3, #0]
  10e5a8:	07d1      	lsls	r1, r2, #31
  10e5aa:	bf5c      	itt	pl
  10e5ac:	2201      	movpl	r2, #1
  10e5ae:	601a      	strpl	r2, [r3, #0]
  10e5b0:	4b16      	ldr	r3, [pc, #88]	; (10e60c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
  10e5b2:	681a      	ldr	r2, [r3, #0]
  10e5b4:	07d2      	lsls	r2, r2, #31
  10e5b6:	bf5c      	itt	pl
  10e5b8:	2201      	movpl	r2, #1
  10e5ba:	601a      	strpl	r2, [r3, #0]
  10e5bc:	4b14      	ldr	r3, [pc, #80]	; (10e610 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
  10e5be:	681a      	ldr	r2, [r3, #0]
  10e5c0:	07d0      	lsls	r0, r2, #31
  10e5c2:	bf5c      	itt	pl
  10e5c4:	2201      	movpl	r2, #1
  10e5c6:	601a      	strpl	r2, [r3, #0]
  10e5c8:	4b12      	ldr	r3, [pc, #72]	; (10e614 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
  10e5ca:	681a      	ldr	r2, [r3, #0]
  10e5cc:	07d1      	lsls	r1, r2, #31
  10e5ce:	bf5c      	itt	pl
  10e5d0:	2201      	movpl	r2, #1
  10e5d2:	601a      	strpl	r2, [r3, #0]
  10e5d4:	4b10      	ldr	r3, [pc, #64]	; (10e618 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
  10e5d6:	681a      	ldr	r2, [r3, #0]
  10e5d8:	07d2      	lsls	r2, r2, #31
  10e5da:	bf5c      	itt	pl
  10e5dc:	2201      	movpl	r2, #1
  10e5de:	601a      	strpl	r2, [r3, #0]
  10e5e0:	4b0e      	ldr	r3, [pc, #56]	; (10e61c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
  10e5e2:	681a      	ldr	r2, [r3, #0]
  10e5e4:	07d0      	lsls	r0, r2, #31
  10e5e6:	bf5c      	itt	pl
  10e5e8:	2201      	movpl	r2, #1
  10e5ea:	601a      	strpl	r2, [r3, #0]
  10e5ec:	4b0c      	ldr	r3, [pc, #48]	; (10e620 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
  10e5ee:	681a      	ldr	r2, [r3, #0]
  10e5f0:	07d1      	lsls	r1, r2, #31
  10e5f2:	bf5c      	itt	pl
  10e5f4:	2201      	movpl	r2, #1
  10e5f6:	601a      	strpl	r2, [r3, #0]
  10e5f8:	4b0a      	ldr	r3, [pc, #40]	; (10e624 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
  10e5fa:	681a      	ldr	r2, [r3, #0]
  10e5fc:	07d2      	lsls	r2, r2, #31
  10e5fe:	bf5c      	itt	pl
  10e600:	2201      	movpl	r2, #1
  10e602:	601a      	strpl	r2, [r3, #0]
  10e604:	4770      	bx	lr
  10e606:	bf00      	nop
  10e608:	3fff8de4 	.word	0x3fff8de4
  10e60c:	3fff8de0 	.word	0x3fff8de0
  10e610:	3fff8ddc 	.word	0x3fff8ddc
  10e614:	3fff8dd8 	.word	0x3fff8dd8
  10e618:	3fff8dd4 	.word	0x3fff8dd4
  10e61c:	3fff8dd0 	.word	0x3fff8dd0
  10e620:	3fff8dcc 	.word	0x3fff8dcc
  10e624:	3fff8dc8 	.word	0x3fff8dc8

0010e628 <__aeabi_drsub>:
  10e628:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  10e62c:	e002      	b.n	10e634 <__adddf3>
  10e62e:	bf00      	nop

0010e630 <__aeabi_dsub>:
  10e630:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0010e634 <__adddf3>:
  10e634:	b530      	push	{r4, r5, lr}
  10e636:	ea4f 0441 	mov.w	r4, r1, lsl #1
  10e63a:	ea4f 0543 	mov.w	r5, r3, lsl #1
  10e63e:	ea94 0f05 	teq	r4, r5
  10e642:	bf08      	it	eq
  10e644:	ea90 0f02 	teqeq	r0, r2
  10e648:	bf1f      	itttt	ne
  10e64a:	ea54 0c00 	orrsne.w	r12, r4, r0
  10e64e:	ea55 0c02 	orrsne.w	r12, r5, r2
  10e652:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
  10e656:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
  10e65a:	f000 80e2 	beq.w	10e822 <__adddf3+0x1ee>
  10e65e:	ea4f 5454 	mov.w	r4, r4, lsr #21
  10e662:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  10e666:	bfb8      	it	lt
  10e668:	426d      	neglt	r5, r5
  10e66a:	dd0c      	ble.n	10e686 <__adddf3+0x52>
  10e66c:	442c      	add	r4, r5
  10e66e:	ea80 0202 	eor.w	r2, r0, r2
  10e672:	ea81 0303 	eor.w	r3, r1, r3
  10e676:	ea82 0000 	eor.w	r0, r2, r0
  10e67a:	ea83 0101 	eor.w	r1, r3, r1
  10e67e:	ea80 0202 	eor.w	r2, r0, r2
  10e682:	ea81 0303 	eor.w	r3, r1, r3
  10e686:	2d36      	cmp	r5, #54	; 0x36
  10e688:	bf88      	it	hi
  10e68a:	bd30      	pophi	{r4, r5, pc}
  10e68c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  10e690:	ea4f 3101 	mov.w	r1, r1, lsl #12
  10e694:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
  10e698:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
  10e69c:	d002      	beq.n	10e6a4 <__adddf3+0x70>
  10e69e:	4240      	negs	r0, r0
  10e6a0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  10e6a4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  10e6a8:	ea4f 3303 	mov.w	r3, r3, lsl #12
  10e6ac:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
  10e6b0:	d002      	beq.n	10e6b8 <__adddf3+0x84>
  10e6b2:	4252      	negs	r2, r2
  10e6b4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  10e6b8:	ea94 0f05 	teq	r4, r5
  10e6bc:	f000 80a7 	beq.w	10e80e <__adddf3+0x1da>
  10e6c0:	f1a4 0401 	sub.w	r4, r4, #1
  10e6c4:	f1d5 0e20 	rsbs	lr, r5, #32
  10e6c8:	db0d      	blt.n	10e6e6 <__adddf3+0xb2>
  10e6ca:	fa02 fc0e 	lsl.w	r12, r2, lr
  10e6ce:	fa22 f205 	lsr.w	r2, r2, r5
  10e6d2:	1880      	adds	r0, r0, r2
  10e6d4:	f141 0100 	adc.w	r1, r1, #0
  10e6d8:	fa03 f20e 	lsl.w	r2, r3, lr
  10e6dc:	1880      	adds	r0, r0, r2
  10e6de:	fa43 f305 	asr.w	r3, r3, r5
  10e6e2:	4159      	adcs	r1, r3
  10e6e4:	e00e      	b.n	10e704 <__adddf3+0xd0>
  10e6e6:	f1a5 0520 	sub.w	r5, r5, #32
  10e6ea:	f10e 0e20 	add.w	lr, lr, #32
  10e6ee:	2a01      	cmp	r2, #1
  10e6f0:	fa03 fc0e 	lsl.w	r12, r3, lr
  10e6f4:	bf28      	it	cs
  10e6f6:	f04c 0c02 	orrcs.w	r12, r12, #2
  10e6fa:	fa43 f305 	asr.w	r3, r3, r5
  10e6fe:	18c0      	adds	r0, r0, r3
  10e700:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  10e704:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  10e708:	d507      	bpl.n	10e71a <__adddf3+0xe6>
  10e70a:	f04f 0e00 	mov.w	lr, #0
  10e70e:	f1dc 0c00 	rsbs	r12, r12, #0
  10e712:	eb7e 0000 	sbcs.w	r0, lr, r0
  10e716:	eb6e 0101 	sbc.w	r1, lr, r1
  10e71a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  10e71e:	d31b      	bcc.n	10e758 <__adddf3+0x124>
  10e720:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  10e724:	d30c      	bcc.n	10e740 <__adddf3+0x10c>
  10e726:	0849      	lsrs	r1, r1, #1
  10e728:	ea5f 0030 	movs.w	r0, r0, rrx
  10e72c:	ea4f 0c3c 	mov.w	r12, r12, rrx
  10e730:	f104 0401 	add.w	r4, r4, #1
  10e734:	ea4f 5244 	mov.w	r2, r4, lsl #21
  10e738:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  10e73c:	f080 809a 	bcs.w	10e874 <__adddf3+0x240>
  10e740:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
  10e744:	bf08      	it	eq
  10e746:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
  10e74a:	f150 0000 	adcs.w	r0, r0, #0
  10e74e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  10e752:	ea41 0105 	orr.w	r1, r1, r5
  10e756:	bd30      	pop	{r4, r5, pc}
  10e758:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
  10e75c:	4140      	adcs	r0, r0
  10e75e:	eb41 0101 	adc.w	r1, r1, r1
  10e762:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  10e766:	f1a4 0401 	sub.w	r4, r4, #1
  10e76a:	d1e9      	bne.n	10e740 <__adddf3+0x10c>
  10e76c:	f091 0f00 	teq	r1, #0
  10e770:	bf04      	itt	eq
  10e772:	4601      	moveq	r1, r0
  10e774:	2000      	moveq	r0, #0
  10e776:	fab1 f381 	clz	r3, r1
  10e77a:	bf08      	it	eq
  10e77c:	3320      	addeq	r3, #32
  10e77e:	f1a3 030b 	sub.w	r3, r3, #11
  10e782:	f1b3 0220 	subs.w	r2, r3, #32
  10e786:	da0c      	bge.n	10e7a2 <__adddf3+0x16e>
  10e788:	320c      	adds	r2, #12
  10e78a:	dd08      	ble.n	10e79e <__adddf3+0x16a>
  10e78c:	f102 0c14 	add.w	r12, r2, #20
  10e790:	f1c2 020c 	rsb	r2, r2, #12
  10e794:	fa01 f00c 	lsl.w	r0, r1, r12
  10e798:	fa21 f102 	lsr.w	r1, r1, r2
  10e79c:	e00c      	b.n	10e7b8 <__adddf3+0x184>
  10e79e:	f102 0214 	add.w	r2, r2, #20
  10e7a2:	bfd8      	it	le
  10e7a4:	f1c2 0c20 	rsble	r12, r2, #32
  10e7a8:	fa01 f102 	lsl.w	r1, r1, r2
  10e7ac:	fa20 fc0c 	lsr.w	r12, r0, r12
  10e7b0:	bfdc      	itt	le
  10e7b2:	ea41 010c 	orrle.w	r1, r1, r12
  10e7b6:	4090      	lslle	r0, r2
  10e7b8:	1ae4      	subs	r4, r4, r3
  10e7ba:	bfa2      	ittt	ge
  10e7bc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  10e7c0:	4329      	orrge	r1, r5
  10e7c2:	bd30      	popge	{r4, r5, pc}
  10e7c4:	ea6f 0404 	mvn.w	r4, r4
  10e7c8:	3c1f      	subs	r4, #31
  10e7ca:	da1c      	bge.n	10e806 <__adddf3+0x1d2>
  10e7cc:	340c      	adds	r4, #12
  10e7ce:	dc0e      	bgt.n	10e7ee <__adddf3+0x1ba>
  10e7d0:	f104 0414 	add.w	r4, r4, #20
  10e7d4:	f1c4 0220 	rsb	r2, r4, #32
  10e7d8:	fa20 f004 	lsr.w	r0, r0, r4
  10e7dc:	fa01 f302 	lsl.w	r3, r1, r2
  10e7e0:	ea40 0003 	orr.w	r0, r0, r3
  10e7e4:	fa21 f304 	lsr.w	r3, r1, r4
  10e7e8:	ea45 0103 	orr.w	r1, r5, r3
  10e7ec:	bd30      	pop	{r4, r5, pc}
  10e7ee:	f1c4 040c 	rsb	r4, r4, #12
  10e7f2:	f1c4 0220 	rsb	r2, r4, #32
  10e7f6:	fa20 f002 	lsr.w	r0, r0, r2
  10e7fa:	fa01 f304 	lsl.w	r3, r1, r4
  10e7fe:	ea40 0003 	orr.w	r0, r0, r3
  10e802:	4629      	mov	r1, r5
  10e804:	bd30      	pop	{r4, r5, pc}
  10e806:	fa21 f004 	lsr.w	r0, r1, r4
  10e80a:	4629      	mov	r1, r5
  10e80c:	bd30      	pop	{r4, r5, pc}
  10e80e:	f094 0f00 	teq	r4, #0
  10e812:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  10e816:	bf06      	itte	eq
  10e818:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  10e81c:	3401      	addeq	r4, #1
  10e81e:	3d01      	subne	r5, #1
  10e820:	e74e      	b.n	10e6c0 <__adddf3+0x8c>
  10e822:	ea7f 5c64 	mvns.w	r12, r4, asr #21
  10e826:	bf18      	it	ne
  10e828:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
  10e82c:	d029      	beq.n	10e882 <__adddf3+0x24e>
  10e82e:	ea94 0f05 	teq	r4, r5
  10e832:	bf08      	it	eq
  10e834:	ea90 0f02 	teqeq	r0, r2
  10e838:	d005      	beq.n	10e846 <__adddf3+0x212>
  10e83a:	ea54 0c00 	orrs.w	r12, r4, r0
  10e83e:	bf04      	itt	eq
  10e840:	4619      	moveq	r1, r3
  10e842:	4610      	moveq	r0, r2
  10e844:	bd30      	pop	{r4, r5, pc}
  10e846:	ea91 0f03 	teq	r1, r3
  10e84a:	bf1e      	ittt	ne
  10e84c:	2100      	movne	r1, #0
  10e84e:	2000      	movne	r0, #0
  10e850:	bd30      	popne	{r4, r5, pc}
  10e852:	ea5f 5c54 	movs.w	r12, r4, lsr #21
  10e856:	d105      	bne.n	10e864 <__adddf3+0x230>
  10e858:	0040      	lsls	r0, r0, #1
  10e85a:	4149      	adcs	r1, r1
  10e85c:	bf28      	it	cs
  10e85e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  10e862:	bd30      	pop	{r4, r5, pc}
  10e864:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  10e868:	bf3c      	itt	cc
  10e86a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  10e86e:	bd30      	popcc	{r4, r5, pc}
  10e870:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  10e874:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  10e878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  10e87c:	f04f 0000 	mov.w	r0, #0
  10e880:	bd30      	pop	{r4, r5, pc}
  10e882:	ea7f 5c64 	mvns.w	r12, r4, asr #21
  10e886:	bf1a      	itte	ne
  10e888:	4619      	movne	r1, r3
  10e88a:	4610      	movne	r0, r2
  10e88c:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
  10e890:	bf1c      	itt	ne
  10e892:	460b      	movne	r3, r1
  10e894:	4602      	movne	r2, r0
  10e896:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  10e89a:	bf06      	itte	eq
  10e89c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  10e8a0:	ea91 0f03 	teqeq	r1, r3
  10e8a4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  10e8a8:	bd30      	pop	{r4, r5, pc}
  10e8aa:	bf00      	nop

0010e8ac <__aeabi_ui2d>:
  10e8ac:	f090 0f00 	teq	r0, #0
  10e8b0:	bf04      	itt	eq
  10e8b2:	2100      	moveq	r1, #0
  10e8b4:	4770      	bxeq	lr
  10e8b6:	b530      	push	{r4, r5, lr}
  10e8b8:	f44f 6480 	mov.w	r4, #1024	; 0x400
  10e8bc:	f104 0432 	add.w	r4, r4, #50	; 0x32
  10e8c0:	f04f 0500 	mov.w	r5, #0
  10e8c4:	f04f 0100 	mov.w	r1, #0
  10e8c8:	e750      	b.n	10e76c <__adddf3+0x138>
  10e8ca:	bf00      	nop

0010e8cc <__aeabi_i2d>:
  10e8cc:	f090 0f00 	teq	r0, #0
  10e8d0:	bf04      	itt	eq
  10e8d2:	2100      	moveq	r1, #0
  10e8d4:	4770      	bxeq	lr
  10e8d6:	b530      	push	{r4, r5, lr}
  10e8d8:	f44f 6480 	mov.w	r4, #1024	; 0x400
  10e8dc:	f104 0432 	add.w	r4, r4, #50	; 0x32
  10e8e0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  10e8e4:	bf48      	it	mi
  10e8e6:	4240      	negmi	r0, r0
  10e8e8:	f04f 0100 	mov.w	r1, #0
  10e8ec:	e73e      	b.n	10e76c <__adddf3+0x138>
  10e8ee:	bf00      	nop

0010e8f0 <__aeabi_f2d>:
  10e8f0:	0042      	lsls	r2, r0, #1
  10e8f2:	ea4f 01e2 	mov.w	r1, r2, asr #3
  10e8f6:	ea4f 0131 	mov.w	r1, r1, rrx
  10e8fa:	ea4f 7002 	mov.w	r0, r2, lsl #28
  10e8fe:	bf1f      	itttt	ne
  10e900:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  10e904:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  10e908:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  10e90c:	4770      	bxne	lr
  10e90e:	f092 0f00 	teq	r2, #0
  10e912:	bf14      	ite	ne
  10e914:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  10e918:	4770      	bxeq	lr
  10e91a:	b530      	push	{r4, r5, lr}
  10e91c:	f44f 7460 	mov.w	r4, #896	; 0x380
  10e920:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  10e924:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  10e928:	e720      	b.n	10e76c <__adddf3+0x138>
  10e92a:	bf00      	nop

0010e92c <__aeabi_ul2d>:
  10e92c:	ea50 0201 	orrs.w	r2, r0, r1
  10e930:	bf08      	it	eq
  10e932:	4770      	bxeq	lr
  10e934:	b530      	push	{r4, r5, lr}
  10e936:	f04f 0500 	mov.w	r5, #0
  10e93a:	e00a      	b.n	10e952 <__aeabi_l2d+0x16>

0010e93c <__aeabi_l2d>:
  10e93c:	ea50 0201 	orrs.w	r2, r0, r1
  10e940:	bf08      	it	eq
  10e942:	4770      	bxeq	lr
  10e944:	b530      	push	{r4, r5, lr}
  10e946:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  10e94a:	d502      	bpl.n	10e952 <__aeabi_l2d+0x16>
  10e94c:	4240      	negs	r0, r0
  10e94e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  10e952:	f44f 6480 	mov.w	r4, #1024	; 0x400
  10e956:	f104 0432 	add.w	r4, r4, #50	; 0x32
  10e95a:	ea5f 5c91 	movs.w	r12, r1, lsr #22
  10e95e:	f43f aedc 	beq.w	10e71a <__adddf3+0xe6>
  10e962:	f04f 0203 	mov.w	r2, #3
  10e966:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
  10e96a:	bf18      	it	ne
  10e96c:	3203      	addne	r2, #3
  10e96e:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
  10e972:	bf18      	it	ne
  10e974:	3203      	addne	r2, #3
  10e976:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
  10e97a:	f1c2 0320 	rsb	r3, r2, #32
  10e97e:	fa00 fc03 	lsl.w	r12, r0, r3
  10e982:	fa20 f002 	lsr.w	r0, r0, r2
  10e986:	fa01 fe03 	lsl.w	lr, r1, r3
  10e98a:	ea40 000e 	orr.w	r0, r0, lr
  10e98e:	fa21 f102 	lsr.w	r1, r1, r2
  10e992:	4414      	add	r4, r2
  10e994:	e6c1      	b.n	10e71a <__adddf3+0xe6>
  10e996:	bf00      	nop

0010e998 <__aeabi_dmul>:
  10e998:	b570      	push	{r4, r5, r6, lr}
  10e99a:	f04f 0cff 	mov.w	r12, #255	; 0xff
  10e99e:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
  10e9a2:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
  10e9a6:	bf1d      	ittte	ne
  10e9a8:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
  10e9ac:	ea94 0f0c 	teqne	r4, r12
  10e9b0:	ea95 0f0c 	teqne	r5, r12
  10e9b4:	f000 f8de 	bleq	10eb74 <__aeabi_dmul+0x1dc>
  10e9b8:	442c      	add	r4, r5
  10e9ba:	ea81 0603 	eor.w	r6, r1, r3
  10e9be:	ea21 514c 	bic.w	r1, r1, r12, lsl #21
  10e9c2:	ea23 534c 	bic.w	r3, r3, r12, lsl #21
  10e9c6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  10e9ca:	bf18      	it	ne
  10e9cc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  10e9d0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  10e9d4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  10e9d8:	d038      	beq.n	10ea4c <__aeabi_dmul+0xb4>
  10e9da:	fba0 ce02 	umull	r12, lr, r0, r2
  10e9de:	f04f 0500 	mov.w	r5, #0
  10e9e2:	fbe1 e502 	umlal	lr, r5, r1, r2
  10e9e6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  10e9ea:	fbe0 e503 	umlal	lr, r5, r0, r3
  10e9ee:	f04f 0600 	mov.w	r6, #0
  10e9f2:	fbe1 5603 	umlal	r5, r6, r1, r3
  10e9f6:	f09c 0f00 	teq	r12, #0
  10e9fa:	bf18      	it	ne
  10e9fc:	f04e 0e01 	orrne.w	lr, lr, #1
  10ea00:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  10ea04:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  10ea08:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  10ea0c:	d204      	bcs.n	10ea18 <__aeabi_dmul+0x80>
  10ea0e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  10ea12:	416d      	adcs	r5, r5
  10ea14:	eb46 0606 	adc.w	r6, r6, r6
  10ea18:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  10ea1c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  10ea20:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  10ea24:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  10ea28:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  10ea2c:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
  10ea30:	bf88      	it	hi
  10ea32:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
  10ea36:	d81e      	bhi.n	10ea76 <__aeabi_dmul+0xde>
  10ea38:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  10ea3c:	bf08      	it	eq
  10ea3e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  10ea42:	f150 0000 	adcs.w	r0, r0, #0
  10ea46:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  10ea4a:	bd70      	pop	{r4, r5, r6, pc}
  10ea4c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  10ea50:	ea46 0101 	orr.w	r1, r6, r1
  10ea54:	ea40 0002 	orr.w	r0, r0, r2
  10ea58:	ea81 0103 	eor.w	r1, r1, r3
  10ea5c:	ebb4 045c 	subs.w	r4, r4, r12, lsr #1
  10ea60:	bfc2      	ittt	gt
  10ea62:	ebd4 050c 	rsbsgt	r5, r4, r12
  10ea66:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  10ea6a:	bd70      	popgt	{r4, r5, r6, pc}
  10ea6c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  10ea70:	f04f 0e00 	mov.w	lr, #0
  10ea74:	3c01      	subs	r4, #1
  10ea76:	f300 80ab 	bgt.w	10ebd0 <__aeabi_dmul+0x238>
  10ea7a:	f114 0f36 	cmn.w	r4, #54	; 0x36
  10ea7e:	bfde      	ittt	le
  10ea80:	2000      	movle	r0, #0
  10ea82:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  10ea86:	bd70      	pople	{r4, r5, r6, pc}
  10ea88:	f1c4 0400 	rsb	r4, r4, #0
  10ea8c:	3c20      	subs	r4, #32
  10ea8e:	da35      	bge.n	10eafc <__aeabi_dmul+0x164>
  10ea90:	340c      	adds	r4, #12
  10ea92:	dc1b      	bgt.n	10eacc <__aeabi_dmul+0x134>
  10ea94:	f104 0414 	add.w	r4, r4, #20
  10ea98:	f1c4 0520 	rsb	r5, r4, #32
  10ea9c:	fa00 f305 	lsl.w	r3, r0, r5
  10eaa0:	fa20 f004 	lsr.w	r0, r0, r4
  10eaa4:	fa01 f205 	lsl.w	r2, r1, r5
  10eaa8:	ea40 0002 	orr.w	r0, r0, r2
  10eaac:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  10eab0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  10eab4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  10eab8:	fa21 f604 	lsr.w	r6, r1, r4
  10eabc:	eb42 0106 	adc.w	r1, r2, r6
  10eac0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  10eac4:	bf08      	it	eq
  10eac6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  10eaca:	bd70      	pop	{r4, r5, r6, pc}
  10eacc:	f1c4 040c 	rsb	r4, r4, #12
  10ead0:	f1c4 0520 	rsb	r5, r4, #32
  10ead4:	fa00 f304 	lsl.w	r3, r0, r4
  10ead8:	fa20 f005 	lsr.w	r0, r0, r5
  10eadc:	fa01 f204 	lsl.w	r2, r1, r4
  10eae0:	ea40 0002 	orr.w	r0, r0, r2
  10eae4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  10eae8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  10eaec:	f141 0100 	adc.w	r1, r1, #0
  10eaf0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  10eaf4:	bf08      	it	eq
  10eaf6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  10eafa:	bd70      	pop	{r4, r5, r6, pc}
  10eafc:	f1c4 0520 	rsb	r5, r4, #32
  10eb00:	fa00 f205 	lsl.w	r2, r0, r5
  10eb04:	ea4e 0e02 	orr.w	lr, lr, r2
  10eb08:	fa20 f304 	lsr.w	r3, r0, r4
  10eb0c:	fa01 f205 	lsl.w	r2, r1, r5
  10eb10:	ea43 0302 	orr.w	r3, r3, r2
  10eb14:	fa21 f004 	lsr.w	r0, r1, r4
  10eb18:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  10eb1c:	fa21 f204 	lsr.w	r2, r1, r4
  10eb20:	ea20 0002 	bic.w	r0, r0, r2
  10eb24:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  10eb28:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  10eb2c:	bf08      	it	eq
  10eb2e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  10eb32:	bd70      	pop	{r4, r5, r6, pc}
  10eb34:	f094 0f00 	teq	r4, #0
  10eb38:	d10f      	bne.n	10eb5a <__aeabi_dmul+0x1c2>
  10eb3a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  10eb3e:	0040      	lsls	r0, r0, #1
  10eb40:	eb41 0101 	adc.w	r1, r1, r1
  10eb44:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  10eb48:	bf08      	it	eq
  10eb4a:	3c01      	subeq	r4, #1
  10eb4c:	d0f7      	beq.n	10eb3e <__aeabi_dmul+0x1a6>
  10eb4e:	ea41 0106 	orr.w	r1, r1, r6
  10eb52:	f095 0f00 	teq	r5, #0
  10eb56:	bf18      	it	ne
  10eb58:	4770      	bxne	lr
  10eb5a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  10eb5e:	0052      	lsls	r2, r2, #1
  10eb60:	eb43 0303 	adc.w	r3, r3, r3
  10eb64:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  10eb68:	bf08      	it	eq
  10eb6a:	3d01      	subeq	r5, #1
  10eb6c:	d0f7      	beq.n	10eb5e <__aeabi_dmul+0x1c6>
  10eb6e:	ea43 0306 	orr.w	r3, r3, r6
  10eb72:	4770      	bx	lr
  10eb74:	ea94 0f0c 	teq	r4, r12
  10eb78:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
  10eb7c:	bf18      	it	ne
  10eb7e:	ea95 0f0c 	teqne	r5, r12
  10eb82:	d00c      	beq.n	10eb9e <__aeabi_dmul+0x206>
  10eb84:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  10eb88:	bf18      	it	ne
  10eb8a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  10eb8e:	d1d1      	bne.n	10eb34 <__aeabi_dmul+0x19c>
  10eb90:	ea81 0103 	eor.w	r1, r1, r3
  10eb94:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  10eb98:	f04f 0000 	mov.w	r0, #0
  10eb9c:	bd70      	pop	{r4, r5, r6, pc}
  10eb9e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  10eba2:	bf06      	itte	eq
  10eba4:	4610      	moveq	r0, r2
  10eba6:	4619      	moveq	r1, r3
  10eba8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  10ebac:	d019      	beq.n	10ebe2 <__aeabi_dmul+0x24a>
  10ebae:	ea94 0f0c 	teq	r4, r12
  10ebb2:	d102      	bne.n	10ebba <__aeabi_dmul+0x222>
  10ebb4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  10ebb8:	d113      	bne.n	10ebe2 <__aeabi_dmul+0x24a>
  10ebba:	ea95 0f0c 	teq	r5, r12
  10ebbe:	d105      	bne.n	10ebcc <__aeabi_dmul+0x234>
  10ebc0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  10ebc4:	bf1c      	itt	ne
  10ebc6:	4610      	movne	r0, r2
  10ebc8:	4619      	movne	r1, r3
  10ebca:	d10a      	bne.n	10ebe2 <__aeabi_dmul+0x24a>
  10ebcc:	ea81 0103 	eor.w	r1, r1, r3
  10ebd0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  10ebd4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  10ebd8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  10ebdc:	f04f 0000 	mov.w	r0, #0
  10ebe0:	bd70      	pop	{r4, r5, r6, pc}
  10ebe2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  10ebe6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  10ebea:	bd70      	pop	{r4, r5, r6, pc}

0010ebec <__aeabi_ddiv>:
  10ebec:	b570      	push	{r4, r5, r6, lr}
  10ebee:	f04f 0cff 	mov.w	r12, #255	; 0xff
  10ebf2:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
  10ebf6:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
  10ebfa:	bf1d      	ittte	ne
  10ebfc:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
  10ec00:	ea94 0f0c 	teqne	r4, r12
  10ec04:	ea95 0f0c 	teqne	r5, r12
  10ec08:	f000 f8a7 	bleq	10ed5a <__aeabi_ddiv+0x16e>
  10ec0c:	eba4 0405 	sub.w	r4, r4, r5
  10ec10:	ea81 0e03 	eor.w	lr, r1, r3
  10ec14:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  10ec18:	ea4f 3101 	mov.w	r1, r1, lsl #12
  10ec1c:	f000 8088 	beq.w	10ed30 <__aeabi_ddiv+0x144>
  10ec20:	ea4f 3303 	mov.w	r3, r3, lsl #12
  10ec24:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  10ec28:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  10ec2c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  10ec30:	ea4f 2202 	mov.w	r2, r2, lsl #8
  10ec34:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  10ec38:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  10ec3c:	ea4f 2600 	mov.w	r6, r0, lsl #8
  10ec40:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  10ec44:	429d      	cmp	r5, r3
  10ec46:	bf08      	it	eq
  10ec48:	4296      	cmpeq	r6, r2
  10ec4a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  10ec4e:	f504 7440 	add.w	r4, r4, #768	; 0x300
  10ec52:	d202      	bcs.n	10ec5a <__aeabi_ddiv+0x6e>
  10ec54:	085b      	lsrs	r3, r3, #1
  10ec56:	ea4f 0232 	mov.w	r2, r2, rrx
  10ec5a:	1ab6      	subs	r6, r6, r2
  10ec5c:	eb65 0503 	sbc.w	r5, r5, r3
  10ec60:	085b      	lsrs	r3, r3, #1
  10ec62:	ea4f 0232 	mov.w	r2, r2, rrx
  10ec66:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  10ec6a:	f44f 2c00 	mov.w	r12, #524288	; 0x80000
  10ec6e:	ebb6 0e02 	subs.w	lr, r6, r2
  10ec72:	eb75 0e03 	sbcs.w	lr, r5, r3
  10ec76:	bf22      	ittt	cs
  10ec78:	1ab6      	subcs	r6, r6, r2
  10ec7a:	4675      	movcs	r5, lr
  10ec7c:	ea40 000c 	orrcs.w	r0, r0, r12
  10ec80:	085b      	lsrs	r3, r3, #1
  10ec82:	ea4f 0232 	mov.w	r2, r2, rrx
  10ec86:	ebb6 0e02 	subs.w	lr, r6, r2
  10ec8a:	eb75 0e03 	sbcs.w	lr, r5, r3
  10ec8e:	bf22      	ittt	cs
  10ec90:	1ab6      	subcs	r6, r6, r2
  10ec92:	4675      	movcs	r5, lr
  10ec94:	ea40 005c 	orrcs.w	r0, r0, r12, lsr #1
  10ec98:	085b      	lsrs	r3, r3, #1
  10ec9a:	ea4f 0232 	mov.w	r2, r2, rrx
  10ec9e:	ebb6 0e02 	subs.w	lr, r6, r2
  10eca2:	eb75 0e03 	sbcs.w	lr, r5, r3
  10eca6:	bf22      	ittt	cs
  10eca8:	1ab6      	subcs	r6, r6, r2
  10ecaa:	4675      	movcs	r5, lr
  10ecac:	ea40 009c 	orrcs.w	r0, r0, r12, lsr #2
  10ecb0:	085b      	lsrs	r3, r3, #1
  10ecb2:	ea4f 0232 	mov.w	r2, r2, rrx
  10ecb6:	ebb6 0e02 	subs.w	lr, r6, r2
  10ecba:	eb75 0e03 	sbcs.w	lr, r5, r3
  10ecbe:	bf22      	ittt	cs
  10ecc0:	1ab6      	subcs	r6, r6, r2
  10ecc2:	4675      	movcs	r5, lr
  10ecc4:	ea40 00dc 	orrcs.w	r0, r0, r12, lsr #3
  10ecc8:	ea55 0e06 	orrs.w	lr, r5, r6
  10eccc:	d018      	beq.n	10ed00 <__aeabi_ddiv+0x114>
  10ecce:	ea4f 1505 	mov.w	r5, r5, lsl #4
  10ecd2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  10ecd6:	ea4f 1606 	mov.w	r6, r6, lsl #4
  10ecda:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  10ecde:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  10ece2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  10ece6:	ea5f 1c1c 	movs.w	r12, r12, lsr #4
  10ecea:	d1c0      	bne.n	10ec6e <__aeabi_ddiv+0x82>
  10ecec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  10ecf0:	d10b      	bne.n	10ed0a <__aeabi_ddiv+0x11e>
  10ecf2:	ea41 0100 	orr.w	r1, r1, r0
  10ecf6:	f04f 0000 	mov.w	r0, #0
  10ecfa:	f04f 4c00 	mov.w	r12, #2147483648	; 0x80000000
  10ecfe:	e7b6      	b.n	10ec6e <__aeabi_ddiv+0x82>
  10ed00:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  10ed04:	bf04      	itt	eq
  10ed06:	4301      	orreq	r1, r0
  10ed08:	2000      	moveq	r0, #0
  10ed0a:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
  10ed0e:	bf88      	it	hi
  10ed10:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
  10ed14:	f63f aeaf 	bhi.w	10ea76 <__aeabi_dmul+0xde>
  10ed18:	ebb5 0c03 	subs.w	r12, r5, r3
  10ed1c:	bf04      	itt	eq
  10ed1e:	ebb6 0c02 	subseq.w	r12, r6, r2
  10ed22:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
  10ed26:	f150 0000 	adcs.w	r0, r0, #0
  10ed2a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  10ed2e:	bd70      	pop	{r4, r5, r6, pc}
  10ed30:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  10ed34:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  10ed38:	eb14 045c 	adds.w	r4, r4, r12, lsr #1
  10ed3c:	bfc2      	ittt	gt
  10ed3e:	ebd4 050c 	rsbsgt	r5, r4, r12
  10ed42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  10ed46:	bd70      	popgt	{r4, r5, r6, pc}
  10ed48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  10ed4c:	f04f 0e00 	mov.w	lr, #0
  10ed50:	3c01      	subs	r4, #1
  10ed52:	e690      	b.n	10ea76 <__aeabi_dmul+0xde>
  10ed54:	ea45 0e06 	orr.w	lr, r5, r6
  10ed58:	e68d      	b.n	10ea76 <__aeabi_dmul+0xde>
  10ed5a:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
  10ed5e:	ea94 0f0c 	teq	r4, r12
  10ed62:	bf08      	it	eq
  10ed64:	ea95 0f0c 	teqeq	r5, r12
  10ed68:	f43f af3b 	beq.w	10ebe2 <__aeabi_dmul+0x24a>
  10ed6c:	ea94 0f0c 	teq	r4, r12
  10ed70:	d10a      	bne.n	10ed88 <__aeabi_ddiv+0x19c>
  10ed72:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  10ed76:	f47f af34 	bne.w	10ebe2 <__aeabi_dmul+0x24a>
  10ed7a:	ea95 0f0c 	teq	r5, r12
  10ed7e:	f47f af25 	bne.w	10ebcc <__aeabi_dmul+0x234>
  10ed82:	4610      	mov	r0, r2
  10ed84:	4619      	mov	r1, r3
  10ed86:	e72c      	b.n	10ebe2 <__aeabi_dmul+0x24a>
  10ed88:	ea95 0f0c 	teq	r5, r12
  10ed8c:	d106      	bne.n	10ed9c <__aeabi_ddiv+0x1b0>
  10ed8e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  10ed92:	f43f aefd 	beq.w	10eb90 <__aeabi_dmul+0x1f8>
  10ed96:	4610      	mov	r0, r2
  10ed98:	4619      	mov	r1, r3
  10ed9a:	e722      	b.n	10ebe2 <__aeabi_dmul+0x24a>
  10ed9c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  10eda0:	bf18      	it	ne
  10eda2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  10eda6:	f47f aec5 	bne.w	10eb34 <__aeabi_dmul+0x19c>
  10edaa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  10edae:	f47f af0d 	bne.w	10ebcc <__aeabi_dmul+0x234>
  10edb2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  10edb6:	f47f aeeb 	bne.w	10eb90 <__aeabi_dmul+0x1f8>
  10edba:	e712      	b.n	10ebe2 <__aeabi_dmul+0x24a>

0010edbc <__gedf2>:
  10edbc:	f04f 3cff 	mov.w	r12, #4294967295
  10edc0:	e006      	b.n	10edd0 <__cmpdf2+0x4>
  10edc2:	bf00      	nop

0010edc4 <__ledf2>:
  10edc4:	f04f 0c01 	mov.w	r12, #1
  10edc8:	e002      	b.n	10edd0 <__cmpdf2+0x4>
  10edca:	bf00      	nop

0010edcc <__cmpdf2>:
  10edcc:	f04f 0c01 	mov.w	r12, #1
  10edd0:	f84d cd04 	str.w	r12, [sp, #-4]!
  10edd4:	ea4f 0c41 	mov.w	r12, r1, lsl #1
  10edd8:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
  10eddc:	ea4f 0c43 	mov.w	r12, r3, lsl #1
  10ede0:	bf18      	it	ne
  10ede2:	ea7f 5c6c 	mvnsne.w	r12, r12, asr #21
  10ede6:	d01b      	beq.n	10ee20 <__cmpdf2+0x54>
  10ede8:	b001      	add	sp, #4
  10edea:	ea50 0c41 	orrs.w	r12, r0, r1, lsl #1
  10edee:	bf0c      	ite	eq
  10edf0:	ea52 0c43 	orrseq.w	r12, r2, r3, lsl #1
  10edf4:	ea91 0f03 	teqne	r1, r3
  10edf8:	bf02      	ittt	eq
  10edfa:	ea90 0f02 	teqeq	r0, r2
  10edfe:	2000      	moveq	r0, #0
  10ee00:	4770      	bxeq	lr
  10ee02:	f110 0f00 	cmn.w	r0, #0
  10ee06:	ea91 0f03 	teq	r1, r3
  10ee0a:	bf58      	it	pl
  10ee0c:	4299      	cmppl	r1, r3
  10ee0e:	bf08      	it	eq
  10ee10:	4290      	cmpeq	r0, r2
  10ee12:	bf2c      	ite	cs
  10ee14:	17d8      	asrcs	r0, r3, #31
  10ee16:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  10ee1a:	f040 0001 	orr.w	r0, r0, #1
  10ee1e:	4770      	bx	lr
  10ee20:	ea4f 0c41 	mov.w	r12, r1, lsl #1
  10ee24:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
  10ee28:	d102      	bne.n	10ee30 <__cmpdf2+0x64>
  10ee2a:	ea50 3c01 	orrs.w	r12, r0, r1, lsl #12
  10ee2e:	d107      	bne.n	10ee40 <__cmpdf2+0x74>
  10ee30:	ea4f 0c43 	mov.w	r12, r3, lsl #1
  10ee34:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
  10ee38:	d1d6      	bne.n	10ede8 <__cmpdf2+0x1c>
  10ee3a:	ea52 3c03 	orrs.w	r12, r2, r3, lsl #12
  10ee3e:	d0d3      	beq.n	10ede8 <__cmpdf2+0x1c>
  10ee40:	f85d 0b04 	ldr.w	r0, [sp], #4
  10ee44:	4770      	bx	lr
  10ee46:	bf00      	nop

0010ee48 <__aeabi_cdrcmple>:
  10ee48:	4684      	mov	r12, r0
  10ee4a:	4610      	mov	r0, r2
  10ee4c:	4662      	mov	r2, r12
  10ee4e:	468c      	mov	r12, r1
  10ee50:	4619      	mov	r1, r3
  10ee52:	4663      	mov	r3, r12
  10ee54:	e000      	b.n	10ee58 <__aeabi_cdcmpeq>
  10ee56:	bf00      	nop

0010ee58 <__aeabi_cdcmpeq>:
  10ee58:	b501      	push	{r0, lr}
  10ee5a:	f7ff ffb7 	bl	10edcc <__cmpdf2>
  10ee5e:	2800      	cmp	r0, #0
  10ee60:	bf48      	it	mi
  10ee62:	f110 0f00 	cmnmi.w	r0, #0
  10ee66:	bd01      	pop	{r0, pc}

0010ee68 <__aeabi_dcmpeq>:
  10ee68:	f84d ed08 	str.w	lr, [sp, #-8]!
  10ee6c:	f7ff fff4 	bl	10ee58 <__aeabi_cdcmpeq>
  10ee70:	bf0c      	ite	eq
  10ee72:	2001      	moveq	r0, #1
  10ee74:	2000      	movne	r0, #0
  10ee76:	f85d fb08 	ldr.w	pc, [sp], #8
  10ee7a:	bf00      	nop

0010ee7c <__aeabi_dcmplt>:
  10ee7c:	f84d ed08 	str.w	lr, [sp, #-8]!
  10ee80:	f7ff ffea 	bl	10ee58 <__aeabi_cdcmpeq>
  10ee84:	bf34      	ite	cc
  10ee86:	2001      	movcc	r0, #1
  10ee88:	2000      	movcs	r0, #0
  10ee8a:	f85d fb08 	ldr.w	pc, [sp], #8
  10ee8e:	bf00      	nop

0010ee90 <__aeabi_dcmple>:
  10ee90:	f84d ed08 	str.w	lr, [sp, #-8]!
  10ee94:	f7ff ffe0 	bl	10ee58 <__aeabi_cdcmpeq>
  10ee98:	bf94      	ite	ls
  10ee9a:	2001      	movls	r0, #1
  10ee9c:	2000      	movhi	r0, #0
  10ee9e:	f85d fb08 	ldr.w	pc, [sp], #8
  10eea2:	bf00      	nop

0010eea4 <__aeabi_dcmpge>:
  10eea4:	f84d ed08 	str.w	lr, [sp, #-8]!
  10eea8:	f7ff ffce 	bl	10ee48 <__aeabi_cdrcmple>
  10eeac:	bf94      	ite	ls
  10eeae:	2001      	movls	r0, #1
  10eeb0:	2000      	movhi	r0, #0
  10eeb2:	f85d fb08 	ldr.w	pc, [sp], #8
  10eeb6:	bf00      	nop

0010eeb8 <__aeabi_dcmpgt>:
  10eeb8:	f84d ed08 	str.w	lr, [sp, #-8]!
  10eebc:	f7ff ffc4 	bl	10ee48 <__aeabi_cdrcmple>
  10eec0:	bf34      	ite	cc
  10eec2:	2001      	movcc	r0, #1
  10eec4:	2000      	movcs	r0, #0
  10eec6:	f85d fb08 	ldr.w	pc, [sp], #8
  10eeca:	bf00      	nop

0010eecc <__aeabi_d2f>:
  10eecc:	ea4f 0241 	mov.w	r2, r1, lsl #1
  10eed0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  10eed4:	bf24      	itt	cs
  10eed6:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
  10eeda:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
  10eede:	d90d      	bls.n	10eefc <__aeabi_d2f+0x30>
  10eee0:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
  10eee4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  10eee8:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
  10eeec:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  10eef0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  10eef4:	bf08      	it	eq
  10eef6:	f020 0001 	biceq.w	r0, r0, #1
  10eefa:	4770      	bx	lr
  10eefc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  10ef00:	d121      	bne.n	10ef46 <__aeabi_d2f+0x7a>
  10ef02:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  10ef06:	bfbc      	itt	lt
  10ef08:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  10ef0c:	4770      	bxlt	lr
  10ef0e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  10ef12:	ea4f 5252 	mov.w	r2, r2, lsr #21
  10ef16:	f1c2 0218 	rsb	r2, r2, #24
  10ef1a:	f1c2 0c20 	rsb	r12, r2, #32
  10ef1e:	fa10 f30c 	lsls.w	r3, r0, r12
  10ef22:	fa20 f002 	lsr.w	r0, r0, r2
  10ef26:	bf18      	it	ne
  10ef28:	f040 0001 	orrne.w	r0, r0, #1
  10ef2c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  10ef30:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  10ef34:	fa03 fc0c 	lsl.w	r12, r3, r12
  10ef38:	ea40 000c 	orr.w	r0, r0, r12
  10ef3c:	fa23 f302 	lsr.w	r3, r3, r2
  10ef40:	ea4f 0343 	mov.w	r3, r3, lsl #1
  10ef44:	e7cc      	b.n	10eee0 <__aeabi_d2f+0x14>
  10ef46:	ea7f 5362 	mvns.w	r3, r2, asr #21
  10ef4a:	d107      	bne.n	10ef5c <__aeabi_d2f+0x90>
  10ef4c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  10ef50:	bf1e      	ittt	ne
  10ef52:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  10ef56:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  10ef5a:	4770      	bxne	lr
  10ef5c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  10ef60:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  10ef64:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  10ef68:	4770      	bx	lr
  10ef6a:	bf00      	nop

0010ef6c <__aeabi_frsub>:
  10ef6c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  10ef70:	e002      	b.n	10ef78 <__addsf3>
  10ef72:	bf00      	nop

0010ef74 <__aeabi_fsub>:
  10ef74:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0010ef78 <__addsf3>:
  10ef78:	0042      	lsls	r2, r0, #1
  10ef7a:	bf1f      	itttt	ne
  10ef7c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  10ef80:	ea92 0f03 	teqne	r2, r3
  10ef84:	ea7f 6c22 	mvnsne.w	r12, r2, asr #24
  10ef88:	ea7f 6c23 	mvnsne.w	r12, r3, asr #24
  10ef8c:	d06a      	beq.n	10f064 <__addsf3+0xec>
  10ef8e:	ea4f 6212 	mov.w	r2, r2, lsr #24
  10ef92:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  10ef96:	bfc1      	itttt	gt
  10ef98:	18d2      	addgt	r2, r2, r3
  10ef9a:	4041      	eorgt	r1, r0
  10ef9c:	4048      	eorgt	r0, r1
  10ef9e:	4041      	eorgt	r1, r0
  10efa0:	bfb8      	it	lt
  10efa2:	425b      	neglt	r3, r3
  10efa4:	2b19      	cmp	r3, #25
  10efa6:	bf88      	it	hi
  10efa8:	4770      	bxhi	lr
  10efaa:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  10efae:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  10efb2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  10efb6:	bf18      	it	ne
  10efb8:	4240      	negne	r0, r0
  10efba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  10efbe:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  10efc2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  10efc6:	bf18      	it	ne
  10efc8:	4249      	negne	r1, r1
  10efca:	ea92 0f03 	teq	r2, r3
  10efce:	d03f      	beq.n	10f050 <__addsf3+0xd8>
  10efd0:	f1a2 0201 	sub.w	r2, r2, #1
  10efd4:	fa41 fc03 	asr.w	r12, r1, r3
  10efd8:	eb10 000c 	adds.w	r0, r0, r12
  10efdc:	f1c3 0320 	rsb	r3, r3, #32
  10efe0:	fa01 f103 	lsl.w	r1, r1, r3
  10efe4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  10efe8:	d502      	bpl.n	10eff0 <__addsf3+0x78>
  10efea:	4249      	negs	r1, r1
  10efec:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  10eff0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  10eff4:	d313      	bcc.n	10f01e <__addsf3+0xa6>
  10eff6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  10effa:	d306      	bcc.n	10f00a <__addsf3+0x92>
  10effc:	0840      	lsrs	r0, r0, #1
  10effe:	ea4f 0131 	mov.w	r1, r1, rrx
  10f002:	f102 0201 	add.w	r2, r2, #1
  10f006:	2afe      	cmp	r2, #254	; 0xfe
  10f008:	d251      	bcs.n	10f0ae <__addsf3+0x136>
  10f00a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  10f00e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  10f012:	bf08      	it	eq
  10f014:	f020 0001 	biceq.w	r0, r0, #1
  10f018:	ea40 0003 	orr.w	r0, r0, r3
  10f01c:	4770      	bx	lr
  10f01e:	0049      	lsls	r1, r1, #1
  10f020:	eb40 0000 	adc.w	r0, r0, r0
  10f024:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  10f028:	f1a2 0201 	sub.w	r2, r2, #1
  10f02c:	d1ed      	bne.n	10f00a <__addsf3+0x92>
  10f02e:	fab0 fc80 	clz	r12, r0
  10f032:	f1ac 0c08 	sub.w	r12, r12, #8
  10f036:	ebb2 020c 	subs.w	r2, r2, r12
  10f03a:	fa00 f00c 	lsl.w	r0, r0, r12
  10f03e:	bfaa      	itet	ge
  10f040:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  10f044:	4252      	neglt	r2, r2
  10f046:	4318      	orrge	r0, r3
  10f048:	bfbc      	itt	lt
  10f04a:	40d0      	lsrlt	r0, r2
  10f04c:	4318      	orrlt	r0, r3
  10f04e:	4770      	bx	lr
  10f050:	f092 0f00 	teq	r2, #0
  10f054:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  10f058:	bf06      	itte	eq
  10f05a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  10f05e:	3201      	addeq	r2, #1
  10f060:	3b01      	subne	r3, #1
  10f062:	e7b5      	b.n	10efd0 <__addsf3+0x58>
  10f064:	ea4f 0341 	mov.w	r3, r1, lsl #1
  10f068:	ea7f 6c22 	mvns.w	r12, r2, asr #24
  10f06c:	bf18      	it	ne
  10f06e:	ea7f 6c23 	mvnsne.w	r12, r3, asr #24
  10f072:	d021      	beq.n	10f0b8 <__addsf3+0x140>
  10f074:	ea92 0f03 	teq	r2, r3
  10f078:	d004      	beq.n	10f084 <__addsf3+0x10c>
  10f07a:	f092 0f00 	teq	r2, #0
  10f07e:	bf08      	it	eq
  10f080:	4608      	moveq	r0, r1
  10f082:	4770      	bx	lr
  10f084:	ea90 0f01 	teq	r0, r1
  10f088:	bf1c      	itt	ne
  10f08a:	2000      	movne	r0, #0
  10f08c:	4770      	bxne	lr
  10f08e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  10f092:	d104      	bne.n	10f09e <__addsf3+0x126>
  10f094:	0040      	lsls	r0, r0, #1
  10f096:	bf28      	it	cs
  10f098:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  10f09c:	4770      	bx	lr
  10f09e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  10f0a2:	bf3c      	itt	cc
  10f0a4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  10f0a8:	4770      	bxcc	lr
  10f0aa:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  10f0ae:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  10f0b2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  10f0b6:	4770      	bx	lr
  10f0b8:	ea7f 6222 	mvns.w	r2, r2, asr #24
  10f0bc:	bf16      	itet	ne
  10f0be:	4608      	movne	r0, r1
  10f0c0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  10f0c4:	4601      	movne	r1, r0
  10f0c6:	0242      	lsls	r2, r0, #9
  10f0c8:	bf06      	itte	eq
  10f0ca:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  10f0ce:	ea90 0f01 	teqeq	r0, r1
  10f0d2:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  10f0d6:	4770      	bx	lr

0010f0d8 <__aeabi_ui2f>:
  10f0d8:	f04f 0300 	mov.w	r3, #0
  10f0dc:	e004      	b.n	10f0e8 <__aeabi_i2f+0x8>
  10f0de:	bf00      	nop

0010f0e0 <__aeabi_i2f>:
  10f0e0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  10f0e4:	bf48      	it	mi
  10f0e6:	4240      	negmi	r0, r0
  10f0e8:	ea5f 0c00 	movs.w	r12, r0
  10f0ec:	bf08      	it	eq
  10f0ee:	4770      	bxeq	lr
  10f0f0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  10f0f4:	4601      	mov	r1, r0
  10f0f6:	f04f 0000 	mov.w	r0, #0
  10f0fa:	e01c      	b.n	10f136 <__aeabi_l2f+0x2a>

0010f0fc <__aeabi_ul2f>:
  10f0fc:	ea50 0201 	orrs.w	r2, r0, r1
  10f100:	bf08      	it	eq
  10f102:	4770      	bxeq	lr
  10f104:	f04f 0300 	mov.w	r3, #0
  10f108:	e00a      	b.n	10f120 <__aeabi_l2f+0x14>
  10f10a:	bf00      	nop

0010f10c <__aeabi_l2f>:
  10f10c:	ea50 0201 	orrs.w	r2, r0, r1
  10f110:	bf08      	it	eq
  10f112:	4770      	bxeq	lr
  10f114:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  10f118:	d502      	bpl.n	10f120 <__aeabi_l2f+0x14>
  10f11a:	4240      	negs	r0, r0
  10f11c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  10f120:	ea5f 0c01 	movs.w	r12, r1
  10f124:	bf02      	ittt	eq
  10f126:	4684      	moveq	r12, r0
  10f128:	4601      	moveq	r1, r0
  10f12a:	2000      	moveq	r0, #0
  10f12c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  10f130:	bf08      	it	eq
  10f132:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  10f136:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  10f13a:	fabc f28c 	clz	r2, r12
  10f13e:	3a08      	subs	r2, #8
  10f140:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  10f144:	db10      	blt.n	10f168 <__aeabi_l2f+0x5c>
  10f146:	fa01 fc02 	lsl.w	r12, r1, r2
  10f14a:	4463      	add	r3, r12
  10f14c:	fa00 fc02 	lsl.w	r12, r0, r2
  10f150:	f1c2 0220 	rsb	r2, r2, #32
  10f154:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
  10f158:	fa20 f202 	lsr.w	r2, r0, r2
  10f15c:	eb43 0002 	adc.w	r0, r3, r2
  10f160:	bf08      	it	eq
  10f162:	f020 0001 	biceq.w	r0, r0, #1
  10f166:	4770      	bx	lr
  10f168:	f102 0220 	add.w	r2, r2, #32
  10f16c:	fa01 fc02 	lsl.w	r12, r1, r2
  10f170:	f1c2 0220 	rsb	r2, r2, #32
  10f174:	ea50 004c 	orrs.w	r0, r0, r12, lsl #1
  10f178:	fa21 f202 	lsr.w	r2, r1, r2
  10f17c:	eb43 0002 	adc.w	r0, r3, r2
  10f180:	bf08      	it	eq
  10f182:	ea20 70dc 	biceq.w	r0, r0, r12, lsr #31
  10f186:	4770      	bx	lr

0010f188 <__aeabi_fmul>:
  10f188:	f04f 0cff 	mov.w	r12, #255	; 0xff
  10f18c:	ea1c 52d0 	ands.w	r2, r12, r0, lsr #23
  10f190:	bf1e      	ittt	ne
  10f192:	ea1c 53d1 	andsne.w	r3, r12, r1, lsr #23
  10f196:	ea92 0f0c 	teqne	r2, r12
  10f19a:	ea93 0f0c 	teqne	r3, r12
  10f19e:	d06f      	beq.n	10f280 <__aeabi_fmul+0xf8>
  10f1a0:	441a      	add	r2, r3
  10f1a2:	ea80 0c01 	eor.w	r12, r0, r1
  10f1a6:	0240      	lsls	r0, r0, #9
  10f1a8:	bf18      	it	ne
  10f1aa:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  10f1ae:	d01e      	beq.n	10f1ee <__aeabi_fmul+0x66>
  10f1b0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  10f1b4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  10f1b8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  10f1bc:	fba0 3101 	umull	r3, r1, r0, r1
  10f1c0:	f00c 4000 	and.w	r0, r12, #2147483648	; 0x80000000
  10f1c4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  10f1c8:	bf3e      	ittt	cc
  10f1ca:	0049      	lslcc	r1, r1, #1
  10f1cc:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  10f1d0:	005b      	lslcc	r3, r3, #1
  10f1d2:	ea40 0001 	orr.w	r0, r0, r1
  10f1d6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  10f1da:	2afd      	cmp	r2, #253	; 0xfd
  10f1dc:	d81d      	bhi.n	10f21a <__aeabi_fmul+0x92>
  10f1de:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  10f1e2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  10f1e6:	bf08      	it	eq
  10f1e8:	f020 0001 	biceq.w	r0, r0, #1
  10f1ec:	4770      	bx	lr
  10f1ee:	f090 0f00 	teq	r0, #0
  10f1f2:	f00c 4c00 	and.w	r12, r12, #2147483648	; 0x80000000
  10f1f6:	bf08      	it	eq
  10f1f8:	0249      	lsleq	r1, r1, #9
  10f1fa:	ea4c 2050 	orr.w	r0, r12, r0, lsr #9
  10f1fe:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  10f202:	3a7f      	subs	r2, #127	; 0x7f
  10f204:	bfc2      	ittt	gt
  10f206:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  10f20a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  10f20e:	4770      	bxgt	lr
  10f210:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  10f214:	f04f 0300 	mov.w	r3, #0
  10f218:	3a01      	subs	r2, #1
  10f21a:	dc5d      	bgt.n	10f2d8 <__aeabi_fmul+0x150>
  10f21c:	f112 0f19 	cmn.w	r2, #25
  10f220:	bfdc      	itt	le
  10f222:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  10f226:	4770      	bxle	lr
  10f228:	f1c2 0200 	rsb	r2, r2, #0
  10f22c:	0041      	lsls	r1, r0, #1
  10f22e:	fa21 f102 	lsr.w	r1, r1, r2
  10f232:	f1c2 0220 	rsb	r2, r2, #32
  10f236:	fa00 fc02 	lsl.w	r12, r0, r2
  10f23a:	ea5f 0031 	movs.w	r0, r1, rrx
  10f23e:	f140 0000 	adc.w	r0, r0, #0
  10f242:	ea53 034c 	orrs.w	r3, r3, r12, lsl #1
  10f246:	bf08      	it	eq
  10f248:	ea20 70dc 	biceq.w	r0, r0, r12, lsr #31
  10f24c:	4770      	bx	lr
  10f24e:	f092 0f00 	teq	r2, #0
  10f252:	f000 4c00 	and.w	r12, r0, #2147483648	; 0x80000000
  10f256:	bf02      	ittt	eq
  10f258:	0040      	lsleq	r0, r0, #1
  10f25a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  10f25e:	3a01      	subeq	r2, #1
  10f260:	d0f9      	beq.n	10f256 <__aeabi_fmul+0xce>
  10f262:	ea40 000c 	orr.w	r0, r0, r12
  10f266:	f093 0f00 	teq	r3, #0
  10f26a:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
  10f26e:	bf02      	ittt	eq
  10f270:	0049      	lsleq	r1, r1, #1
  10f272:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  10f276:	3b01      	subeq	r3, #1
  10f278:	d0f9      	beq.n	10f26e <__aeabi_fmul+0xe6>
  10f27a:	ea41 010c 	orr.w	r1, r1, r12
  10f27e:	e78f      	b.n	10f1a0 <__aeabi_fmul+0x18>
  10f280:	ea0c 53d1 	and.w	r3, r12, r1, lsr #23
  10f284:	ea92 0f0c 	teq	r2, r12
  10f288:	bf18      	it	ne
  10f28a:	ea93 0f0c 	teqne	r3, r12
  10f28e:	d00a      	beq.n	10f2a6 <__aeabi_fmul+0x11e>
  10f290:	f030 4c00 	bics.w	r12, r0, #2147483648	; 0x80000000
  10f294:	bf18      	it	ne
  10f296:	f031 4c00 	bicsne.w	r12, r1, #2147483648	; 0x80000000
  10f29a:	d1d8      	bne.n	10f24e <__aeabi_fmul+0xc6>
  10f29c:	ea80 0001 	eor.w	r0, r0, r1
  10f2a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  10f2a4:	4770      	bx	lr
  10f2a6:	f090 0f00 	teq	r0, #0
  10f2aa:	bf17      	itett	ne
  10f2ac:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  10f2b0:	4608      	moveq	r0, r1
  10f2b2:	f091 0f00 	teqne	r1, #0
  10f2b6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  10f2ba:	d014      	beq.n	10f2e6 <__aeabi_fmul+0x15e>
  10f2bc:	ea92 0f0c 	teq	r2, r12
  10f2c0:	d101      	bne.n	10f2c6 <__aeabi_fmul+0x13e>
  10f2c2:	0242      	lsls	r2, r0, #9
  10f2c4:	d10f      	bne.n	10f2e6 <__aeabi_fmul+0x15e>
  10f2c6:	ea93 0f0c 	teq	r3, r12
  10f2ca:	d103      	bne.n	10f2d4 <__aeabi_fmul+0x14c>
  10f2cc:	024b      	lsls	r3, r1, #9
  10f2ce:	bf18      	it	ne
  10f2d0:	4608      	movne	r0, r1
  10f2d2:	d108      	bne.n	10f2e6 <__aeabi_fmul+0x15e>
  10f2d4:	ea80 0001 	eor.w	r0, r0, r1
  10f2d8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  10f2dc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  10f2e0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  10f2e4:	4770      	bx	lr
  10f2e6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  10f2ea:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  10f2ee:	4770      	bx	lr

0010f2f0 <__aeabi_fdiv>:
  10f2f0:	f04f 0cff 	mov.w	r12, #255	; 0xff
  10f2f4:	ea1c 52d0 	ands.w	r2, r12, r0, lsr #23
  10f2f8:	bf1e      	ittt	ne
  10f2fa:	ea1c 53d1 	andsne.w	r3, r12, r1, lsr #23
  10f2fe:	ea92 0f0c 	teqne	r2, r12
  10f302:	ea93 0f0c 	teqne	r3, r12
  10f306:	d069      	beq.n	10f3dc <__aeabi_fdiv+0xec>
  10f308:	eba2 0203 	sub.w	r2, r2, r3
  10f30c:	ea80 0c01 	eor.w	r12, r0, r1
  10f310:	0249      	lsls	r1, r1, #9
  10f312:	ea4f 2040 	mov.w	r0, r0, lsl #9
  10f316:	d037      	beq.n	10f388 <__aeabi_fdiv+0x98>
  10f318:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  10f31c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  10f320:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  10f324:	f00c 4000 	and.w	r0, r12, #2147483648	; 0x80000000
  10f328:	428b      	cmp	r3, r1
  10f32a:	bf38      	it	cc
  10f32c:	005b      	lslcc	r3, r3, #1
  10f32e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  10f332:	f44f 0c00 	mov.w	r12, #8388608	; 0x800000
  10f336:	428b      	cmp	r3, r1
  10f338:	bf24      	itt	cs
  10f33a:	1a5b      	subcs	r3, r3, r1
  10f33c:	ea40 000c 	orrcs.w	r0, r0, r12
  10f340:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  10f344:	bf24      	itt	cs
  10f346:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  10f34a:	ea40 005c 	orrcs.w	r0, r0, r12, lsr #1
  10f34e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  10f352:	bf24      	itt	cs
  10f354:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  10f358:	ea40 009c 	orrcs.w	r0, r0, r12, lsr #2
  10f35c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  10f360:	bf24      	itt	cs
  10f362:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  10f366:	ea40 00dc 	orrcs.w	r0, r0, r12, lsr #3
  10f36a:	011b      	lsls	r3, r3, #4
  10f36c:	bf18      	it	ne
  10f36e:	ea5f 1c1c 	movsne.w	r12, r12, lsr #4
  10f372:	d1e0      	bne.n	10f336 <__aeabi_fdiv+0x46>
  10f374:	2afd      	cmp	r2, #253	; 0xfd
  10f376:	f63f af50 	bhi.w	10f21a <__aeabi_fmul+0x92>
  10f37a:	428b      	cmp	r3, r1
  10f37c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  10f380:	bf08      	it	eq
  10f382:	f020 0001 	biceq.w	r0, r0, #1
  10f386:	4770      	bx	lr
  10f388:	f00c 4c00 	and.w	r12, r12, #2147483648	; 0x80000000
  10f38c:	ea4c 2050 	orr.w	r0, r12, r0, lsr #9
  10f390:	327f      	adds	r2, #127	; 0x7f
  10f392:	bfc2      	ittt	gt
  10f394:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  10f398:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  10f39c:	4770      	bxgt	lr
  10f39e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  10f3a2:	f04f 0300 	mov.w	r3, #0
  10f3a6:	3a01      	subs	r2, #1
  10f3a8:	e737      	b.n	10f21a <__aeabi_fmul+0x92>
  10f3aa:	f092 0f00 	teq	r2, #0
  10f3ae:	f000 4c00 	and.w	r12, r0, #2147483648	; 0x80000000
  10f3b2:	bf02      	ittt	eq
  10f3b4:	0040      	lsleq	r0, r0, #1
  10f3b6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  10f3ba:	3a01      	subeq	r2, #1
  10f3bc:	d0f9      	beq.n	10f3b2 <__aeabi_fdiv+0xc2>
  10f3be:	ea40 000c 	orr.w	r0, r0, r12
  10f3c2:	f093 0f00 	teq	r3, #0
  10f3c6:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
  10f3ca:	bf02      	ittt	eq
  10f3cc:	0049      	lsleq	r1, r1, #1
  10f3ce:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  10f3d2:	3b01      	subeq	r3, #1
  10f3d4:	d0f9      	beq.n	10f3ca <__aeabi_fdiv+0xda>
  10f3d6:	ea41 010c 	orr.w	r1, r1, r12
  10f3da:	e795      	b.n	10f308 <__aeabi_fdiv+0x18>
  10f3dc:	ea0c 53d1 	and.w	r3, r12, r1, lsr #23
  10f3e0:	ea92 0f0c 	teq	r2, r12
  10f3e4:	d108      	bne.n	10f3f8 <__aeabi_fdiv+0x108>
  10f3e6:	0242      	lsls	r2, r0, #9
  10f3e8:	f47f af7d 	bne.w	10f2e6 <__aeabi_fmul+0x15e>
  10f3ec:	ea93 0f0c 	teq	r3, r12
  10f3f0:	f47f af70 	bne.w	10f2d4 <__aeabi_fmul+0x14c>
  10f3f4:	4608      	mov	r0, r1
  10f3f6:	e776      	b.n	10f2e6 <__aeabi_fmul+0x15e>
  10f3f8:	ea93 0f0c 	teq	r3, r12
  10f3fc:	d104      	bne.n	10f408 <__aeabi_fdiv+0x118>
  10f3fe:	024b      	lsls	r3, r1, #9
  10f400:	f43f af4c 	beq.w	10f29c <__aeabi_fmul+0x114>
  10f404:	4608      	mov	r0, r1
  10f406:	e76e      	b.n	10f2e6 <__aeabi_fmul+0x15e>
  10f408:	f030 4c00 	bics.w	r12, r0, #2147483648	; 0x80000000
  10f40c:	bf18      	it	ne
  10f40e:	f031 4c00 	bicsne.w	r12, r1, #2147483648	; 0x80000000
  10f412:	d1ca      	bne.n	10f3aa <__aeabi_fdiv+0xba>
  10f414:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  10f418:	f47f af5c 	bne.w	10f2d4 <__aeabi_fmul+0x14c>
  10f41c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  10f420:	f47f af3c 	bne.w	10f29c <__aeabi_fmul+0x114>
  10f424:	e75f      	b.n	10f2e6 <__aeabi_fmul+0x15e>
  10f426:	bf00      	nop

0010f428 <__aeabi_f2iz>:
  10f428:	ea4f 0240 	mov.w	r2, r0, lsl #1
  10f42c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  10f430:	d30f      	bcc.n	10f452 <__aeabi_f2iz+0x2a>
  10f432:	f04f 039e 	mov.w	r3, #158	; 0x9e
  10f436:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  10f43a:	d90d      	bls.n	10f458 <__aeabi_f2iz+0x30>
  10f43c:	ea4f 2300 	mov.w	r3, r0, lsl #8
  10f440:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  10f444:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  10f448:	fa23 f002 	lsr.w	r0, r3, r2
  10f44c:	bf18      	it	ne
  10f44e:	4240      	negne	r0, r0
  10f450:	4770      	bx	lr
  10f452:	f04f 0000 	mov.w	r0, #0
  10f456:	4770      	bx	lr
  10f458:	f112 0f61 	cmn.w	r2, #97	; 0x61
  10f45c:	d101      	bne.n	10f462 <__aeabi_f2iz+0x3a>
  10f45e:	0242      	lsls	r2, r0, #9
  10f460:	d105      	bne.n	10f46e <__aeabi_f2iz+0x46>
  10f462:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
  10f466:	bf08      	it	eq
  10f468:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  10f46c:	4770      	bx	lr
  10f46e:	f04f 0000 	mov.w	r0, #0
  10f472:	4770      	bx	lr

0010f474 <__aeabi_uldivmod>:
  10f474:	b953      	cbnz	r3, 10f48c <__aeabi_uldivmod+0x18>
  10f476:	b94a      	cbnz	r2, 10f48c <__aeabi_uldivmod+0x18>
  10f478:	2900      	cmp	r1, #0
  10f47a:	bf08      	it	eq
  10f47c:	2800      	cmpeq	r0, #0
  10f47e:	bf1c      	itt	ne
  10f480:	f04f 31ff 	movne.w	r1, #4294967295
  10f484:	f04f 30ff 	movne.w	r0, #4294967295
  10f488:	f000 b982 	b.w	10f790 <__aeabi_idiv0>
  10f48c:	f1ad 0c08 	sub.w	r12, sp, #8
  10f490:	e96d ce04 	strd	r12, lr, [sp, #-16]!
  10f494:	f000 f806 	bl	10f4a4 <__udivmoddi4>
  10f498:	f8dd e004 	ldr.w	lr, [sp, #4]
  10f49c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  10f4a0:	b004      	add	sp, #16
  10f4a2:	4770      	bx	lr

0010f4a4 <__udivmoddi4>:
  10f4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  10f4a8:	468c      	mov	r12, r1
  10f4aa:	460c      	mov	r4, r1
  10f4ac:	4605      	mov	r5, r0
  10f4ae:	9e09      	ldr	r6, [sp, #36]	; 0x24
  10f4b0:	2b00      	cmp	r3, #0
  10f4b2:	d14f      	bne.n	10f554 <__udivmoddi4+0xb0>
  10f4b4:	428a      	cmp	r2, r1
  10f4b6:	4617      	mov	r7, r2
  10f4b8:	d96b      	bls.n	10f592 <__udivmoddi4+0xee>
  10f4ba:	fab2 fe82 	clz	lr, r2
  10f4be:	f1be 0f00 	cmp.w	lr, #0
  10f4c2:	d00b      	beq.n	10f4dc <__udivmoddi4+0x38>
  10f4c4:	f1ce 0520 	rsb	r5, lr, #32
  10f4c8:	fa20 f505 	lsr.w	r5, r0, r5
  10f4cc:	fa01 f30e 	lsl.w	r3, r1, lr
  10f4d0:	ea45 0c03 	orr.w	r12, r5, r3
  10f4d4:	fa02 f70e 	lsl.w	r7, r2, lr
  10f4d8:	fa00 f50e 	lsl.w	r5, r0, lr
  10f4dc:	0c39      	lsrs	r1, r7, #16
  10f4de:	fbbc f0f1 	udiv	r0, r12, r1
  10f4e2:	b2ba      	uxth	r2, r7
  10f4e4:	fb01 c310 	mls	r3, r1, r0, r12
  10f4e8:	fb00 f802 	mul.w	r8, r0, r2
  10f4ec:	ea4f 4c15 	mov.w	r12, r5, lsr #16
  10f4f0:	ea4c 4403 	orr.w	r4, r12, r3, lsl #16
  10f4f4:	45a0      	cmp	r8, r4
  10f4f6:	d909      	bls.n	10f50c <__udivmoddi4+0x68>
  10f4f8:	19e4      	adds	r4, r4, r7
  10f4fa:	f100 33ff 	add.w	r3, r0, #4294967295
  10f4fe:	f080 8128 	bcs.w	10f752 <__udivmoddi4+0x2ae>
  10f502:	45a0      	cmp	r8, r4
  10f504:	f240 8125 	bls.w	10f752 <__udivmoddi4+0x2ae>
  10f508:	3802      	subs	r0, #2
  10f50a:	443c      	add	r4, r7
  10f50c:	ebc8 0404 	rsb	r4, r8, r4
  10f510:	fbb4 f3f1 	udiv	r3, r4, r1
  10f514:	fb01 4c13 	mls	r12, r1, r3, r4
  10f518:	fb03 f202 	mul.w	r2, r3, r2
  10f51c:	b2ac      	uxth	r4, r5
  10f51e:	ea44 410c 	orr.w	r1, r4, r12, lsl #16
  10f522:	428a      	cmp	r2, r1
  10f524:	d909      	bls.n	10f53a <__udivmoddi4+0x96>
  10f526:	19c9      	adds	r1, r1, r7
  10f528:	f103 34ff 	add.w	r4, r3, #4294967295
  10f52c:	f080 810f 	bcs.w	10f74e <__udivmoddi4+0x2aa>
  10f530:	428a      	cmp	r2, r1
  10f532:	f240 810c 	bls.w	10f74e <__udivmoddi4+0x2aa>
  10f536:	3b02      	subs	r3, #2
  10f538:	4439      	add	r1, r7
  10f53a:	1a8a      	subs	r2, r1, r2
  10f53c:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  10f540:	2100      	movs	r1, #0
  10f542:	2e00      	cmp	r6, #0
  10f544:	d063      	beq.n	10f60e <__udivmoddi4+0x16a>
  10f546:	fa22 f20e 	lsr.w	r2, r2, lr
  10f54a:	2300      	movs	r3, #0
  10f54c:	e886 000c 	stmia.w	r6, {r2, r3}
  10f550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10f554:	428b      	cmp	r3, r1
  10f556:	d907      	bls.n	10f568 <__udivmoddi4+0xc4>
  10f558:	2e00      	cmp	r6, #0
  10f55a:	d056      	beq.n	10f60a <__udivmoddi4+0x166>
  10f55c:	2100      	movs	r1, #0
  10f55e:	e886 0011 	stmia.w	r6, {r0, r4}
  10f562:	4608      	mov	r0, r1
  10f564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10f568:	fab3 f183 	clz	r1, r3
  10f56c:	2900      	cmp	r1, #0
  10f56e:	f040 8093 	bne.w	10f698 <__udivmoddi4+0x1f4>
  10f572:	42a3      	cmp	r3, r4
  10f574:	d302      	bcc.n	10f57c <__udivmoddi4+0xd8>
  10f576:	4282      	cmp	r2, r0
  10f578:	f200 80fe 	bhi.w	10f778 <__udivmoddi4+0x2d4>
  10f57c:	1a85      	subs	r5, r0, r2
  10f57e:	eb64 0303 	sbc.w	r3, r4, r3
  10f582:	469c      	mov	r12, r3
  10f584:	2001      	movs	r0, #1
  10f586:	2e00      	cmp	r6, #0
  10f588:	d041      	beq.n	10f60e <__udivmoddi4+0x16a>
  10f58a:	e886 1020 	stmia.w	r6, {r5, r12}
  10f58e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10f592:	b912      	cbnz	r2, 10f59a <__udivmoddi4+0xf6>
  10f594:	2701      	movs	r7, #1
  10f596:	fbb7 f7f2 	udiv	r7, r7, r2
  10f59a:	fab7 fe87 	clz	lr, r7
  10f59e:	f1be 0f00 	cmp.w	lr, #0
  10f5a2:	d136      	bne.n	10f612 <__udivmoddi4+0x16e>
  10f5a4:	1be4      	subs	r4, r4, r7
  10f5a6:	ea4f 4817 	mov.w	r8, r7, lsr #16
  10f5aa:	fa1f f987 	uxth.w	r9, r7
  10f5ae:	2101      	movs	r1, #1
  10f5b0:	fbb4 f3f8 	udiv	r3, r4, r8
  10f5b4:	fb08 4413 	mls	r4, r8, r3, r4
  10f5b8:	fb09 f203 	mul.w	r2, r9, r3
  10f5bc:	ea4f 4c15 	mov.w	r12, r5, lsr #16
  10f5c0:	ea4c 4404 	orr.w	r4, r12, r4, lsl #16
  10f5c4:	42a2      	cmp	r2, r4
  10f5c6:	d907      	bls.n	10f5d8 <__udivmoddi4+0x134>
  10f5c8:	19e4      	adds	r4, r4, r7
  10f5ca:	f103 30ff 	add.w	r0, r3, #4294967295
  10f5ce:	d202      	bcs.n	10f5d6 <__udivmoddi4+0x132>
  10f5d0:	42a2      	cmp	r2, r4
  10f5d2:	f200 80d3 	bhi.w	10f77c <__udivmoddi4+0x2d8>
  10f5d6:	4603      	mov	r3, r0
  10f5d8:	1aa4      	subs	r4, r4, r2
  10f5da:	fbb4 f0f8 	udiv	r0, r4, r8
  10f5de:	fb08 4810 	mls	r8, r8, r0, r4
  10f5e2:	fb09 f900 	mul.w	r9, r9, r0
  10f5e6:	b2ac      	uxth	r4, r5
  10f5e8:	ea44 4208 	orr.w	r2, r4, r8, lsl #16
  10f5ec:	4591      	cmp	r9, r2
  10f5ee:	d907      	bls.n	10f600 <__udivmoddi4+0x15c>
  10f5f0:	19d2      	adds	r2, r2, r7
  10f5f2:	f100 34ff 	add.w	r4, r0, #4294967295
  10f5f6:	d202      	bcs.n	10f5fe <__udivmoddi4+0x15a>
  10f5f8:	4591      	cmp	r9, r2
  10f5fa:	f200 80ba 	bhi.w	10f772 <__udivmoddi4+0x2ce>
  10f5fe:	4620      	mov	r0, r4
  10f600:	ebc9 0202 	rsb	r2, r9, r2
  10f604:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
  10f608:	e79b      	b.n	10f542 <__udivmoddi4+0x9e>
  10f60a:	4631      	mov	r1, r6
  10f60c:	4630      	mov	r0, r6
  10f60e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10f612:	fa07 f70e 	lsl.w	r7, r7, lr
  10f616:	f1ce 0c20 	rsb	r12, lr, #32
  10f61a:	fa24 f30c 	lsr.w	r3, r4, r12
  10f61e:	ea4f 4817 	mov.w	r8, r7, lsr #16
  10f622:	fbb3 faf8 	udiv	r10, r3, r8
  10f626:	fa1f f987 	uxth.w	r9, r7
  10f62a:	fb08 351a 	mls	r5, r8, r10, r3
  10f62e:	fa20 fc0c 	lsr.w	r12, r0, r12
  10f632:	fa04 f40e 	lsl.w	r4, r4, lr
  10f636:	fb0a fb09 	mul.w	r11, r10, r9
  10f63a:	ea4c 0c04 	orr.w	r12, r12, r4
  10f63e:	ea4f 421c 	mov.w	r2, r12, lsr #16
  10f642:	ea42 4305 	orr.w	r3, r2, r5, lsl #16
  10f646:	459b      	cmp	r11, r3
  10f648:	fa00 f50e 	lsl.w	r5, r0, lr
  10f64c:	d90a      	bls.n	10f664 <__udivmoddi4+0x1c0>
  10f64e:	19db      	adds	r3, r3, r7
  10f650:	f10a 32ff 	add.w	r2, r10, #4294967295
  10f654:	f080 808b 	bcs.w	10f76e <__udivmoddi4+0x2ca>
  10f658:	459b      	cmp	r11, r3
  10f65a:	f240 8088 	bls.w	10f76e <__udivmoddi4+0x2ca>
  10f65e:	f1aa 0a02 	sub.w	r10, r10, #2
  10f662:	443b      	add	r3, r7
  10f664:	ebcb 0303 	rsb	r3, r11, r3
  10f668:	fbb3 f0f8 	udiv	r0, r3, r8
  10f66c:	fb08 3310 	mls	r3, r8, r0, r3
  10f670:	fb00 f409 	mul.w	r4, r0, r9
  10f674:	fa1f fc8c 	uxth.w	r12, r12
  10f678:	ea4c 4303 	orr.w	r3, r12, r3, lsl #16
  10f67c:	429c      	cmp	r4, r3
  10f67e:	d907      	bls.n	10f690 <__udivmoddi4+0x1ec>
  10f680:	19db      	adds	r3, r3, r7
  10f682:	f100 32ff 	add.w	r2, r0, #4294967295
  10f686:	d26e      	bcs.n	10f766 <__udivmoddi4+0x2c2>
  10f688:	429c      	cmp	r4, r3
  10f68a:	d96c      	bls.n	10f766 <__udivmoddi4+0x2c2>
  10f68c:	3802      	subs	r0, #2
  10f68e:	443b      	add	r3, r7
  10f690:	1b1c      	subs	r4, r3, r4
  10f692:	ea40 410a 	orr.w	r1, r0, r10, lsl #16
  10f696:	e78b      	b.n	10f5b0 <__udivmoddi4+0x10c>
  10f698:	f1c1 0e20 	rsb	lr, r1, #32
  10f69c:	408b      	lsls	r3, r1
  10f69e:	fa22 fc0e 	lsr.w	r12, r2, lr
  10f6a2:	ea4c 0c03 	orr.w	r12, r12, r3
  10f6a6:	fa24 f70e 	lsr.w	r7, r4, lr
  10f6aa:	ea4f 491c 	mov.w	r9, r12, lsr #16
  10f6ae:	fbb7 faf9 	udiv	r10, r7, r9
  10f6b2:	fa1f f38c 	uxth.w	r3, r12
  10f6b6:	fb09 771a 	mls	r7, r9, r10, r7
  10f6ba:	fa20 f80e 	lsr.w	r8, r0, lr
  10f6be:	408c      	lsls	r4, r1
  10f6c0:	fb0a f503 	mul.w	r5, r10, r3
  10f6c4:	ea48 0404 	orr.w	r4, r8, r4
  10f6c8:	ea4f 4814 	mov.w	r8, r4, lsr #16
  10f6cc:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
  10f6d0:	42bd      	cmp	r5, r7
  10f6d2:	fa02 f201 	lsl.w	r2, r2, r1
  10f6d6:	fa00 fb01 	lsl.w	r11, r0, r1
  10f6da:	d909      	bls.n	10f6f0 <__udivmoddi4+0x24c>
  10f6dc:	eb17 070c 	adds.w	r7, r7, r12
  10f6e0:	f10a 30ff 	add.w	r0, r10, #4294967295
  10f6e4:	d241      	bcs.n	10f76a <__udivmoddi4+0x2c6>
  10f6e6:	42bd      	cmp	r5, r7
  10f6e8:	d93f      	bls.n	10f76a <__udivmoddi4+0x2c6>
  10f6ea:	f1aa 0a02 	sub.w	r10, r10, #2
  10f6ee:	4467      	add	r7, r12
  10f6f0:	1b7f      	subs	r7, r7, r5
  10f6f2:	fbb7 f5f9 	udiv	r5, r7, r9
  10f6f6:	fb09 7715 	mls	r7, r9, r5, r7
  10f6fa:	fb05 f303 	mul.w	r3, r5, r3
  10f6fe:	b2a4      	uxth	r4, r4
  10f700:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  10f704:	42bb      	cmp	r3, r7
  10f706:	d908      	bls.n	10f71a <__udivmoddi4+0x276>
  10f708:	eb17 070c 	adds.w	r7, r7, r12
  10f70c:	f105 30ff 	add.w	r0, r5, #4294967295
  10f710:	d227      	bcs.n	10f762 <__udivmoddi4+0x2be>
  10f712:	42bb      	cmp	r3, r7
  10f714:	d925      	bls.n	10f762 <__udivmoddi4+0x2be>
  10f716:	3d02      	subs	r5, #2
  10f718:	4467      	add	r7, r12
  10f71a:	ea45 400a 	orr.w	r0, r5, r10, lsl #16
  10f71e:	fba0 8902 	umull	r8, r9, r0, r2
  10f722:	1aff      	subs	r7, r7, r3
  10f724:	454f      	cmp	r7, r9
  10f726:	4645      	mov	r5, r8
  10f728:	464c      	mov	r4, r9
  10f72a:	d314      	bcc.n	10f756 <__udivmoddi4+0x2b2>
  10f72c:	d029      	beq.n	10f782 <__udivmoddi4+0x2de>
  10f72e:	b366      	cbz	r6, 10f78a <__udivmoddi4+0x2e6>
  10f730:	ebbb 0305 	subs.w	r3, r11, r5
  10f734:	eb67 0704 	sbc.w	r7, r7, r4
  10f738:	fa07 fe0e 	lsl.w	lr, r7, lr
  10f73c:	40cb      	lsrs	r3, r1
  10f73e:	40cf      	lsrs	r7, r1
  10f740:	ea4e 0303 	orr.w	r3, lr, r3
  10f744:	e886 0088 	stmia.w	r6, {r3, r7}
  10f748:	2100      	movs	r1, #0
  10f74a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  10f74e:	4623      	mov	r3, r4
  10f750:	e6f3      	b.n	10f53a <__udivmoddi4+0x96>
  10f752:	4618      	mov	r0, r3
  10f754:	e6da      	b.n	10f50c <__udivmoddi4+0x68>
  10f756:	ebb8 0502 	subs.w	r5, r8, r2
  10f75a:	eb69 040c 	sbc.w	r4, r9, r12
  10f75e:	3801      	subs	r0, #1
  10f760:	e7e5      	b.n	10f72e <__udivmoddi4+0x28a>
  10f762:	4605      	mov	r5, r0
  10f764:	e7d9      	b.n	10f71a <__udivmoddi4+0x276>
  10f766:	4610      	mov	r0, r2
  10f768:	e792      	b.n	10f690 <__udivmoddi4+0x1ec>
  10f76a:	4682      	mov	r10, r0
  10f76c:	e7c0      	b.n	10f6f0 <__udivmoddi4+0x24c>
  10f76e:	4692      	mov	r10, r2
  10f770:	e778      	b.n	10f664 <__udivmoddi4+0x1c0>
  10f772:	3802      	subs	r0, #2
  10f774:	443a      	add	r2, r7
  10f776:	e743      	b.n	10f600 <__udivmoddi4+0x15c>
  10f778:	4608      	mov	r0, r1
  10f77a:	e704      	b.n	10f586 <__udivmoddi4+0xe2>
  10f77c:	3b02      	subs	r3, #2
  10f77e:	443c      	add	r4, r7
  10f780:	e72a      	b.n	10f5d8 <__udivmoddi4+0x134>
  10f782:	45c3      	cmp	r11, r8
  10f784:	d3e7      	bcc.n	10f756 <__udivmoddi4+0x2b2>
  10f786:	463c      	mov	r4, r7
  10f788:	e7d1      	b.n	10f72e <__udivmoddi4+0x28a>
  10f78a:	4631      	mov	r1, r6
  10f78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0010f790 <__aeabi_idiv0>:
  10f790:	4770      	bx	lr
  10f792:	bf00      	nop

0010f794 <__assert_func>:
  10f794:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  10f796:	461c      	mov	r4, r3
  10f798:	4b09      	ldr	r3, [pc, #36]	; (10f7c0 <__assert_func+0x2c>)
  10f79a:	4605      	mov	r5, r0
  10f79c:	681b      	ldr	r3, [r3, #0]
  10f79e:	68d8      	ldr	r0, [r3, #12]
  10f7a0:	b912      	cbnz	r2, 10f7a8 <__assert_func+0x14>
  10f7a2:	4b08      	ldr	r3, [pc, #32]	; (10f7c4 <__assert_func+0x30>)
  10f7a4:	461a      	mov	r2, r3
  10f7a6:	e000      	b.n	10f7aa <__assert_func+0x16>
  10f7a8:	4b07      	ldr	r3, [pc, #28]	; (10f7c8 <__assert_func+0x34>)
  10f7aa:	e88d 000a 	stmia.w	sp, {r1, r3}
  10f7ae:	9202      	str	r2, [sp, #8]
  10f7b0:	462b      	mov	r3, r5
  10f7b2:	4622      	mov	r2, r4
  10f7b4:	4905      	ldr	r1, [pc, #20]	; (10f7cc <__assert_func+0x38>)
  10f7b6:	f000 fa2f 	bl	10fc18 <fiprintf>
  10f7ba:	f7f6 f973 	bl	105aa4 <abort>
  10f7be:	bf00      	nop
  10f7c0:	3fff4264 	.word	0x3fff4264
  10f7c4:	001164ed 	.word	0x001164ed
  10f7c8:	00119dd2 	.word	0x00119dd2
  10f7cc:	00119ddf 	.word	0x00119ddf

0010f7d0 <atoi>:
  10f7d0:	220a      	movs	r2, #10
  10f7d2:	2100      	movs	r1, #0
  10f7d4:	f002 bebe 	b.w	112554 <strtol>

0010f7d8 <calloc>:
  10f7d8:	4b02      	ldr	r3, [pc, #8]	; (10f7e4 <calloc+0xc>)
  10f7da:	460a      	mov	r2, r1
  10f7dc:	4601      	mov	r1, r0
  10f7de:	6818      	ldr	r0, [r3, #0]
  10f7e0:	f7fd be6b 	b.w	10d4ba <__wrap__calloc_r>
  10f7e4:	3fff4264 	.word	0x3fff4264

0010f7e8 <__errno>:
  10f7e8:	4b01      	ldr	r3, [pc, #4]	; (10f7f0 <__errno+0x8>)
  10f7ea:	6818      	ldr	r0, [r3, #0]
  10f7ec:	4770      	bx	lr
  10f7ee:	bf00      	nop
  10f7f0:	3fff4264 	.word	0x3fff4264

0010f7f4 <_fclose_r>:
  10f7f4:	b570      	push	{r4, r5, r6, lr}
  10f7f6:	4605      	mov	r5, r0
  10f7f8:	460c      	mov	r4, r1
  10f7fa:	b909      	cbnz	r1, 10f800 <_fclose_r+0xc>
  10f7fc:	2000      	movs	r0, #0
  10f7fe:	bd70      	pop	{r4, r5, r6, pc}
  10f800:	b118      	cbz	r0, 10f80a <_fclose_r+0x16>
  10f802:	6983      	ldr	r3, [r0, #24]
  10f804:	b90b      	cbnz	r3, 10f80a <_fclose_r+0x16>
  10f806:	f000 f951 	bl	10faac <__sinit>
  10f80a:	4b20      	ldr	r3, [pc, #128]	; (10f88c <_fclose_r+0x98>)
  10f80c:	429c      	cmp	r4, r3
  10f80e:	d101      	bne.n	10f814 <_fclose_r+0x20>
  10f810:	686c      	ldr	r4, [r5, #4]
  10f812:	e008      	b.n	10f826 <_fclose_r+0x32>
  10f814:	4b1e      	ldr	r3, [pc, #120]	; (10f890 <_fclose_r+0x9c>)
  10f816:	429c      	cmp	r4, r3
  10f818:	d101      	bne.n	10f81e <_fclose_r+0x2a>
  10f81a:	68ac      	ldr	r4, [r5, #8]
  10f81c:	e003      	b.n	10f826 <_fclose_r+0x32>
  10f81e:	4b1d      	ldr	r3, [pc, #116]	; (10f894 <_fclose_r+0xa0>)
  10f820:	429c      	cmp	r4, r3
  10f822:	bf08      	it	eq
  10f824:	68ec      	ldreq	r4, [r5, #12]
  10f826:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  10f82a:	2b00      	cmp	r3, #0
  10f82c:	d0e6      	beq.n	10f7fc <_fclose_r+0x8>
  10f82e:	4621      	mov	r1, r4
  10f830:	4628      	mov	r0, r5
  10f832:	f000 f839 	bl	10f8a8 <__sflush_r>
  10f836:	6b23      	ldr	r3, [r4, #48]	; 0x30
  10f838:	4606      	mov	r6, r0
  10f83a:	b133      	cbz	r3, 10f84a <_fclose_r+0x56>
  10f83c:	6a21      	ldr	r1, [r4, #32]
  10f83e:	4628      	mov	r0, r5
  10f840:	4798      	blx	r3
  10f842:	2800      	cmp	r0, #0
  10f844:	bfb8      	it	lt
  10f846:	f04f 36ff 	movlt.w	r6, #4294967295
  10f84a:	89a3      	ldrh	r3, [r4, #12]
  10f84c:	061b      	lsls	r3, r3, #24
  10f84e:	d503      	bpl.n	10f858 <_fclose_r+0x64>
  10f850:	6921      	ldr	r1, [r4, #16]
  10f852:	4628      	mov	r0, r5
  10f854:	f7fd fe2f 	bl	10d4b6 <__wrap__free_r>
  10f858:	6b61      	ldr	r1, [r4, #52]	; 0x34
  10f85a:	b141      	cbz	r1, 10f86e <_fclose_r+0x7a>
  10f85c:	f104 0344 	add.w	r3, r4, #68	; 0x44
  10f860:	4299      	cmp	r1, r3
  10f862:	d002      	beq.n	10f86a <_fclose_r+0x76>
  10f864:	4628      	mov	r0, r5
  10f866:	f7fd fe26 	bl	10d4b6 <__wrap__free_r>
  10f86a:	2300      	movs	r3, #0
  10f86c:	6363      	str	r3, [r4, #52]	; 0x34
  10f86e:	6ca1      	ldr	r1, [r4, #72]	; 0x48
  10f870:	b121      	cbz	r1, 10f87c <_fclose_r+0x88>
  10f872:	4628      	mov	r0, r5
  10f874:	f7fd fe1f 	bl	10d4b6 <__wrap__free_r>
  10f878:	2300      	movs	r3, #0
  10f87a:	64a3      	str	r3, [r4, #72]	; 0x48
  10f87c:	f000 f982 	bl	10fb84 <__sfp_lock_acquire>
  10f880:	2300      	movs	r3, #0
  10f882:	81a3      	strh	r3, [r4, #12]
  10f884:	f000 f97f 	bl	10fb86 <__sfp_lock_release>
  10f888:	4630      	mov	r0, r6
  10f88a:	bd70      	pop	{r4, r5, r6, pc}
  10f88c:	00119f10 	.word	0x00119f10
  10f890:	00119f30 	.word	0x00119f30
  10f894:	00119f50 	.word	0x00119f50

0010f898 <fclose>:
  10f898:	4b02      	ldr	r3, [pc, #8]	; (10f8a4 <fclose+0xc>)
  10f89a:	4601      	mov	r1, r0
  10f89c:	6818      	ldr	r0, [r3, #0]
  10f89e:	f7ff bfa9 	b.w	10f7f4 <_fclose_r>
  10f8a2:	bf00      	nop
  10f8a4:	3fff4264 	.word	0x3fff4264

0010f8a8 <__sflush_r>:
  10f8a8:	898a      	ldrh	r2, [r1, #12]
  10f8aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  10f8ae:	4605      	mov	r5, r0
  10f8b0:	0710      	lsls	r0, r2, #28
  10f8b2:	460c      	mov	r4, r1
  10f8b4:	d459      	bmi.n	10f96a <__sflush_r+0xc2>
  10f8b6:	684b      	ldr	r3, [r1, #4]
  10f8b8:	2b00      	cmp	r3, #0
  10f8ba:	dc02      	bgt.n	10f8c2 <__sflush_r+0x1a>
  10f8bc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
  10f8be:	2b00      	cmp	r3, #0
  10f8c0:	dd17      	ble.n	10f8f2 <__sflush_r+0x4a>
  10f8c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
  10f8c4:	b1ae      	cbz	r6, 10f8f2 <__sflush_r+0x4a>
  10f8c6:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  10f8ca:	2300      	movs	r3, #0
  10f8cc:	b292      	uxth	r2, r2
  10f8ce:	682f      	ldr	r7, [r5, #0]
  10f8d0:	602b      	str	r3, [r5, #0]
  10f8d2:	b10a      	cbz	r2, 10f8d8 <__sflush_r+0x30>
  10f8d4:	6d60      	ldr	r0, [r4, #84]	; 0x54
  10f8d6:	e015      	b.n	10f904 <__sflush_r+0x5c>
  10f8d8:	6a21      	ldr	r1, [r4, #32]
  10f8da:	2301      	movs	r3, #1
  10f8dc:	4628      	mov	r0, r5
  10f8de:	47b0      	blx	r6
  10f8e0:	1c41      	adds	r1, r0, #1
  10f8e2:	d10f      	bne.n	10f904 <__sflush_r+0x5c>
  10f8e4:	682b      	ldr	r3, [r5, #0]
  10f8e6:	b16b      	cbz	r3, 10f904 <__sflush_r+0x5c>
  10f8e8:	2b1d      	cmp	r3, #29
  10f8ea:	d001      	beq.n	10f8f0 <__sflush_r+0x48>
  10f8ec:	2b16      	cmp	r3, #22
  10f8ee:	d103      	bne.n	10f8f8 <__sflush_r+0x50>
  10f8f0:	602f      	str	r7, [r5, #0]
  10f8f2:	2000      	movs	r0, #0
  10f8f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10f8f8:	89a3      	ldrh	r3, [r4, #12]
  10f8fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  10f8fe:	81a3      	strh	r3, [r4, #12]
  10f900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10f904:	89a3      	ldrh	r3, [r4, #12]
  10f906:	075a      	lsls	r2, r3, #29
  10f908:	d505      	bpl.n	10f916 <__sflush_r+0x6e>
  10f90a:	6863      	ldr	r3, [r4, #4]
  10f90c:	1ac0      	subs	r0, r0, r3
  10f90e:	6b63      	ldr	r3, [r4, #52]	; 0x34
  10f910:	b10b      	cbz	r3, 10f916 <__sflush_r+0x6e>
  10f912:	6c23      	ldr	r3, [r4, #64]	; 0x40
  10f914:	1ac0      	subs	r0, r0, r3
  10f916:	2300      	movs	r3, #0
  10f918:	4602      	mov	r2, r0
  10f91a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
  10f91c:	6a21      	ldr	r1, [r4, #32]
  10f91e:	4628      	mov	r0, r5
  10f920:	47b0      	blx	r6
  10f922:	1c43      	adds	r3, r0, #1
  10f924:	89a3      	ldrh	r3, [r4, #12]
  10f926:	d106      	bne.n	10f936 <__sflush_r+0x8e>
  10f928:	6829      	ldr	r1, [r5, #0]
  10f92a:	291d      	cmp	r1, #29
  10f92c:	d839      	bhi.n	10f9a2 <__sflush_r+0xfa>
  10f92e:	4a20      	ldr	r2, [pc, #128]	; (10f9b0 <__sflush_r+0x108>)
  10f930:	40ca      	lsrs	r2, r1
  10f932:	07d6      	lsls	r6, r2, #31
  10f934:	d535      	bpl.n	10f9a2 <__sflush_r+0xfa>
  10f936:	2200      	movs	r2, #0
  10f938:	6062      	str	r2, [r4, #4]
  10f93a:	6922      	ldr	r2, [r4, #16]
  10f93c:	04d9      	lsls	r1, r3, #19
  10f93e:	6022      	str	r2, [r4, #0]
  10f940:	d504      	bpl.n	10f94c <__sflush_r+0xa4>
  10f942:	1c42      	adds	r2, r0, #1
  10f944:	d101      	bne.n	10f94a <__sflush_r+0xa2>
  10f946:	682b      	ldr	r3, [r5, #0]
  10f948:	b903      	cbnz	r3, 10f94c <__sflush_r+0xa4>
  10f94a:	6560      	str	r0, [r4, #84]	; 0x54
  10f94c:	6b61      	ldr	r1, [r4, #52]	; 0x34
  10f94e:	602f      	str	r7, [r5, #0]
  10f950:	2900      	cmp	r1, #0
  10f952:	d0ce      	beq.n	10f8f2 <__sflush_r+0x4a>
  10f954:	f104 0344 	add.w	r3, r4, #68	; 0x44
  10f958:	4299      	cmp	r1, r3
  10f95a:	d002      	beq.n	10f962 <__sflush_r+0xba>
  10f95c:	4628      	mov	r0, r5
  10f95e:	f7fd fdaa 	bl	10d4b6 <__wrap__free_r>
  10f962:	2000      	movs	r0, #0
  10f964:	6360      	str	r0, [r4, #52]	; 0x34
  10f966:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10f96a:	690f      	ldr	r7, [r1, #16]
  10f96c:	2f00      	cmp	r7, #0
  10f96e:	d0c0      	beq.n	10f8f2 <__sflush_r+0x4a>
  10f970:	0793      	lsls	r3, r2, #30
  10f972:	680e      	ldr	r6, [r1, #0]
  10f974:	bf0c      	ite	eq
  10f976:	694b      	ldreq	r3, [r1, #20]
  10f978:	2300      	movne	r3, #0
  10f97a:	ebc7 0806 	rsb	r8, r7, r6
  10f97e:	600f      	str	r7, [r1, #0]
  10f980:	608b      	str	r3, [r1, #8]
  10f982:	e002      	b.n	10f98a <__sflush_r+0xe2>
  10f984:	4407      	add	r7, r0
  10f986:	ebc0 0808 	rsb	r8, r0, r8
  10f98a:	f1b8 0f00 	cmp.w	r8, #0
  10f98e:	ddb0      	ble.n	10f8f2 <__sflush_r+0x4a>
  10f990:	4643      	mov	r3, r8
  10f992:	463a      	mov	r2, r7
  10f994:	6a21      	ldr	r1, [r4, #32]
  10f996:	4628      	mov	r0, r5
  10f998:	6aa6      	ldr	r6, [r4, #40]	; 0x28
  10f99a:	47b0      	blx	r6
  10f99c:	2800      	cmp	r0, #0
  10f99e:	dcf1      	bgt.n	10f984 <__sflush_r+0xdc>
  10f9a0:	89a3      	ldrh	r3, [r4, #12]
  10f9a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  10f9a6:	81a3      	strh	r3, [r4, #12]
  10f9a8:	f04f 30ff 	mov.w	r0, #4294967295
  10f9ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  10f9b0:	20400001 	.word	0x20400001

0010f9b4 <_fflush_r>:
  10f9b4:	b538      	push	{r3, r4, r5, lr}
  10f9b6:	690b      	ldr	r3, [r1, #16]
  10f9b8:	4605      	mov	r5, r0
  10f9ba:	460c      	mov	r4, r1
  10f9bc:	b1db      	cbz	r3, 10f9f6 <_fflush_r+0x42>
  10f9be:	b118      	cbz	r0, 10f9c8 <_fflush_r+0x14>
  10f9c0:	6983      	ldr	r3, [r0, #24]
  10f9c2:	b90b      	cbnz	r3, 10f9c8 <_fflush_r+0x14>
  10f9c4:	f000 f872 	bl	10faac <__sinit>
  10f9c8:	4b0c      	ldr	r3, [pc, #48]	; (10f9fc <_fflush_r+0x48>)
  10f9ca:	429c      	cmp	r4, r3
  10f9cc:	d101      	bne.n	10f9d2 <_fflush_r+0x1e>
  10f9ce:	686c      	ldr	r4, [r5, #4]
  10f9d0:	e008      	b.n	10f9e4 <_fflush_r+0x30>
  10f9d2:	4b0b      	ldr	r3, [pc, #44]	; (10fa00 <_fflush_r+0x4c>)
  10f9d4:	429c      	cmp	r4, r3
  10f9d6:	d101      	bne.n	10f9dc <_fflush_r+0x28>
  10f9d8:	68ac      	ldr	r4, [r5, #8]
  10f9da:	e003      	b.n	10f9e4 <_fflush_r+0x30>
  10f9dc:	4b09      	ldr	r3, [pc, #36]	; (10fa04 <_fflush_r+0x50>)
  10f9de:	429c      	cmp	r4, r3
  10f9e0:	bf08      	it	eq
  10f9e2:	68ec      	ldreq	r4, [r5, #12]
  10f9e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  10f9e8:	b12b      	cbz	r3, 10f9f6 <_fflush_r+0x42>
  10f9ea:	4621      	mov	r1, r4
  10f9ec:	4628      	mov	r0, r5
  10f9ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  10f9f2:	f7ff bf59 	b.w	10f8a8 <__sflush_r>
  10f9f6:	2000      	movs	r0, #0
  10f9f8:	bd38      	pop	{r3, r4, r5, pc}
  10f9fa:	bf00      	nop
  10f9fc:	00119f10 	.word	0x00119f10
  10fa00:	00119f30 	.word	0x00119f30
  10fa04:	00119f50 	.word	0x00119f50

0010fa08 <fflush>:
  10fa08:	4601      	mov	r1, r0
  10fa0a:	b920      	cbnz	r0, 10fa16 <fflush+0xe>
  10fa0c:	4b04      	ldr	r3, [pc, #16]	; (10fa20 <fflush+0x18>)
  10fa0e:	4905      	ldr	r1, [pc, #20]	; (10fa24 <fflush+0x1c>)
  10fa10:	6818      	ldr	r0, [r3, #0]
  10fa12:	f000 b9a1 	b.w	10fd58 <_fwalk_reent>
  10fa16:	4b04      	ldr	r3, [pc, #16]	; (10fa28 <fflush+0x20>)
  10fa18:	6818      	ldr	r0, [r3, #0]
  10fa1a:	f7ff bfcb 	b.w	10f9b4 <_fflush_r>
  10fa1e:	bf00      	nop
  10fa20:	00119f70 	.word	0x00119f70
  10fa24:	0010f9b5 	.word	0x0010f9b5
  10fa28:	3fff4264 	.word	0x3fff4264

0010fa2c <_cleanup_r>:
  10fa2c:	4901      	ldr	r1, [pc, #4]	; (10fa34 <_cleanup_r+0x8>)
  10fa2e:	f000 b993 	b.w	10fd58 <_fwalk_reent>
  10fa32:	bf00      	nop
  10fa34:	0010f9b5 	.word	0x0010f9b5

0010fa38 <std.isra.0>:
  10fa38:	b510      	push	{r4, lr}
  10fa3a:	4604      	mov	r4, r0
  10fa3c:	2300      	movs	r3, #0
  10fa3e:	6003      	str	r3, [r0, #0]
  10fa40:	6043      	str	r3, [r0, #4]
  10fa42:	6083      	str	r3, [r0, #8]
  10fa44:	8181      	strh	r1, [r0, #12]
  10fa46:	6643      	str	r3, [r0, #100]	; 0x64
  10fa48:	81c2      	strh	r2, [r0, #14]
  10fa4a:	6103      	str	r3, [r0, #16]
  10fa4c:	6143      	str	r3, [r0, #20]
  10fa4e:	6183      	str	r3, [r0, #24]
  10fa50:	4619      	mov	r1, r3
  10fa52:	2208      	movs	r2, #8
  10fa54:	305c      	adds	r0, #92	; 0x5c
  10fa56:	f000 fa66 	bl	10ff26 <memset>
  10fa5a:	4b05      	ldr	r3, [pc, #20]	; (10fa70 <std.isra.0+0x38>)
  10fa5c:	6224      	str	r4, [r4, #32]
  10fa5e:	6263      	str	r3, [r4, #36]	; 0x24
  10fa60:	4b04      	ldr	r3, [pc, #16]	; (10fa74 <std.isra.0+0x3c>)
  10fa62:	62a3      	str	r3, [r4, #40]	; 0x28
  10fa64:	4b04      	ldr	r3, [pc, #16]	; (10fa78 <std.isra.0+0x40>)
  10fa66:	62e3      	str	r3, [r4, #44]	; 0x2c
  10fa68:	4b04      	ldr	r3, [pc, #16]	; (10fa7c <std.isra.0+0x44>)
  10fa6a:	6323      	str	r3, [r4, #48]	; 0x30
  10fa6c:	bd10      	pop	{r4, pc}
  10fa6e:	bf00      	nop
  10fa70:	001116f9 	.word	0x001116f9
  10fa74:	0011171f 	.word	0x0011171f
  10fa78:	00111757 	.word	0x00111757
  10fa7c:	0011177b 	.word	0x0011177b

0010fa80 <__sfmoreglue>:
  10fa80:	b570      	push	{r4, r5, r6, lr}
  10fa82:	2368      	movs	r3, #104	; 0x68
  10fa84:	1e4d      	subs	r5, r1, #1
  10fa86:	435d      	muls	r5, r3
  10fa88:	460e      	mov	r6, r1
  10fa8a:	f105 0174 	add.w	r1, r5, #116	; 0x74
  10fa8e:	f7fd fd0e 	bl	10d4ae <__wrap__malloc_r>
  10fa92:	4604      	mov	r4, r0
  10fa94:	b140      	cbz	r0, 10faa8 <__sfmoreglue+0x28>
  10fa96:	2100      	movs	r1, #0
  10fa98:	e880 0042 	stmia.w	r0, {r1, r6}
  10fa9c:	300c      	adds	r0, #12
  10fa9e:	60a0      	str	r0, [r4, #8]
  10faa0:	f105 0268 	add.w	r2, r5, #104	; 0x68
  10faa4:	f000 fa3f 	bl	10ff26 <memset>
  10faa8:	4620      	mov	r0, r4
  10faaa:	bd70      	pop	{r4, r5, r6, pc}

0010faac <__sinit>:
  10faac:	6983      	ldr	r3, [r0, #24]
  10faae:	b510      	push	{r4, lr}
  10fab0:	4604      	mov	r4, r0
  10fab2:	bb33      	cbnz	r3, 10fb02 <__sinit+0x56>
  10fab4:	6483      	str	r3, [r0, #72]	; 0x48
  10fab6:	64c3      	str	r3, [r0, #76]	; 0x4c
  10fab8:	6503      	str	r3, [r0, #80]	; 0x50
  10faba:	4b12      	ldr	r3, [pc, #72]	; (10fb04 <__sinit+0x58>)
  10fabc:	4a12      	ldr	r2, [pc, #72]	; (10fb08 <__sinit+0x5c>)
  10fabe:	681b      	ldr	r3, [r3, #0]
  10fac0:	6282      	str	r2, [r0, #40]	; 0x28
  10fac2:	4298      	cmp	r0, r3
  10fac4:	bf04      	itt	eq
  10fac6:	2301      	moveq	r3, #1
  10fac8:	6183      	streq	r3, [r0, #24]
  10faca:	f000 f81f 	bl	10fb0c <__sfp>
  10face:	6060      	str	r0, [r4, #4]
  10fad0:	4620      	mov	r0, r4
  10fad2:	f000 f81b 	bl	10fb0c <__sfp>
  10fad6:	60a0      	str	r0, [r4, #8]
  10fad8:	4620      	mov	r0, r4
  10fada:	f000 f817 	bl	10fb0c <__sfp>
  10fade:	2200      	movs	r2, #0
  10fae0:	60e0      	str	r0, [r4, #12]
  10fae2:	2104      	movs	r1, #4
  10fae4:	6860      	ldr	r0, [r4, #4]
  10fae6:	f7ff ffa7 	bl	10fa38 <std.isra.0>
  10faea:	2201      	movs	r2, #1
  10faec:	2109      	movs	r1, #9
  10faee:	68a0      	ldr	r0, [r4, #8]
  10faf0:	f7ff ffa2 	bl	10fa38 <std.isra.0>
  10faf4:	2202      	movs	r2, #2
  10faf6:	2112      	movs	r1, #18
  10faf8:	68e0      	ldr	r0, [r4, #12]
  10fafa:	f7ff ff9d 	bl	10fa38 <std.isra.0>
  10fafe:	2301      	movs	r3, #1
  10fb00:	61a3      	str	r3, [r4, #24]
  10fb02:	bd10      	pop	{r4, pc}
  10fb04:	00119f70 	.word	0x00119f70
  10fb08:	0010fa2d 	.word	0x0010fa2d

0010fb0c <__sfp>:
  10fb0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  10fb0e:	4b1c      	ldr	r3, [pc, #112]	; (10fb80 <__sfp+0x74>)
  10fb10:	4607      	mov	r7, r0
  10fb12:	681e      	ldr	r6, [r3, #0]
  10fb14:	69b3      	ldr	r3, [r6, #24]
  10fb16:	b913      	cbnz	r3, 10fb1e <__sfp+0x12>
  10fb18:	4630      	mov	r0, r6
  10fb1a:	f7ff ffc7 	bl	10faac <__sinit>
  10fb1e:	3648      	adds	r6, #72	; 0x48
  10fb20:	68b4      	ldr	r4, [r6, #8]
  10fb22:	6873      	ldr	r3, [r6, #4]
  10fb24:	3b01      	subs	r3, #1
  10fb26:	d404      	bmi.n	10fb32 <__sfp+0x26>
  10fb28:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
  10fb2c:	b17d      	cbz	r5, 10fb4e <__sfp+0x42>
  10fb2e:	3468      	adds	r4, #104	; 0x68
  10fb30:	e7f8      	b.n	10fb24 <__sfp+0x18>
  10fb32:	6833      	ldr	r3, [r6, #0]
  10fb34:	b10b      	cbz	r3, 10fb3a <__sfp+0x2e>
  10fb36:	6836      	ldr	r6, [r6, #0]
  10fb38:	e7f2      	b.n	10fb20 <__sfp+0x14>
  10fb3a:	2104      	movs	r1, #4
  10fb3c:	4638      	mov	r0, r7
  10fb3e:	f7ff ff9f 	bl	10fa80 <__sfmoreglue>
  10fb42:	6030      	str	r0, [r6, #0]
  10fb44:	2800      	cmp	r0, #0
  10fb46:	d1f6      	bne.n	10fb36 <__sfp+0x2a>
  10fb48:	230c      	movs	r3, #12
  10fb4a:	603b      	str	r3, [r7, #0]
  10fb4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10fb4e:	f64f 73ff 	movw	r3, #65535	; 0xffff
  10fb52:	81e3      	strh	r3, [r4, #14]
  10fb54:	2301      	movs	r3, #1
  10fb56:	81a3      	strh	r3, [r4, #12]
  10fb58:	6665      	str	r5, [r4, #100]	; 0x64
  10fb5a:	6025      	str	r5, [r4, #0]
  10fb5c:	60a5      	str	r5, [r4, #8]
  10fb5e:	6065      	str	r5, [r4, #4]
  10fb60:	6125      	str	r5, [r4, #16]
  10fb62:	6165      	str	r5, [r4, #20]
  10fb64:	61a5      	str	r5, [r4, #24]
  10fb66:	2208      	movs	r2, #8
  10fb68:	4629      	mov	r1, r5
  10fb6a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
  10fb6e:	f000 f9da 	bl	10ff26 <memset>
  10fb72:	6365      	str	r5, [r4, #52]	; 0x34
  10fb74:	63a5      	str	r5, [r4, #56]	; 0x38
  10fb76:	64a5      	str	r5, [r4, #72]	; 0x48
  10fb78:	64e5      	str	r5, [r4, #76]	; 0x4c
  10fb7a:	4620      	mov	r0, r4
  10fb7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  10fb7e:	bf00      	nop
  10fb80:	00119f70 	.word	0x00119f70

0010fb84 <__sfp_lock_acquire>:
  10fb84:	4770      	bx	lr

0010fb86 <__sfp_lock_release>:
  10fb86:	4770      	bx	lr

0010fb88 <_fopen_r>:
  10fb88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  10fb8a:	460f      	mov	r7, r1
  10fb8c:	4611      	mov	r1, r2
  10fb8e:	aa01      	add	r2, sp, #4
  10fb90:	4605      	mov	r5, r0
  10fb92:	f003 fce9 	bl	113568 <__sflags>
  10fb96:	4606      	mov	r6, r0
  10fb98:	b908      	cbnz	r0, 10fb9e <_fopen_r+0x16>
  10fb9a:	2000      	movs	r0, #0
  10fb9c:	e029      	b.n	10fbf2 <_fopen_r+0x6a>
  10fb9e:	4628      	mov	r0, r5
  10fba0:	f7ff ffb4 	bl	10fb0c <__sfp>
  10fba4:	4604      	mov	r4, r0
  10fba6:	2800      	cmp	r0, #0
  10fba8:	d0f7      	beq.n	10fb9a <_fopen_r+0x12>
  10fbaa:	f44f 73db 	mov.w	r3, #438	; 0x1b6
  10fbae:	9a01      	ldr	r2, [sp, #4]
  10fbb0:	4639      	mov	r1, r7
  10fbb2:	4628      	mov	r0, r5
  10fbb4:	f001 fb72 	bl	11129c <_open_r>
  10fbb8:	2800      	cmp	r0, #0
  10fbba:	da06      	bge.n	10fbca <_fopen_r+0x42>
  10fbbc:	2500      	movs	r5, #0
  10fbbe:	f7ff ffe1 	bl	10fb84 <__sfp_lock_acquire>
  10fbc2:	81a5      	strh	r5, [r4, #12]
  10fbc4:	f7ff ffdf 	bl	10fb86 <__sfp_lock_release>
  10fbc8:	e7e7      	b.n	10fb9a <_fopen_r+0x12>
  10fbca:	4b0b      	ldr	r3, [pc, #44]	; (10fbf8 <_fopen_r+0x70>)
  10fbcc:	81e0      	strh	r0, [r4, #14]
  10fbce:	6263      	str	r3, [r4, #36]	; 0x24
  10fbd0:	4b0a      	ldr	r3, [pc, #40]	; (10fbfc <_fopen_r+0x74>)
  10fbd2:	81a6      	strh	r6, [r4, #12]
  10fbd4:	62a3      	str	r3, [r4, #40]	; 0x28
  10fbd6:	4b0a      	ldr	r3, [pc, #40]	; (10fc00 <_fopen_r+0x78>)
  10fbd8:	6224      	str	r4, [r4, #32]
  10fbda:	62e3      	str	r3, [r4, #44]	; 0x2c
  10fbdc:	4b09      	ldr	r3, [pc, #36]	; (10fc04 <_fopen_r+0x7c>)
  10fbde:	6323      	str	r3, [r4, #48]	; 0x30
  10fbe0:	05f3      	lsls	r3, r6, #23
  10fbe2:	d505      	bpl.n	10fbf0 <_fopen_r+0x68>
  10fbe4:	2302      	movs	r3, #2
  10fbe6:	2200      	movs	r2, #0
  10fbe8:	4621      	mov	r1, r4
  10fbea:	4628      	mov	r0, r5
  10fbec:	f000 f826 	bl	10fc3c <_fseek_r>
  10fbf0:	4620      	mov	r0, r4
  10fbf2:	b003      	add	sp, #12
  10fbf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  10fbf6:	bf00      	nop
  10fbf8:	001116f9 	.word	0x001116f9
  10fbfc:	0011171f 	.word	0x0011171f
  10fc00:	00111757 	.word	0x00111757
  10fc04:	0011177b 	.word	0x0011177b

0010fc08 <fopen>:
  10fc08:	4b02      	ldr	r3, [pc, #8]	; (10fc14 <fopen+0xc>)
  10fc0a:	460a      	mov	r2, r1
  10fc0c:	4601      	mov	r1, r0
  10fc0e:	6818      	ldr	r0, [r3, #0]
  10fc10:	f7ff bfba 	b.w	10fb88 <_fopen_r>
  10fc14:	3fff4264 	.word	0x3fff4264

0010fc18 <fiprintf>:
  10fc18:	b40e      	push	{r1, r2, r3}
  10fc1a:	b503      	push	{r0, r1, lr}
  10fc1c:	4601      	mov	r1, r0
  10fc1e:	ab03      	add	r3, sp, #12
  10fc20:	4805      	ldr	r0, [pc, #20]	; (10fc38 <fiprintf+0x20>)
  10fc22:	f853 2b04 	ldr.w	r2, [r3], #4
  10fc26:	6800      	ldr	r0, [r0, #0]
  10fc28:	9301      	str	r3, [sp, #4]
  10fc2a:	f000 fa79 	bl	110120 <_vfiprintf_r>
  10fc2e:	b002      	add	sp, #8
  10fc30:	f85d eb04 	ldr.w	lr, [sp], #4
  10fc34:	b003      	add	sp, #12
  10fc36:	4770      	bx	lr
  10fc38:	3fff4264 	.word	0x3fff4264

0010fc3c <_fseek_r>:
  10fc3c:	f000 b800 	b.w	10fc40 <_fseeko_r>

0010fc40 <_fseeko_r>:
  10fc40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  10fc44:	460c      	mov	r4, r1
  10fc46:	4690      	mov	r8, r2
  10fc48:	461e      	mov	r6, r3
  10fc4a:	4605      	mov	r5, r0
  10fc4c:	b118      	cbz	r0, 10fc56 <_fseeko_r+0x16>
  10fc4e:	6983      	ldr	r3, [r0, #24]
  10fc50:	b90b      	cbnz	r3, 10fc56 <_fseeko_r+0x16>
  10fc52:	f7ff ff2b 	bl	10faac <__sinit>
  10fc56:	4b3d      	ldr	r3, [pc, #244]	; (10fd4c <_fseeko_r+0x10c>)
  10fc58:	429c      	cmp	r4, r3
  10fc5a:	d101      	bne.n	10fc60 <_fseeko_r+0x20>
  10fc5c:	686c      	ldr	r4, [r5, #4]
  10fc5e:	e008      	b.n	10fc72 <_fseeko_r+0x32>
  10fc60:	4b3b      	ldr	r3, [pc, #236]	; (10fd50 <_fseeko_r+0x110>)
  10fc62:	429c      	cmp	r4, r3
  10fc64:	d101      	bne.n	10fc6a <_fseeko_r+0x2a>
  10fc66:	68ac      	ldr	r4, [r5, #8]
  10fc68:	e003      	b.n	10fc72 <_fseeko_r+0x32>
  10fc6a:	4b3a      	ldr	r3, [pc, #232]	; (10fd54 <_fseeko_r+0x114>)
  10fc6c:	429c      	cmp	r4, r3
  10fc6e:	bf08      	it	eq
  10fc70:	68ec      	ldreq	r4, [r5, #12]
  10fc72:	89a3      	ldrh	r3, [r4, #12]
  10fc74:	f403 7384 	and.w	r3, r3, #264	; 0x108
  10fc78:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
  10fc7c:	d103      	bne.n	10fc86 <_fseeko_r+0x46>
  10fc7e:	4621      	mov	r1, r4
  10fc80:	4628      	mov	r0, r5
  10fc82:	f7ff fe97 	bl	10f9b4 <_fflush_r>
  10fc86:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
  10fc88:	b90f      	cbnz	r7, 10fc8e <_fseeko_r+0x4e>
  10fc8a:	231d      	movs	r3, #29
  10fc8c:	e02b      	b.n	10fce6 <_fseeko_r+0xa6>
  10fc8e:	2e01      	cmp	r6, #1
  10fc90:	d004      	beq.n	10fc9c <_fseeko_r+0x5c>
  10fc92:	2e02      	cmp	r6, #2
  10fc94:	d02b      	beq.n	10fcee <_fseeko_r+0xae>
  10fc96:	b356      	cbz	r6, 10fcee <_fseeko_r+0xae>
  10fc98:	2316      	movs	r3, #22
  10fc9a:	e024      	b.n	10fce6 <_fseeko_r+0xa6>
  10fc9c:	4621      	mov	r1, r4
  10fc9e:	4628      	mov	r0, r5
  10fca0:	f7ff fe88 	bl	10f9b4 <_fflush_r>
  10fca4:	89a2      	ldrh	r2, [r4, #12]
  10fca6:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  10fcaa:	b292      	uxth	r2, r2
  10fcac:	b10a      	cbz	r2, 10fcb2 <_fseeko_r+0x72>
  10fcae:	6d60      	ldr	r0, [r4, #84]	; 0x54
  10fcb0:	e005      	b.n	10fcbe <_fseeko_r+0x7e>
  10fcb2:	6a21      	ldr	r1, [r4, #32]
  10fcb4:	4633      	mov	r3, r6
  10fcb6:	4628      	mov	r0, r5
  10fcb8:	47b8      	blx	r7
  10fcba:	1c41      	adds	r1, r0, #1
  10fcbc:	d014      	beq.n	10fce8 <_fseeko_r+0xa8>
  10fcbe:	89a3      	ldrh	r3, [r4, #12]
  10fcc0:	075a      	lsls	r2, r3, #29
  10fcc2:	d506      	bpl.n	10fcd2 <_fseeko_r+0x92>
  10fcc4:	6863      	ldr	r3, [r4, #4]
  10fcc6:	1ac0      	subs	r0, r0, r3
  10fcc8:	6b63      	ldr	r3, [r4, #52]	; 0x34
  10fcca:	b14b      	cbz	r3, 10fce0 <_fseeko_r+0xa0>
  10fccc:	6c23      	ldr	r3, [r4, #64]	; 0x40
  10fcce:	1ac0      	subs	r0, r0, r3
  10fcd0:	e006      	b.n	10fce0 <_fseeko_r+0xa0>
  10fcd2:	071b      	lsls	r3, r3, #28
  10fcd4:	d504      	bpl.n	10fce0 <_fseeko_r+0xa0>
  10fcd6:	6823      	ldr	r3, [r4, #0]
  10fcd8:	b113      	cbz	r3, 10fce0 <_fseeko_r+0xa0>
  10fcda:	6922      	ldr	r2, [r4, #16]
  10fcdc:	1a9b      	subs	r3, r3, r2
  10fcde:	4418      	add	r0, r3
  10fce0:	4480      	add	r8, r0
  10fce2:	2600      	movs	r6, #0
  10fce4:	e003      	b.n	10fcee <_fseeko_r+0xae>
  10fce6:	602b      	str	r3, [r5, #0]
  10fce8:	f04f 39ff 	mov.w	r9, #4294967295
  10fcec:	e02b      	b.n	10fd46 <_fseeko_r+0x106>
  10fcee:	6923      	ldr	r3, [r4, #16]
  10fcf0:	b91b      	cbnz	r3, 10fcfa <_fseeko_r+0xba>
  10fcf2:	4621      	mov	r1, r4
  10fcf4:	4628      	mov	r0, r5
  10fcf6:	f000 f877 	bl	10fde8 <__smakebuf_r>
  10fcfa:	4621      	mov	r1, r4
  10fcfc:	4628      	mov	r0, r5
  10fcfe:	f7ff fe59 	bl	10f9b4 <_fflush_r>
  10fd02:	4681      	mov	r9, r0
  10fd04:	2800      	cmp	r0, #0
  10fd06:	d1ef      	bne.n	10fce8 <_fseeko_r+0xa8>
  10fd08:	4633      	mov	r3, r6
  10fd0a:	4642      	mov	r2, r8
  10fd0c:	6a21      	ldr	r1, [r4, #32]
  10fd0e:	4628      	mov	r0, r5
  10fd10:	47b8      	blx	r7
  10fd12:	3001      	adds	r0, #1
  10fd14:	d0e8      	beq.n	10fce8 <_fseeko_r+0xa8>
  10fd16:	6b61      	ldr	r1, [r4, #52]	; 0x34
  10fd18:	b141      	cbz	r1, 10fd2c <_fseeko_r+0xec>
  10fd1a:	f104 0344 	add.w	r3, r4, #68	; 0x44
  10fd1e:	4299      	cmp	r1, r3
  10fd20:	d002      	beq.n	10fd28 <_fseeko_r+0xe8>
  10fd22:	4628      	mov	r0, r5
  10fd24:	f7fd fbc7 	bl	10d4b6 <__wrap__free_r>
  10fd28:	2300      	movs	r3, #0
  10fd2a:	6363      	str	r3, [r4, #52]	; 0x34
  10fd2c:	6923      	ldr	r3, [r4, #16]
  10fd2e:	2100      	movs	r1, #0
  10fd30:	6023      	str	r3, [r4, #0]
  10fd32:	89a3      	ldrh	r3, [r4, #12]
  10fd34:	6061      	str	r1, [r4, #4]
  10fd36:	f423 6302 	bic.w	r3, r3, #2080	; 0x820
  10fd3a:	81a3      	strh	r3, [r4, #12]
  10fd3c:	2208      	movs	r2, #8
  10fd3e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
  10fd42:	f000 f8f0 	bl	10ff26 <memset>
  10fd46:	4648      	mov	r0, r9
  10fd48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  10fd4c:	00119f10 	.word	0x00119f10
  10fd50:	00119f30 	.word	0x00119f30
  10fd54:	00119f50 	.word	0x00119f50

0010fd58 <_fwalk_reent>:
  10fd58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  10fd5c:	4680      	mov	r8, r0
  10fd5e:	4689      	mov	r9, r1
  10fd60:	f100 0448 	add.w	r4, r0, #72	; 0x48
  10fd64:	2600      	movs	r6, #0
  10fd66:	b194      	cbz	r4, 10fd8e <_fwalk_reent+0x36>
  10fd68:	68a5      	ldr	r5, [r4, #8]
  10fd6a:	6867      	ldr	r7, [r4, #4]
  10fd6c:	3f01      	subs	r7, #1
  10fd6e:	d40c      	bmi.n	10fd8a <_fwalk_reent+0x32>
  10fd70:	89ab      	ldrh	r3, [r5, #12]
  10fd72:	2b01      	cmp	r3, #1
  10fd74:	d907      	bls.n	10fd86 <_fwalk_reent+0x2e>
  10fd76:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
  10fd7a:	3301      	adds	r3, #1
  10fd7c:	d003      	beq.n	10fd86 <_fwalk_reent+0x2e>
  10fd7e:	4629      	mov	r1, r5
  10fd80:	4640      	mov	r0, r8
  10fd82:	47c8      	blx	r9
  10fd84:	4306      	orrs	r6, r0
  10fd86:	3568      	adds	r5, #104	; 0x68
  10fd88:	e7f0      	b.n	10fd6c <_fwalk_reent+0x14>
  10fd8a:	6824      	ldr	r4, [r4, #0]
  10fd8c:	e7eb      	b.n	10fd66 <_fwalk_reent+0xe>
  10fd8e:	4630      	mov	r0, r6
  10fd90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0010fd94 <__libc_init_array>:
  10fd94:	4b0e      	ldr	r3, [pc, #56]	; (10fdd0 <__libc_init_array+0x3c>)
  10fd96:	b570      	push	{r4, r5, r6, lr}
  10fd98:	461e      	mov	r6, r3
  10fd9a:	4c0e      	ldr	r4, [pc, #56]	; (10fdd4 <__libc_init_array+0x40>)
  10fd9c:	2500      	movs	r5, #0
  10fd9e:	1ae4      	subs	r4, r4, r3
  10fda0:	10a4      	asrs	r4, r4, #2
  10fda2:	42a5      	cmp	r5, r4
  10fda4:	d004      	beq.n	10fdb0 <__libc_init_array+0x1c>
  10fda6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
  10fdaa:	4798      	blx	r3
  10fdac:	3501      	adds	r5, #1
  10fdae:	e7f8      	b.n	10fda2 <__libc_init_array+0xe>
  10fdb0:	f006 f8c0 	bl	115f34 <_init>
  10fdb4:	4b08      	ldr	r3, [pc, #32]	; (10fdd8 <__libc_init_array+0x44>)
  10fdb6:	4c09      	ldr	r4, [pc, #36]	; (10fddc <__libc_init_array+0x48>)
  10fdb8:	461e      	mov	r6, r3
  10fdba:	1ae4      	subs	r4, r4, r3
  10fdbc:	10a4      	asrs	r4, r4, #2
  10fdbe:	2500      	movs	r5, #0
  10fdc0:	42a5      	cmp	r5, r4
  10fdc2:	d004      	beq.n	10fdce <__libc_init_array+0x3a>
  10fdc4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
  10fdc8:	4798      	blx	r3
  10fdca:	3501      	adds	r5, #1
  10fdcc:	e7f8      	b.n	10fdc0 <__libc_init_array+0x2c>
  10fdce:	bd70      	pop	{r4, r5, r6, pc}
  10fdd0:	3fff42a0 	.word	0x3fff42a0
  10fdd4:	3fff42a0 	.word	0x3fff42a0
  10fdd8:	3fff42a0 	.word	0x3fff42a0
  10fddc:	3fff42c8 	.word	0x3fff42c8

0010fde0 <_localeconv_r>:
  10fde0:	4800      	ldr	r0, [pc, #0]	; (10fde4 <_localeconv_r+0x4>)
  10fde2:	4770      	bx	lr
  10fde4:	3fff4268 	.word	0x3fff4268

0010fde8 <__smakebuf_r>:
  10fde8:	b5f0      	push	{r4, r5, r6, r7, lr}
  10fdea:	898b      	ldrh	r3, [r1, #12]
  10fdec:	b091      	sub	sp, #68	; 0x44
  10fdee:	079d      	lsls	r5, r3, #30
  10fdf0:	4606      	mov	r6, r0
  10fdf2:	460c      	mov	r4, r1
  10fdf4:	d425      	bmi.n	10fe42 <__smakebuf_r+0x5a>
  10fdf6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  10fdfa:	2900      	cmp	r1, #0
  10fdfc:	da08      	bge.n	10fe10 <__smakebuf_r+0x28>
  10fdfe:	89a3      	ldrh	r3, [r4, #12]
  10fe00:	2500      	movs	r5, #0
  10fe02:	f013 0f80 	tst.w	r3, #128	; 0x80
  10fe06:	bf14      	ite	ne
  10fe08:	2740      	movne	r7, #64	; 0x40
  10fe0a:	f44f 6780 	moveq.w	r7, #1024	; 0x400
  10fe0e:	e00d      	b.n	10fe2c <__smakebuf_r+0x44>
  10fe10:	aa01      	add	r2, sp, #4
  10fe12:	f003 fbe1 	bl	1135d8 <_fstat_r>
  10fe16:	2800      	cmp	r0, #0
  10fe18:	dbf1      	blt.n	10fdfe <__smakebuf_r+0x16>
  10fe1a:	9d02      	ldr	r5, [sp, #8]
  10fe1c:	f44f 6780 	mov.w	r7, #1024	; 0x400
  10fe20:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  10fe24:	f5a5 5100 	sub.w	r1, r5, #8192	; 0x2000
  10fe28:	424d      	negs	r5, r1
  10fe2a:	414d      	adcs	r5, r1
  10fe2c:	4639      	mov	r1, r7
  10fe2e:	4630      	mov	r0, r6
  10fe30:	f7fd fb3d 	bl	10d4ae <__wrap__malloc_r>
  10fe34:	b960      	cbnz	r0, 10fe50 <__smakebuf_r+0x68>
  10fe36:	89a3      	ldrh	r3, [r4, #12]
  10fe38:	059a      	lsls	r2, r3, #22
  10fe3a:	d41d      	bmi.n	10fe78 <__smakebuf_r+0x90>
  10fe3c:	f043 0302 	orr.w	r3, r3, #2
  10fe40:	81a3      	strh	r3, [r4, #12]
  10fe42:	f104 0347 	add.w	r3, r4, #71	; 0x47
  10fe46:	6023      	str	r3, [r4, #0]
  10fe48:	6123      	str	r3, [r4, #16]
  10fe4a:	2301      	movs	r3, #1
  10fe4c:	6163      	str	r3, [r4, #20]
  10fe4e:	e013      	b.n	10fe78 <__smakebuf_r+0x90>
  10fe50:	4b0a      	ldr	r3, [pc, #40]	; (10fe7c <__smakebuf_r+0x94>)
  10fe52:	62b3      	str	r3, [r6, #40]	; 0x28
  10fe54:	89a3      	ldrh	r3, [r4, #12]
  10fe56:	6020      	str	r0, [r4, #0]
  10fe58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  10fe5c:	81a3      	strh	r3, [r4, #12]
  10fe5e:	6120      	str	r0, [r4, #16]
  10fe60:	6167      	str	r7, [r4, #20]
  10fe62:	b14d      	cbz	r5, 10fe78 <__smakebuf_r+0x90>
  10fe64:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  10fe68:	4630      	mov	r0, r6
  10fe6a:	f003 fee5 	bl	113c38 <_isatty_r>
  10fe6e:	b118      	cbz	r0, 10fe78 <__smakebuf_r+0x90>
  10fe70:	89a3      	ldrh	r3, [r4, #12]
  10fe72:	f043 0301 	orr.w	r3, r3, #1
  10fe76:	81a3      	strh	r3, [r4, #12]
  10fe78:	b011      	add	sp, #68	; 0x44
  10fe7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  10fe7c:	0010fa2d 	.word	0x0010fa2d

0010fe80 <malloc>:
  10fe80:	4b02      	ldr	r3, [pc, #8]	; (10fe8c <malloc+0xc>)
  10fe82:	4601      	mov	r1, r0
  10fe84:	6818      	ldr	r0, [r3, #0]
  10fe86:	f7fd bb12 	b.w	10d4ae <__wrap__malloc_r>
  10fe8a:	bf00      	nop
  10fe8c:	3fff4264 	.word	0x3fff4264

0010fe90 <free>:
  10fe90:	4b02      	ldr	r3, [pc, #8]	; (10fe9c <free+0xc>)
  10fe92:	4601      	mov	r1, r0
  10fe94:	6818      	ldr	r0, [r3, #0]
  10fe96:	f7fd bb0e 	b.w	10d4b6 <__wrap__free_r>
  10fe9a:	bf00      	nop
  10fe9c:	3fff4264 	.word	0x3fff4264

0010fea0 <memchr>:
  10fea0:	b510      	push	{r4, lr}
  10fea2:	b2c9      	uxtb	r1, r1
  10fea4:	4402      	add	r2, r0
  10fea6:	4290      	cmp	r0, r2
  10fea8:	4603      	mov	r3, r0
  10feaa:	d005      	beq.n	10feb8 <memchr+0x18>
  10feac:	781c      	ldrb	r4, [r3, #0]
  10feae:	3001      	adds	r0, #1
  10feb0:	428c      	cmp	r4, r1
  10feb2:	d1f8      	bne.n	10fea6 <memchr+0x6>
  10feb4:	4618      	mov	r0, r3
  10feb6:	bd10      	pop	{r4, pc}
  10feb8:	2000      	movs	r0, #0
  10feba:	bd10      	pop	{r4, pc}

0010febc <memcmp>:
  10febc:	b510      	push	{r4, lr}
  10febe:	3901      	subs	r1, #1
  10fec0:	4402      	add	r2, r0
  10fec2:	4290      	cmp	r0, r2
  10fec4:	d007      	beq.n	10fed6 <memcmp+0x1a>
  10fec6:	f810 3b01 	ldrb.w	r3, [r0], #1
  10feca:	f811 4f01 	ldrb.w	r4, [r1, #1]!
  10fece:	42a3      	cmp	r3, r4
  10fed0:	d0f7      	beq.n	10fec2 <memcmp+0x6>
  10fed2:	1b18      	subs	r0, r3, r4
  10fed4:	bd10      	pop	{r4, pc}
  10fed6:	2000      	movs	r0, #0
  10fed8:	bd10      	pop	{r4, pc}

0010feda <memcpy>:
  10feda:	b510      	push	{r4, lr}
  10fedc:	1e43      	subs	r3, r0, #1
  10fede:	440a      	add	r2, r1
  10fee0:	4291      	cmp	r1, r2
  10fee2:	d004      	beq.n	10feee <memcpy+0x14>
  10fee4:	f811 4b01 	ldrb.w	r4, [r1], #1
  10fee8:	f803 4f01 	strb.w	r4, [r3, #1]!
  10feec:	e7f8      	b.n	10fee0 <memcpy+0x6>
  10feee:	bd10      	pop	{r4, pc}

0010fef0 <memmove>:
  10fef0:	4288      	cmp	r0, r1
  10fef2:	b510      	push	{r4, lr}
  10fef4:	eb01 0302 	add.w	r3, r1, r2
  10fef8:	d801      	bhi.n	10fefe <memmove+0xe>
  10fefa:	1e42      	subs	r2, r0, #1
  10fefc:	e00b      	b.n	10ff16 <memmove+0x26>
  10fefe:	4298      	cmp	r0, r3
  10ff00:	d2fb      	bcs.n	10fefa <memmove+0xa>
  10ff02:	1881      	adds	r1, r0, r2
  10ff04:	1ad2      	subs	r2, r2, r3
  10ff06:	42d3      	cmn	r3, r2
  10ff08:	d004      	beq.n	10ff14 <memmove+0x24>
  10ff0a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  10ff0e:	f801 4d01 	strb.w	r4, [r1, #-1]!
  10ff12:	e7f8      	b.n	10ff06 <memmove+0x16>
  10ff14:	bd10      	pop	{r4, pc}
  10ff16:	4299      	cmp	r1, r3
  10ff18:	d004      	beq.n	10ff24 <memmove+0x34>
  10ff1a:	f811 4b01 	ldrb.w	r4, [r1], #1
  10ff1e:	f802 4f01 	strb.w	r4, [r2, #1]!
  10ff22:	e7f8      	b.n	10ff16 <memmove+0x26>
  10ff24:	bd10      	pop	{r4, pc}

0010ff26 <memset>:
  10ff26:	4603      	mov	r3, r0
  10ff28:	4402      	add	r2, r0
  10ff2a:	4293      	cmp	r3, r2
  10ff2c:	d002      	beq.n	10ff34 <memset+0xe>
  10ff2e:	f803 1b01 	strb.w	r1, [r3], #1
  10ff32:	e7fa      	b.n	10ff2a <memset+0x4>
  10ff34:	4770      	bx	lr

0010ff36 <_calloc_r>:
  10ff36:	b538      	push	{r3, r4, r5, lr}
  10ff38:	fb02 f401 	mul.w	r4, r2, r1
  10ff3c:	4621      	mov	r1, r4
  10ff3e:	f7fd fab6 	bl	10d4ae <__wrap__malloc_r>
  10ff42:	4605      	mov	r5, r0
  10ff44:	b118      	cbz	r0, 10ff4e <_calloc_r+0x18>
  10ff46:	4622      	mov	r2, r4
  10ff48:	2100      	movs	r1, #0
  10ff4a:	f7ff ffec 	bl	10ff26 <memset>
  10ff4e:	4628      	mov	r0, r5
  10ff50:	bd38      	pop	{r3, r4, r5, pc}
	...

0010ff54 <_free_r>:
  10ff54:	b530      	push	{r4, r5, lr}
  10ff56:	2900      	cmp	r1, #0
  10ff58:	d03c      	beq.n	10ffd4 <_free_r+0x80>
  10ff5a:	f851 2c04 	ldr.w	r2, [r1, #-4]
  10ff5e:	1f0b      	subs	r3, r1, #4
  10ff60:	491d      	ldr	r1, [pc, #116]	; (10ffd8 <_free_r+0x84>)
  10ff62:	2a00      	cmp	r2, #0
  10ff64:	bfb8      	it	lt
  10ff66:	189b      	addlt	r3, r3, r2
  10ff68:	680a      	ldr	r2, [r1, #0]
  10ff6a:	460c      	mov	r4, r1
  10ff6c:	b912      	cbnz	r2, 10ff74 <_free_r+0x20>
  10ff6e:	605a      	str	r2, [r3, #4]
  10ff70:	600b      	str	r3, [r1, #0]
  10ff72:	bd30      	pop	{r4, r5, pc}
  10ff74:	429a      	cmp	r2, r3
  10ff76:	d90d      	bls.n	10ff94 <_free_r+0x40>
  10ff78:	6819      	ldr	r1, [r3, #0]
  10ff7a:	1858      	adds	r0, r3, r1
  10ff7c:	4282      	cmp	r2, r0
  10ff7e:	bf01      	itttt	eq
  10ff80:	6810      	ldreq	r0, [r2, #0]
  10ff82:	6852      	ldreq	r2, [r2, #4]
  10ff84:	1809      	addeq	r1, r1, r0
  10ff86:	6019      	streq	r1, [r3, #0]
  10ff88:	605a      	str	r2, [r3, #4]
  10ff8a:	6023      	str	r3, [r4, #0]
  10ff8c:	bd30      	pop	{r4, r5, pc}
  10ff8e:	4299      	cmp	r1, r3
  10ff90:	d803      	bhi.n	10ff9a <_free_r+0x46>
  10ff92:	460a      	mov	r2, r1
  10ff94:	6851      	ldr	r1, [r2, #4]
  10ff96:	2900      	cmp	r1, #0
  10ff98:	d1f9      	bne.n	10ff8e <_free_r+0x3a>
  10ff9a:	6814      	ldr	r4, [r2, #0]
  10ff9c:	1915      	adds	r5, r2, r4
  10ff9e:	429d      	cmp	r5, r3
  10ffa0:	d10a      	bne.n	10ffb8 <_free_r+0x64>
  10ffa2:	681b      	ldr	r3, [r3, #0]
  10ffa4:	4423      	add	r3, r4
  10ffa6:	18d0      	adds	r0, r2, r3
  10ffa8:	4281      	cmp	r1, r0
  10ffaa:	6013      	str	r3, [r2, #0]
  10ffac:	d112      	bne.n	10ffd4 <_free_r+0x80>
  10ffae:	6808      	ldr	r0, [r1, #0]
  10ffb0:	4403      	add	r3, r0
  10ffb2:	6013      	str	r3, [r2, #0]
  10ffb4:	684b      	ldr	r3, [r1, #4]
  10ffb6:	e00c      	b.n	10ffd2 <_free_r+0x7e>
  10ffb8:	d902      	bls.n	10ffc0 <_free_r+0x6c>
  10ffba:	230c      	movs	r3, #12
  10ffbc:	6003      	str	r3, [r0, #0]
  10ffbe:	bd30      	pop	{r4, r5, pc}
  10ffc0:	6818      	ldr	r0, [r3, #0]
  10ffc2:	181c      	adds	r4, r3, r0
  10ffc4:	42a1      	cmp	r1, r4
  10ffc6:	bf01      	itttt	eq
  10ffc8:	680c      	ldreq	r4, [r1, #0]
  10ffca:	6849      	ldreq	r1, [r1, #4]
  10ffcc:	1900      	addeq	r0, r0, r4
  10ffce:	6018      	streq	r0, [r3, #0]
  10ffd0:	6059      	str	r1, [r3, #4]
  10ffd2:	6053      	str	r3, [r2, #4]
  10ffd4:	bd30      	pop	{r4, r5, pc}
  10ffd6:	bf00      	nop
  10ffd8:	3fff8dec 	.word	0x3fff8dec

0010ffdc <_malloc_r>:
  10ffdc:	b570      	push	{r4, r5, r6, lr}
  10ffde:	1ccd      	adds	r5, r1, #3
  10ffe0:	f025 0503 	bic.w	r5, r5, #3
  10ffe4:	3508      	adds	r5, #8
  10ffe6:	2d0c      	cmp	r5, #12
  10ffe8:	bf38      	it	cc
  10ffea:	250c      	movcc	r5, #12
  10ffec:	2d00      	cmp	r5, #0
  10ffee:	4606      	mov	r6, r0
  10fff0:	da03      	bge.n	10fffa <_malloc_r+0x1e>
  10fff2:	230c      	movs	r3, #12
  10fff4:	6033      	str	r3, [r6, #0]
  10fff6:	2000      	movs	r0, #0
  10fff8:	bd70      	pop	{r4, r5, r6, pc}
  10fffa:	42a9      	cmp	r1, r5
  10fffc:	d8f9      	bhi.n	10fff2 <_malloc_r+0x16>
  10fffe:	4b1f      	ldr	r3, [pc, #124]	; (11007c <_malloc_r+0xa0>)
  110000:	681c      	ldr	r4, [r3, #0]
  110002:	461a      	mov	r2, r3
  110004:	4621      	mov	r1, r4
  110006:	b1a1      	cbz	r1, 110032 <_malloc_r+0x56>
  110008:	680b      	ldr	r3, [r1, #0]
  11000a:	1b5b      	subs	r3, r3, r5
  11000c:	d40e      	bmi.n	11002c <_malloc_r+0x50>
  11000e:	2b0b      	cmp	r3, #11
  110010:	d903      	bls.n	11001a <_malloc_r+0x3e>
  110012:	600b      	str	r3, [r1, #0]
  110014:	18cc      	adds	r4, r1, r3
  110016:	50cd      	str	r5, [r1, r3]
  110018:	e01e      	b.n	110058 <_malloc_r+0x7c>
  11001a:	428c      	cmp	r4, r1
  11001c:	bf0b      	itete	eq
  11001e:	6863      	ldreq	r3, [r4, #4]
  110020:	684b      	ldrne	r3, [r1, #4]
  110022:	6013      	streq	r3, [r2, #0]
  110024:	6063      	strne	r3, [r4, #4]
  110026:	bf18      	it	ne
  110028:	460c      	movne	r4, r1
  11002a:	e015      	b.n	110058 <_malloc_r+0x7c>
  11002c:	460c      	mov	r4, r1
  11002e:	6849      	ldr	r1, [r1, #4]
  110030:	e7e9      	b.n	110006 <_malloc_r+0x2a>
  110032:	4c13      	ldr	r4, [pc, #76]	; (110080 <_malloc_r+0xa4>)
  110034:	6823      	ldr	r3, [r4, #0]
  110036:	b91b      	cbnz	r3, 110040 <_malloc_r+0x64>
  110038:	4630      	mov	r0, r6
  11003a:	f001 fa09 	bl	111450 <_sbrk_r>
  11003e:	6020      	str	r0, [r4, #0]
  110040:	4629      	mov	r1, r5
  110042:	4630      	mov	r0, r6
  110044:	f001 fa04 	bl	111450 <_sbrk_r>
  110048:	1c43      	adds	r3, r0, #1
  11004a:	d0d2      	beq.n	10fff2 <_malloc_r+0x16>
  11004c:	1cc4      	adds	r4, r0, #3
  11004e:	f024 0403 	bic.w	r4, r4, #3
  110052:	42a0      	cmp	r0, r4
  110054:	d10a      	bne.n	11006c <_malloc_r+0x90>
  110056:	6025      	str	r5, [r4, #0]
  110058:	f104 000b 	add.w	r0, r4, #11
  11005c:	1d23      	adds	r3, r4, #4
  11005e:	f020 0007 	bic.w	r0, r0, #7
  110062:	1ac3      	subs	r3, r0, r3
  110064:	d009      	beq.n	11007a <_malloc_r+0x9e>
  110066:	425a      	negs	r2, r3
  110068:	50e2      	str	r2, [r4, r3]
  11006a:	bd70      	pop	{r4, r5, r6, pc}
  11006c:	1a21      	subs	r1, r4, r0
  11006e:	4630      	mov	r0, r6
  110070:	f001 f9ee 	bl	111450 <_sbrk_r>
  110074:	3001      	adds	r0, #1
  110076:	d1ee      	bne.n	110056 <_malloc_r+0x7a>
  110078:	e7bb      	b.n	10fff2 <_malloc_r+0x16>
  11007a:	bd70      	pop	{r4, r5, r6, pc}
  11007c:	3fff8dec 	.word	0x3fff8dec
  110080:	3fff8de8 	.word	0x3fff8de8

00110084 <_realloc_r>:
  110084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  110086:	4607      	mov	r7, r0
  110088:	4615      	mov	r5, r2
  11008a:	460e      	mov	r6, r1
  11008c:	b921      	cbnz	r1, 110098 <_realloc_r+0x14>
  11008e:	4611      	mov	r1, r2
  110090:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  110094:	f7fd ba0b 	b.w	10d4ae <__wrap__malloc_r>
  110098:	b91a      	cbnz	r2, 1100a2 <_realloc_r+0x1e>
  11009a:	f7fd fa0c 	bl	10d4b6 <__wrap__free_r>
  11009e:	4628      	mov	r0, r5
  1100a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1100a2:	f004 f9d4 	bl	11444e <_malloc_usable_size_r>
  1100a6:	4285      	cmp	r5, r0
  1100a8:	d90e      	bls.n	1100c8 <_realloc_r+0x44>
  1100aa:	4629      	mov	r1, r5
  1100ac:	4638      	mov	r0, r7
  1100ae:	f7fd f9fe 	bl	10d4ae <__wrap__malloc_r>
  1100b2:	4604      	mov	r4, r0
  1100b4:	b150      	cbz	r0, 1100cc <_realloc_r+0x48>
  1100b6:	4631      	mov	r1, r6
  1100b8:	462a      	mov	r2, r5
  1100ba:	f7ff ff0e 	bl	10feda <memcpy>
  1100be:	4631      	mov	r1, r6
  1100c0:	4638      	mov	r0, r7
  1100c2:	f7fd f9f8 	bl	10d4b6 <__wrap__free_r>
  1100c6:	e001      	b.n	1100cc <_realloc_r+0x48>
  1100c8:	4630      	mov	r0, r6
  1100ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1100cc:	4620      	mov	r0, r4
  1100ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

001100d0 <__sfputc_r>:
  1100d0:	6893      	ldr	r3, [r2, #8]
  1100d2:	b410      	push	{r4}
  1100d4:	3b01      	subs	r3, #1
  1100d6:	2b00      	cmp	r3, #0
  1100d8:	6093      	str	r3, [r2, #8]
  1100da:	da08      	bge.n	1100ee <__sfputc_r+0x1e>
  1100dc:	6994      	ldr	r4, [r2, #24]
  1100de:	42a3      	cmp	r3, r4
  1100e0:	db02      	blt.n	1100e8 <__sfputc_r+0x18>
  1100e2:	b2cb      	uxtb	r3, r1
  1100e4:	2b0a      	cmp	r3, #10
  1100e6:	d102      	bne.n	1100ee <__sfputc_r+0x1e>
  1100e8:	bc10      	pop	{r4}
  1100ea:	f002 bb37 	b.w	11275c <__swbuf_r>
  1100ee:	6813      	ldr	r3, [r2, #0]
  1100f0:	1c58      	adds	r0, r3, #1
  1100f2:	6010      	str	r0, [r2, #0]
  1100f4:	7019      	strb	r1, [r3, #0]
  1100f6:	b2c8      	uxtb	r0, r1
  1100f8:	bc10      	pop	{r4}
  1100fa:	4770      	bx	lr

001100fc <__sfputs_r>:
  1100fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  1100fe:	4606      	mov	r6, r0
  110100:	460f      	mov	r7, r1
  110102:	4614      	mov	r4, r2
  110104:	18d5      	adds	r5, r2, r3
  110106:	42ac      	cmp	r4, r5
  110108:	d008      	beq.n	11011c <__sfputs_r+0x20>
  11010a:	463a      	mov	r2, r7
  11010c:	f814 1b01 	ldrb.w	r1, [r4], #1
  110110:	4630      	mov	r0, r6
  110112:	f7ff ffdd 	bl	1100d0 <__sfputc_r>
  110116:	1c43      	adds	r3, r0, #1
  110118:	d1f5      	bne.n	110106 <__sfputs_r+0xa>
  11011a:	e000      	b.n	11011e <__sfputs_r+0x22>
  11011c:	2000      	movs	r0, #0
  11011e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00110120 <_vfiprintf_r>:
  110120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  110124:	b09d      	sub	sp, #116	; 0x74
  110126:	460c      	mov	r4, r1
  110128:	4617      	mov	r7, r2
  11012a:	9303      	str	r3, [sp, #12]
  11012c:	4606      	mov	r6, r0
  11012e:	b118      	cbz	r0, 110138 <_vfiprintf_r+0x18>
  110130:	6983      	ldr	r3, [r0, #24]
  110132:	b90b      	cbnz	r3, 110138 <_vfiprintf_r+0x18>
  110134:	f7ff fcba 	bl	10faac <__sinit>
  110138:	4b7f      	ldr	r3, [pc, #508]	; (110338 <_vfiprintf_r+0x218>)
  11013a:	429c      	cmp	r4, r3
  11013c:	d101      	bne.n	110142 <_vfiprintf_r+0x22>
  11013e:	6874      	ldr	r4, [r6, #4]
  110140:	e008      	b.n	110154 <_vfiprintf_r+0x34>
  110142:	4b7e      	ldr	r3, [pc, #504]	; (11033c <_vfiprintf_r+0x21c>)
  110144:	429c      	cmp	r4, r3
  110146:	d101      	bne.n	11014c <_vfiprintf_r+0x2c>
  110148:	68b4      	ldr	r4, [r6, #8]
  11014a:	e003      	b.n	110154 <_vfiprintf_r+0x34>
  11014c:	4b7c      	ldr	r3, [pc, #496]	; (110340 <_vfiprintf_r+0x220>)
  11014e:	429c      	cmp	r4, r3
  110150:	bf08      	it	eq
  110152:	68f4      	ldreq	r4, [r6, #12]
  110154:	89a3      	ldrh	r3, [r4, #12]
  110156:	0718      	lsls	r0, r3, #28
  110158:	d50c      	bpl.n	110174 <_vfiprintf_r+0x54>
  11015a:	6923      	ldr	r3, [r4, #16]
  11015c:	b153      	cbz	r3, 110174 <_vfiprintf_r+0x54>
  11015e:	2300      	movs	r3, #0
  110160:	9309      	str	r3, [sp, #36]	; 0x24
  110162:	2320      	movs	r3, #32
  110164:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
  110168:	2330      	movs	r3, #48	; 0x30
  11016a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
  11016e:	f8df b1d4 	ldr.w	r11, [pc, #468]	; 110344 <_vfiprintf_r+0x224>
  110172:	e044      	b.n	1101fe <_vfiprintf_r+0xde>
  110174:	4621      	mov	r1, r4
  110176:	4630      	mov	r0, r6
  110178:	f002 fb56 	bl	112828 <__swsetup_r>
  11017c:	2800      	cmp	r0, #0
  11017e:	d0ee      	beq.n	11015e <_vfiprintf_r+0x3e>
  110180:	f04f 30ff 	mov.w	r0, #4294967295
  110184:	e0d5      	b.n	110332 <_vfiprintf_r+0x212>
  110186:	9a03      	ldr	r2, [sp, #12]
  110188:	1d11      	adds	r1, r2, #4
  11018a:	6812      	ldr	r2, [r2, #0]
  11018c:	9103      	str	r1, [sp, #12]
  11018e:	2a00      	cmp	r2, #0
  110190:	f280 808c 	bge.w	1102ac <_vfiprintf_r+0x18c>
  110194:	4252      	negs	r2, r2
  110196:	f043 0002 	orr.w	r0, r3, #2
  11019a:	9207      	str	r2, [sp, #28]
  11019c:	9004      	str	r0, [sp, #16]
  11019e:	f898 3000 	ldrb.w	r3, [r8]
  1101a2:	2b2e      	cmp	r3, #46	; 0x2e
  1101a4:	f000 8084 	beq.w	1102b0 <_vfiprintf_r+0x190>
  1101a8:	2203      	movs	r2, #3
  1101aa:	f898 1000 	ldrb.w	r1, [r8]
  1101ae:	4865      	ldr	r0, [pc, #404]	; (110344 <_vfiprintf_r+0x224>)
  1101b0:	f7ff fe76 	bl	10fea0 <memchr>
  1101b4:	b148      	cbz	r0, 1101ca <_vfiprintf_r+0xaa>
  1101b6:	2340      	movs	r3, #64	; 0x40
  1101b8:	ebcb 0000 	rsb	r0, r11, r0
  1101bc:	fa03 f000 	lsl.w	r0, r3, r0
  1101c0:	9b04      	ldr	r3, [sp, #16]
  1101c2:	f108 0801 	add.w	r8, r8, #1
  1101c6:	4318      	orrs	r0, r3
  1101c8:	9004      	str	r0, [sp, #16]
  1101ca:	f898 1000 	ldrb.w	r1, [r8]
  1101ce:	2206      	movs	r2, #6
  1101d0:	485d      	ldr	r0, [pc, #372]	; (110348 <_vfiprintf_r+0x228>)
  1101d2:	f108 0701 	add.w	r7, r8, #1
  1101d6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
  1101da:	f7ff fe61 	bl	10fea0 <memchr>
  1101de:	2800      	cmp	r0, #0
  1101e0:	f000 8095 	beq.w	11030e <_vfiprintf_r+0x1ee>
  1101e4:	4b59      	ldr	r3, [pc, #356]	; (11034c <_vfiprintf_r+0x22c>)
  1101e6:	2b00      	cmp	r3, #0
  1101e8:	f040 8088 	bne.w	1102fc <_vfiprintf_r+0x1dc>
  1101ec:	9b03      	ldr	r3, [sp, #12]
  1101ee:	3307      	adds	r3, #7
  1101f0:	f023 0307 	bic.w	r3, r3, #7
  1101f4:	3308      	adds	r3, #8
  1101f6:	9303      	str	r3, [sp, #12]
  1101f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  1101fa:	4453      	add	r3, r10
  1101fc:	9309      	str	r3, [sp, #36]	; 0x24
  1101fe:	46b8      	mov	r8, r7
  110200:	4645      	mov	r5, r8
  110202:	f815 3b01 	ldrb.w	r3, [r5], #1
  110206:	b91b      	cbnz	r3, 110210 <_vfiprintf_r+0xf0>
  110208:	ebb8 0907 	subs.w	r9, r8, r7
  11020c:	d00f      	beq.n	11022e <_vfiprintf_r+0x10e>
  11020e:	e003      	b.n	110218 <_vfiprintf_r+0xf8>
  110210:	2b25      	cmp	r3, #37	; 0x25
  110212:	d0f9      	beq.n	110208 <_vfiprintf_r+0xe8>
  110214:	46a8      	mov	r8, r5
  110216:	e7f3      	b.n	110200 <_vfiprintf_r+0xe0>
  110218:	464b      	mov	r3, r9
  11021a:	463a      	mov	r2, r7
  11021c:	4621      	mov	r1, r4
  11021e:	4630      	mov	r0, r6
  110220:	f7ff ff6c 	bl	1100fc <__sfputs_r>
  110224:	3001      	adds	r0, #1
  110226:	d07f      	beq.n	110328 <_vfiprintf_r+0x208>
  110228:	9b09      	ldr	r3, [sp, #36]	; 0x24
  11022a:	444b      	add	r3, r9
  11022c:	9309      	str	r3, [sp, #36]	; 0x24
  11022e:	f898 3000 	ldrb.w	r3, [r8]
  110232:	2b00      	cmp	r3, #0
  110234:	d078      	beq.n	110328 <_vfiprintf_r+0x208>
  110236:	2300      	movs	r3, #0
  110238:	f04f 32ff 	mov.w	r2, #4294967295
  11023c:	9304      	str	r3, [sp, #16]
  11023e:	9307      	str	r3, [sp, #28]
  110240:	9205      	str	r2, [sp, #20]
  110242:	9306      	str	r3, [sp, #24]
  110244:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
  110248:	931a      	str	r3, [sp, #104]	; 0x68
  11024a:	2701      	movs	r7, #1
  11024c:	2205      	movs	r2, #5
  11024e:	7829      	ldrb	r1, [r5, #0]
  110250:	483f      	ldr	r0, [pc, #252]	; (110350 <_vfiprintf_r+0x230>)
  110252:	f7ff fe25 	bl	10fea0 <memchr>
  110256:	f105 0801 	add.w	r8, r5, #1
  11025a:	9b04      	ldr	r3, [sp, #16]
  11025c:	b138      	cbz	r0, 11026e <_vfiprintf_r+0x14e>
  11025e:	4a3c      	ldr	r2, [pc, #240]	; (110350 <_vfiprintf_r+0x230>)
  110260:	4645      	mov	r5, r8
  110262:	1a80      	subs	r0, r0, r2
  110264:	fa07 f000 	lsl.w	r0, r7, r0
  110268:	4318      	orrs	r0, r3
  11026a:	9004      	str	r0, [sp, #16]
  11026c:	e7ee      	b.n	11024c <_vfiprintf_r+0x12c>
  11026e:	06d9      	lsls	r1, r3, #27
  110270:	bf44      	itt	mi
  110272:	2220      	movmi	r2, #32
  110274:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  110278:	071a      	lsls	r2, r3, #28
  11027a:	bf44      	itt	mi
  11027c:	222b      	movmi	r2, #43	; 0x2b
  11027e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  110282:	782a      	ldrb	r2, [r5, #0]
  110284:	2a2a      	cmp	r2, #42	; 0x2a
  110286:	f43f af7e 	beq.w	110186 <_vfiprintf_r+0x66>
  11028a:	9a07      	ldr	r2, [sp, #28]
  11028c:	2100      	movs	r1, #0
  11028e:	200a      	movs	r0, #10
  110290:	46a8      	mov	r8, r5
  110292:	f898 3000 	ldrb.w	r3, [r8]
  110296:	3501      	adds	r5, #1
  110298:	3b30      	subs	r3, #48	; 0x30
  11029a:	2b09      	cmp	r3, #9
  11029c:	d803      	bhi.n	1102a6 <_vfiprintf_r+0x186>
  11029e:	fb00 3202 	mla	r2, r0, r2, r3
  1102a2:	2101      	movs	r1, #1
  1102a4:	e7f4      	b.n	110290 <_vfiprintf_r+0x170>
  1102a6:	2900      	cmp	r1, #0
  1102a8:	f43f af79 	beq.w	11019e <_vfiprintf_r+0x7e>
  1102ac:	9207      	str	r2, [sp, #28]
  1102ae:	e776      	b.n	11019e <_vfiprintf_r+0x7e>
  1102b0:	f898 3001 	ldrb.w	r3, [r8, #1]
  1102b4:	2b2a      	cmp	r3, #42	; 0x2a
  1102b6:	d10b      	bne.n	1102d0 <_vfiprintf_r+0x1b0>
  1102b8:	9b03      	ldr	r3, [sp, #12]
  1102ba:	f108 0802 	add.w	r8, r8, #2
  1102be:	1d1a      	adds	r2, r3, #4
  1102c0:	681b      	ldr	r3, [r3, #0]
  1102c2:	9203      	str	r2, [sp, #12]
  1102c4:	2b00      	cmp	r3, #0
  1102c6:	bfb8      	it	lt
  1102c8:	f04f 33ff 	movlt.w	r3, #4294967295
  1102cc:	9305      	str	r3, [sp, #20]
  1102ce:	e76b      	b.n	1101a8 <_vfiprintf_r+0x88>
  1102d0:	2300      	movs	r3, #0
  1102d2:	4619      	mov	r1, r3
  1102d4:	9305      	str	r3, [sp, #20]
  1102d6:	f108 0001 	add.w	r0, r8, #1
  1102da:	250a      	movs	r5, #10
  1102dc:	4680      	mov	r8, r0
  1102de:	f898 2000 	ldrb.w	r2, [r8]
  1102e2:	3001      	adds	r0, #1
  1102e4:	3a30      	subs	r2, #48	; 0x30
  1102e6:	2a09      	cmp	r2, #9
  1102e8:	d803      	bhi.n	1102f2 <_vfiprintf_r+0x1d2>
  1102ea:	fb05 2101 	mla	r1, r5, r1, r2
  1102ee:	2301      	movs	r3, #1
  1102f0:	e7f4      	b.n	1102dc <_vfiprintf_r+0x1bc>
  1102f2:	2b00      	cmp	r3, #0
  1102f4:	f43f af58 	beq.w	1101a8 <_vfiprintf_r+0x88>
  1102f8:	9105      	str	r1, [sp, #20]
  1102fa:	e755      	b.n	1101a8 <_vfiprintf_r+0x88>
  1102fc:	ab03      	add	r3, sp, #12
  1102fe:	9300      	str	r3, [sp, #0]
  110300:	4622      	mov	r2, r4
  110302:	4b14      	ldr	r3, [pc, #80]	; (110354 <_vfiprintf_r+0x234>)
  110304:	a904      	add	r1, sp, #16
  110306:	4630      	mov	r0, r6
  110308:	f000 f8c2 	bl	110490 <_printf_float>
  11030c:	e007      	b.n	11031e <_vfiprintf_r+0x1fe>
  11030e:	ab03      	add	r3, sp, #12
  110310:	9300      	str	r3, [sp, #0]
  110312:	4622      	mov	r2, r4
  110314:	4b0f      	ldr	r3, [pc, #60]	; (110354 <_vfiprintf_r+0x234>)
  110316:	a904      	add	r1, sp, #16
  110318:	4630      	mov	r0, r6
  11031a:	f000 fb65 	bl	1109e8 <_printf_i>
  11031e:	f1b0 3fff 	cmp.w	r0, #4294967295
  110322:	4682      	mov	r10, r0
  110324:	f47f af68 	bne.w	1101f8 <_vfiprintf_r+0xd8>
  110328:	89a3      	ldrh	r3, [r4, #12]
  11032a:	065b      	lsls	r3, r3, #25
  11032c:	f53f af28 	bmi.w	110180 <_vfiprintf_r+0x60>
  110330:	9809      	ldr	r0, [sp, #36]	; 0x24
  110332:	b01d      	add	sp, #116	; 0x74
  110334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  110338:	00119f10 	.word	0x00119f10
  11033c:	00119f30 	.word	0x00119f30
  110340:	00119f50 	.word	0x00119f50
  110344:	00119f82 	.word	0x00119f82
  110348:	00119f86 	.word	0x00119f86
  11034c:	00110491 	.word	0x00110491
  110350:	00119f7c 	.word	0x00119f7c
  110354:	001100fd 	.word	0x001100fd

00110358 <vfiprintf>:
  110358:	4613      	mov	r3, r2
  11035a:	460a      	mov	r2, r1
  11035c:	4601      	mov	r1, r0
  11035e:	4802      	ldr	r0, [pc, #8]	; (110368 <vfiprintf+0x10>)
  110360:	6800      	ldr	r0, [r0, #0]
  110362:	f7ff bedd 	b.w	110120 <_vfiprintf_r>
  110366:	bf00      	nop
  110368:	3fff4264 	.word	0x3fff4264

0011036c <__cvt>:
  11036c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  110370:	b088      	sub	sp, #32
  110372:	9f14      	ldr	r7, [sp, #80]	; 0x50
  110374:	2b00      	cmp	r3, #0
  110376:	461e      	mov	r6, r3
  110378:	9912      	ldr	r1, [sp, #72]	; 0x48
  11037a:	bfb8      	it	lt
  11037c:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
  110380:	f027 0720 	bic.w	r7, r7, #32
  110384:	bfb6      	itet	lt
  110386:	461e      	movlt	r6, r3
  110388:	2300      	movge	r3, #0
  11038a:	232d      	movlt	r3, #45	; 0x2d
  11038c:	2f46      	cmp	r7, #70	; 0x46
  11038e:	4614      	mov	r4, r2
  110390:	9d10      	ldr	r5, [sp, #64]	; 0x40
  110392:	f8dd a04c 	ldr.w	r10, [sp, #76]	; 0x4c
  110396:	700b      	strb	r3, [r1, #0]
  110398:	d003      	beq.n	1103a2 <__cvt+0x36>
  11039a:	2f45      	cmp	r7, #69	; 0x45
  11039c:	d103      	bne.n	1103a6 <__cvt+0x3a>
  11039e:	3501      	adds	r5, #1
  1103a0:	e001      	b.n	1103a6 <__cvt+0x3a>
  1103a2:	2303      	movs	r3, #3
  1103a4:	e000      	b.n	1103a8 <__cvt+0x3c>
  1103a6:	2302      	movs	r3, #2
  1103a8:	aa07      	add	r2, sp, #28
  1103aa:	9204      	str	r2, [sp, #16]
  1103ac:	aa06      	add	r2, sp, #24
  1103ae:	9203      	str	r2, [sp, #12]
  1103b0:	e88d 0428 	stmia.w	sp, {r3, r5, r10}
  1103b4:	4622      	mov	r2, r4
  1103b6:	4633      	mov	r3, r6
  1103b8:	f002 fb3e 	bl	112a38 <_dtoa_r>
  1103bc:	2f47      	cmp	r7, #71	; 0x47
  1103be:	4680      	mov	r8, r0
  1103c0:	d102      	bne.n	1103c8 <__cvt+0x5c>
  1103c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  1103c4:	07db      	lsls	r3, r3, #31
  1103c6:	d528      	bpl.n	11041a <__cvt+0xae>
  1103c8:	2f46      	cmp	r7, #70	; 0x46
  1103ca:	eb08 0905 	add.w	r9, r8, r5
  1103ce:	d111      	bne.n	1103f4 <__cvt+0x88>
  1103d0:	f898 3000 	ldrb.w	r3, [r8]
  1103d4:	2b30      	cmp	r3, #48	; 0x30
  1103d6:	d10a      	bne.n	1103ee <__cvt+0x82>
  1103d8:	2200      	movs	r2, #0
  1103da:	2300      	movs	r3, #0
  1103dc:	4620      	mov	r0, r4
  1103de:	4631      	mov	r1, r6
  1103e0:	f7fe fd42 	bl	10ee68 <__aeabi_dcmpeq>
  1103e4:	b918      	cbnz	r0, 1103ee <__cvt+0x82>
  1103e6:	f1c5 0501 	rsb	r5, r5, #1
  1103ea:	f8ca 5000 	str.w	r5, [r10]
  1103ee:	f8da 3000 	ldr.w	r3, [r10]
  1103f2:	4499      	add	r9, r3
  1103f4:	2200      	movs	r2, #0
  1103f6:	2300      	movs	r3, #0
  1103f8:	4620      	mov	r0, r4
  1103fa:	4631      	mov	r1, r6
  1103fc:	f7fe fd34 	bl	10ee68 <__aeabi_dcmpeq>
  110400:	b908      	cbnz	r0, 110406 <__cvt+0x9a>
  110402:	2230      	movs	r2, #48	; 0x30
  110404:	e002      	b.n	11040c <__cvt+0xa0>
  110406:	f8cd 901c 	str.w	r9, [sp, #28]
  11040a:	e006      	b.n	11041a <__cvt+0xae>
  11040c:	9b07      	ldr	r3, [sp, #28]
  11040e:	4599      	cmp	r9, r3
  110410:	d903      	bls.n	11041a <__cvt+0xae>
  110412:	1c59      	adds	r1, r3, #1
  110414:	9107      	str	r1, [sp, #28]
  110416:	701a      	strb	r2, [r3, #0]
  110418:	e7f8      	b.n	11040c <__cvt+0xa0>
  11041a:	4640      	mov	r0, r8
  11041c:	9b07      	ldr	r3, [sp, #28]
  11041e:	9a15      	ldr	r2, [sp, #84]	; 0x54
  110420:	ebc8 0303 	rsb	r3, r8, r3
  110424:	6013      	str	r3, [r2, #0]
  110426:	b008      	add	sp, #32
  110428:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0011042c <__exponent>:
  11042c:	4603      	mov	r3, r0
  11042e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  110430:	2900      	cmp	r1, #0
  110432:	bfb8      	it	lt
  110434:	4249      	neglt	r1, r1
  110436:	f803 2b02 	strb.w	r2, [r3], #2
  11043a:	bfb4      	ite	lt
  11043c:	222d      	movlt	r2, #45	; 0x2d
  11043e:	222b      	movge	r2, #43	; 0x2b
  110440:	2909      	cmp	r1, #9
  110442:	7042      	strb	r2, [r0, #1]
  110444:	dd1a      	ble.n	11047c <__exponent+0x50>
  110446:	f10d 0207 	add.w	r2, sp, #7
  11044a:	4616      	mov	r6, r2
  11044c:	250a      	movs	r5, #10
  11044e:	fb91 f4f5 	sdiv	r4, r1, r5
  110452:	fb05 1114 	mls	r1, r5, r4, r1
  110456:	2c09      	cmp	r4, #9
  110458:	f101 0130 	add.w	r1, r1, #48	; 0x30
  11045c:	f802 1d01 	strb.w	r1, [r2, #-1]!
  110460:	4621      	mov	r1, r4
  110462:	dcf4      	bgt.n	11044e <__exponent+0x22>
  110464:	3130      	adds	r1, #48	; 0x30
  110466:	1e54      	subs	r4, r2, #1
  110468:	f802 1c01 	strb.w	r1, [r2, #-1]
  11046c:	42b4      	cmp	r4, r6
  11046e:	461a      	mov	r2, r3
  110470:	d20a      	bcs.n	110488 <__exponent+0x5c>
  110472:	f814 2b01 	ldrb.w	r2, [r4], #1
  110476:	f803 2b01 	strb.w	r2, [r3], #1
  11047a:	e7f7      	b.n	11046c <__exponent+0x40>
  11047c:	461a      	mov	r2, r3
  11047e:	2430      	movs	r4, #48	; 0x30
  110480:	4421      	add	r1, r4
  110482:	f802 4b02 	strb.w	r4, [r2], #2
  110486:	7059      	strb	r1, [r3, #1]
  110488:	1a10      	subs	r0, r2, r0
  11048a:	b002      	add	sp, #8
  11048c:	bd70      	pop	{r4, r5, r6, pc}
	...

00110490 <_printf_float>:
  110490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  110494:	b08f      	sub	sp, #60	; 0x3c
  110496:	460c      	mov	r4, r1
  110498:	4616      	mov	r6, r2
  11049a:	461f      	mov	r7, r3
  11049c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
  1104a0:	4605      	mov	r5, r0
  1104a2:	f7ff fc9d 	bl	10fde0 <_localeconv_r>
  1104a6:	f8d0 b000 	ldr.w	r11, [r0]
  1104aa:	4658      	mov	r0, r11
  1104ac:	f001 f97b 	bl	1117a6 <strlen>
  1104b0:	2300      	movs	r3, #0
  1104b2:	930c      	str	r3, [sp, #48]	; 0x30
  1104b4:	f8d8 3000 	ldr.w	r3, [r8]
  1104b8:	9008      	str	r0, [sp, #32]
  1104ba:	3307      	adds	r3, #7
  1104bc:	f023 0307 	bic.w	r3, r3, #7
  1104c0:	f103 0208 	add.w	r2, r3, #8
  1104c4:	f894 9018 	ldrb.w	r9, [r4, #24]
  1104c8:	f8c8 2000 	str.w	r2, [r8]
  1104cc:	e9d3 2300 	ldrd	r2, r3, [r3]
  1104d0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
  1104d4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  1104d8:	f000 ff92 	bl	111400 <__fpclassifyd>
  1104dc:	2801      	cmp	r0, #1
  1104de:	d119      	bne.n	110514 <_printf_float+0x84>
  1104e0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  1104e4:	2200      	movs	r2, #0
  1104e6:	2300      	movs	r3, #0
  1104e8:	f7fe fcc8 	bl	10ee7c <__aeabi_dcmplt>
  1104ec:	b110      	cbz	r0, 1104f4 <_printf_float+0x64>
  1104ee:	232d      	movs	r3, #45	; 0x2d
  1104f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  1104f4:	4b9a      	ldr	r3, [pc, #616]	; (110760 <_printf_float+0x2d0>)
  1104f6:	4a9b      	ldr	r2, [pc, #620]	; (110764 <_printf_float+0x2d4>)
  1104f8:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
  1104fc:	bf8c      	ite	hi
  1104fe:	4690      	movhi	r8, r2
  110500:	4698      	movls	r8, r3
  110502:	2303      	movs	r3, #3
  110504:	6123      	str	r3, [r4, #16]
  110506:	6823      	ldr	r3, [r4, #0]
  110508:	f023 0304 	bic.w	r3, r3, #4
  11050c:	6023      	str	r3, [r4, #0]
  11050e:	f04f 0a00 	mov.w	r10, #0
  110512:	e093      	b.n	11063c <_printf_float+0x1ac>
  110514:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  110518:	f000 ff72 	bl	111400 <__fpclassifyd>
  11051c:	6823      	ldr	r3, [r4, #0]
  11051e:	b948      	cbnz	r0, 110534 <_printf_float+0xa4>
  110520:	4a91      	ldr	r2, [pc, #580]	; (110768 <_printf_float+0x2d8>)
  110522:	4992      	ldr	r1, [pc, #584]	; (11076c <_printf_float+0x2dc>)
  110524:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
  110528:	bf8c      	ite	hi
  11052a:	4688      	movhi	r8, r1
  11052c:	4690      	movls	r8, r2
  11052e:	2203      	movs	r2, #3
  110530:	6122      	str	r2, [r4, #16]
  110532:	e7e9      	b.n	110508 <_printf_float+0x78>
  110534:	f8d4 e004 	ldr.w	lr, [r4, #4]
  110538:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  11053c:	f1be 3fff 	cmp.w	lr, #4294967295
  110540:	d101      	bne.n	110546 <_printf_float+0xb6>
  110542:	2206      	movs	r2, #6
  110544:	e00a      	b.n	11055c <_printf_float+0xcc>
  110546:	f1b9 0f67 	cmp.w	r9, #103	; 0x67
  11054a:	d002      	beq.n	110552 <_printf_float+0xc2>
  11054c:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
  110550:	d105      	bne.n	11055e <_printf_float+0xce>
  110552:	f1be 0f00 	cmp.w	lr, #0
  110556:	f040 81b6 	bne.w	1108c6 <_printf_float+0x436>
  11055a:	2201      	movs	r2, #1
  11055c:	6062      	str	r2, [r4, #4]
  11055e:	2200      	movs	r2, #0
  110560:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  110564:	9206      	str	r2, [sp, #24]
  110566:	aa0c      	add	r2, sp, #48	; 0x30
  110568:	6023      	str	r3, [r4, #0]
  11056a:	9205      	str	r2, [sp, #20]
  11056c:	9301      	str	r3, [sp, #4]
  11056e:	aa0b      	add	r2, sp, #44	; 0x2c
  110570:	6863      	ldr	r3, [r4, #4]
  110572:	9203      	str	r2, [sp, #12]
  110574:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
  110578:	9202      	str	r2, [sp, #8]
  11057a:	9300      	str	r3, [sp, #0]
  11057c:	4602      	mov	r2, r0
  11057e:	460b      	mov	r3, r1
  110580:	f8cd 9010 	str.w	r9, [sp, #16]
  110584:	4628      	mov	r0, r5
  110586:	f7ff fef1 	bl	11036c <__cvt>
  11058a:	f009 03df 	and.w	r3, r9, #223	; 0xdf
  11058e:	2b47      	cmp	r3, #71	; 0x47
  110590:	4680      	mov	r8, r0
  110592:	d109      	bne.n	1105a8 <_printf_float+0x118>
  110594:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  110596:	1cd8      	adds	r0, r3, #3
  110598:	db02      	blt.n	1105a0 <_printf_float+0x110>
  11059a:	6862      	ldr	r2, [r4, #4]
  11059c:	4293      	cmp	r3, r2
  11059e:	dd30      	ble.n	110602 <_printf_float+0x172>
  1105a0:	f1a9 0902 	sub.w	r9, r9, #2
  1105a4:	fa5f f989 	uxtb.w	r9, r9
  1105a8:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
  1105ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  1105ae:	d812      	bhi.n	1105d6 <_printf_float+0x146>
  1105b0:	3901      	subs	r1, #1
  1105b2:	464a      	mov	r2, r9
  1105b4:	f104 0050 	add.w	r0, r4, #80	; 0x50
  1105b8:	910b      	str	r1, [sp, #44]	; 0x2c
  1105ba:	f7ff ff37 	bl	11042c <__exponent>
  1105be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  1105c0:	4682      	mov	r10, r0
  1105c2:	1883      	adds	r3, r0, r2
  1105c4:	2a01      	cmp	r2, #1
  1105c6:	6123      	str	r3, [r4, #16]
  1105c8:	dc02      	bgt.n	1105d0 <_printf_float+0x140>
  1105ca:	6822      	ldr	r2, [r4, #0]
  1105cc:	07d1      	lsls	r1, r2, #31
  1105ce:	d52f      	bpl.n	110630 <_printf_float+0x1a0>
  1105d0:	3301      	adds	r3, #1
  1105d2:	6123      	str	r3, [r4, #16]
  1105d4:	e02c      	b.n	110630 <_printf_float+0x1a0>
  1105d6:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
  1105da:	d114      	bne.n	110606 <_printf_float+0x176>
  1105dc:	2900      	cmp	r1, #0
  1105de:	6863      	ldr	r3, [r4, #4]
  1105e0:	dd07      	ble.n	1105f2 <_printf_float+0x162>
  1105e2:	6121      	str	r1, [r4, #16]
  1105e4:	b913      	cbnz	r3, 1105ec <_printf_float+0x15c>
  1105e6:	6822      	ldr	r2, [r4, #0]
  1105e8:	07d2      	lsls	r2, r2, #31
  1105ea:	d51d      	bpl.n	110628 <_printf_float+0x198>
  1105ec:	3301      	adds	r3, #1
  1105ee:	440b      	add	r3, r1
  1105f0:	e019      	b.n	110626 <_printf_float+0x196>
  1105f2:	b913      	cbnz	r3, 1105fa <_printf_float+0x16a>
  1105f4:	6822      	ldr	r2, [r4, #0]
  1105f6:	07d0      	lsls	r0, r2, #31
  1105f8:	d501      	bpl.n	1105fe <_printf_float+0x16e>
  1105fa:	3302      	adds	r3, #2
  1105fc:	e013      	b.n	110626 <_printf_float+0x196>
  1105fe:	2301      	movs	r3, #1
  110600:	e011      	b.n	110626 <_printf_float+0x196>
  110602:	f04f 0967 	mov.w	r9, #103	; 0x67
  110606:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  110608:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  11060a:	4293      	cmp	r3, r2
  11060c:	db05      	blt.n	11061a <_printf_float+0x18a>
  11060e:	6822      	ldr	r2, [r4, #0]
  110610:	6123      	str	r3, [r4, #16]
  110612:	07d1      	lsls	r1, r2, #31
  110614:	d508      	bpl.n	110628 <_printf_float+0x198>
  110616:	3301      	adds	r3, #1
  110618:	e005      	b.n	110626 <_printf_float+0x196>
  11061a:	2b00      	cmp	r3, #0
  11061c:	bfd4      	ite	le
  11061e:	f1c3 0302 	rsble	r3, r3, #2
  110622:	2301      	movgt	r3, #1
  110624:	4413      	add	r3, r2
  110626:	6123      	str	r3, [r4, #16]
  110628:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  11062a:	f04f 0a00 	mov.w	r10, #0
  11062e:	65a3      	str	r3, [r4, #88]	; 0x58
  110630:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
  110634:	b113      	cbz	r3, 11063c <_printf_float+0x1ac>
  110636:	232d      	movs	r3, #45	; 0x2d
  110638:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  11063c:	9700      	str	r7, [sp, #0]
  11063e:	4633      	mov	r3, r6
  110640:	aa0d      	add	r2, sp, #52	; 0x34
  110642:	4621      	mov	r1, r4
  110644:	4628      	mov	r0, r5
  110646:	f000 f959 	bl	1108fc <_printf_common>
  11064a:	3001      	adds	r0, #1
  11064c:	d102      	bne.n	110654 <_printf_float+0x1c4>
  11064e:	f04f 30ff 	mov.w	r0, #4294967295
  110652:	e150      	b.n	1108f6 <_printf_float+0x466>
  110654:	6823      	ldr	r3, [r4, #0]
  110656:	055a      	lsls	r2, r3, #21
  110658:	d401      	bmi.n	11065e <_printf_float+0x1ce>
  11065a:	6923      	ldr	r3, [r4, #16]
  11065c:	e065      	b.n	11072a <_printf_float+0x29a>
  11065e:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
  110662:	f240 80d5 	bls.w	110810 <_printf_float+0x380>
  110666:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  11066a:	2200      	movs	r2, #0
  11066c:	2300      	movs	r3, #0
  11066e:	f7fe fbfb 	bl	10ee68 <__aeabi_dcmpeq>
  110672:	b378      	cbz	r0, 1106d4 <_printf_float+0x244>
  110674:	2301      	movs	r3, #1
  110676:	4a3e      	ldr	r2, [pc, #248]	; (110770 <_printf_float+0x2e0>)
  110678:	4631      	mov	r1, r6
  11067a:	4628      	mov	r0, r5
  11067c:	47b8      	blx	r7
  11067e:	3001      	adds	r0, #1
  110680:	d0e5      	beq.n	11064e <_printf_float+0x1be>
  110682:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  110684:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  110686:	429a      	cmp	r2, r3
  110688:	db0b      	blt.n	1106a2 <_printf_float+0x212>
  11068a:	6823      	ldr	r3, [r4, #0]
  11068c:	07d8      	lsls	r0, r3, #31
  11068e:	d408      	bmi.n	1106a2 <_printf_float+0x212>
  110690:	6823      	ldr	r3, [r4, #0]
  110692:	079b      	lsls	r3, r3, #30
  110694:	f140 8111 	bpl.w	1108ba <_printf_float+0x42a>
  110698:	f04f 0800 	mov.w	r8, #0
  11069c:	f104 0919 	add.w	r9, r4, #25
  1106a0:	e106      	b.n	1108b0 <_printf_float+0x420>
  1106a2:	9b08      	ldr	r3, [sp, #32]
  1106a4:	465a      	mov	r2, r11
  1106a6:	4631      	mov	r1, r6
  1106a8:	4628      	mov	r0, r5
  1106aa:	47b8      	blx	r7
  1106ac:	3001      	adds	r0, #1
  1106ae:	d0ce      	beq.n	11064e <_printf_float+0x1be>
  1106b0:	f04f 0800 	mov.w	r8, #0
  1106b4:	f104 091a 	add.w	r9, r4, #26
  1106b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  1106ba:	3b01      	subs	r3, #1
  1106bc:	4598      	cmp	r8, r3
  1106be:	dae7      	bge.n	110690 <_printf_float+0x200>
  1106c0:	2301      	movs	r3, #1
  1106c2:	464a      	mov	r2, r9
  1106c4:	4631      	mov	r1, r6
  1106c6:	4628      	mov	r0, r5
  1106c8:	47b8      	blx	r7
  1106ca:	3001      	adds	r0, #1
  1106cc:	d0bf      	beq.n	11064e <_printf_float+0x1be>
  1106ce:	f108 0801 	add.w	r8, r8, #1
  1106d2:	e7f1      	b.n	1106b8 <_printf_float+0x228>
  1106d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  1106d6:	2b00      	cmp	r3, #0
  1106d8:	dc29      	bgt.n	11072e <_printf_float+0x29e>
  1106da:	2301      	movs	r3, #1
  1106dc:	4a24      	ldr	r2, [pc, #144]	; (110770 <_printf_float+0x2e0>)
  1106de:	4631      	mov	r1, r6
  1106e0:	4628      	mov	r0, r5
  1106e2:	47b8      	blx	r7
  1106e4:	3001      	adds	r0, #1
  1106e6:	d0b2      	beq.n	11064e <_printf_float+0x1be>
  1106e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  1106ea:	b923      	cbnz	r3, 1106f6 <_printf_float+0x266>
  1106ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  1106ee:	b913      	cbnz	r3, 1106f6 <_printf_float+0x266>
  1106f0:	6823      	ldr	r3, [r4, #0]
  1106f2:	07d9      	lsls	r1, r3, #31
  1106f4:	d5cc      	bpl.n	110690 <_printf_float+0x200>
  1106f6:	9b08      	ldr	r3, [sp, #32]
  1106f8:	465a      	mov	r2, r11
  1106fa:	4631      	mov	r1, r6
  1106fc:	4628      	mov	r0, r5
  1106fe:	47b8      	blx	r7
  110700:	3001      	adds	r0, #1
  110702:	d0a4      	beq.n	11064e <_printf_float+0x1be>
  110704:	f04f 0900 	mov.w	r9, #0
  110708:	f104 0a1a 	add.w	r10, r4, #26
  11070c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  11070e:	425b      	negs	r3, r3
  110710:	4599      	cmp	r9, r3
  110712:	da09      	bge.n	110728 <_printf_float+0x298>
  110714:	2301      	movs	r3, #1
  110716:	4652      	mov	r2, r10
  110718:	4631      	mov	r1, r6
  11071a:	4628      	mov	r0, r5
  11071c:	47b8      	blx	r7
  11071e:	3001      	adds	r0, #1
  110720:	d095      	beq.n	11064e <_printf_float+0x1be>
  110722:	f109 0901 	add.w	r9, r9, #1
  110726:	e7f1      	b.n	11070c <_printf_float+0x27c>
  110728:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  11072a:	4642      	mov	r2, r8
  11072c:	e0a7      	b.n	11087e <_printf_float+0x3ee>
  11072e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  110730:	6da3      	ldr	r3, [r4, #88]	; 0x58
  110732:	429a      	cmp	r2, r3
  110734:	bfa8      	it	ge
  110736:	461a      	movge	r2, r3
  110738:	2a00      	cmp	r2, #0
  11073a:	4691      	mov	r9, r2
  11073c:	dc07      	bgt.n	11074e <_printf_float+0x2be>
  11073e:	f104 031a 	add.w	r3, r4, #26
  110742:	f04f 0a00 	mov.w	r10, #0
  110746:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
  11074a:	9309      	str	r3, [sp, #36]	; 0x24
  11074c:	e01c      	b.n	110788 <_printf_float+0x2f8>
  11074e:	4613      	mov	r3, r2
  110750:	4631      	mov	r1, r6
  110752:	4642      	mov	r2, r8
  110754:	4628      	mov	r0, r5
  110756:	47b8      	blx	r7
  110758:	3001      	adds	r0, #1
  11075a:	d1f0      	bne.n	11073e <_printf_float+0x2ae>
  11075c:	e777      	b.n	11064e <_printf_float+0x1be>
  11075e:	bf00      	nop
  110760:	00119f8d 	.word	0x00119f8d
  110764:	00119f91 	.word	0x00119f91
  110768:	00119f95 	.word	0x00119f95
  11076c:	00119f99 	.word	0x00119f99
  110770:	00118312 	.word	0x00118312
  110774:	2301      	movs	r3, #1
  110776:	9a09      	ldr	r2, [sp, #36]	; 0x24
  110778:	4631      	mov	r1, r6
  11077a:	4628      	mov	r0, r5
  11077c:	47b8      	blx	r7
  11077e:	3001      	adds	r0, #1
  110780:	f43f af65 	beq.w	11064e <_printf_float+0x1be>
  110784:	f10a 0a01 	add.w	r10, r10, #1
  110788:	6da3      	ldr	r3, [r4, #88]	; 0x58
  11078a:	ebc9 0203 	rsb	r2, r9, r3
  11078e:	4592      	cmp	r10, r2
  110790:	dbf0      	blt.n	110774 <_printf_float+0x2e4>
  110792:	eb08 0903 	add.w	r9, r8, r3
  110796:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  110798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  11079a:	429a      	cmp	r2, r3
  11079c:	db0f      	blt.n	1107be <_printf_float+0x32e>
  11079e:	6823      	ldr	r3, [r4, #0]
  1107a0:	07da      	lsls	r2, r3, #31
  1107a2:	d40c      	bmi.n	1107be <_printf_float+0x32e>
  1107a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  1107a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  1107a8:	4498      	add	r8, r3
  1107aa:	ebc9 0808 	rsb	r8, r9, r8
  1107ae:	1a9b      	subs	r3, r3, r2
  1107b0:	4598      	cmp	r8, r3
  1107b2:	bfa8      	it	ge
  1107b4:	4698      	movge	r8, r3
  1107b6:	f1b8 0f00 	cmp.w	r8, #0
  1107ba:	dc08      	bgt.n	1107ce <_printf_float+0x33e>
  1107bc:	e00f      	b.n	1107de <_printf_float+0x34e>
  1107be:	9b08      	ldr	r3, [sp, #32]
  1107c0:	465a      	mov	r2, r11
  1107c2:	4631      	mov	r1, r6
  1107c4:	4628      	mov	r0, r5
  1107c6:	47b8      	blx	r7
  1107c8:	3001      	adds	r0, #1
  1107ca:	d1eb      	bne.n	1107a4 <_printf_float+0x314>
  1107cc:	e73f      	b.n	11064e <_printf_float+0x1be>
  1107ce:	4643      	mov	r3, r8
  1107d0:	464a      	mov	r2, r9
  1107d2:	4631      	mov	r1, r6
  1107d4:	4628      	mov	r0, r5
  1107d6:	47b8      	blx	r7
  1107d8:	3001      	adds	r0, #1
  1107da:	f43f af38 	beq.w	11064e <_printf_float+0x1be>
  1107de:	f04f 0900 	mov.w	r9, #0
  1107e2:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  1107e6:	f104 0a1a 	add.w	r10, r4, #26
  1107ea:	e009      	b.n	110800 <_printf_float+0x370>
  1107ec:	2301      	movs	r3, #1
  1107ee:	4652      	mov	r2, r10
  1107f0:	4631      	mov	r1, r6
  1107f2:	4628      	mov	r0, r5
  1107f4:	47b8      	blx	r7
  1107f6:	3001      	adds	r0, #1
  1107f8:	f43f af29 	beq.w	11064e <_printf_float+0x1be>
  1107fc:	f109 0901 	add.w	r9, r9, #1
  110800:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  110802:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  110804:	1a9b      	subs	r3, r3, r2
  110806:	ebc8 0303 	rsb	r3, r8, r3
  11080a:	4599      	cmp	r9, r3
  11080c:	dbee      	blt.n	1107ec <_printf_float+0x35c>
  11080e:	e73f      	b.n	110690 <_printf_float+0x200>
  110810:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  110812:	2a01      	cmp	r2, #1
  110814:	dc01      	bgt.n	11081a <_printf_float+0x38a>
  110816:	07db      	lsls	r3, r3, #31
  110818:	d538      	bpl.n	11088c <_printf_float+0x3fc>
  11081a:	2301      	movs	r3, #1
  11081c:	4642      	mov	r2, r8
  11081e:	4631      	mov	r1, r6
  110820:	4628      	mov	r0, r5
  110822:	47b8      	blx	r7
  110824:	3001      	adds	r0, #1
  110826:	f43f af12 	beq.w	11064e <_printf_float+0x1be>
  11082a:	9b08      	ldr	r3, [sp, #32]
  11082c:	465a      	mov	r2, r11
  11082e:	4631      	mov	r1, r6
  110830:	4628      	mov	r0, r5
  110832:	47b8      	blx	r7
  110834:	3001      	adds	r0, #1
  110836:	f43f af0a 	beq.w	11064e <_printf_float+0x1be>
  11083a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  11083e:	2200      	movs	r2, #0
  110840:	2300      	movs	r3, #0
  110842:	f7fe fb11 	bl	10ee68 <__aeabi_dcmpeq>
  110846:	b120      	cbz	r0, 110852 <_printf_float+0x3c2>
  110848:	f04f 0800 	mov.w	r8, #0
  11084c:	f104 091a 	add.w	r9, r4, #26
  110850:	e00e      	b.n	110870 <_printf_float+0x3e0>
  110852:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  110854:	f108 0201 	add.w	r2, r8, #1
  110858:	3b01      	subs	r3, #1
  11085a:	e019      	b.n	110890 <_printf_float+0x400>
  11085c:	2301      	movs	r3, #1
  11085e:	464a      	mov	r2, r9
  110860:	4631      	mov	r1, r6
  110862:	4628      	mov	r0, r5
  110864:	47b8      	blx	r7
  110866:	3001      	adds	r0, #1
  110868:	f43f aef1 	beq.w	11064e <_printf_float+0x1be>
  11086c:	f108 0801 	add.w	r8, r8, #1
  110870:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  110872:	3b01      	subs	r3, #1
  110874:	4598      	cmp	r8, r3
  110876:	dbf1      	blt.n	11085c <_printf_float+0x3cc>
  110878:	4653      	mov	r3, r10
  11087a:	f104 0250 	add.w	r2, r4, #80	; 0x50
  11087e:	4631      	mov	r1, r6
  110880:	4628      	mov	r0, r5
  110882:	47b8      	blx	r7
  110884:	3001      	adds	r0, #1
  110886:	f47f af03 	bne.w	110690 <_printf_float+0x200>
  11088a:	e6e0      	b.n	11064e <_printf_float+0x1be>
  11088c:	4642      	mov	r2, r8
  11088e:	2301      	movs	r3, #1
  110890:	4631      	mov	r1, r6
  110892:	4628      	mov	r0, r5
  110894:	47b8      	blx	r7
  110896:	3001      	adds	r0, #1
  110898:	d1ee      	bne.n	110878 <_printf_float+0x3e8>
  11089a:	e6d8      	b.n	11064e <_printf_float+0x1be>
  11089c:	2301      	movs	r3, #1
  11089e:	464a      	mov	r2, r9
  1108a0:	4631      	mov	r1, r6
  1108a2:	4628      	mov	r0, r5
  1108a4:	47b8      	blx	r7
  1108a6:	3001      	adds	r0, #1
  1108a8:	f43f aed1 	beq.w	11064e <_printf_float+0x1be>
  1108ac:	f108 0801 	add.w	r8, r8, #1
  1108b0:	68e3      	ldr	r3, [r4, #12]
  1108b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  1108b4:	1a9b      	subs	r3, r3, r2
  1108b6:	4598      	cmp	r8, r3
  1108b8:	dbf0      	blt.n	11089c <_printf_float+0x40c>
  1108ba:	68e0      	ldr	r0, [r4, #12]
  1108bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  1108be:	4298      	cmp	r0, r3
  1108c0:	bfb8      	it	lt
  1108c2:	4618      	movlt	r0, r3
  1108c4:	e017      	b.n	1108f6 <_printf_float+0x466>
  1108c6:	2200      	movs	r2, #0
  1108c8:	9206      	str	r2, [sp, #24]
  1108ca:	aa0c      	add	r2, sp, #48	; 0x30
  1108cc:	9205      	str	r2, [sp, #20]
  1108ce:	aa0b      	add	r2, sp, #44	; 0x2c
  1108d0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  1108d4:	9203      	str	r2, [sp, #12]
  1108d6:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
  1108da:	6023      	str	r3, [r4, #0]
  1108dc:	9202      	str	r2, [sp, #8]
  1108de:	9301      	str	r3, [sp, #4]
  1108e0:	4602      	mov	r2, r0
  1108e2:	f8cd 9010 	str.w	r9, [sp, #16]
  1108e6:	f8cd e000 	str.w	lr, [sp]
  1108ea:	460b      	mov	r3, r1
  1108ec:	4628      	mov	r0, r5
  1108ee:	f7ff fd3d 	bl	11036c <__cvt>
  1108f2:	4680      	mov	r8, r0
  1108f4:	e64e      	b.n	110594 <_printf_float+0x104>
  1108f6:	b00f      	add	sp, #60	; 0x3c
  1108f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

001108fc <_printf_common>:
  1108fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  110900:	4691      	mov	r9, r2
  110902:	461f      	mov	r7, r3
  110904:	690a      	ldr	r2, [r1, #16]
  110906:	688b      	ldr	r3, [r1, #8]
  110908:	4606      	mov	r6, r0
  11090a:	4293      	cmp	r3, r2
  11090c:	bfb8      	it	lt
  11090e:	4613      	movlt	r3, r2
  110910:	f8c9 3000 	str.w	r3, [r9]
  110914:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
  110918:	460c      	mov	r4, r1
  11091a:	f8dd 8020 	ldr.w	r8, [sp, #32]
  11091e:	b112      	cbz	r2, 110926 <_printf_common+0x2a>
  110920:	3301      	adds	r3, #1
  110922:	f8c9 3000 	str.w	r3, [r9]
  110926:	6823      	ldr	r3, [r4, #0]
  110928:	0699      	lsls	r1, r3, #26
  11092a:	bf42      	ittt	mi
  11092c:	f8d9 3000 	ldrmi.w	r3, [r9]
  110930:	3302      	addmi	r3, #2
  110932:	f8c9 3000 	strmi.w	r3, [r9]
  110936:	6825      	ldr	r5, [r4, #0]
  110938:	f015 0506 	ands.w	r5, r5, #6
  11093c:	d110      	bne.n	110960 <_printf_common+0x64>
  11093e:	f104 0a19 	add.w	r10, r4, #25
  110942:	e007      	b.n	110954 <_printf_common+0x58>
  110944:	2301      	movs	r3, #1
  110946:	4652      	mov	r2, r10
  110948:	4639      	mov	r1, r7
  11094a:	4630      	mov	r0, r6
  11094c:	47c0      	blx	r8
  11094e:	3001      	adds	r0, #1
  110950:	d01a      	beq.n	110988 <_printf_common+0x8c>
  110952:	3501      	adds	r5, #1
  110954:	68e3      	ldr	r3, [r4, #12]
  110956:	f8d9 2000 	ldr.w	r2, [r9]
  11095a:	1a9b      	subs	r3, r3, r2
  11095c:	429d      	cmp	r5, r3
  11095e:	dbf1      	blt.n	110944 <_printf_common+0x48>
  110960:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
  110964:	6822      	ldr	r2, [r4, #0]
  110966:	3300      	adds	r3, #0
  110968:	bf18      	it	ne
  11096a:	2301      	movne	r3, #1
  11096c:	0692      	lsls	r2, r2, #26
  11096e:	d50f      	bpl.n	110990 <_printf_common+0x94>
  110970:	18e1      	adds	r1, r4, r3
  110972:	2030      	movs	r0, #48	; 0x30
  110974:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
  110978:	1c5a      	adds	r2, r3, #1
  11097a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
  11097e:	4422      	add	r2, r4
  110980:	3302      	adds	r3, #2
  110982:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
  110986:	e003      	b.n	110990 <_printf_common+0x94>
  110988:	f04f 30ff 	mov.w	r0, #4294967295
  11098c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  110990:	f104 0243 	add.w	r2, r4, #67	; 0x43
  110994:	4639      	mov	r1, r7
  110996:	4630      	mov	r0, r6
  110998:	47c0      	blx	r8
  11099a:	3001      	adds	r0, #1
  11099c:	d0f4      	beq.n	110988 <_printf_common+0x8c>
  11099e:	6822      	ldr	r2, [r4, #0]
  1109a0:	f8d9 5000 	ldr.w	r5, [r9]
  1109a4:	68e3      	ldr	r3, [r4, #12]
  1109a6:	f002 0206 	and.w	r2, r2, #6
  1109aa:	2a04      	cmp	r2, #4
  1109ac:	bf08      	it	eq
  1109ae:	1b5d      	subeq	r5, r3, r5
  1109b0:	6922      	ldr	r2, [r4, #16]
  1109b2:	68a3      	ldr	r3, [r4, #8]
  1109b4:	bf0c      	ite	eq
  1109b6:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
  1109ba:	2500      	movne	r5, #0
  1109bc:	4293      	cmp	r3, r2
  1109be:	bfc4      	itt	gt
  1109c0:	1a9b      	subgt	r3, r3, r2
  1109c2:	18ed      	addgt	r5, r5, r3
  1109c4:	f04f 0900 	mov.w	r9, #0
  1109c8:	341a      	adds	r4, #26
  1109ca:	454d      	cmp	r5, r9
  1109cc:	d009      	beq.n	1109e2 <_printf_common+0xe6>
  1109ce:	2301      	movs	r3, #1
  1109d0:	4622      	mov	r2, r4
  1109d2:	4639      	mov	r1, r7
  1109d4:	4630      	mov	r0, r6
  1109d6:	47c0      	blx	r8
  1109d8:	3001      	adds	r0, #1
  1109da:	d0d5      	beq.n	110988 <_printf_common+0x8c>
  1109dc:	f109 0901 	add.w	r9, r9, #1
  1109e0:	e7f3      	b.n	1109ca <_printf_common+0xce>
  1109e2:	2000      	movs	r0, #0
  1109e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

001109e8 <_printf_i>:
  1109e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  1109ec:	4617      	mov	r7, r2
  1109ee:	7e0a      	ldrb	r2, [r1, #24]
  1109f0:	b085      	sub	sp, #20
  1109f2:	2a6e      	cmp	r2, #110	; 0x6e
  1109f4:	4698      	mov	r8, r3
  1109f6:	4606      	mov	r6, r0
  1109f8:	460c      	mov	r4, r1
  1109fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  1109fc:	f101 0e43 	add.w	lr, r1, #67	; 0x43
  110a00:	f000 80ae 	beq.w	110b60 <_printf_i+0x178>
  110a04:	d811      	bhi.n	110a2a <_printf_i+0x42>
  110a06:	2a63      	cmp	r2, #99	; 0x63
  110a08:	d022      	beq.n	110a50 <_printf_i+0x68>
  110a0a:	d809      	bhi.n	110a20 <_printf_i+0x38>
  110a0c:	2a00      	cmp	r2, #0
  110a0e:	f000 80bb 	beq.w	110b88 <_printf_i+0x1a0>
  110a12:	2a58      	cmp	r2, #88	; 0x58
  110a14:	f040 80ca 	bne.w	110bac <_printf_i+0x1c4>
  110a18:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
  110a1c:	4983      	ldr	r1, [pc, #524]	; (110c2c <_printf_i+0x244>)
  110a1e:	e055      	b.n	110acc <_printf_i+0xe4>
  110a20:	2a64      	cmp	r2, #100	; 0x64
  110a22:	d01e      	beq.n	110a62 <_printf_i+0x7a>
  110a24:	2a69      	cmp	r2, #105	; 0x69
  110a26:	d01c      	beq.n	110a62 <_printf_i+0x7a>
  110a28:	e0c0      	b.n	110bac <_printf_i+0x1c4>
  110a2a:	2a73      	cmp	r2, #115	; 0x73
  110a2c:	f000 80b0 	beq.w	110b90 <_printf_i+0x1a8>
  110a30:	d809      	bhi.n	110a46 <_printf_i+0x5e>
  110a32:	2a6f      	cmp	r2, #111	; 0x6f
  110a34:	d02e      	beq.n	110a94 <_printf_i+0xac>
  110a36:	2a70      	cmp	r2, #112	; 0x70
  110a38:	f040 80b8 	bne.w	110bac <_printf_i+0x1c4>
  110a3c:	680a      	ldr	r2, [r1, #0]
  110a3e:	f042 0220 	orr.w	r2, r2, #32
  110a42:	600a      	str	r2, [r1, #0]
  110a44:	e03e      	b.n	110ac4 <_printf_i+0xdc>
  110a46:	2a75      	cmp	r2, #117	; 0x75
  110a48:	d024      	beq.n	110a94 <_printf_i+0xac>
  110a4a:	2a78      	cmp	r2, #120	; 0x78
  110a4c:	d03a      	beq.n	110ac4 <_printf_i+0xdc>
  110a4e:	e0ad      	b.n	110bac <_printf_i+0x1c4>
  110a50:	681a      	ldr	r2, [r3, #0]
  110a52:	f101 0542 	add.w	r5, r1, #66	; 0x42
  110a56:	1d11      	adds	r1, r2, #4
  110a58:	6019      	str	r1, [r3, #0]
  110a5a:	6813      	ldr	r3, [r2, #0]
  110a5c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  110a60:	e0a8      	b.n	110bb4 <_printf_i+0x1cc>
  110a62:	6821      	ldr	r1, [r4, #0]
  110a64:	681a      	ldr	r2, [r3, #0]
  110a66:	f011 0f80 	tst.w	r1, #128	; 0x80
  110a6a:	d002      	beq.n	110a72 <_printf_i+0x8a>
  110a6c:	1d11      	adds	r1, r2, #4
  110a6e:	6019      	str	r1, [r3, #0]
  110a70:	e008      	b.n	110a84 <_printf_i+0x9c>
  110a72:	f011 0f40 	tst.w	r1, #64	; 0x40
  110a76:	f102 0104 	add.w	r1, r2, #4
  110a7a:	6019      	str	r1, [r3, #0]
  110a7c:	d002      	beq.n	110a84 <_printf_i+0x9c>
  110a7e:	f9b2 3000 	ldrsh.w	r3, [r2]
  110a82:	e000      	b.n	110a86 <_printf_i+0x9e>
  110a84:	6813      	ldr	r3, [r2, #0]
  110a86:	2b00      	cmp	r3, #0
  110a88:	da3c      	bge.n	110b04 <_printf_i+0x11c>
  110a8a:	222d      	movs	r2, #45	; 0x2d
  110a8c:	425b      	negs	r3, r3
  110a8e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
  110a92:	e037      	b.n	110b04 <_printf_i+0x11c>
  110a94:	6821      	ldr	r1, [r4, #0]
  110a96:	681a      	ldr	r2, [r3, #0]
  110a98:	f011 0f80 	tst.w	r1, #128	; 0x80
  110a9c:	d002      	beq.n	110aa4 <_printf_i+0xbc>
  110a9e:	1d11      	adds	r1, r2, #4
  110aa0:	6019      	str	r1, [r3, #0]
  110aa2:	e007      	b.n	110ab4 <_printf_i+0xcc>
  110aa4:	f011 0f40 	tst.w	r1, #64	; 0x40
  110aa8:	f102 0104 	add.w	r1, r2, #4
  110aac:	6019      	str	r1, [r3, #0]
  110aae:	d001      	beq.n	110ab4 <_printf_i+0xcc>
  110ab0:	8813      	ldrh	r3, [r2, #0]
  110ab2:	e000      	b.n	110ab6 <_printf_i+0xce>
  110ab4:	6813      	ldr	r3, [r2, #0]
  110ab6:	7e22      	ldrb	r2, [r4, #24]
  110ab8:	495c      	ldr	r1, [pc, #368]	; (110c2c <_printf_i+0x244>)
  110aba:	2a6f      	cmp	r2, #111	; 0x6f
  110abc:	bf14      	ite	ne
  110abe:	220a      	movne	r2, #10
  110ac0:	2208      	moveq	r2, #8
  110ac2:	e01b      	b.n	110afc <_printf_i+0x114>
  110ac4:	2278      	movs	r2, #120	; 0x78
  110ac6:	495a      	ldr	r1, [pc, #360]	; (110c30 <_printf_i+0x248>)
  110ac8:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
  110acc:	6822      	ldr	r2, [r4, #0]
  110ace:	6818      	ldr	r0, [r3, #0]
  110ad0:	f012 0f80 	tst.w	r2, #128	; 0x80
  110ad4:	f100 0504 	add.w	r5, r0, #4
  110ad8:	601d      	str	r5, [r3, #0]
  110ada:	d103      	bne.n	110ae4 <_printf_i+0xfc>
  110adc:	0655      	lsls	r5, r2, #25
  110ade:	d501      	bpl.n	110ae4 <_printf_i+0xfc>
  110ae0:	8803      	ldrh	r3, [r0, #0]
  110ae2:	e000      	b.n	110ae6 <_printf_i+0xfe>
  110ae4:	6803      	ldr	r3, [r0, #0]
  110ae6:	07d0      	lsls	r0, r2, #31
  110ae8:	bf44      	itt	mi
  110aea:	f042 0220 	orrmi.w	r2, r2, #32
  110aee:	6022      	strmi	r2, [r4, #0]
  110af0:	b91b      	cbnz	r3, 110afa <_printf_i+0x112>
  110af2:	6822      	ldr	r2, [r4, #0]
  110af4:	f022 0220 	bic.w	r2, r2, #32
  110af8:	6022      	str	r2, [r4, #0]
  110afa:	2210      	movs	r2, #16
  110afc:	2000      	movs	r0, #0
  110afe:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
  110b02:	e001      	b.n	110b08 <_printf_i+0x120>
  110b04:	4949      	ldr	r1, [pc, #292]	; (110c2c <_printf_i+0x244>)
  110b06:	220a      	movs	r2, #10
  110b08:	6865      	ldr	r5, [r4, #4]
  110b0a:	2d00      	cmp	r5, #0
  110b0c:	60a5      	str	r5, [r4, #8]
  110b0e:	db08      	blt.n	110b22 <_printf_i+0x13a>
  110b10:	6820      	ldr	r0, [r4, #0]
  110b12:	f020 0004 	bic.w	r0, r0, #4
  110b16:	6020      	str	r0, [r4, #0]
  110b18:	b92b      	cbnz	r3, 110b26 <_printf_i+0x13e>
  110b1a:	2d00      	cmp	r5, #0
  110b1c:	d17d      	bne.n	110c1a <_printf_i+0x232>
  110b1e:	4675      	mov	r5, lr
  110b20:	e00c      	b.n	110b3c <_printf_i+0x154>
  110b22:	2b00      	cmp	r3, #0
  110b24:	d079      	beq.n	110c1a <_printf_i+0x232>
  110b26:	4675      	mov	r5, lr
  110b28:	fbb3 f0f2 	udiv	r0, r3, r2
  110b2c:	fb02 3310 	mls	r3, r2, r0, r3
  110b30:	5ccb      	ldrb	r3, [r1, r3]
  110b32:	f805 3d01 	strb.w	r3, [r5, #-1]!
  110b36:	4603      	mov	r3, r0
  110b38:	2800      	cmp	r0, #0
  110b3a:	d1f5      	bne.n	110b28 <_printf_i+0x140>
  110b3c:	2a08      	cmp	r2, #8
  110b3e:	d10b      	bne.n	110b58 <_printf_i+0x170>
  110b40:	6823      	ldr	r3, [r4, #0]
  110b42:	07da      	lsls	r2, r3, #31
  110b44:	d508      	bpl.n	110b58 <_printf_i+0x170>
  110b46:	6923      	ldr	r3, [r4, #16]
  110b48:	6862      	ldr	r2, [r4, #4]
  110b4a:	429a      	cmp	r2, r3
  110b4c:	bfde      	ittt	le
  110b4e:	2330      	movle	r3, #48	; 0x30
  110b50:	f805 3c01 	strble.w	r3, [r5, #-1]
  110b54:	f105 35ff 	addle.w	r5, r5, #4294967295
  110b58:	ebc5 030e 	rsb	r3, r5, lr
  110b5c:	6123      	str	r3, [r4, #16]
  110b5e:	e02e      	b.n	110bbe <_printf_i+0x1d6>
  110b60:	6808      	ldr	r0, [r1, #0]
  110b62:	681a      	ldr	r2, [r3, #0]
  110b64:	f010 0f80 	tst.w	r0, #128	; 0x80
  110b68:	6949      	ldr	r1, [r1, #20]
  110b6a:	d003      	beq.n	110b74 <_printf_i+0x18c>
  110b6c:	1d10      	adds	r0, r2, #4
  110b6e:	6018      	str	r0, [r3, #0]
  110b70:	6813      	ldr	r3, [r2, #0]
  110b72:	e008      	b.n	110b86 <_printf_i+0x19e>
  110b74:	f010 0f40 	tst.w	r0, #64	; 0x40
  110b78:	f102 0004 	add.w	r0, r2, #4
  110b7c:	6018      	str	r0, [r3, #0]
  110b7e:	6813      	ldr	r3, [r2, #0]
  110b80:	d001      	beq.n	110b86 <_printf_i+0x19e>
  110b82:	8019      	strh	r1, [r3, #0]
  110b84:	e000      	b.n	110b88 <_printf_i+0x1a0>
  110b86:	6019      	str	r1, [r3, #0]
  110b88:	2300      	movs	r3, #0
  110b8a:	6123      	str	r3, [r4, #16]
  110b8c:	4675      	mov	r5, lr
  110b8e:	e016      	b.n	110bbe <_printf_i+0x1d6>
  110b90:	681a      	ldr	r2, [r3, #0]
  110b92:	1d11      	adds	r1, r2, #4
  110b94:	6019      	str	r1, [r3, #0]
  110b96:	6815      	ldr	r5, [r2, #0]
  110b98:	2100      	movs	r1, #0
  110b9a:	6862      	ldr	r2, [r4, #4]
  110b9c:	4628      	mov	r0, r5
  110b9e:	f7ff f97f 	bl	10fea0 <memchr>
  110ba2:	b108      	cbz	r0, 110ba8 <_printf_i+0x1c0>
  110ba4:	1b40      	subs	r0, r0, r5
  110ba6:	6060      	str	r0, [r4, #4]
  110ba8:	6863      	ldr	r3, [r4, #4]
  110baa:	e004      	b.n	110bb6 <_printf_i+0x1ce>
  110bac:	f104 0542 	add.w	r5, r4, #66	; 0x42
  110bb0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
  110bb4:	2301      	movs	r3, #1
  110bb6:	6123      	str	r3, [r4, #16]
  110bb8:	2300      	movs	r3, #0
  110bba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  110bbe:	f8cd 8000 	str.w	r8, [sp]
  110bc2:	463b      	mov	r3, r7
  110bc4:	aa03      	add	r2, sp, #12
  110bc6:	4621      	mov	r1, r4
  110bc8:	4630      	mov	r0, r6
  110bca:	f7ff fe97 	bl	1108fc <_printf_common>
  110bce:	3001      	adds	r0, #1
  110bd0:	d102      	bne.n	110bd8 <_printf_i+0x1f0>
  110bd2:	f04f 30ff 	mov.w	r0, #4294967295
  110bd6:	e026      	b.n	110c26 <_printf_i+0x23e>
  110bd8:	6923      	ldr	r3, [r4, #16]
  110bda:	462a      	mov	r2, r5
  110bdc:	4639      	mov	r1, r7
  110bde:	4630      	mov	r0, r6
  110be0:	47c0      	blx	r8
  110be2:	3001      	adds	r0, #1
  110be4:	d0f5      	beq.n	110bd2 <_printf_i+0x1ea>
  110be6:	6823      	ldr	r3, [r4, #0]
  110be8:	079b      	lsls	r3, r3, #30
  110bea:	d510      	bpl.n	110c0e <_printf_i+0x226>
  110bec:	2500      	movs	r5, #0
  110bee:	f104 0919 	add.w	r9, r4, #25
  110bf2:	e007      	b.n	110c04 <_printf_i+0x21c>
  110bf4:	2301      	movs	r3, #1
  110bf6:	464a      	mov	r2, r9
  110bf8:	4639      	mov	r1, r7
  110bfa:	4630      	mov	r0, r6
  110bfc:	47c0      	blx	r8
  110bfe:	3001      	adds	r0, #1
  110c00:	d0e7      	beq.n	110bd2 <_printf_i+0x1ea>
  110c02:	3501      	adds	r5, #1
  110c04:	68e3      	ldr	r3, [r4, #12]
  110c06:	9a03      	ldr	r2, [sp, #12]
  110c08:	1a9b      	subs	r3, r3, r2
  110c0a:	429d      	cmp	r5, r3
  110c0c:	dbf2      	blt.n	110bf4 <_printf_i+0x20c>
  110c0e:	68e0      	ldr	r0, [r4, #12]
  110c10:	9b03      	ldr	r3, [sp, #12]
  110c12:	4298      	cmp	r0, r3
  110c14:	bfb8      	it	lt
  110c16:	4618      	movlt	r0, r3
  110c18:	e005      	b.n	110c26 <_printf_i+0x23e>
  110c1a:	780b      	ldrb	r3, [r1, #0]
  110c1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
  110c20:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  110c24:	e78a      	b.n	110b3c <_printf_i+0x154>
  110c26:	b005      	add	sp, #20
  110c28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  110c2c:	00119f9d 	.word	0x00119f9d
  110c30:	00119fae 	.word	0x00119fae

00110c34 <_scanf_float>:
  110c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  110c38:	469a      	mov	r10, r3
  110c3a:	688b      	ldr	r3, [r1, #8]
  110c3c:	4616      	mov	r6, r2
  110c3e:	1e5a      	subs	r2, r3, #1
  110c40:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
  110c44:	bf88      	it	hi
  110c46:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
  110c4a:	b087      	sub	sp, #28
  110c4c:	bf82      	ittt	hi
  110c4e:	189b      	addhi	r3, r3, r2
  110c50:	9301      	strhi	r3, [sp, #4]
  110c52:	f240 135d 	movwhi	r3, #349	; 0x15d
  110c56:	4688      	mov	r8, r1
  110c58:	bf96      	itet	ls
  110c5a:	2300      	movls	r3, #0
  110c5c:	608b      	strhi	r3, [r1, #8]
  110c5e:	9301      	strls	r3, [sp, #4]
  110c60:	680b      	ldr	r3, [r1, #0]
  110c62:	f04f 0b00 	mov.w	r11, #0
  110c66:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
  110c6a:	f848 3b1c 	str.w	r3, [r8], #28
  110c6e:	4607      	mov	r7, r0
  110c70:	460c      	mov	r4, r1
  110c72:	4645      	mov	r5, r8
  110c74:	465a      	mov	r2, r11
  110c76:	46d9      	mov	r9, r11
  110c78:	f8cd b010 	str.w	r11, [sp, #16]
  110c7c:	f8cd b00c 	str.w	r11, [sp, #12]
  110c80:	f8cd b008 	str.w	r11, [sp, #8]
  110c84:	68a1      	ldr	r1, [r4, #8]
  110c86:	2900      	cmp	r1, #0
  110c88:	f000 80e5 	beq.w	110e56 <_scanf_float+0x222>
  110c8c:	6833      	ldr	r3, [r6, #0]
  110c8e:	781b      	ldrb	r3, [r3, #0]
  110c90:	2b49      	cmp	r3, #73	; 0x49
  110c92:	d070      	beq.n	110d76 <_scanf_float+0x142>
  110c94:	d816      	bhi.n	110cc4 <_scanf_float+0x90>
  110c96:	2b39      	cmp	r3, #57	; 0x39
  110c98:	d80d      	bhi.n	110cb6 <_scanf_float+0x82>
  110c9a:	2b31      	cmp	r3, #49	; 0x31
  110c9c:	d240      	bcs.n	110d20 <_scanf_float+0xec>
  110c9e:	2b2d      	cmp	r3, #45	; 0x2d
  110ca0:	d046      	beq.n	110d30 <_scanf_float+0xfc>
  110ca2:	d802      	bhi.n	110caa <_scanf_float+0x76>
  110ca4:	2b2b      	cmp	r3, #43	; 0x2b
  110ca6:	d043      	beq.n	110d30 <_scanf_float+0xfc>
  110ca8:	e0d5      	b.n	110e56 <_scanf_float+0x222>
  110caa:	2b2e      	cmp	r3, #46	; 0x2e
  110cac:	f000 8092 	beq.w	110dd4 <_scanf_float+0x1a0>
  110cb0:	2b30      	cmp	r3, #48	; 0x30
  110cb2:	d023      	beq.n	110cfc <_scanf_float+0xc8>
  110cb4:	e0cf      	b.n	110e56 <_scanf_float+0x222>
  110cb6:	2b45      	cmp	r3, #69	; 0x45
  110cb8:	f000 8095 	beq.w	110de6 <_scanf_float+0x1b2>
  110cbc:	2b46      	cmp	r3, #70	; 0x46
  110cbe:	d077      	beq.n	110db0 <_scanf_float+0x17c>
  110cc0:	2b41      	cmp	r3, #65	; 0x41
  110cc2:	e00c      	b.n	110cde <_scanf_float+0xaa>
  110cc4:	2b65      	cmp	r3, #101	; 0x65
  110cc6:	f000 808e 	beq.w	110de6 <_scanf_float+0x1b2>
  110cca:	d80a      	bhi.n	110ce2 <_scanf_float+0xae>
  110ccc:	2b54      	cmp	r3, #84	; 0x54
  110cce:	d075      	beq.n	110dbc <_scanf_float+0x188>
  110cd0:	d802      	bhi.n	110cd8 <_scanf_float+0xa4>
  110cd2:	2b4e      	cmp	r3, #78	; 0x4e
  110cd4:	d034      	beq.n	110d40 <_scanf_float+0x10c>
  110cd6:	e0be      	b.n	110e56 <_scanf_float+0x222>
  110cd8:	2b59      	cmp	r3, #89	; 0x59
  110cda:	d075      	beq.n	110dc8 <_scanf_float+0x194>
  110cdc:	2b61      	cmp	r3, #97	; 0x61
  110cde:	d046      	beq.n	110d6e <_scanf_float+0x13a>
  110ce0:	e0b9      	b.n	110e56 <_scanf_float+0x222>
  110ce2:	2b6e      	cmp	r3, #110	; 0x6e
  110ce4:	d02c      	beq.n	110d40 <_scanf_float+0x10c>
  110ce6:	d804      	bhi.n	110cf2 <_scanf_float+0xbe>
  110ce8:	2b66      	cmp	r3, #102	; 0x66
  110cea:	d061      	beq.n	110db0 <_scanf_float+0x17c>
  110cec:	2b69      	cmp	r3, #105	; 0x69
  110cee:	d042      	beq.n	110d76 <_scanf_float+0x142>
  110cf0:	e0b1      	b.n	110e56 <_scanf_float+0x222>
  110cf2:	2b74      	cmp	r3, #116	; 0x74
  110cf4:	d062      	beq.n	110dbc <_scanf_float+0x188>
  110cf6:	2b79      	cmp	r3, #121	; 0x79
  110cf8:	d066      	beq.n	110dc8 <_scanf_float+0x194>
  110cfa:	e0ac      	b.n	110e56 <_scanf_float+0x222>
  110cfc:	6820      	ldr	r0, [r4, #0]
  110cfe:	f410 7f80 	tst.w	r0, #256	; 0x100
  110d02:	d00d      	beq.n	110d20 <_scanf_float+0xec>
  110d04:	9b01      	ldr	r3, [sp, #4]
  110d06:	f020 0080 	bic.w	r0, r0, #128	; 0x80
  110d0a:	6020      	str	r0, [r4, #0]
  110d0c:	f109 0901 	add.w	r9, r9, #1
  110d10:	2b00      	cmp	r3, #0
  110d12:	f000 8087 	beq.w	110e24 <_scanf_float+0x1f0>
  110d16:	3b01      	subs	r3, #1
  110d18:	3101      	adds	r1, #1
  110d1a:	9301      	str	r3, [sp, #4]
  110d1c:	60a1      	str	r1, [r4, #8]
  110d1e:	e081      	b.n	110e24 <_scanf_float+0x1f0>
  110d20:	eb12 0f0b 	cmn.w	r2, r11
  110d24:	f040 8097 	bne.w	110e56 <_scanf_float+0x222>
  110d28:	6821      	ldr	r1, [r4, #0]
  110d2a:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
  110d2e:	e005      	b.n	110d3c <_scanf_float+0x108>
  110d30:	6821      	ldr	r1, [r4, #0]
  110d32:	0608      	lsls	r0, r1, #24
  110d34:	f140 808f 	bpl.w	110e56 <_scanf_float+0x222>
  110d38:	f021 0180 	bic.w	r1, r1, #128	; 0x80
  110d3c:	6021      	str	r1, [r4, #0]
  110d3e:	e06f      	b.n	110e20 <_scanf_float+0x1ec>
  110d40:	b96a      	cbnz	r2, 110d5e <_scanf_float+0x12a>
  110d42:	f1b9 0f00 	cmp.w	r9, #0
  110d46:	d10c      	bne.n	110d62 <_scanf_float+0x12e>
  110d48:	6821      	ldr	r1, [r4, #0]
  110d4a:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
  110d4e:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
  110d52:	d106      	bne.n	110d62 <_scanf_float+0x12e>
  110d54:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
  110d58:	6021      	str	r1, [r4, #0]
  110d5a:	2201      	movs	r2, #1
  110d5c:	e060      	b.n	110e20 <_scanf_float+0x1ec>
  110d5e:	2a02      	cmp	r2, #2
  110d60:	d05d      	beq.n	110e1e <_scanf_float+0x1ea>
  110d62:	f1bb 0f01 	cmp.w	r11, #1
  110d66:	d01e      	beq.n	110da6 <_scanf_float+0x172>
  110d68:	f1bb 0f04 	cmp.w	r11, #4
  110d6c:	e01a      	b.n	110da4 <_scanf_float+0x170>
  110d6e:	2a01      	cmp	r2, #1
  110d70:	d171      	bne.n	110e56 <_scanf_float+0x222>
  110d72:	2202      	movs	r2, #2
  110d74:	e054      	b.n	110e20 <_scanf_float+0x1ec>
  110d76:	f1bb 0f00 	cmp.w	r11, #0
  110d7a:	d10e      	bne.n	110d9a <_scanf_float+0x166>
  110d7c:	f1b9 0f00 	cmp.w	r9, #0
  110d80:	d16c      	bne.n	110e5c <_scanf_float+0x228>
  110d82:	6821      	ldr	r1, [r4, #0]
  110d84:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
  110d88:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
  110d8c:	d16a      	bne.n	110e64 <_scanf_float+0x230>
  110d8e:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
  110d92:	6021      	str	r1, [r4, #0]
  110d94:	f04f 0b01 	mov.w	r11, #1
  110d98:	e042      	b.n	110e20 <_scanf_float+0x1ec>
  110d9a:	f1bb 0f03 	cmp.w	r11, #3
  110d9e:	d002      	beq.n	110da6 <_scanf_float+0x172>
  110da0:	f1bb 0f05 	cmp.w	r11, #5
  110da4:	d157      	bne.n	110e56 <_scanf_float+0x222>
  110da6:	f10b 0b01 	add.w	r11, r11, #1
  110daa:	fa5f fb8b 	uxtb.w	r11, r11
  110dae:	e037      	b.n	110e20 <_scanf_float+0x1ec>
  110db0:	f1bb 0f02 	cmp.w	r11, #2
  110db4:	d14f      	bne.n	110e56 <_scanf_float+0x222>
  110db6:	f04f 0b03 	mov.w	r11, #3
  110dba:	e031      	b.n	110e20 <_scanf_float+0x1ec>
  110dbc:	f1bb 0f06 	cmp.w	r11, #6
  110dc0:	d149      	bne.n	110e56 <_scanf_float+0x222>
  110dc2:	f04f 0b07 	mov.w	r11, #7
  110dc6:	e02b      	b.n	110e20 <_scanf_float+0x1ec>
  110dc8:	f1bb 0f07 	cmp.w	r11, #7
  110dcc:	d143      	bne.n	110e56 <_scanf_float+0x222>
  110dce:	f04f 0b08 	mov.w	r11, #8
  110dd2:	e025      	b.n	110e20 <_scanf_float+0x1ec>
  110dd4:	6821      	ldr	r1, [r4, #0]
  110dd6:	0588      	lsls	r0, r1, #22
  110dd8:	d53d      	bpl.n	110e56 <_scanf_float+0x222>
  110dda:	f421 7120 	bic.w	r1, r1, #640	; 0x280
  110dde:	6021      	str	r1, [r4, #0]
  110de0:	f8cd 9008 	str.w	r9, [sp, #8]
  110de4:	e01c      	b.n	110e20 <_scanf_float+0x1ec>
  110de6:	6821      	ldr	r1, [r4, #0]
  110de8:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
  110dec:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  110df0:	d004      	beq.n	110dfc <_scanf_float+0x1c8>
  110df2:	0548      	lsls	r0, r1, #21
  110df4:	d52f      	bpl.n	110e56 <_scanf_float+0x222>
  110df6:	f1b9 0f00 	cmp.w	r9, #0
  110dfa:	d033      	beq.n	110e64 <_scanf_float+0x230>
  110dfc:	0588      	lsls	r0, r1, #22
  110dfe:	bf58      	it	pl
  110e00:	9802      	ldrpl	r0, [sp, #8]
  110e02:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
  110e06:	bf58      	it	pl
  110e08:	ebc0 0009 	rsbpl	r0, r0, r9
  110e0c:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
  110e10:	bf5c      	itt	pl
  110e12:	9003      	strpl	r0, [sp, #12]
  110e14:	9504      	strpl	r5, [sp, #16]
  110e16:	6021      	str	r1, [r4, #0]
  110e18:	f04f 0900 	mov.w	r9, #0
  110e1c:	e000      	b.n	110e20 <_scanf_float+0x1ec>
  110e1e:	2203      	movs	r2, #3
  110e20:	702b      	strb	r3, [r5, #0]
  110e22:	3501      	adds	r5, #1
  110e24:	68a3      	ldr	r3, [r4, #8]
  110e26:	3b01      	subs	r3, #1
  110e28:	60a3      	str	r3, [r4, #8]
  110e2a:	6923      	ldr	r3, [r4, #16]
  110e2c:	3301      	adds	r3, #1
  110e2e:	6123      	str	r3, [r4, #16]
  110e30:	6873      	ldr	r3, [r6, #4]
  110e32:	3b01      	subs	r3, #1
  110e34:	2b00      	cmp	r3, #0
  110e36:	6073      	str	r3, [r6, #4]
  110e38:	dd03      	ble.n	110e42 <_scanf_float+0x20e>
  110e3a:	6833      	ldr	r3, [r6, #0]
  110e3c:	3301      	adds	r3, #1
  110e3e:	6033      	str	r3, [r6, #0]
  110e40:	e720      	b.n	110c84 <_scanf_float+0x50>
  110e42:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
  110e46:	4631      	mov	r1, r6
  110e48:	4638      	mov	r0, r7
  110e4a:	9205      	str	r2, [sp, #20]
  110e4c:	4798      	blx	r3
  110e4e:	9a05      	ldr	r2, [sp, #20]
  110e50:	2800      	cmp	r0, #0
  110e52:	f43f af17 	beq.w	110c84 <_scanf_float+0x50>
  110e56:	f1b9 0f00 	cmp.w	r9, #0
  110e5a:	d003      	beq.n	110e64 <_scanf_float+0x230>
  110e5c:	6823      	ldr	r3, [r4, #0]
  110e5e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
  110e62:	6023      	str	r3, [r4, #0]
  110e64:	3a01      	subs	r2, #1
  110e66:	2a01      	cmp	r2, #1
  110e68:	d80e      	bhi.n	110e88 <_scanf_float+0x254>
  110e6a:	4545      	cmp	r5, r8
  110e6c:	d90a      	bls.n	110e84 <_scanf_float+0x250>
  110e6e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  110e72:	4632      	mov	r2, r6
  110e74:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
  110e78:	4638      	mov	r0, r7
  110e7a:	4798      	blx	r3
  110e7c:	6923      	ldr	r3, [r4, #16]
  110e7e:	3b01      	subs	r3, #1
  110e80:	6123      	str	r3, [r4, #16]
  110e82:	e7f2      	b.n	110e6a <_scanf_float+0x236>
  110e84:	2601      	movs	r6, #1
  110e86:	e0aa      	b.n	110fde <_scanf_float+0x3aa>
  110e88:	f10b 33ff 	add.w	r3, r11, #4294967295
  110e8c:	2b06      	cmp	r3, #6
  110e8e:	d822      	bhi.n	110ed6 <_scanf_float+0x2a2>
  110e90:	f1bb 0f02 	cmp.w	r11, #2
  110e94:	d912      	bls.n	110ebc <_scanf_float+0x288>
  110e96:	f1ab 0b03 	sub.w	r11, r11, #3
  110e9a:	fa5f fb8b 	uxtb.w	r11, r11
  110e9e:	ebcb 0b05 	rsb	r11, r11, r5
  110ea2:	455d      	cmp	r5, r11
  110ea4:	d017      	beq.n	110ed6 <_scanf_float+0x2a2>
  110ea6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  110eaa:	4632      	mov	r2, r6
  110eac:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
  110eb0:	4638      	mov	r0, r7
  110eb2:	4798      	blx	r3
  110eb4:	6923      	ldr	r3, [r4, #16]
  110eb6:	3b01      	subs	r3, #1
  110eb8:	6123      	str	r3, [r4, #16]
  110eba:	e7f2      	b.n	110ea2 <_scanf_float+0x26e>
  110ebc:	4545      	cmp	r5, r8
  110ebe:	d9e1      	bls.n	110e84 <_scanf_float+0x250>
  110ec0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  110ec4:	4632      	mov	r2, r6
  110ec6:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
  110eca:	4638      	mov	r0, r7
  110ecc:	4798      	blx	r3
  110ece:	6923      	ldr	r3, [r4, #16]
  110ed0:	3b01      	subs	r3, #1
  110ed2:	6123      	str	r3, [r4, #16]
  110ed4:	e7f2      	b.n	110ebc <_scanf_float+0x288>
  110ed6:	6823      	ldr	r3, [r4, #0]
  110ed8:	05da      	lsls	r2, r3, #23
  110eda:	d52c      	bpl.n	110f36 <_scanf_float+0x302>
  110edc:	055b      	lsls	r3, r3, #21
  110ede:	d50c      	bpl.n	110efa <_scanf_float+0x2c6>
  110ee0:	4545      	cmp	r5, r8
  110ee2:	d9cf      	bls.n	110e84 <_scanf_float+0x250>
  110ee4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  110ee8:	4632      	mov	r2, r6
  110eea:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
  110eee:	4638      	mov	r0, r7
  110ef0:	4798      	blx	r3
  110ef2:	6923      	ldr	r3, [r4, #16]
  110ef4:	3b01      	subs	r3, #1
  110ef6:	6123      	str	r3, [r4, #16]
  110ef8:	e7f2      	b.n	110ee0 <_scanf_float+0x2ac>
  110efa:	f815 1c01 	ldrb.w	r1, [r5, #-1]
  110efe:	6923      	ldr	r3, [r4, #16]
  110f00:	2965      	cmp	r1, #101	; 0x65
  110f02:	f103 33ff 	add.w	r3, r3, #4294967295
  110f06:	f105 3bff 	add.w	r11, r5, #4294967295
  110f0a:	6123      	str	r3, [r4, #16]
  110f0c:	d00d      	beq.n	110f2a <_scanf_float+0x2f6>
  110f0e:	2945      	cmp	r1, #69	; 0x45
  110f10:	d00b      	beq.n	110f2a <_scanf_float+0x2f6>
  110f12:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  110f16:	4632      	mov	r2, r6
  110f18:	4638      	mov	r0, r7
  110f1a:	4798      	blx	r3
  110f1c:	6923      	ldr	r3, [r4, #16]
  110f1e:	f815 1c02 	ldrb.w	r1, [r5, #-2]
  110f22:	3b01      	subs	r3, #1
  110f24:	f1a5 0b02 	sub.w	r11, r5, #2
  110f28:	6123      	str	r3, [r4, #16]
  110f2a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  110f2e:	4632      	mov	r2, r6
  110f30:	4638      	mov	r0, r7
  110f32:	4798      	blx	r3
  110f34:	465d      	mov	r5, r11
  110f36:	6826      	ldr	r6, [r4, #0]
  110f38:	f016 0610 	ands.w	r6, r6, #16
  110f3c:	d14e      	bne.n	110fdc <_scanf_float+0x3a8>
  110f3e:	702e      	strb	r6, [r5, #0]
  110f40:	6823      	ldr	r3, [r4, #0]
  110f42:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
  110f46:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  110f4a:	d105      	bne.n	110f58 <_scanf_float+0x324>
  110f4c:	9b02      	ldr	r3, [sp, #8]
  110f4e:	ebc3 0309 	rsb	r3, r3, r9
  110f52:	425a      	negs	r2, r3
  110f54:	b963      	cbnz	r3, 110f70 <_scanf_float+0x33c>
  110f56:	e015      	b.n	110f84 <_scanf_float+0x350>
  110f58:	9b03      	ldr	r3, [sp, #12]
  110f5a:	b19b      	cbz	r3, 110f84 <_scanf_float+0x350>
  110f5c:	9904      	ldr	r1, [sp, #16]
  110f5e:	230a      	movs	r3, #10
  110f60:	4632      	mov	r2, r6
  110f62:	3101      	adds	r1, #1
  110f64:	4638      	mov	r0, r7
  110f66:	f001 fa6f 	bl	112448 <_strtol_r>
  110f6a:	9b03      	ldr	r3, [sp, #12]
  110f6c:	9d04      	ldr	r5, [sp, #16]
  110f6e:	1ac2      	subs	r2, r0, r3
  110f70:	f204 136f 	addw	r3, r4, #367	; 0x16f
  110f74:	429d      	cmp	r5, r3
  110f76:	bf28      	it	cs
  110f78:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
  110f7c:	491a      	ldr	r1, [pc, #104]	; (110fe8 <_scanf_float+0x3b4>)
  110f7e:	4628      	mov	r0, r5
  110f80:	f000 fb6c 	bl	11165c <siprintf>
  110f84:	2200      	movs	r2, #0
  110f86:	4641      	mov	r1, r8
  110f88:	4638      	mov	r0, r7
  110f8a:	f000 fc5d 	bl	111848 <_strtod_r>
  110f8e:	6822      	ldr	r2, [r4, #0]
  110f90:	4680      	mov	r8, r0
  110f92:	f012 0f02 	tst.w	r2, #2
  110f96:	4689      	mov	r9, r1
  110f98:	f8da 3000 	ldr.w	r3, [r10]
  110f9c:	d003      	beq.n	110fa6 <_scanf_float+0x372>
  110f9e:	1d1a      	adds	r2, r3, #4
  110fa0:	f8ca 2000 	str.w	r2, [r10]
  110fa4:	e006      	b.n	110fb4 <_scanf_float+0x380>
  110fa6:	f012 0f04 	tst.w	r2, #4
  110faa:	f103 0204 	add.w	r2, r3, #4
  110fae:	f8ca 2000 	str.w	r2, [r10]
  110fb2:	d003      	beq.n	110fbc <_scanf_float+0x388>
  110fb4:	681b      	ldr	r3, [r3, #0]
  110fb6:	e9c3 8900 	strd	r8, r9, [r3]
  110fba:	e00b      	b.n	110fd4 <_scanf_float+0x3a0>
  110fbc:	681d      	ldr	r5, [r3, #0]
  110fbe:	f000 fa1f 	bl	111400 <__fpclassifyd>
  110fc2:	b910      	cbnz	r0, 110fca <_scanf_float+0x396>
  110fc4:	f000 fb14 	bl	1115f0 <nanf>
  110fc8:	e003      	b.n	110fd2 <_scanf_float+0x39e>
  110fca:	4640      	mov	r0, r8
  110fcc:	4649      	mov	r1, r9
  110fce:	f7fd ff7d 	bl	10eecc <__aeabi_d2f>
  110fd2:	6028      	str	r0, [r5, #0]
  110fd4:	68e3      	ldr	r3, [r4, #12]
  110fd6:	3301      	adds	r3, #1
  110fd8:	60e3      	str	r3, [r4, #12]
  110fda:	e000      	b.n	110fde <_scanf_float+0x3aa>
  110fdc:	2600      	movs	r6, #0
  110fde:	4630      	mov	r0, r6
  110fe0:	b007      	add	sp, #28
  110fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  110fe6:	bf00      	nop
  110fe8:	00119fbf 	.word	0x00119fbf

00110fec <_scanf_chars>:
  110fec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  110ff0:	4615      	mov	r5, r2
  110ff2:	688a      	ldr	r2, [r1, #8]
  110ff4:	4680      	mov	r8, r0
  110ff6:	460c      	mov	r4, r1
  110ff8:	b932      	cbnz	r2, 111008 <_scanf_chars+0x1c>
  110ffa:	698a      	ldr	r2, [r1, #24]
  110ffc:	2a00      	cmp	r2, #0
  110ffe:	bf0c      	ite	eq
  111000:	2201      	moveq	r2, #1
  111002:	f04f 32ff 	movne.w	r2, #4294967295
  111006:	608a      	str	r2, [r1, #8]
  111008:	6822      	ldr	r2, [r4, #0]
  11100a:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 1110b4 <_scanf_chars+0xc8>
  11100e:	06d1      	lsls	r1, r2, #27
  111010:	bf58      	it	pl
  111012:	681a      	ldrpl	r2, [r3, #0]
  111014:	f04f 0600 	mov.w	r6, #0
  111018:	bf5e      	ittt	pl
  11101a:	1d11      	addpl	r1, r2, #4
  11101c:	6019      	strpl	r1, [r3, #0]
  11101e:	6817      	ldrpl	r7, [r2, #0]
  111020:	69a0      	ldr	r0, [r4, #24]
  111022:	b9f8      	cbnz	r0, 111064 <_scanf_chars+0x78>
  111024:	6823      	ldr	r3, [r4, #0]
  111026:	3601      	adds	r6, #1
  111028:	06da      	lsls	r2, r3, #27
  11102a:	bf5e      	ittt	pl
  11102c:	682b      	ldrpl	r3, [r5, #0]
  11102e:	781b      	ldrbpl	r3, [r3, #0]
  111030:	703b      	strbpl	r3, [r7, #0]
  111032:	682a      	ldr	r2, [r5, #0]
  111034:	686b      	ldr	r3, [r5, #4]
  111036:	f102 0201 	add.w	r2, r2, #1
  11103a:	602a      	str	r2, [r5, #0]
  11103c:	68a2      	ldr	r2, [r4, #8]
  11103e:	f103 33ff 	add.w	r3, r3, #4294967295
  111042:	f102 32ff 	add.w	r2, r2, #4294967295
  111046:	606b      	str	r3, [r5, #4]
  111048:	bf58      	it	pl
  11104a:	3701      	addpl	r7, #1
  11104c:	60a2      	str	r2, [r4, #8]
  11104e:	b1e2      	cbz	r2, 11108a <_scanf_chars+0x9e>
  111050:	2b00      	cmp	r3, #0
  111052:	dce5      	bgt.n	111020 <_scanf_chars+0x34>
  111054:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
  111058:	4629      	mov	r1, r5
  11105a:	4640      	mov	r0, r8
  11105c:	4798      	blx	r3
  11105e:	2800      	cmp	r0, #0
  111060:	d0de      	beq.n	111020 <_scanf_chars+0x34>
  111062:	e012      	b.n	11108a <_scanf_chars+0x9e>
  111064:	2801      	cmp	r0, #1
  111066:	d106      	bne.n	111076 <_scanf_chars+0x8a>
  111068:	682b      	ldr	r3, [r5, #0]
  11106a:	781a      	ldrb	r2, [r3, #0]
  11106c:	6963      	ldr	r3, [r4, #20]
  11106e:	5c9b      	ldrb	r3, [r3, r2]
  111070:	2b00      	cmp	r3, #0
  111072:	d1d7      	bne.n	111024 <_scanf_chars+0x38>
  111074:	e019      	b.n	1110aa <_scanf_chars+0xbe>
  111076:	2802      	cmp	r0, #2
  111078:	d107      	bne.n	11108a <_scanf_chars+0x9e>
  11107a:	682b      	ldr	r3, [r5, #0]
  11107c:	f8d9 2000 	ldr.w	r2, [r9]
  111080:	781b      	ldrb	r3, [r3, #0]
  111082:	4413      	add	r3, r2
  111084:	785b      	ldrb	r3, [r3, #1]
  111086:	071b      	lsls	r3, r3, #28
  111088:	d5cc      	bpl.n	111024 <_scanf_chars+0x38>
  11108a:	6823      	ldr	r3, [r4, #0]
  11108c:	f013 0310 	ands.w	r3, r3, #16
  111090:	d105      	bne.n	11109e <_scanf_chars+0xb2>
  111092:	68e2      	ldr	r2, [r4, #12]
  111094:	3201      	adds	r2, #1
  111096:	60e2      	str	r2, [r4, #12]
  111098:	69a2      	ldr	r2, [r4, #24]
  11109a:	b102      	cbz	r2, 11109e <_scanf_chars+0xb2>
  11109c:	703b      	strb	r3, [r7, #0]
  11109e:	6923      	ldr	r3, [r4, #16]
  1110a0:	2000      	movs	r0, #0
  1110a2:	441e      	add	r6, r3
  1110a4:	6126      	str	r6, [r4, #16]
  1110a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  1110aa:	2e00      	cmp	r6, #0
  1110ac:	d1ed      	bne.n	11108a <_scanf_chars+0x9e>
  1110ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  1110b2:	bf00      	nop
  1110b4:	3fff4200 	.word	0x3fff4200

001110b8 <_scanf_i>:
  1110b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  1110bc:	460c      	mov	r4, r1
  1110be:	469a      	mov	r10, r3
  1110c0:	4b72      	ldr	r3, [pc, #456]	; (11128c <_scanf_i+0x1d4>)
  1110c2:	b087      	sub	sp, #28
  1110c4:	4683      	mov	r11, r0
  1110c6:	4616      	mov	r6, r2
  1110c8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
  1110cc:	ab03      	add	r3, sp, #12
  1110ce:	68a7      	ldr	r7, [r4, #8]
  1110d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  1110d4:	4b6e      	ldr	r3, [pc, #440]	; (111290 <_scanf_i+0x1d8>)
  1110d6:	69a1      	ldr	r1, [r4, #24]
  1110d8:	4a6e      	ldr	r2, [pc, #440]	; (111294 <_scanf_i+0x1dc>)
  1110da:	f104 091c 	add.w	r9, r4, #28
  1110de:	2903      	cmp	r1, #3
  1110e0:	bf18      	it	ne
  1110e2:	461a      	movne	r2, r3
  1110e4:	1e7b      	subs	r3, r7, #1
  1110e6:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
  1110ea:	bf84      	itt	hi
  1110ec:	f240 135d 	movwhi	r3, #349	; 0x15d
  1110f0:	60a3      	strhi	r3, [r4, #8]
  1110f2:	6823      	ldr	r3, [r4, #0]
  1110f4:	bf88      	it	hi
  1110f6:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
  1110fa:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
  1110fe:	6023      	str	r3, [r4, #0]
  111100:	464b      	mov	r3, r9
  111102:	9200      	str	r2, [sp, #0]
  111104:	bf8c      	ite	hi
  111106:	197f      	addhi	r7, r7, r5
  111108:	2700      	movls	r7, #0
  11110a:	f04f 0800 	mov.w	r8, #0
  11110e:	6831      	ldr	r1, [r6, #0]
  111110:	9301      	str	r3, [sp, #4]
  111112:	ab03      	add	r3, sp, #12
  111114:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
  111118:	2202      	movs	r2, #2
  11111a:	7809      	ldrb	r1, [r1, #0]
  11111c:	f7fe fec0 	bl	10fea0 <memchr>
  111120:	9b01      	ldr	r3, [sp, #4]
  111122:	2800      	cmp	r0, #0
  111124:	d033      	beq.n	11118e <_scanf_i+0xd6>
  111126:	f1b8 0f01 	cmp.w	r8, #1
  11112a:	d10b      	bne.n	111144 <_scanf_i+0x8c>
  11112c:	6862      	ldr	r2, [r4, #4]
  11112e:	b92a      	cbnz	r2, 11113c <_scanf_i+0x84>
  111130:	2208      	movs	r2, #8
  111132:	6062      	str	r2, [r4, #4]
  111134:	6822      	ldr	r2, [r4, #0]
  111136:	f442 7200 	orr.w	r2, r2, #512	; 0x200
  11113a:	6022      	str	r2, [r4, #0]
  11113c:	6822      	ldr	r2, [r4, #0]
  11113e:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
  111142:	e00c      	b.n	11115e <_scanf_i+0xa6>
  111144:	f1b8 0f02 	cmp.w	r8, #2
  111148:	d10a      	bne.n	111160 <_scanf_i+0xa8>
  11114a:	6822      	ldr	r2, [r4, #0]
  11114c:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
  111150:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  111154:	d11b      	bne.n	11118e <_scanf_i+0xd6>
  111156:	2110      	movs	r1, #16
  111158:	6061      	str	r1, [r4, #4]
  11115a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  11115e:	6022      	str	r2, [r4, #0]
  111160:	68a2      	ldr	r2, [r4, #8]
  111162:	1e51      	subs	r1, r2, #1
  111164:	60a1      	str	r1, [r4, #8]
  111166:	b192      	cbz	r2, 11118e <_scanf_i+0xd6>
  111168:	6832      	ldr	r2, [r6, #0]
  11116a:	1c5d      	adds	r5, r3, #1
  11116c:	1c51      	adds	r1, r2, #1
  11116e:	6031      	str	r1, [r6, #0]
  111170:	7812      	ldrb	r2, [r2, #0]
  111172:	701a      	strb	r2, [r3, #0]
  111174:	6873      	ldr	r3, [r6, #4]
  111176:	3b01      	subs	r3, #1
  111178:	2b00      	cmp	r3, #0
  11117a:	6073      	str	r3, [r6, #4]
  11117c:	dc06      	bgt.n	11118c <_scanf_i+0xd4>
  11117e:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
  111182:	4631      	mov	r1, r6
  111184:	4658      	mov	r0, r11
  111186:	4798      	blx	r3
  111188:	2800      	cmp	r0, #0
  11118a:	d141      	bne.n	111210 <_scanf_i+0x158>
  11118c:	462b      	mov	r3, r5
  11118e:	f108 0801 	add.w	r8, r8, #1
  111192:	f1b8 0f03 	cmp.w	r8, #3
  111196:	d1ba      	bne.n	11110e <_scanf_i+0x56>
  111198:	6862      	ldr	r2, [r4, #4]
  11119a:	b90a      	cbnz	r2, 1111a0 <_scanf_i+0xe8>
  11119c:	220a      	movs	r2, #10
  11119e:	6062      	str	r2, [r4, #4]
  1111a0:	6862      	ldr	r2, [r4, #4]
  1111a2:	493d      	ldr	r1, [pc, #244]	; (111298 <_scanf_i+0x1e0>)
  1111a4:	6960      	ldr	r0, [r4, #20]
  1111a6:	1a89      	subs	r1, r1, r2
  1111a8:	9301      	str	r3, [sp, #4]
  1111aa:	f000 f961 	bl	111470 <__sccl>
  1111ae:	9b01      	ldr	r3, [sp, #4]
  1111b0:	f04f 0800 	mov.w	r8, #0
  1111b4:	461d      	mov	r5, r3
  1111b6:	68a3      	ldr	r3, [r4, #8]
  1111b8:	b363      	cbz	r3, 111214 <_scanf_i+0x15c>
  1111ba:	6831      	ldr	r1, [r6, #0]
  1111bc:	6960      	ldr	r0, [r4, #20]
  1111be:	780a      	ldrb	r2, [r1, #0]
  1111c0:	5c80      	ldrb	r0, [r0, r2]
  1111c2:	b338      	cbz	r0, 111214 <_scanf_i+0x15c>
  1111c4:	2a30      	cmp	r2, #48	; 0x30
  1111c6:	6822      	ldr	r2, [r4, #0]
  1111c8:	d108      	bne.n	1111dc <_scanf_i+0x124>
  1111ca:	0510      	lsls	r0, r2, #20
  1111cc:	d506      	bpl.n	1111dc <_scanf_i+0x124>
  1111ce:	f108 0801 	add.w	r8, r8, #1
  1111d2:	b157      	cbz	r7, 1111ea <_scanf_i+0x132>
  1111d4:	3301      	adds	r3, #1
  1111d6:	3f01      	subs	r7, #1
  1111d8:	60a3      	str	r3, [r4, #8]
  1111da:	e006      	b.n	1111ea <_scanf_i+0x132>
  1111dc:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
  1111e0:	6022      	str	r2, [r4, #0]
  1111e2:	780b      	ldrb	r3, [r1, #0]
  1111e4:	3501      	adds	r5, #1
  1111e6:	f805 3c01 	strb.w	r3, [r5, #-1]
  1111ea:	6873      	ldr	r3, [r6, #4]
  1111ec:	3b01      	subs	r3, #1
  1111ee:	2b00      	cmp	r3, #0
  1111f0:	6073      	str	r3, [r6, #4]
  1111f2:	dd03      	ble.n	1111fc <_scanf_i+0x144>
  1111f4:	6833      	ldr	r3, [r6, #0]
  1111f6:	3301      	adds	r3, #1
  1111f8:	6033      	str	r3, [r6, #0]
  1111fa:	e005      	b.n	111208 <_scanf_i+0x150>
  1111fc:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
  111200:	4631      	mov	r1, r6
  111202:	4658      	mov	r0, r11
  111204:	4798      	blx	r3
  111206:	b928      	cbnz	r0, 111214 <_scanf_i+0x15c>
  111208:	68a3      	ldr	r3, [r4, #8]
  11120a:	3b01      	subs	r3, #1
  11120c:	60a3      	str	r3, [r4, #8]
  11120e:	e7d2      	b.n	1111b6 <_scanf_i+0xfe>
  111210:	f04f 0800 	mov.w	r8, #0
  111214:	6823      	ldr	r3, [r4, #0]
  111216:	05d9      	lsls	r1, r3, #23
  111218:	d50c      	bpl.n	111234 <_scanf_i+0x17c>
  11121a:	454d      	cmp	r5, r9
  11121c:	d908      	bls.n	111230 <_scanf_i+0x178>
  11121e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
  111222:	1e6f      	subs	r7, r5, #1
  111224:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  111228:	4632      	mov	r2, r6
  11122a:	4658      	mov	r0, r11
  11122c:	4798      	blx	r3
  11122e:	463d      	mov	r5, r7
  111230:	454d      	cmp	r5, r9
  111232:	d027      	beq.n	111284 <_scanf_i+0x1cc>
  111234:	6822      	ldr	r2, [r4, #0]
  111236:	f012 0210 	ands.w	r2, r2, #16
  11123a:	d11b      	bne.n	111274 <_scanf_i+0x1bc>
  11123c:	702a      	strb	r2, [r5, #0]
  11123e:	6863      	ldr	r3, [r4, #4]
  111240:	4649      	mov	r1, r9
  111242:	4658      	mov	r0, r11
  111244:	9e00      	ldr	r6, [sp, #0]
  111246:	47b0      	blx	r6
  111248:	6822      	ldr	r2, [r4, #0]
  11124a:	f8da 3000 	ldr.w	r3, [r10]
  11124e:	f012 0f20 	tst.w	r2, #32
  111252:	d107      	bne.n	111264 <_scanf_i+0x1ac>
  111254:	07d2      	lsls	r2, r2, #31
  111256:	d505      	bpl.n	111264 <_scanf_i+0x1ac>
  111258:	1d1a      	adds	r2, r3, #4
  11125a:	f8ca 2000 	str.w	r2, [r10]
  11125e:	681b      	ldr	r3, [r3, #0]
  111260:	8018      	strh	r0, [r3, #0]
  111262:	e004      	b.n	11126e <_scanf_i+0x1b6>
  111264:	1d1a      	adds	r2, r3, #4
  111266:	f8ca 2000 	str.w	r2, [r10]
  11126a:	681b      	ldr	r3, [r3, #0]
  11126c:	6018      	str	r0, [r3, #0]
  11126e:	68e3      	ldr	r3, [r4, #12]
  111270:	3301      	adds	r3, #1
  111272:	60e3      	str	r3, [r4, #12]
  111274:	6923      	ldr	r3, [r4, #16]
  111276:	ebc9 0505 	rsb	r5, r9, r5
  11127a:	4445      	add	r5, r8
  11127c:	441d      	add	r5, r3
  11127e:	6125      	str	r5, [r4, #16]
  111280:	2000      	movs	r0, #0
  111282:	e000      	b.n	111286 <_scanf_i+0x1ce>
  111284:	2001      	movs	r0, #1
  111286:	b007      	add	sp, #28
  111288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  11128c:	00119fc4 	.word	0x00119fc4
  111290:	00112569 	.word	0x00112569
  111294:	00112449 	.word	0x00112449
  111298:	00119fe0 	.word	0x00119fe0

0011129c <_open_r>:
  11129c:	b538      	push	{r3, r4, r5, lr}
  11129e:	4c07      	ldr	r4, [pc, #28]	; (1112bc <_open_r+0x20>)
  1112a0:	4605      	mov	r5, r0
  1112a2:	4608      	mov	r0, r1
  1112a4:	4611      	mov	r1, r2
  1112a6:	2200      	movs	r2, #0
  1112a8:	6022      	str	r2, [r4, #0]
  1112aa:	461a      	mov	r2, r3
  1112ac:	f7fc fa76 	bl	10d79c <_open>
  1112b0:	1c43      	adds	r3, r0, #1
  1112b2:	d102      	bne.n	1112ba <_open_r+0x1e>
  1112b4:	6823      	ldr	r3, [r4, #0]
  1112b6:	b103      	cbz	r3, 1112ba <_open_r+0x1e>
  1112b8:	602b      	str	r3, [r5, #0]
  1112ba:	bd38      	pop	{r3, r4, r5, pc}
  1112bc:	3fff9f18 	.word	0x3fff9f18

001112c0 <iprintf>:
  1112c0:	b40f      	push	{r0, r1, r2, r3}
  1112c2:	4b0a      	ldr	r3, [pc, #40]	; (1112ec <iprintf+0x2c>)
  1112c4:	b513      	push	{r0, r1, r4, lr}
  1112c6:	681c      	ldr	r4, [r3, #0]
  1112c8:	b124      	cbz	r4, 1112d4 <iprintf+0x14>
  1112ca:	69a3      	ldr	r3, [r4, #24]
  1112cc:	b913      	cbnz	r3, 1112d4 <iprintf+0x14>
  1112ce:	4620      	mov	r0, r4
  1112d0:	f7fe fbec 	bl	10faac <__sinit>
  1112d4:	ab05      	add	r3, sp, #20
  1112d6:	9a04      	ldr	r2, [sp, #16]
  1112d8:	68a1      	ldr	r1, [r4, #8]
  1112da:	4620      	mov	r0, r4
  1112dc:	9301      	str	r3, [sp, #4]
  1112de:	f7fe ff1f 	bl	110120 <_vfiprintf_r>
  1112e2:	b002      	add	sp, #8
  1112e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  1112e8:	b004      	add	sp, #16
  1112ea:	4770      	bx	lr
  1112ec:	3fff4264 	.word	0x3fff4264

001112f0 <_puts_r>:
  1112f0:	b570      	push	{r4, r5, r6, lr}
  1112f2:	460e      	mov	r6, r1
  1112f4:	4605      	mov	r5, r0
  1112f6:	b118      	cbz	r0, 111300 <_puts_r+0x10>
  1112f8:	6983      	ldr	r3, [r0, #24]
  1112fa:	b90b      	cbnz	r3, 111300 <_puts_r+0x10>
  1112fc:	f7fe fbd6 	bl	10faac <__sinit>
  111300:	69ab      	ldr	r3, [r5, #24]
  111302:	68ac      	ldr	r4, [r5, #8]
  111304:	b913      	cbnz	r3, 11130c <_puts_r+0x1c>
  111306:	4628      	mov	r0, r5
  111308:	f7fe fbd0 	bl	10faac <__sinit>
  11130c:	4b31      	ldr	r3, [pc, #196]	; (1113d4 <_puts_r+0xe4>)
  11130e:	429c      	cmp	r4, r3
  111310:	d101      	bne.n	111316 <_puts_r+0x26>
  111312:	686c      	ldr	r4, [r5, #4]
  111314:	e008      	b.n	111328 <_puts_r+0x38>
  111316:	4b30      	ldr	r3, [pc, #192]	; (1113d8 <_puts_r+0xe8>)
  111318:	429c      	cmp	r4, r3
  11131a:	d101      	bne.n	111320 <_puts_r+0x30>
  11131c:	68ac      	ldr	r4, [r5, #8]
  11131e:	e003      	b.n	111328 <_puts_r+0x38>
  111320:	4b2e      	ldr	r3, [pc, #184]	; (1113dc <_puts_r+0xec>)
  111322:	429c      	cmp	r4, r3
  111324:	bf08      	it	eq
  111326:	68ec      	ldreq	r4, [r5, #12]
  111328:	89a3      	ldrh	r3, [r4, #12]
  11132a:	0719      	lsls	r1, r3, #28
  11132c:	d501      	bpl.n	111332 <_puts_r+0x42>
  11132e:	6923      	ldr	r3, [r4, #16]
  111330:	b983      	cbnz	r3, 111354 <_puts_r+0x64>
  111332:	4621      	mov	r1, r4
  111334:	4628      	mov	r0, r5
  111336:	f001 fa77 	bl	112828 <__swsetup_r>
  11133a:	b158      	cbz	r0, 111354 <_puts_r+0x64>
  11133c:	f04f 30ff 	mov.w	r0, #4294967295
  111340:	bd70      	pop	{r4, r5, r6, pc}
  111342:	2b00      	cmp	r3, #0
  111344:	db0e      	blt.n	111364 <_puts_r+0x74>
  111346:	6823      	ldr	r3, [r4, #0]
  111348:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  11134c:	701a      	strb	r2, [r3, #0]
  11134e:	6823      	ldr	r3, [r4, #0]
  111350:	3301      	adds	r3, #1
  111352:	6023      	str	r3, [r4, #0]
  111354:	68a3      	ldr	r3, [r4, #8]
  111356:	f816 2b01 	ldrb.w	r2, [r6], #1
  11135a:	3b01      	subs	r3, #1
  11135c:	60a3      	str	r3, [r4, #8]
  11135e:	2a00      	cmp	r2, #0
  111360:	d1ef      	bne.n	111342 <_puts_r+0x52>
  111362:	e016      	b.n	111392 <_puts_r+0xa2>
  111364:	69a2      	ldr	r2, [r4, #24]
  111366:	4293      	cmp	r3, r2
  111368:	db09      	blt.n	11137e <_puts_r+0x8e>
  11136a:	6823      	ldr	r3, [r4, #0]
  11136c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  111370:	701a      	strb	r2, [r3, #0]
  111372:	6823      	ldr	r3, [r4, #0]
  111374:	7819      	ldrb	r1, [r3, #0]
  111376:	290a      	cmp	r1, #10
  111378:	d1ea      	bne.n	111350 <_puts_r+0x60>
  11137a:	4622      	mov	r2, r4
  11137c:	e002      	b.n	111384 <_puts_r+0x94>
  11137e:	4622      	mov	r2, r4
  111380:	f816 1c01 	ldrb.w	r1, [r6, #-1]
  111384:	4628      	mov	r0, r5
  111386:	f001 f9e9 	bl	11275c <__swbuf_r>
  11138a:	1c42      	adds	r2, r0, #1
  11138c:	4250      	negs	r0, r2
  11138e:	4150      	adcs	r0, r2
  111390:	e7d3      	b.n	11133a <_puts_r+0x4a>
  111392:	2b00      	cmp	r3, #0
  111394:	da15      	bge.n	1113c2 <_puts_r+0xd2>
  111396:	69a2      	ldr	r2, [r4, #24]
  111398:	4293      	cmp	r3, r2
  11139a:	db08      	blt.n	1113ae <_puts_r+0xbe>
  11139c:	6823      	ldr	r3, [r4, #0]
  11139e:	220a      	movs	r2, #10
  1113a0:	701a      	strb	r2, [r3, #0]
  1113a2:	6823      	ldr	r3, [r4, #0]
  1113a4:	7819      	ldrb	r1, [r3, #0]
  1113a6:	4291      	cmp	r1, r2
  1113a8:	d10f      	bne.n	1113ca <_puts_r+0xda>
  1113aa:	4622      	mov	r2, r4
  1113ac:	e001      	b.n	1113b2 <_puts_r+0xc2>
  1113ae:	4622      	mov	r2, r4
  1113b0:	210a      	movs	r1, #10
  1113b2:	4628      	mov	r0, r5
  1113b4:	f001 f9d2 	bl	11275c <__swbuf_r>
  1113b8:	1c43      	adds	r3, r0, #1
  1113ba:	4258      	negs	r0, r3
  1113bc:	4158      	adcs	r0, r3
  1113be:	b130      	cbz	r0, 1113ce <_puts_r+0xde>
  1113c0:	e7bc      	b.n	11133c <_puts_r+0x4c>
  1113c2:	6823      	ldr	r3, [r4, #0]
  1113c4:	220a      	movs	r2, #10
  1113c6:	701a      	strb	r2, [r3, #0]
  1113c8:	6823      	ldr	r3, [r4, #0]
  1113ca:	3301      	adds	r3, #1
  1113cc:	6023      	str	r3, [r4, #0]
  1113ce:	200a      	movs	r0, #10
  1113d0:	bd70      	pop	{r4, r5, r6, pc}
  1113d2:	bf00      	nop
  1113d4:	00119f10 	.word	0x00119f10
  1113d8:	00119f30 	.word	0x00119f30
  1113dc:	00119f50 	.word	0x00119f50

001113e0 <puts>:
  1113e0:	4b02      	ldr	r3, [pc, #8]	; (1113ec <puts+0xc>)
  1113e2:	4601      	mov	r1, r0
  1113e4:	6818      	ldr	r0, [r3, #0]
  1113e6:	f7ff bf83 	b.w	1112f0 <_puts_r>
  1113ea:	bf00      	nop
  1113ec:	3fff4264 	.word	0x3fff4264

001113f0 <realloc>:
  1113f0:	4b02      	ldr	r3, [pc, #8]	; (1113fc <realloc+0xc>)
  1113f2:	460a      	mov	r2, r1
  1113f4:	4601      	mov	r1, r0
  1113f6:	6818      	ldr	r0, [r3, #0]
  1113f8:	f7fc b85b 	b.w	10d4b2 <__wrap__realloc_r>
  1113fc:	3fff4264 	.word	0x3fff4264

00111400 <__fpclassifyd>:
  111400:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  111404:	b510      	push	{r4, lr}
  111406:	d01b      	beq.n	111440 <__fpclassifyd+0x40>
  111408:	4a0f      	ldr	r2, [pc, #60]	; (111448 <__fpclassifyd+0x48>)
  11140a:	f5a1 1480 	sub.w	r4, r1, #1048576	; 0x100000
  11140e:	4294      	cmp	r4, r2
  111410:	d910      	bls.n	111434 <__fpclassifyd+0x34>
  111412:	f101 41ff 	add.w	r1, r1, #2139095040	; 0x7f800000
  111416:	4a0c      	ldr	r2, [pc, #48]	; (111448 <__fpclassifyd+0x48>)
  111418:	f501 01e0 	add.w	r1, r1, #7340032	; 0x700000
  11141c:	4291      	cmp	r1, r2
  11141e:	d909      	bls.n	111434 <__fpclassifyd+0x34>
  111420:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
  111424:	d308      	bcc.n	111438 <__fpclassifyd+0x38>
  111426:	4a09      	ldr	r2, [pc, #36]	; (11144c <__fpclassifyd+0x4c>)
  111428:	4293      	cmp	r3, r2
  11142a:	d107      	bne.n	11143c <__fpclassifyd+0x3c>
  11142c:	fab0 f080 	clz	r0, r0
  111430:	0940      	lsrs	r0, r0, #5
  111432:	bd10      	pop	{r4, pc}
  111434:	2004      	movs	r0, #4
  111436:	bd10      	pop	{r4, pc}
  111438:	2003      	movs	r0, #3
  11143a:	bd10      	pop	{r4, pc}
  11143c:	2000      	movs	r0, #0
  11143e:	bd10      	pop	{r4, pc}
  111440:	2800      	cmp	r0, #0
  111442:	d1e6      	bne.n	111412 <__fpclassifyd+0x12>
  111444:	2002      	movs	r0, #2
  111446:	bd10      	pop	{r4, pc}
  111448:	7fdfffff 	.word	0x7fdfffff
  11144c:	7ff00000 	.word	0x7ff00000

00111450 <_sbrk_r>:
  111450:	b538      	push	{r3, r4, r5, lr}
  111452:	4c06      	ldr	r4, [pc, #24]	; (11146c <_sbrk_r+0x1c>)
  111454:	2300      	movs	r3, #0
  111456:	4605      	mov	r5, r0
  111458:	4608      	mov	r0, r1
  11145a:	6023      	str	r3, [r4, #0]
  11145c:	f7fc f914 	bl	10d688 <_sbrk>
  111460:	1c43      	adds	r3, r0, #1
  111462:	d102      	bne.n	11146a <_sbrk_r+0x1a>
  111464:	6823      	ldr	r3, [r4, #0]
  111466:	b103      	cbz	r3, 11146a <_sbrk_r+0x1a>
  111468:	602b      	str	r3, [r5, #0]
  11146a:	bd38      	pop	{r3, r4, r5, pc}
  11146c:	3fff9f18 	.word	0x3fff9f18

00111470 <__sccl>:
  111470:	b570      	push	{r4, r5, r6, lr}
  111472:	780b      	ldrb	r3, [r1, #0]
  111474:	1e44      	subs	r4, r0, #1
  111476:	2b5e      	cmp	r3, #94	; 0x5e
  111478:	bf13      	iteet	ne
  11147a:	1c4a      	addne	r2, r1, #1
  11147c:	1c8a      	addeq	r2, r1, #2
  11147e:	784b      	ldrbeq	r3, [r1, #1]
  111480:	2100      	movne	r1, #0
  111482:	bf08      	it	eq
  111484:	2101      	moveq	r1, #1
  111486:	f100 05ff 	add.w	r5, r0, #255	; 0xff
  11148a:	f804 1f01 	strb.w	r1, [r4, #1]!
  11148e:	42ac      	cmp	r4, r5
  111490:	d1fb      	bne.n	11148a <__sccl+0x1a>
  111492:	b90b      	cbnz	r3, 111498 <__sccl+0x28>
  111494:	1e50      	subs	r0, r2, #1
  111496:	bd70      	pop	{r4, r5, r6, pc}
  111498:	f081 0401 	eor.w	r4, r1, #1
  11149c:	4611      	mov	r1, r2
  11149e:	54c4      	strb	r4, [r0, r3]
  1114a0:	780d      	ldrb	r5, [r1, #0]
  1114a2:	1c4a      	adds	r2, r1, #1
  1114a4:	2d2d      	cmp	r5, #45	; 0x2d
  1114a6:	d006      	beq.n	1114b6 <__sccl+0x46>
  1114a8:	2d5d      	cmp	r5, #93	; 0x5d
  1114aa:	d00f      	beq.n	1114cc <__sccl+0x5c>
  1114ac:	b10d      	cbz	r5, 1114b2 <__sccl+0x42>
  1114ae:	462b      	mov	r3, r5
  1114b0:	e7f4      	b.n	11149c <__sccl+0x2c>
  1114b2:	4608      	mov	r0, r1
  1114b4:	bd70      	pop	{r4, r5, r6, pc}
  1114b6:	784e      	ldrb	r6, [r1, #1]
  1114b8:	2e5d      	cmp	r6, #93	; 0x5d
  1114ba:	d0f8      	beq.n	1114ae <__sccl+0x3e>
  1114bc:	42b3      	cmp	r3, r6
  1114be:	dcf6      	bgt.n	1114ae <__sccl+0x3e>
  1114c0:	3102      	adds	r1, #2
  1114c2:	3301      	adds	r3, #1
  1114c4:	429e      	cmp	r6, r3
  1114c6:	54c4      	strb	r4, [r0, r3]
  1114c8:	dcfb      	bgt.n	1114c2 <__sccl+0x52>
  1114ca:	e7e9      	b.n	1114a0 <__sccl+0x30>
  1114cc:	4610      	mov	r0, r2
  1114ce:	bd70      	pop	{r4, r5, r6, pc}

001114d0 <setbuf>:
  1114d0:	2900      	cmp	r1, #0
  1114d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  1114d6:	bf0c      	ite	eq
  1114d8:	2202      	moveq	r2, #2
  1114da:	2200      	movne	r2, #0
  1114dc:	f000 b800 	b.w	1114e0 <setvbuf>

001114e0 <setvbuf>:
  1114e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1114e4:	461d      	mov	r5, r3
  1114e6:	4b3d      	ldr	r3, [pc, #244]	; (1115dc <setvbuf+0xfc>)
  1114e8:	4604      	mov	r4, r0
  1114ea:	681e      	ldr	r6, [r3, #0]
  1114ec:	460f      	mov	r7, r1
  1114ee:	4690      	mov	r8, r2
  1114f0:	b126      	cbz	r6, 1114fc <setvbuf+0x1c>
  1114f2:	69b3      	ldr	r3, [r6, #24]
  1114f4:	b913      	cbnz	r3, 1114fc <setvbuf+0x1c>
  1114f6:	4630      	mov	r0, r6
  1114f8:	f7fe fad8 	bl	10faac <__sinit>
  1114fc:	4b38      	ldr	r3, [pc, #224]	; (1115e0 <setvbuf+0x100>)
  1114fe:	429c      	cmp	r4, r3
  111500:	d101      	bne.n	111506 <setvbuf+0x26>
  111502:	6874      	ldr	r4, [r6, #4]
  111504:	e008      	b.n	111518 <setvbuf+0x38>
  111506:	4b37      	ldr	r3, [pc, #220]	; (1115e4 <setvbuf+0x104>)
  111508:	429c      	cmp	r4, r3
  11150a:	d101      	bne.n	111510 <setvbuf+0x30>
  11150c:	68b4      	ldr	r4, [r6, #8]
  11150e:	e003      	b.n	111518 <setvbuf+0x38>
  111510:	4b35      	ldr	r3, [pc, #212]	; (1115e8 <setvbuf+0x108>)
  111512:	429c      	cmp	r4, r3
  111514:	bf08      	it	eq
  111516:	68f4      	ldreq	r4, [r6, #12]
  111518:	f1b8 0f02 	cmp.w	r8, #2
  11151c:	d859      	bhi.n	1115d2 <setvbuf+0xf2>
  11151e:	2d00      	cmp	r5, #0
  111520:	db57      	blt.n	1115d2 <setvbuf+0xf2>
  111522:	4621      	mov	r1, r4
  111524:	4630      	mov	r0, r6
  111526:	f7fe fa45 	bl	10f9b4 <_fflush_r>
  11152a:	2300      	movs	r3, #0
  11152c:	6063      	str	r3, [r4, #4]
  11152e:	61a3      	str	r3, [r4, #24]
  111530:	89a3      	ldrh	r3, [r4, #12]
  111532:	061b      	lsls	r3, r3, #24
  111534:	d503      	bpl.n	11153e <setvbuf+0x5e>
  111536:	6921      	ldr	r1, [r4, #16]
  111538:	4630      	mov	r0, r6
  11153a:	f7fb ffbc 	bl	10d4b6 <__wrap__free_r>
  11153e:	89a3      	ldrh	r3, [r4, #12]
  111540:	f1b8 0f02 	cmp.w	r8, #2
  111544:	f023 0383 	bic.w	r3, r3, #131	; 0x83
  111548:	81a3      	strh	r3, [r4, #12]
  11154a:	d012      	beq.n	111572 <setvbuf+0x92>
  11154c:	bb37      	cbnz	r7, 11159c <setvbuf+0xbc>
  11154e:	2d00      	cmp	r5, #0
  111550:	bf08      	it	eq
  111552:	f44f 6580 	moveq.w	r5, #1024	; 0x400
  111556:	4628      	mov	r0, r5
  111558:	f7fe fc92 	bl	10fe80 <malloc>
  11155c:	4607      	mov	r7, r0
  11155e:	b9c8      	cbnz	r0, 111594 <setvbuf+0xb4>
  111560:	f44f 6080 	mov.w	r0, #1024	; 0x400
  111564:	f7fe fc8c 	bl	10fe80 <malloc>
  111568:	4607      	mov	r7, r0
  11156a:	b988      	cbnz	r0, 111590 <setvbuf+0xb0>
  11156c:	f04f 30ff 	mov.w	r0, #4294967295
  111570:	e000      	b.n	111574 <setvbuf+0x94>
  111572:	2000      	movs	r0, #0
  111574:	89a3      	ldrh	r3, [r4, #12]
  111576:	f043 0302 	orr.w	r3, r3, #2
  11157a:	81a3      	strh	r3, [r4, #12]
  11157c:	2300      	movs	r3, #0
  11157e:	60a3      	str	r3, [r4, #8]
  111580:	f104 0347 	add.w	r3, r4, #71	; 0x47
  111584:	6023      	str	r3, [r4, #0]
  111586:	6123      	str	r3, [r4, #16]
  111588:	2301      	movs	r3, #1
  11158a:	6163      	str	r3, [r4, #20]
  11158c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  111590:	f44f 6580 	mov.w	r5, #1024	; 0x400
  111594:	89a3      	ldrh	r3, [r4, #12]
  111596:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  11159a:	81a3      	strh	r3, [r4, #12]
  11159c:	f1b8 0f01 	cmp.w	r8, #1
  1115a0:	d105      	bne.n	1115ae <setvbuf+0xce>
  1115a2:	89a3      	ldrh	r3, [r4, #12]
  1115a4:	f043 0301 	orr.w	r3, r3, #1
  1115a8:	81a3      	strh	r3, [r4, #12]
  1115aa:	426b      	negs	r3, r5
  1115ac:	61a3      	str	r3, [r4, #24]
  1115ae:	4b0f      	ldr	r3, [pc, #60]	; (1115ec <setvbuf+0x10c>)
  1115b0:	62b3      	str	r3, [r6, #40]	; 0x28
  1115b2:	89a3      	ldrh	r3, [r4, #12]
  1115b4:	6027      	str	r7, [r4, #0]
  1115b6:	f003 0008 	and.w	r0, r3, #8
  1115ba:	b280      	uxth	r0, r0
  1115bc:	6127      	str	r7, [r4, #16]
  1115be:	6165      	str	r5, [r4, #20]
  1115c0:	b148      	cbz	r0, 1115d6 <setvbuf+0xf6>
  1115c2:	f013 0f03 	tst.w	r3, #3
  1115c6:	bf18      	it	ne
  1115c8:	2500      	movne	r5, #0
  1115ca:	60a5      	str	r5, [r4, #8]
  1115cc:	2000      	movs	r0, #0
  1115ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1115d2:	f04f 30ff 	mov.w	r0, #4294967295
  1115d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1115da:	bf00      	nop
  1115dc:	3fff4264 	.word	0x3fff4264
  1115e0:	00119f10 	.word	0x00119f10
  1115e4:	00119f30 	.word	0x00119f30
  1115e8:	00119f50 	.word	0x00119f50
  1115ec:	0010fa2d 	.word	0x0010fa2d

001115f0 <nanf>:
  1115f0:	4800      	ldr	r0, [pc, #0]	; (1115f4 <nanf+0x4>)
  1115f2:	4770      	bx	lr
  1115f4:	7fc00000 	.word	0x7fc00000

001115f8 <sniprintf>:
  1115f8:	b40c      	push	{r2, r3}
  1115fa:	b530      	push	{r4, r5, lr}
  1115fc:	4b16      	ldr	r3, [pc, #88]	; (111658 <sniprintf+0x60>)
  1115fe:	1e0c      	subs	r4, r1, #0
  111600:	b09d      	sub	sp, #116	; 0x74
  111602:	681d      	ldr	r5, [r3, #0]
  111604:	da04      	bge.n	111610 <sniprintf+0x18>
  111606:	238b      	movs	r3, #139	; 0x8b
  111608:	602b      	str	r3, [r5, #0]
  11160a:	f04f 30ff 	mov.w	r0, #4294967295
  11160e:	e01e      	b.n	11164e <sniprintf+0x56>
  111610:	f44f 7302 	mov.w	r3, #520	; 0x208
  111614:	f8ad 3014 	strh.w	r3, [sp, #20]
  111618:	bf0c      	ite	eq
  11161a:	4623      	moveq	r3, r4
  11161c:	f104 33ff 	addne.w	r3, r4, #4294967295
  111620:	9304      	str	r3, [sp, #16]
  111622:	9307      	str	r3, [sp, #28]
  111624:	f64f 73ff 	movw	r3, #65535	; 0xffff
  111628:	9002      	str	r0, [sp, #8]
  11162a:	9006      	str	r0, [sp, #24]
  11162c:	f8ad 3016 	strh.w	r3, [sp, #22]
  111630:	9a20      	ldr	r2, [sp, #128]	; 0x80
  111632:	ab21      	add	r3, sp, #132	; 0x84
  111634:	a902      	add	r1, sp, #8
  111636:	4628      	mov	r0, r5
  111638:	9301      	str	r3, [sp, #4]
  11163a:	f002 ff6b 	bl	114514 <_svfiprintf_r>
  11163e:	1c43      	adds	r3, r0, #1
  111640:	bfbc      	itt	lt
  111642:	238b      	movlt	r3, #139	; 0x8b
  111644:	602b      	strlt	r3, [r5, #0]
  111646:	b114      	cbz	r4, 11164e <sniprintf+0x56>
  111648:	9b02      	ldr	r3, [sp, #8]
  11164a:	2200      	movs	r2, #0
  11164c:	701a      	strb	r2, [r3, #0]
  11164e:	b01d      	add	sp, #116	; 0x74
  111650:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  111654:	b002      	add	sp, #8
  111656:	4770      	bx	lr
  111658:	3fff4264 	.word	0x3fff4264

0011165c <siprintf>:
  11165c:	b40e      	push	{r1, r2, r3}
  11165e:	b500      	push	{lr}
  111660:	f44f 7102 	mov.w	r1, #520	; 0x208
  111664:	b09c      	sub	sp, #112	; 0x70
  111666:	f8ad 1014 	strh.w	r1, [sp, #20]
  11166a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  11166e:	9104      	str	r1, [sp, #16]
  111670:	9107      	str	r1, [sp, #28]
  111672:	f64f 71ff 	movw	r1, #65535	; 0xffff
  111676:	ab1d      	add	r3, sp, #116	; 0x74
  111678:	9002      	str	r0, [sp, #8]
  11167a:	9006      	str	r0, [sp, #24]
  11167c:	4808      	ldr	r0, [pc, #32]	; (1116a0 <siprintf+0x44>)
  11167e:	f853 2b04 	ldr.w	r2, [r3], #4
  111682:	f8ad 1016 	strh.w	r1, [sp, #22]
  111686:	6800      	ldr	r0, [r0, #0]
  111688:	a902      	add	r1, sp, #8
  11168a:	9301      	str	r3, [sp, #4]
  11168c:	f002 ff42 	bl	114514 <_svfiprintf_r>
  111690:	9b02      	ldr	r3, [sp, #8]
  111692:	2200      	movs	r2, #0
  111694:	701a      	strb	r2, [r3, #0]
  111696:	b01c      	add	sp, #112	; 0x70
  111698:	f85d eb04 	ldr.w	lr, [sp], #4
  11169c:	b003      	add	sp, #12
  11169e:	4770      	bx	lr
  1116a0:	3fff4264 	.word	0x3fff4264

001116a4 <siscanf>:
  1116a4:	b40e      	push	{r1, r2, r3}
  1116a6:	b530      	push	{r4, r5, lr}
  1116a8:	b09c      	sub	sp, #112	; 0x70
  1116aa:	ac1f      	add	r4, sp, #124	; 0x7c
  1116ac:	f44f 7201 	mov.w	r2, #516	; 0x204
  1116b0:	f854 5b04 	ldr.w	r5, [r4], #4
  1116b4:	f8ad 2014 	strh.w	r2, [sp, #20]
  1116b8:	9002      	str	r0, [sp, #8]
  1116ba:	9006      	str	r0, [sp, #24]
  1116bc:	f000 f873 	bl	1117a6 <strlen>
  1116c0:	4b0b      	ldr	r3, [pc, #44]	; (1116f0 <siscanf+0x4c>)
  1116c2:	9003      	str	r0, [sp, #12]
  1116c4:	930b      	str	r3, [sp, #44]	; 0x2c
  1116c6:	2300      	movs	r3, #0
  1116c8:	930f      	str	r3, [sp, #60]	; 0x3c
  1116ca:	9314      	str	r3, [sp, #80]	; 0x50
  1116cc:	f64f 73ff 	movw	r3, #65535	; 0xffff
  1116d0:	9007      	str	r0, [sp, #28]
  1116d2:	4808      	ldr	r0, [pc, #32]	; (1116f4 <siscanf+0x50>)
  1116d4:	f8ad 3016 	strh.w	r3, [sp, #22]
  1116d8:	462a      	mov	r2, r5
  1116da:	4623      	mov	r3, r4
  1116dc:	a902      	add	r1, sp, #8
  1116de:	6800      	ldr	r0, [r0, #0]
  1116e0:	9401      	str	r4, [sp, #4]
  1116e2:	f003 f867 	bl	1147b4 <__ssvfiscanf_r>
  1116e6:	b01c      	add	sp, #112	; 0x70
  1116e8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  1116ec:	b003      	add	sp, #12
  1116ee:	4770      	bx	lr
  1116f0:	0011171b 	.word	0x0011171b
  1116f4:	3fff4264 	.word	0x3fff4264

001116f8 <__sread>:
  1116f8:	b510      	push	{r4, lr}
  1116fa:	460c      	mov	r4, r1
  1116fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  111700:	f003 f9a6 	bl	114a50 <_read_r>
  111704:	2800      	cmp	r0, #0
  111706:	bfab      	itete	ge
  111708:	6d63      	ldrge	r3, [r4, #84]	; 0x54
  11170a:	89a3      	ldrhlt	r3, [r4, #12]
  11170c:	181b      	addge	r3, r3, r0
  11170e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
  111712:	bfac      	ite	ge
  111714:	6563      	strge	r3, [r4, #84]	; 0x54
  111716:	81a3      	strhlt	r3, [r4, #12]
  111718:	bd10      	pop	{r4, pc}

0011171a <__seofread>:
  11171a:	2000      	movs	r0, #0
  11171c:	4770      	bx	lr

0011171e <__swrite>:
  11171e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  111722:	461f      	mov	r7, r3
  111724:	898b      	ldrh	r3, [r1, #12]
  111726:	4605      	mov	r5, r0
  111728:	05db      	lsls	r3, r3, #23
  11172a:	460c      	mov	r4, r1
  11172c:	4616      	mov	r6, r2
  11172e:	d505      	bpl.n	11173c <__swrite+0x1e>
  111730:	2302      	movs	r3, #2
  111732:	2200      	movs	r2, #0
  111734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  111738:	f002 fa8e 	bl	113c58 <_lseek_r>
  11173c:	89a3      	ldrh	r3, [r4, #12]
  11173e:	4632      	mov	r2, r6
  111740:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  111744:	81a3      	strh	r3, [r4, #12]
  111746:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  11174a:	463b      	mov	r3, r7
  11174c:	4628      	mov	r0, r5
  11174e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  111752:	f001 b857 	b.w	112804 <_write_r>

00111756 <__sseek>:
  111756:	b510      	push	{r4, lr}
  111758:	460c      	mov	r4, r1
  11175a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  11175e:	f002 fa7b 	bl	113c58 <_lseek_r>
  111762:	1c43      	adds	r3, r0, #1
  111764:	89a3      	ldrh	r3, [r4, #12]
  111766:	bf15      	itete	ne
  111768:	6560      	strne	r0, [r4, #84]	; 0x54
  11176a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  11176e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  111772:	81a3      	strheq	r3, [r4, #12]
  111774:	bf18      	it	ne
  111776:	81a3      	strhne	r3, [r4, #12]
  111778:	bd10      	pop	{r4, pc}

0011177a <__sclose>:
  11177a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  11177e:	f001 b8bf 	b.w	112900 <_close_r>

00111782 <strcmp>:
  111782:	f810 2b01 	ldrb.w	r2, [r0], #1
  111786:	f811 3b01 	ldrb.w	r3, [r1], #1
  11178a:	2a01      	cmp	r2, #1
  11178c:	bf28      	it	cs
  11178e:	429a      	cmpcs	r2, r3
  111790:	d0f7      	beq.n	111782 <strcmp>
  111792:	1ad0      	subs	r0, r2, r3
  111794:	4770      	bx	lr

00111796 <strcpy>:
  111796:	4603      	mov	r3, r0
  111798:	f811 2b01 	ldrb.w	r2, [r1], #1
  11179c:	f803 2b01 	strb.w	r2, [r3], #1
  1117a0:	2a00      	cmp	r2, #0
  1117a2:	d1f9      	bne.n	111798 <strcpy+0x2>
  1117a4:	4770      	bx	lr

001117a6 <strlen>:
  1117a6:	4603      	mov	r3, r0
  1117a8:	f813 2b01 	ldrb.w	r2, [r3], #1
  1117ac:	2a00      	cmp	r2, #0
  1117ae:	d1fb      	bne.n	1117a8 <strlen+0x2>
  1117b0:	1a18      	subs	r0, r3, r0
  1117b2:	3801      	subs	r0, #1
  1117b4:	4770      	bx	lr

001117b6 <strncmp>:
  1117b6:	b530      	push	{r4, r5, lr}
  1117b8:	b182      	cbz	r2, 1117dc <strncmp+0x26>
  1117ba:	1e45      	subs	r5, r0, #1
  1117bc:	3901      	subs	r1, #1
  1117be:	f815 3f01 	ldrb.w	r3, [r5, #1]!
  1117c2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
  1117c6:	42a3      	cmp	r3, r4
  1117c8:	d106      	bne.n	1117d8 <strncmp+0x22>
  1117ca:	43ec      	mvns	r4, r5
  1117cc:	4414      	add	r4, r2
  1117ce:	42e0      	cmn	r0, r4
  1117d0:	d001      	beq.n	1117d6 <strncmp+0x20>
  1117d2:	2b00      	cmp	r3, #0
  1117d4:	d1f3      	bne.n	1117be <strncmp+0x8>
  1117d6:	461c      	mov	r4, r3
  1117d8:	1b18      	subs	r0, r3, r4
  1117da:	bd30      	pop	{r4, r5, pc}
  1117dc:	4610      	mov	r0, r2
  1117de:	bd30      	pop	{r4, r5, pc}

001117e0 <strncpy>:
  1117e0:	4603      	mov	r3, r0
  1117e2:	b510      	push	{r4, lr}
  1117e4:	b142      	cbz	r2, 1117f8 <strncpy+0x18>
  1117e6:	f811 4b01 	ldrb.w	r4, [r1], #1
  1117ea:	3a01      	subs	r2, #1
  1117ec:	f803 4b01 	strb.w	r4, [r3], #1
  1117f0:	2c00      	cmp	r4, #0
  1117f2:	d1f7      	bne.n	1117e4 <strncpy+0x4>
  1117f4:	441a      	add	r2, r3
  1117f6:	e000      	b.n	1117fa <strncpy+0x1a>
  1117f8:	bd10      	pop	{r4, pc}
  1117fa:	4293      	cmp	r3, r2
  1117fc:	d002      	beq.n	111804 <strncpy+0x24>
  1117fe:	f803 4b01 	strb.w	r4, [r3], #1
  111802:	e7fa      	b.n	1117fa <strncpy+0x1a>
  111804:	bd10      	pop	{r4, pc}

00111806 <sulp>:
  111806:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  11180a:	460f      	mov	r7, r1
  11180c:	4690      	mov	r8, r2
  11180e:	f002 fcfb 	bl	114208 <__ulp>
  111812:	4604      	mov	r4, r0
  111814:	460d      	mov	r5, r1
  111816:	f1b8 0f00 	cmp.w	r8, #0
  11181a:	d011      	beq.n	111840 <sulp+0x3a>
  11181c:	f3c7 530a 	ubfx	r3, r7, #20, #11
  111820:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
  111824:	2b00      	cmp	r3, #0
  111826:	dd0b      	ble.n	111840 <sulp+0x3a>
  111828:	051b      	lsls	r3, r3, #20
  11182a:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
  11182e:	2400      	movs	r4, #0
  111830:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
  111834:	4622      	mov	r2, r4
  111836:	462b      	mov	r3, r5
  111838:	f7fd f8ae 	bl	10e998 <__aeabi_dmul>
  11183c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  111840:	4620      	mov	r0, r4
  111842:	4629      	mov	r1, r5
  111844:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00111848 <_strtod_r>:
  111848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  11184c:	4682      	mov	r10, r0
  11184e:	460c      	mov	r4, r1
  111850:	b09d      	sub	sp, #116	; 0x74
  111852:	2300      	movs	r3, #0
  111854:	9213      	str	r2, [sp, #76]	; 0x4c
  111856:	9318      	str	r3, [sp, #96]	; 0x60
  111858:	f04f 0800 	mov.w	r8, #0
  11185c:	f04f 0900 	mov.w	r9, #0
  111860:	9117      	str	r1, [sp, #92]	; 0x5c
  111862:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111864:	781a      	ldrb	r2, [r3, #0]
  111866:	2a0d      	cmp	r2, #13
  111868:	d805      	bhi.n	111876 <_strtod_r+0x2e>
  11186a:	2a09      	cmp	r2, #9
  11186c:	d213      	bcs.n	111896 <_strtod_r+0x4e>
  11186e:	2a00      	cmp	r2, #0
  111870:	f000 81ad 	beq.w	111bce <_strtod_r+0x386>
  111874:	e012      	b.n	11189c <_strtod_r+0x54>
  111876:	2a2b      	cmp	r2, #43	; 0x2b
  111878:	d004      	beq.n	111884 <_strtod_r+0x3c>
  11187a:	2a2d      	cmp	r2, #45	; 0x2d
  11187c:	d004      	beq.n	111888 <_strtod_r+0x40>
  11187e:	2a20      	cmp	r2, #32
  111880:	d10c      	bne.n	11189c <_strtod_r+0x54>
  111882:	e008      	b.n	111896 <_strtod_r+0x4e>
  111884:	2200      	movs	r2, #0
  111886:	e000      	b.n	11188a <_strtod_r+0x42>
  111888:	2201      	movs	r2, #1
  11188a:	920c      	str	r2, [sp, #48]	; 0x30
  11188c:	1c5a      	adds	r2, r3, #1
  11188e:	9217      	str	r2, [sp, #92]	; 0x5c
  111890:	785b      	ldrb	r3, [r3, #1]
  111892:	b92b      	cbnz	r3, 1118a0 <_strtod_r+0x58>
  111894:	e19b      	b.n	111bce <_strtod_r+0x386>
  111896:	3301      	adds	r3, #1
  111898:	9317      	str	r3, [sp, #92]	; 0x5c
  11189a:	e7e2      	b.n	111862 <_strtod_r+0x1a>
  11189c:	2300      	movs	r3, #0
  11189e:	930c      	str	r3, [sp, #48]	; 0x30
  1118a0:	9d17      	ldr	r5, [sp, #92]	; 0x5c
  1118a2:	782b      	ldrb	r3, [r5, #0]
  1118a4:	2b30      	cmp	r3, #48	; 0x30
  1118a6:	d15c      	bne.n	111962 <_strtod_r+0x11a>
  1118a8:	786b      	ldrb	r3, [r5, #1]
  1118aa:	2b58      	cmp	r3, #88	; 0x58
  1118ac:	d001      	beq.n	1118b2 <_strtod_r+0x6a>
  1118ae:	2b78      	cmp	r3, #120	; 0x78
  1118b0:	d14c      	bne.n	11194c <_strtod_r+0x104>
  1118b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  1118b4:	4aa8      	ldr	r2, [pc, #672]	; (111b58 <_strtod_r+0x310>)
  1118b6:	9301      	str	r3, [sp, #4]
  1118b8:	ab18      	add	r3, sp, #96	; 0x60
  1118ba:	9300      	str	r3, [sp, #0]
  1118bc:	a917      	add	r1, sp, #92	; 0x5c
  1118be:	ab19      	add	r3, sp, #100	; 0x64
  1118c0:	4650      	mov	r0, r10
  1118c2:	f001 fee6 	bl	113692 <__gethex>
  1118c6:	f010 0607 	ands.w	r6, r0, #7
  1118ca:	4604      	mov	r4, r0
  1118cc:	f000 8585 	beq.w	1123da <_strtod_r+0xb92>
  1118d0:	2e06      	cmp	r6, #6
  1118d2:	d105      	bne.n	1118e0 <_strtod_r+0x98>
  1118d4:	3501      	adds	r5, #1
  1118d6:	2300      	movs	r3, #0
  1118d8:	9517      	str	r5, [sp, #92]	; 0x5c
  1118da:	930c      	str	r3, [sp, #48]	; 0x30
  1118dc:	f000 bd7d 	b.w	1123da <_strtod_r+0xb92>
  1118e0:	9a18      	ldr	r2, [sp, #96]	; 0x60
  1118e2:	b13a      	cbz	r2, 1118f4 <_strtod_r+0xac>
  1118e4:	2135      	movs	r1, #53	; 0x35
  1118e6:	a81a      	add	r0, sp, #104	; 0x68
  1118e8:	f002 fd75 	bl	1143d6 <__copybits>
  1118ec:	9918      	ldr	r1, [sp, #96]	; 0x60
  1118ee:	4650      	mov	r0, r10
  1118f0:	f002 f9f9 	bl	113ce6 <_Bfree>
  1118f4:	2e06      	cmp	r6, #6
  1118f6:	d822      	bhi.n	11193e <_strtod_r+0xf6>
  1118f8:	e8df f006 	tbb	[pc, r6]
  1118fc:	18080d04 	.word	0x18080d04
  111900:	0d1d      	.short	0x0d1d
  111902:	04          	.byte	0x04
  111903:	00          	.byte	0x00
  111904:	f04f 0900 	mov.w	r9, #0
  111908:	46c8      	mov	r8, r9
  11190a:	e018      	b.n	11193e <_strtod_r+0xf6>
  11190c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
  111910:	f8dd 906c 	ldr.w	r9, [sp, #108]	; 0x6c
  111914:	e013      	b.n	11193e <_strtod_r+0xf6>
  111916:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  111918:	9a19      	ldr	r2, [sp, #100]	; 0x64
  11191a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
  11191e:	f202 4233 	addw	r2, r2, #1075	; 0x433
  111922:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
  111926:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
  11192a:	e008      	b.n	11193e <_strtod_r+0xf6>
  11192c:	f8df 922c 	ldr.w	r9, [pc, #556]	; 111b5c <_strtod_r+0x314>
  111930:	f04f 0800 	mov.w	r8, #0
  111934:	e003      	b.n	11193e <_strtod_r+0xf6>
  111936:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
  11193a:	f04f 38ff 	mov.w	r8, #4294967295
  11193e:	0721      	lsls	r1, r4, #28
  111940:	f140 854b 	bpl.w	1123da <_strtod_r+0xb92>
  111944:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
  111948:	f000 bd47 	b.w	1123da <_strtod_r+0xb92>
  11194c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  11194e:	1c5a      	adds	r2, r3, #1
  111950:	9217      	str	r2, [sp, #92]	; 0x5c
  111952:	785b      	ldrb	r3, [r3, #1]
  111954:	2b30      	cmp	r3, #48	; 0x30
  111956:	d0f9      	beq.n	11194c <_strtod_r+0x104>
  111958:	2b00      	cmp	r3, #0
  11195a:	f000 853e 	beq.w	1123da <_strtod_r+0xb92>
  11195e:	2301      	movs	r3, #1
  111960:	e000      	b.n	111964 <_strtod_r+0x11c>
  111962:	2300      	movs	r3, #0
  111964:	9305      	str	r3, [sp, #20]
  111966:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111968:	220a      	movs	r2, #10
  11196a:	9306      	str	r3, [sp, #24]
  11196c:	2300      	movs	r3, #0
  11196e:	469b      	mov	r11, r3
  111970:	9302      	str	r3, [sp, #8]
  111972:	9304      	str	r3, [sp, #16]
  111974:	9d17      	ldr	r5, [sp, #92]	; 0x5c
  111976:	782e      	ldrb	r6, [r5, #0]
  111978:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  11197c:	b2d9      	uxtb	r1, r3
  11197e:	2909      	cmp	r1, #9
  111980:	d811      	bhi.n	1119a6 <_strtod_r+0x15e>
  111982:	f1bb 0f08 	cmp.w	r11, #8
  111986:	bfd5      	itete	le
  111988:	9904      	ldrle	r1, [sp, #16]
  11198a:	9902      	ldrgt	r1, [sp, #8]
  11198c:	fb02 3301 	mlale	r3, r2, r1, r3
  111990:	fb02 3301 	mlagt	r3, r2, r1, r3
  111994:	f105 0501 	add.w	r5, r5, #1
  111998:	bfd4      	ite	le
  11199a:	9304      	strle	r3, [sp, #16]
  11199c:	9302      	strgt	r3, [sp, #8]
  11199e:	f10b 0b01 	add.w	r11, r11, #1
  1119a2:	9517      	str	r5, [sp, #92]	; 0x5c
  1119a4:	e7e6      	b.n	111974 <_strtod_r+0x12c>
  1119a6:	4650      	mov	r0, r10
  1119a8:	f7fe fa1a 	bl	10fde0 <_localeconv_r>
  1119ac:	6807      	ldr	r7, [r0, #0]
  1119ae:	4650      	mov	r0, r10
  1119b0:	f7fe fa16 	bl	10fde0 <_localeconv_r>
  1119b4:	6800      	ldr	r0, [r0, #0]
  1119b6:	f7ff fef6 	bl	1117a6 <strlen>
  1119ba:	4639      	mov	r1, r7
  1119bc:	4602      	mov	r2, r0
  1119be:	4628      	mov	r0, r5
  1119c0:	f7ff fef9 	bl	1117b6 <strncmp>
  1119c4:	4607      	mov	r7, r0
  1119c6:	b128      	cbz	r0, 1119d4 <_strtod_r+0x18c>
  1119c8:	2000      	movs	r0, #0
  1119ca:	4633      	mov	r3, r6
  1119cc:	465d      	mov	r5, r11
  1119ce:	4602      	mov	r2, r0
  1119d0:	4601      	mov	r1, r0
  1119d2:	e05a      	b.n	111a8a <_strtod_r+0x242>
  1119d4:	4650      	mov	r0, r10
  1119d6:	f7fe fa03 	bl	10fde0 <_localeconv_r>
  1119da:	6800      	ldr	r0, [r0, #0]
  1119dc:	f7ff fee3 	bl	1117a6 <strlen>
  1119e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  1119e2:	181a      	adds	r2, r3, r0
  1119e4:	9217      	str	r2, [sp, #92]	; 0x5c
  1119e6:	5c1b      	ldrb	r3, [r3, r0]
  1119e8:	f1bb 0f00 	cmp.w	r11, #0
  1119ec:	d145      	bne.n	111a7a <_strtod_r+0x232>
  1119ee:	4658      	mov	r0, r11
  1119f0:	2b30      	cmp	r3, #48	; 0x30
  1119f2:	d105      	bne.n	111a00 <_strtod_r+0x1b8>
  1119f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  1119f6:	3001      	adds	r0, #1
  1119f8:	1c5a      	adds	r2, r3, #1
  1119fa:	9217      	str	r2, [sp, #92]	; 0x5c
  1119fc:	785b      	ldrb	r3, [r3, #1]
  1119fe:	e7f7      	b.n	1119f0 <_strtod_r+0x1a8>
  111a00:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
  111a04:	2a08      	cmp	r2, #8
  111a06:	d846      	bhi.n	111a96 <_strtod_r+0x24e>
  111a08:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  111a0a:	9206      	str	r2, [sp, #24]
  111a0c:	4602      	mov	r2, r0
  111a0e:	2000      	movs	r0, #0
  111a10:	4605      	mov	r5, r0
  111a12:	3b30      	subs	r3, #48	; 0x30
  111a14:	f100 0101 	add.w	r1, r0, #1
  111a18:	d029      	beq.n	111a6e <_strtod_r+0x226>
  111a1a:	440a      	add	r2, r1
  111a1c:	4629      	mov	r1, r5
  111a1e:	eb05 0c00 	add.w	r12, r5, r0
  111a22:	260a      	movs	r6, #10
  111a24:	4561      	cmp	r1, r12
  111a26:	d00f      	beq.n	111a48 <_strtod_r+0x200>
  111a28:	3101      	adds	r1, #1
  111a2a:	f101 3eff 	add.w	lr, r1, #4294967295
  111a2e:	f1be 0f08 	cmp.w	lr, #8
  111a32:	dc03      	bgt.n	111a3c <_strtod_r+0x1f4>
  111a34:	9f04      	ldr	r7, [sp, #16]
  111a36:	4377      	muls	r7, r6
  111a38:	9704      	str	r7, [sp, #16]
  111a3a:	e7f3      	b.n	111a24 <_strtod_r+0x1dc>
  111a3c:	2910      	cmp	r1, #16
  111a3e:	bfde      	ittt	le
  111a40:	9f02      	ldrle	r7, [sp, #8]
  111a42:	4377      	mulle	r7, r6
  111a44:	9702      	strle	r7, [sp, #8]
  111a46:	e7ed      	b.n	111a24 <_strtod_r+0x1dc>
  111a48:	4428      	add	r0, r5
  111a4a:	2808      	cmp	r0, #8
  111a4c:	f100 0501 	add.w	r5, r0, #1
  111a50:	dc05      	bgt.n	111a5e <_strtod_r+0x216>
  111a52:	9804      	ldr	r0, [sp, #16]
  111a54:	210a      	movs	r1, #10
  111a56:	fb01 3300 	mla	r3, r1, r0, r3
  111a5a:	9304      	str	r3, [sp, #16]
  111a5c:	e006      	b.n	111a6c <_strtod_r+0x224>
  111a5e:	2d10      	cmp	r5, #16
  111a60:	bfdf      	itttt	le
  111a62:	9802      	ldrle	r0, [sp, #8]
  111a64:	210a      	movle	r1, #10
  111a66:	fb01 3300 	mlale	r3, r1, r0, r3
  111a6a:	9302      	strle	r3, [sp, #8]
  111a6c:	2100      	movs	r1, #0
  111a6e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111a70:	1c58      	adds	r0, r3, #1
  111a72:	9017      	str	r0, [sp, #92]	; 0x5c
  111a74:	785b      	ldrb	r3, [r3, #1]
  111a76:	4608      	mov	r0, r1
  111a78:	e002      	b.n	111a80 <_strtod_r+0x238>
  111a7a:	465d      	mov	r5, r11
  111a7c:	4638      	mov	r0, r7
  111a7e:	463a      	mov	r2, r7
  111a80:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
  111a84:	2909      	cmp	r1, #9
  111a86:	d9c4      	bls.n	111a12 <_strtod_r+0x1ca>
  111a88:	2101      	movs	r1, #1
  111a8a:	2b65      	cmp	r3, #101	; 0x65
  111a8c:	d001      	beq.n	111a92 <_strtod_r+0x24a>
  111a8e:	2b45      	cmp	r3, #69	; 0x45
  111a90:	d14f      	bne.n	111b32 <_strtod_r+0x2ea>
  111a92:	b96d      	cbnz	r5, 111ab0 <_strtod_r+0x268>
  111a94:	e004      	b.n	111aa0 <_strtod_r+0x258>
  111a96:	2b65      	cmp	r3, #101	; 0x65
  111a98:	f040 84ad 	bne.w	1123f6 <_strtod_r+0xbae>
  111a9c:	2200      	movs	r2, #0
  111a9e:	2101      	movs	r1, #1
  111aa0:	b928      	cbnz	r0, 111aae <_strtod_r+0x266>
  111aa2:	9b05      	ldr	r3, [sp, #20]
  111aa4:	2b00      	cmp	r3, #0
  111aa6:	f000 8092 	beq.w	111bce <_strtod_r+0x386>
  111aaa:	4605      	mov	r5, r0
  111aac:	e000      	b.n	111ab0 <_strtod_r+0x268>
  111aae:	2500      	movs	r5, #0
  111ab0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
  111ab2:	1c63      	adds	r3, r4, #1
  111ab4:	9317      	str	r3, [sp, #92]	; 0x5c
  111ab6:	7863      	ldrb	r3, [r4, #1]
  111ab8:	2b2b      	cmp	r3, #43	; 0x2b
  111aba:	d006      	beq.n	111aca <_strtod_r+0x282>
  111abc:	2b2d      	cmp	r3, #45	; 0x2d
  111abe:	d002      	beq.n	111ac6 <_strtod_r+0x27e>
  111ac0:	2600      	movs	r6, #0
  111ac2:	9603      	str	r6, [sp, #12]
  111ac4:	e006      	b.n	111ad4 <_strtod_r+0x28c>
  111ac6:	2301      	movs	r3, #1
  111ac8:	e000      	b.n	111acc <_strtod_r+0x284>
  111aca:	2300      	movs	r3, #0
  111acc:	9303      	str	r3, [sp, #12]
  111ace:	1ca3      	adds	r3, r4, #2
  111ad0:	9317      	str	r3, [sp, #92]	; 0x5c
  111ad2:	78a3      	ldrb	r3, [r4, #2]
  111ad4:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
  111ad8:	2e09      	cmp	r6, #9
  111ada:	d829      	bhi.n	111b30 <_strtod_r+0x2e8>
  111adc:	2b30      	cmp	r3, #48	; 0x30
  111ade:	d104      	bne.n	111aea <_strtod_r+0x2a2>
  111ae0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111ae2:	1c5e      	adds	r6, r3, #1
  111ae4:	9617      	str	r6, [sp, #92]	; 0x5c
  111ae6:	785b      	ldrb	r3, [r3, #1]
  111ae8:	e7f8      	b.n	111adc <_strtod_r+0x294>
  111aea:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
  111aee:	2e08      	cmp	r6, #8
  111af0:	d81f      	bhi.n	111b32 <_strtod_r+0x2ea>
  111af2:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
  111af6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111af8:	461f      	mov	r7, r3
  111afa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111afc:	1c5e      	adds	r6, r3, #1
  111afe:	9617      	str	r6, [sp, #92]	; 0x5c
  111b00:	785b      	ldrb	r3, [r3, #1]
  111b02:	f1a3 0c30 	sub.w	r12, r3, #48	; 0x30
  111b06:	f1bc 0f09 	cmp.w	r12, #9
  111b0a:	d805      	bhi.n	111b18 <_strtod_r+0x2d0>
  111b0c:	260a      	movs	r6, #10
  111b0e:	fb06 3e0e 	mla	lr, r6, lr, r3
  111b12:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
  111b16:	e7f0      	b.n	111afa <_strtod_r+0x2b2>
  111b18:	1bf6      	subs	r6, r6, r7
  111b1a:	2e08      	cmp	r6, #8
  111b1c:	f644 661f 	movw	r6, #19999	; 0x4e1f
  111b20:	dc02      	bgt.n	111b28 <_strtod_r+0x2e0>
  111b22:	4576      	cmp	r6, lr
  111b24:	bfa8      	it	ge
  111b26:	4676      	movge	r6, lr
  111b28:	9f03      	ldr	r7, [sp, #12]
  111b2a:	b11f      	cbz	r7, 111b34 <_strtod_r+0x2ec>
  111b2c:	4276      	negs	r6, r6
  111b2e:	e001      	b.n	111b34 <_strtod_r+0x2ec>
  111b30:	9417      	str	r4, [sp, #92]	; 0x5c
  111b32:	2600      	movs	r6, #0
  111b34:	2d00      	cmp	r5, #0
  111b36:	d152      	bne.n	111bde <_strtod_r+0x396>
  111b38:	2800      	cmp	r0, #0
  111b3a:	f040 844e 	bne.w	1123da <_strtod_r+0xb92>
  111b3e:	9a05      	ldr	r2, [sp, #20]
  111b40:	2a00      	cmp	r2, #0
  111b42:	f040 844a 	bne.w	1123da <_strtod_r+0xb92>
  111b46:	2900      	cmp	r1, #0
  111b48:	d141      	bne.n	111bce <_strtod_r+0x386>
  111b4a:	2b4e      	cmp	r3, #78	; 0x4e
  111b4c:	d020      	beq.n	111b90 <_strtod_r+0x348>
  111b4e:	dc07      	bgt.n	111b60 <_strtod_r+0x318>
  111b50:	2b49      	cmp	r3, #73	; 0x49
  111b52:	d00a      	beq.n	111b6a <_strtod_r+0x322>
  111b54:	e03b      	b.n	111bce <_strtod_r+0x386>
  111b56:	bf00      	nop
  111b58:	00119ffc 	.word	0x00119ffc
  111b5c:	7ff00000 	.word	0x7ff00000
  111b60:	2b69      	cmp	r3, #105	; 0x69
  111b62:	d002      	beq.n	111b6a <_strtod_r+0x322>
  111b64:	2b6e      	cmp	r3, #110	; 0x6e
  111b66:	d013      	beq.n	111b90 <_strtod_r+0x348>
  111b68:	e031      	b.n	111bce <_strtod_r+0x386>
  111b6a:	49aa      	ldr	r1, [pc, #680]	; (111e14 <_strtod_r+0x5cc>)
  111b6c:	a817      	add	r0, sp, #92	; 0x5c
  111b6e:	f001 ffc1 	bl	113af4 <__match>
  111b72:	b360      	cbz	r0, 111bce <_strtod_r+0x386>
  111b74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111b76:	49a8      	ldr	r1, [pc, #672]	; (111e18 <_strtod_r+0x5d0>)
  111b78:	3b01      	subs	r3, #1
  111b7a:	a817      	add	r0, sp, #92	; 0x5c
  111b7c:	9317      	str	r3, [sp, #92]	; 0x5c
  111b7e:	f001 ffb9 	bl	113af4 <__match>
  111b82:	b910      	cbnz	r0, 111b8a <_strtod_r+0x342>
  111b84:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111b86:	3301      	adds	r3, #1
  111b88:	9317      	str	r3, [sp, #92]	; 0x5c
  111b8a:	f8df 92a8 	ldr.w	r9, [pc, #680]	; 111e34 <_strtod_r+0x5ec>
  111b8e:	e01a      	b.n	111bc6 <_strtod_r+0x37e>
  111b90:	49a2      	ldr	r1, [pc, #648]	; (111e1c <_strtod_r+0x5d4>)
  111b92:	a817      	add	r0, sp, #92	; 0x5c
  111b94:	f001 ffae 	bl	113af4 <__match>
  111b98:	b1c8      	cbz	r0, 111bce <_strtod_r+0x386>
  111b9a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  111b9c:	781b      	ldrb	r3, [r3, #0]
  111b9e:	2b28      	cmp	r3, #40	; 0x28
  111ba0:	d10f      	bne.n	111bc2 <_strtod_r+0x37a>
  111ba2:	aa1a      	add	r2, sp, #104	; 0x68
  111ba4:	499e      	ldr	r1, [pc, #632]	; (111e20 <_strtod_r+0x5d8>)
  111ba6:	a817      	add	r0, sp, #92	; 0x5c
  111ba8:	f001 ffb7 	bl	113b1a <__hexnan>
  111bac:	2805      	cmp	r0, #5
  111bae:	d108      	bne.n	111bc2 <_strtod_r+0x37a>
  111bb0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  111bb2:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
  111bb6:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
  111bba:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
  111bbe:	f000 bc0c 	b.w	1123da <_strtod_r+0xb92>
  111bc2:	f8df 9274 	ldr.w	r9, [pc, #628]	; 111e38 <_strtod_r+0x5f0>
  111bc6:	f04f 0800 	mov.w	r8, #0
  111bca:	f000 bc06 	b.w	1123da <_strtod_r+0xb92>
  111bce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  111bd0:	9417      	str	r4, [sp, #92]	; 0x5c
  111bd2:	2b00      	cmp	r3, #0
  111bd4:	f000 840c 	beq.w	1123f0 <_strtod_r+0xba8>
  111bd8:	2300      	movs	r3, #0
  111bda:	930c      	str	r3, [sp, #48]	; 0x30
  111bdc:	e3ff      	b.n	1123de <_strtod_r+0xb96>
  111bde:	462c      	mov	r4, r5
  111be0:	f1bb 0f00 	cmp.w	r11, #0
  111be4:	bf08      	it	eq
  111be6:	46ab      	moveq	r11, r5
  111be8:	9804      	ldr	r0, [sp, #16]
  111bea:	2d10      	cmp	r5, #16
  111bec:	bfa8      	it	ge
  111bee:	2410      	movge	r4, #16
  111bf0:	1ab7      	subs	r7, r6, r2
  111bf2:	f7fc fe5b 	bl	10e8ac <__aeabi_ui2d>
  111bf6:	2c09      	cmp	r4, #9
  111bf8:	4680      	mov	r8, r0
  111bfa:	4689      	mov	r9, r1
  111bfc:	dd13      	ble.n	111c26 <_strtod_r+0x3de>
  111bfe:	4b89      	ldr	r3, [pc, #548]	; (111e24 <_strtod_r+0x5dc>)
  111c00:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
  111c04:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
  111c08:	f7fc fec6 	bl	10e998 <__aeabi_dmul>
  111c0c:	4680      	mov	r8, r0
  111c0e:	9802      	ldr	r0, [sp, #8]
  111c10:	4689      	mov	r9, r1
  111c12:	f7fc fe4b 	bl	10e8ac <__aeabi_ui2d>
  111c16:	4602      	mov	r2, r0
  111c18:	460b      	mov	r3, r1
  111c1a:	4640      	mov	r0, r8
  111c1c:	4649      	mov	r1, r9
  111c1e:	f7fc fd09 	bl	10e634 <__adddf3>
  111c22:	4680      	mov	r8, r0
  111c24:	4689      	mov	r9, r1
  111c26:	2d0f      	cmp	r5, #15
  111c28:	dc33      	bgt.n	111c92 <_strtod_r+0x44a>
  111c2a:	2f00      	cmp	r7, #0
  111c2c:	f000 83d5 	beq.w	1123da <_strtod_r+0xb92>
  111c30:	dd22      	ble.n	111c78 <_strtod_r+0x430>
  111c32:	2f16      	cmp	r7, #22
  111c34:	dc07      	bgt.n	111c46 <_strtod_r+0x3fe>
  111c36:	4d7b      	ldr	r5, [pc, #492]	; (111e24 <_strtod_r+0x5dc>)
  111c38:	4642      	mov	r2, r8
  111c3a:	eb05 01c7 	add.w	r1, r5, r7, lsl #3
  111c3e:	464b      	mov	r3, r9
  111c40:	e9d1 0100 	ldrd	r0, r1, [r1]
  111c44:	e013      	b.n	111c6e <_strtod_r+0x426>
  111c46:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
  111c4a:	429f      	cmp	r7, r3
  111c4c:	dc21      	bgt.n	111c92 <_strtod_r+0x44a>
  111c4e:	4c75      	ldr	r4, [pc, #468]	; (111e24 <_strtod_r+0x5dc>)
  111c50:	f1c5 050f 	rsb	r5, r5, #15
  111c54:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
  111c58:	1b7d      	subs	r5, r7, r5
  111c5a:	4642      	mov	r2, r8
  111c5c:	e9d1 0100 	ldrd	r0, r1, [r1]
  111c60:	464b      	mov	r3, r9
  111c62:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
  111c66:	f7fc fe97 	bl	10e998 <__aeabi_dmul>
  111c6a:	e9d4 2300 	ldrd	r2, r3, [r4]
  111c6e:	f7fc fe93 	bl	10e998 <__aeabi_dmul>
  111c72:	4680      	mov	r8, r0
  111c74:	4689      	mov	r9, r1
  111c76:	e3b0      	b.n	1123da <_strtod_r+0xb92>
  111c78:	f117 0f16 	cmn.w	r7, #22
  111c7c:	db09      	blt.n	111c92 <_strtod_r+0x44a>
  111c7e:	4d69      	ldr	r5, [pc, #420]	; (111e24 <_strtod_r+0x5dc>)
  111c80:	4640      	mov	r0, r8
  111c82:	eba5 03c7 	sub.w	r3, r5, r7, lsl #3
  111c86:	e9d3 2300 	ldrd	r2, r3, [r3]
  111c8a:	4649      	mov	r1, r9
  111c8c:	f7fc ffae 	bl	10ebec <__aeabi_ddiv>
  111c90:	e7ef      	b.n	111c72 <_strtod_r+0x42a>
  111c92:	1b2c      	subs	r4, r5, r4
  111c94:	443c      	add	r4, r7
  111c96:	2c00      	cmp	r4, #0
  111c98:	dd5d      	ble.n	111d56 <_strtod_r+0x50e>
  111c9a:	f014 010f 	ands.w	r1, r4, #15
  111c9e:	d00a      	beq.n	111cb6 <_strtod_r+0x46e>
  111ca0:	4b60      	ldr	r3, [pc, #384]	; (111e24 <_strtod_r+0x5dc>)
  111ca2:	4642      	mov	r2, r8
  111ca4:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
  111ca8:	e9d1 0100 	ldrd	r0, r1, [r1]
  111cac:	464b      	mov	r3, r9
  111cae:	f7fc fe73 	bl	10e998 <__aeabi_dmul>
  111cb2:	4680      	mov	r8, r0
  111cb4:	4689      	mov	r9, r1
  111cb6:	f034 040f 	bics.w	r4, r4, #15
  111cba:	f000 80c1 	beq.w	111e40 <_strtod_r+0x5f8>
  111cbe:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
  111cc2:	dd0f      	ble.n	111ce4 <_strtod_r+0x49c>
  111cc4:	f04f 0b00 	mov.w	r11, #0
  111cc8:	f8cd b008 	str.w	r11, [sp, #8]
  111ccc:	f8cd b014 	str.w	r11, [sp, #20]
  111cd0:	f8cd b010 	str.w	r11, [sp, #16]
  111cd4:	2322      	movs	r3, #34	; 0x22
  111cd6:	f8ca 3000 	str.w	r3, [r10]
  111cda:	f8df 9158 	ldr.w	r9, [pc, #344]	; 111e34 <_strtod_r+0x5ec>
  111cde:	f04f 0800 	mov.w	r8, #0
  111ce2:	e189      	b.n	111ff8 <_strtod_r+0x7b0>
  111ce4:	4640      	mov	r0, r8
  111ce6:	4649      	mov	r1, r9
  111ce8:	2300      	movs	r3, #0
  111cea:	4e4f      	ldr	r6, [pc, #316]	; (111e28 <_strtod_r+0x5e0>)
  111cec:	1124      	asrs	r4, r4, #4
  111cee:	9302      	str	r3, [sp, #8]
  111cf0:	2c01      	cmp	r4, #1
  111cf2:	dd0c      	ble.n	111d0e <_strtod_r+0x4c6>
  111cf4:	07e2      	lsls	r2, r4, #31
  111cf6:	d504      	bpl.n	111d02 <_strtod_r+0x4ba>
  111cf8:	e9d6 2300 	ldrd	r2, r3, [r6]
  111cfc:	f7fc fe4c 	bl	10e998 <__aeabi_dmul>
  111d00:	2301      	movs	r3, #1
  111d02:	9a02      	ldr	r2, [sp, #8]
  111d04:	1064      	asrs	r4, r4, #1
  111d06:	3201      	adds	r2, #1
  111d08:	9202      	str	r2, [sp, #8]
  111d0a:	3608      	adds	r6, #8
  111d0c:	e7f0      	b.n	111cf0 <_strtod_r+0x4a8>
  111d0e:	b10b      	cbz	r3, 111d14 <_strtod_r+0x4cc>
  111d10:	4680      	mov	r8, r0
  111d12:	4689      	mov	r9, r1
  111d14:	4b44      	ldr	r3, [pc, #272]	; (111e28 <_strtod_r+0x5e0>)
  111d16:	9a02      	ldr	r2, [sp, #8]
  111d18:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
  111d1c:	eb03 01c2 	add.w	r1, r3, r2, lsl #3
  111d20:	e9d1 0100 	ldrd	r0, r1, [r1]
  111d24:	4642      	mov	r2, r8
  111d26:	464b      	mov	r3, r9
  111d28:	f7fc fe36 	bl	10e998 <__aeabi_dmul>
  111d2c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  111d30:	4689      	mov	r9, r1
  111d32:	460a      	mov	r2, r1
  111d34:	0d1b      	lsrs	r3, r3, #20
  111d36:	493d      	ldr	r1, [pc, #244]	; (111e2c <_strtod_r+0x5e4>)
  111d38:	051b      	lsls	r3, r3, #20
  111d3a:	428b      	cmp	r3, r1
  111d3c:	4680      	mov	r8, r0
  111d3e:	d8c1      	bhi.n	111cc4 <_strtod_r+0x47c>
  111d40:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
  111d44:	428b      	cmp	r3, r1
  111d46:	bf86      	itte	hi
  111d48:	f8df 90f0 	ldrhi.w	r9, [pc, #240]	; 111e3c <_strtod_r+0x5f4>
  111d4c:	f04f 38ff 	movhi.w	r8, #4294967295
  111d50:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
  111d54:	e074      	b.n	111e40 <_strtod_r+0x5f8>
  111d56:	d073      	beq.n	111e40 <_strtod_r+0x5f8>
  111d58:	4264      	negs	r4, r4
  111d5a:	f014 020f 	ands.w	r2, r4, #15
  111d5e:	d00a      	beq.n	111d76 <_strtod_r+0x52e>
  111d60:	4b30      	ldr	r3, [pc, #192]	; (111e24 <_strtod_r+0x5dc>)
  111d62:	4640      	mov	r0, r8
  111d64:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  111d68:	4649      	mov	r1, r9
  111d6a:	e9d3 2300 	ldrd	r2, r3, [r3]
  111d6e:	f7fc ff3d 	bl	10ebec <__aeabi_ddiv>
  111d72:	4680      	mov	r8, r0
  111d74:	4689      	mov	r9, r1
  111d76:	1124      	asrs	r4, r4, #4
  111d78:	d062      	beq.n	111e40 <_strtod_r+0x5f8>
  111d7a:	2c1f      	cmp	r4, #31
  111d7c:	dd08      	ble.n	111d90 <_strtod_r+0x548>
  111d7e:	f04f 0b00 	mov.w	r11, #0
  111d82:	f8cd b008 	str.w	r11, [sp, #8]
  111d86:	f8cd b014 	str.w	r11, [sp, #20]
  111d8a:	f8cd b010 	str.w	r11, [sp, #16]
  111d8e:	e12c      	b.n	111fea <_strtod_r+0x7a2>
  111d90:	4640      	mov	r0, r8
  111d92:	4649      	mov	r1, r9
  111d94:	f014 0f10 	tst.w	r4, #16
  111d98:	bf0c      	ite	eq
  111d9a:	2300      	moveq	r3, #0
  111d9c:	236a      	movne	r3, #106	; 0x6a
  111d9e:	4e24      	ldr	r6, [pc, #144]	; (111e30 <_strtod_r+0x5e8>)
  111da0:	9303      	str	r3, [sp, #12]
  111da2:	2300      	movs	r3, #0
  111da4:	2c00      	cmp	r4, #0
  111da6:	dd09      	ble.n	111dbc <_strtod_r+0x574>
  111da8:	07e2      	lsls	r2, r4, #31
  111daa:	d504      	bpl.n	111db6 <_strtod_r+0x56e>
  111dac:	e9d6 2300 	ldrd	r2, r3, [r6]
  111db0:	f7fc fdf2 	bl	10e998 <__aeabi_dmul>
  111db4:	2301      	movs	r3, #1
  111db6:	1064      	asrs	r4, r4, #1
  111db8:	3608      	adds	r6, #8
  111dba:	e7f3      	b.n	111da4 <_strtod_r+0x55c>
  111dbc:	b10b      	cbz	r3, 111dc2 <_strtod_r+0x57a>
  111dbe:	4680      	mov	r8, r0
  111dc0:	4689      	mov	r9, r1
  111dc2:	9b03      	ldr	r3, [sp, #12]
  111dc4:	b1eb      	cbz	r3, 111e02 <_strtod_r+0x5ba>
  111dc6:	f3c9 530a 	ubfx	r3, r9, #20, #11
  111dca:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
  111dce:	2b00      	cmp	r3, #0
  111dd0:	4649      	mov	r1, r9
  111dd2:	dd16      	ble.n	111e02 <_strtod_r+0x5ba>
  111dd4:	2b1f      	cmp	r3, #31
  111dd6:	dd0e      	ble.n	111df6 <_strtod_r+0x5ae>
  111dd8:	2b34      	cmp	r3, #52	; 0x34
  111dda:	bfde      	ittt	le
  111ddc:	3b20      	suble	r3, #32
  111dde:	f04f 32ff 	movle.w	r2, #4294967295
  111de2:	fa02 f303 	lslle.w	r3, r2, r3
  111de6:	f04f 0800 	mov.w	r8, #0
  111dea:	bfcc      	ite	gt
  111dec:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
  111df0:	ea03 0901 	andle.w	r9, r3, r1
  111df4:	e005      	b.n	111e02 <_strtod_r+0x5ba>
  111df6:	f04f 32ff 	mov.w	r2, #4294967295
  111dfa:	fa02 f303 	lsl.w	r3, r2, r3
  111dfe:	ea03 0808 	and.w	r8, r3, r8
  111e02:	2200      	movs	r2, #0
  111e04:	2300      	movs	r3, #0
  111e06:	4640      	mov	r0, r8
  111e08:	4649      	mov	r1, r9
  111e0a:	f7fd f82d 	bl	10ee68 <__aeabi_dcmpeq>
  111e0e:	2800      	cmp	r0, #0
  111e10:	d1b5      	bne.n	111d7e <_strtod_r+0x536>
  111e12:	e017      	b.n	111e44 <_strtod_r+0x5fc>
  111e14:	00119f92 	.word	0x00119f92
  111e18:	0011a03b 	.word	0x0011a03b
  111e1c:	00119f9a 	.word	0x00119f9a
  111e20:	00119fe8 	.word	0x00119fe8
  111e24:	0011a048 	.word	0x0011a048
  111e28:	0011a120 	.word	0x0011a120
  111e2c:	7ca00000 	.word	0x7ca00000
  111e30:	0011a010 	.word	0x0011a010
  111e34:	7ff00000 	.word	0x7ff00000
  111e38:	fff80000 	.word	0xfff80000
  111e3c:	7fefffff 	.word	0x7fefffff
  111e40:	2300      	movs	r3, #0
  111e42:	9303      	str	r3, [sp, #12]
  111e44:	9b04      	ldr	r3, [sp, #16]
  111e46:	465a      	mov	r2, r11
  111e48:	9300      	str	r3, [sp, #0]
  111e4a:	9906      	ldr	r1, [sp, #24]
  111e4c:	462b      	mov	r3, r5
  111e4e:	4650      	mov	r0, r10
  111e50:	f001 ff9b 	bl	113d8a <__s2b>
  111e54:	9005      	str	r0, [sp, #20]
  111e56:	2800      	cmp	r0, #0
  111e58:	f43f af34 	beq.w	111cc4 <_strtod_r+0x47c>
  111e5c:	2f00      	cmp	r7, #0
  111e5e:	f1c7 0300 	rsb	r3, r7, #0
  111e62:	bfa8      	it	ge
  111e64:	2300      	movge	r3, #0
  111e66:	930d      	str	r3, [sp, #52]	; 0x34
  111e68:	f04f 0b00 	mov.w	r11, #0
  111e6c:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
  111e70:	9312      	str	r3, [sp, #72]	; 0x48
  111e72:	f8cd b008 	str.w	r11, [sp, #8]
  111e76:	9b05      	ldr	r3, [sp, #20]
  111e78:	4650      	mov	r0, r10
  111e7a:	6859      	ldr	r1, [r3, #4]
  111e7c:	f001 fefe 	bl	113c7c <_Balloc>
  111e80:	9004      	str	r0, [sp, #16]
  111e82:	2800      	cmp	r0, #0
  111e84:	f43f af26 	beq.w	111cd4 <_strtod_r+0x48c>
  111e88:	9b05      	ldr	r3, [sp, #20]
  111e8a:	300c      	adds	r0, #12
  111e8c:	691a      	ldr	r2, [r3, #16]
  111e8e:	f103 010c 	add.w	r1, r3, #12
  111e92:	3202      	adds	r2, #2
  111e94:	0092      	lsls	r2, r2, #2
  111e96:	f7fe f820 	bl	10feda <memcpy>
  111e9a:	ab1a      	add	r3, sp, #104	; 0x68
  111e9c:	9301      	str	r3, [sp, #4]
  111e9e:	ab19      	add	r3, sp, #100	; 0x64
  111ea0:	9300      	str	r3, [sp, #0]
  111ea2:	4642      	mov	r2, r8
  111ea4:	464b      	mov	r3, r9
  111ea6:	4650      	mov	r0, r10
  111ea8:	e9cd 8908 	strd	r8, r9, [sp, #32]
  111eac:	f002 fa1d 	bl	1142ea <__d2b>
  111eb0:	9018      	str	r0, [sp, #96]	; 0x60
  111eb2:	2800      	cmp	r0, #0
  111eb4:	f43f af0e 	beq.w	111cd4 <_strtod_r+0x48c>
  111eb8:	2101      	movs	r1, #1
  111eba:	4650      	mov	r0, r10
  111ebc:	f001 fff0 	bl	113ea0 <__i2b>
  111ec0:	9002      	str	r0, [sp, #8]
  111ec2:	2800      	cmp	r0, #0
  111ec4:	f43f af06 	beq.w	111cd4 <_strtod_r+0x48c>
  111ec8:	9b19      	ldr	r3, [sp, #100]	; 0x64
  111eca:	9903      	ldr	r1, [sp, #12]
  111ecc:	2b00      	cmp	r3, #0
  111ece:	bfac      	ite	ge
  111ed0:	9a0d      	ldrge	r2, [sp, #52]	; 0x34
  111ed2:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
  111ed4:	9c1a      	ldr	r4, [sp, #104]	; 0x68
  111ed6:	bfac      	ite	ge
  111ed8:	18d6      	addge	r6, r2, r3
  111eda:	1ad2      	sublt	r2, r2, r3
  111edc:	eba3 0301 	sub.w	r3, r3, r1
  111ee0:	4423      	add	r3, r4
  111ee2:	49b1      	ldr	r1, [pc, #708]	; (1121a8 <_strtod_r+0x960>)
  111ee4:	f103 33ff 	add.w	r3, r3, #4294967295
  111ee8:	bfac      	ite	ge
  111eea:	9a12      	ldrge	r2, [sp, #72]	; 0x48
  111eec:	9e0d      	ldrlt	r6, [sp, #52]	; 0x34
  111eee:	428b      	cmp	r3, r1
  111ef0:	f1c4 0436 	rsb	r4, r4, #54	; 0x36
  111ef4:	f280 8085 	bge.w	112002 <_strtod_r+0x7ba>
  111ef8:	1ac9      	subs	r1, r1, r3
  111efa:	291f      	cmp	r1, #31
  111efc:	bfc8      	it	gt
  111efe:	4dab      	ldrgt	r5, [pc, #684]	; (1121ac <_strtod_r+0x964>)
  111f00:	f04f 0701 	mov.w	r7, #1
  111f04:	bfd4      	ite	le
  111f06:	fa07 f301 	lslle.w	r3, r7, r1
  111f0a:	1aed      	subgt	r5, r5, r3
  111f0c:	eba4 0401 	sub.w	r4, r4, r1
  111f10:	bfd9      	ittee	le
  111f12:	9307      	strle	r3, [sp, #28]
  111f14:	2500      	movle	r5, #0
  111f16:	fa07 f505 	lslgt.w	r5, r7, r5
  111f1a:	9707      	strgt	r7, [sp, #28]
  111f1c:	1937      	adds	r7, r6, r4
  111f1e:	9b03      	ldr	r3, [sp, #12]
  111f20:	42be      	cmp	r6, r7
  111f22:	4414      	add	r4, r2
  111f24:	441c      	add	r4, r3
  111f26:	4633      	mov	r3, r6
  111f28:	bfa8      	it	ge
  111f2a:	463b      	movge	r3, r7
  111f2c:	42a3      	cmp	r3, r4
  111f2e:	bfa8      	it	ge
  111f30:	4623      	movge	r3, r4
  111f32:	2b00      	cmp	r3, #0
  111f34:	bfc2      	ittt	gt
  111f36:	1aff      	subgt	r7, r7, r3
  111f38:	1ae4      	subgt	r4, r4, r3
  111f3a:	1af6      	subgt	r6, r6, r3
  111f3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  111f3e:	2b00      	cmp	r3, #0
  111f40:	d163      	bne.n	11200a <_strtod_r+0x7c2>
  111f42:	2f00      	cmp	r7, #0
  111f44:	dc7a      	bgt.n	11203c <_strtod_r+0x7f4>
  111f46:	9b12      	ldr	r3, [sp, #72]	; 0x48
  111f48:	2b00      	cmp	r3, #0
  111f4a:	f040 8081 	bne.w	112050 <_strtod_r+0x808>
  111f4e:	2c00      	cmp	r4, #0
  111f50:	f300 8088 	bgt.w	112064 <_strtod_r+0x81c>
  111f54:	2e00      	cmp	r6, #0
  111f56:	f300 808f 	bgt.w	112078 <_strtod_r+0x830>
  111f5a:	9a04      	ldr	r2, [sp, #16]
  111f5c:	9918      	ldr	r1, [sp, #96]	; 0x60
  111f5e:	4650      	mov	r0, r10
  111f60:	f002 f8f3 	bl	11414a <__mdiff>
  111f64:	4683      	mov	r11, r0
  111f66:	2800      	cmp	r0, #0
  111f68:	f43f aeb4 	beq.w	111cd4 <_strtod_r+0x48c>
  111f6c:	68c3      	ldr	r3, [r0, #12]
  111f6e:	2400      	movs	r4, #0
  111f70:	60c4      	str	r4, [r0, #12]
  111f72:	9902      	ldr	r1, [sp, #8]
  111f74:	9306      	str	r3, [sp, #24]
  111f76:	f002 f8cc 	bl	114112 <__mcmp>
  111f7a:	42a0      	cmp	r0, r4
  111f7c:	f280 808b 	bge.w	112096 <_strtod_r+0x84e>
  111f80:	9b06      	ldr	r3, [sp, #24]
  111f82:	2b00      	cmp	r3, #0
  111f84:	f040 8202 	bne.w	11238c <_strtod_r+0xb44>
  111f88:	f1b8 0f00 	cmp.w	r8, #0
  111f8c:	f040 81fe 	bne.w	11238c <_strtod_r+0xb44>
  111f90:	f3c9 0313 	ubfx	r3, r9, #0, #20
  111f94:	2b00      	cmp	r3, #0
  111f96:	f040 81f9 	bne.w	11238c <_strtod_r+0xb44>
  111f9a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  111f9e:	0d1b      	lsrs	r3, r3, #20
  111fa0:	051b      	lsls	r3, r3, #20
  111fa2:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
  111fa6:	f240 81f1 	bls.w	11238c <_strtod_r+0xb44>
  111faa:	f8db 3014 	ldr.w	r3, [r11, #20]
  111fae:	2b00      	cmp	r3, #0
  111fb0:	d06c      	beq.n	11208c <_strtod_r+0x844>
  111fb2:	4659      	mov	r1, r11
  111fb4:	2201      	movs	r2, #1
  111fb6:	4650      	mov	r0, r10
  111fb8:	f002 f85a 	bl	114070 <__lshift>
  111fbc:	9902      	ldr	r1, [sp, #8]
  111fbe:	4683      	mov	r11, r0
  111fc0:	f002 f8a7 	bl	114112 <__mcmp>
  111fc4:	2800      	cmp	r0, #0
  111fc6:	f340 81e1 	ble.w	11238c <_strtod_r+0xb44>
  111fca:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  111fce:	9a03      	ldr	r2, [sp, #12]
  111fd0:	0d1b      	lsrs	r3, r3, #20
  111fd2:	051b      	lsls	r3, r3, #20
  111fd4:	2a00      	cmp	r2, #0
  111fd6:	f000 808d 	beq.w	1120f4 <_strtod_r+0x8ac>
  111fda:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
  111fde:	f300 8089 	bgt.w	1120f4 <_strtod_r+0x8ac>
  111fe2:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
  111fe6:	f300 81d3 	bgt.w	112390 <_strtod_r+0xb48>
  111fea:	2322      	movs	r3, #34	; 0x22
  111fec:	f04f 0800 	mov.w	r8, #0
  111ff0:	f04f 0900 	mov.w	r9, #0
  111ff4:	f8ca 3000 	str.w	r3, [r10]
  111ff8:	9b05      	ldr	r3, [sp, #20]
  111ffa:	2b00      	cmp	r3, #0
  111ffc:	f040 81d9 	bne.w	1123b2 <_strtod_r+0xb6a>
  112000:	e1eb      	b.n	1123da <_strtod_r+0xb92>
  112002:	2301      	movs	r3, #1
  112004:	2500      	movs	r5, #0
  112006:	9307      	str	r3, [sp, #28]
  112008:	e788      	b.n	111f1c <_strtod_r+0x6d4>
  11200a:	461a      	mov	r2, r3
  11200c:	9902      	ldr	r1, [sp, #8]
  11200e:	4650      	mov	r0, r10
  112010:	f001 ffe0 	bl	113fd4 <__pow5mult>
  112014:	9002      	str	r0, [sp, #8]
  112016:	2800      	cmp	r0, #0
  112018:	f43f ae5c 	beq.w	111cd4 <_strtod_r+0x48c>
  11201c:	4601      	mov	r1, r0
  11201e:	9a18      	ldr	r2, [sp, #96]	; 0x60
  112020:	4650      	mov	r0, r10
  112022:	f001 ff46 	bl	113eb2 <__multiply>
  112026:	9006      	str	r0, [sp, #24]
  112028:	2800      	cmp	r0, #0
  11202a:	f43f ae53 	beq.w	111cd4 <_strtod_r+0x48c>
  11202e:	9918      	ldr	r1, [sp, #96]	; 0x60
  112030:	4650      	mov	r0, r10
  112032:	f001 fe58 	bl	113ce6 <_Bfree>
  112036:	9b06      	ldr	r3, [sp, #24]
  112038:	9318      	str	r3, [sp, #96]	; 0x60
  11203a:	e782      	b.n	111f42 <_strtod_r+0x6fa>
  11203c:	463a      	mov	r2, r7
  11203e:	9918      	ldr	r1, [sp, #96]	; 0x60
  112040:	4650      	mov	r0, r10
  112042:	f002 f815 	bl	114070 <__lshift>
  112046:	9018      	str	r0, [sp, #96]	; 0x60
  112048:	2800      	cmp	r0, #0
  11204a:	f47f af7c 	bne.w	111f46 <_strtod_r+0x6fe>
  11204e:	e641      	b.n	111cd4 <_strtod_r+0x48c>
  112050:	9a12      	ldr	r2, [sp, #72]	; 0x48
  112052:	9904      	ldr	r1, [sp, #16]
  112054:	4650      	mov	r0, r10
  112056:	f001 ffbd 	bl	113fd4 <__pow5mult>
  11205a:	9004      	str	r0, [sp, #16]
  11205c:	2800      	cmp	r0, #0
  11205e:	f47f af76 	bne.w	111f4e <_strtod_r+0x706>
  112062:	e637      	b.n	111cd4 <_strtod_r+0x48c>
  112064:	4622      	mov	r2, r4
  112066:	9904      	ldr	r1, [sp, #16]
  112068:	4650      	mov	r0, r10
  11206a:	f002 f801 	bl	114070 <__lshift>
  11206e:	9004      	str	r0, [sp, #16]
  112070:	2800      	cmp	r0, #0
  112072:	f47f af6f 	bne.w	111f54 <_strtod_r+0x70c>
  112076:	e62d      	b.n	111cd4 <_strtod_r+0x48c>
  112078:	4632      	mov	r2, r6
  11207a:	9902      	ldr	r1, [sp, #8]
  11207c:	4650      	mov	r0, r10
  11207e:	f001 fff7 	bl	114070 <__lshift>
  112082:	9002      	str	r0, [sp, #8]
  112084:	2800      	cmp	r0, #0
  112086:	f47f af68 	bne.w	111f5a <_strtod_r+0x712>
  11208a:	e623      	b.n	111cd4 <_strtod_r+0x48c>
  11208c:	f8db 3010 	ldr.w	r3, [r11, #16]
  112090:	2b01      	cmp	r3, #1
  112092:	dc8e      	bgt.n	111fb2 <_strtod_r+0x76a>
  112094:	e17a      	b.n	11238c <_strtod_r+0xb44>
  112096:	d161      	bne.n	11215c <_strtod_r+0x914>
  112098:	9a06      	ldr	r2, [sp, #24]
  11209a:	f3c9 0313 	ubfx	r3, r9, #0, #20
  11209e:	b322      	cbz	r2, 1120ea <_strtod_r+0x8a2>
  1120a0:	4943      	ldr	r1, [pc, #268]	; (1121b0 <_strtod_r+0x968>)
  1120a2:	464a      	mov	r2, r9
  1120a4:	428b      	cmp	r3, r1
  1120a6:	d12e      	bne.n	112106 <_strtod_r+0x8be>
  1120a8:	9b03      	ldr	r3, [sp, #12]
  1120aa:	4641      	mov	r1, r8
  1120ac:	b163      	cbz	r3, 1120c8 <_strtod_r+0x880>
  1120ae:	4b41      	ldr	r3, [pc, #260]	; (1121b4 <_strtod_r+0x96c>)
  1120b0:	4013      	ands	r3, r2
  1120b2:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
  1120b6:	d807      	bhi.n	1120c8 <_strtod_r+0x880>
  1120b8:	0d1b      	lsrs	r3, r3, #20
  1120ba:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
  1120be:	f04f 30ff 	mov.w	r0, #4294967295
  1120c2:	fa00 f303 	lsl.w	r3, r0, r3
  1120c6:	e001      	b.n	1120cc <_strtod_r+0x884>
  1120c8:	f04f 33ff 	mov.w	r3, #4294967295
  1120cc:	428b      	cmp	r3, r1
  1120ce:	d11a      	bne.n	112106 <_strtod_r+0x8be>
  1120d0:	4939      	ldr	r1, [pc, #228]	; (1121b8 <_strtod_r+0x970>)
  1120d2:	428a      	cmp	r2, r1
  1120d4:	d102      	bne.n	1120dc <_strtod_r+0x894>
  1120d6:	3301      	adds	r3, #1
  1120d8:	f43f adfc 	beq.w	111cd4 <_strtod_r+0x48c>
  1120dc:	4b35      	ldr	r3, [pc, #212]	; (1121b4 <_strtod_r+0x96c>)
  1120de:	f04f 0800 	mov.w	r8, #0
  1120e2:	4013      	ands	r3, r2
  1120e4:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
  1120e8:	e150      	b.n	11238c <_strtod_r+0xb44>
  1120ea:	b963      	cbnz	r3, 112106 <_strtod_r+0x8be>
  1120ec:	f1b8 0f00 	cmp.w	r8, #0
  1120f0:	d109      	bne.n	112106 <_strtod_r+0x8be>
  1120f2:	e76a      	b.n	111fca <_strtod_r+0x782>
  1120f4:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
  1120f8:	ea6f 5913 	mvn.w	r9, r3, lsr #20
  1120fc:	f04f 38ff 	mov.w	r8, #4294967295
  112100:	ea6f 5909 	mvn.w	r9, r9, lsl #20
  112104:	e142      	b.n	11238c <_strtod_r+0xb44>
  112106:	b115      	cbz	r5, 11210e <_strtod_r+0x8c6>
  112108:	ea15 0f09 	tst.w	r5, r9
  11210c:	e002      	b.n	112114 <_strtod_r+0x8cc>
  11210e:	9b07      	ldr	r3, [sp, #28]
  112110:	ea13 0f08 	tst.w	r3, r8
  112114:	f000 813a 	beq.w	11238c <_strtod_r+0xb44>
  112118:	9b06      	ldr	r3, [sp, #24]
  11211a:	9a03      	ldr	r2, [sp, #12]
  11211c:	4640      	mov	r0, r8
  11211e:	4649      	mov	r1, r9
  112120:	b153      	cbz	r3, 112138 <_strtod_r+0x8f0>
  112122:	f7ff fb70 	bl	111806 <sulp>
  112126:	4602      	mov	r2, r0
  112128:	460b      	mov	r3, r1
  11212a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  11212e:	f7fc fa81 	bl	10e634 <__adddf3>
  112132:	4680      	mov	r8, r0
  112134:	4689      	mov	r9, r1
  112136:	e129      	b.n	11238c <_strtod_r+0xb44>
  112138:	f7ff fb65 	bl	111806 <sulp>
  11213c:	4602      	mov	r2, r0
  11213e:	460b      	mov	r3, r1
  112140:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  112144:	f7fc fa74 	bl	10e630 <__aeabi_dsub>
  112148:	2200      	movs	r2, #0
  11214a:	2300      	movs	r3, #0
  11214c:	4680      	mov	r8, r0
  11214e:	4689      	mov	r9, r1
  112150:	f7fc fe8a 	bl	10ee68 <__aeabi_dcmpeq>
  112154:	2800      	cmp	r0, #0
  112156:	f47f af48 	bne.w	111fea <_strtod_r+0x7a2>
  11215a:	e117      	b.n	11238c <_strtod_r+0xb44>
  11215c:	9902      	ldr	r1, [sp, #8]
  11215e:	4658      	mov	r0, r11
  112160:	f002 f911 	bl	114386 <__ratio>
  112164:	2200      	movs	r2, #0
  112166:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  11216a:	4606      	mov	r6, r0
  11216c:	460f      	mov	r7, r1
  11216e:	f7fc fe8f 	bl	10ee90 <__aeabi_dcmple>
  112172:	2800      	cmp	r0, #0
  112174:	d03f      	beq.n	1121f6 <_strtod_r+0x9ae>
  112176:	9b06      	ldr	r3, [sp, #24]
  112178:	b113      	cbz	r3, 112180 <_strtod_r+0x938>
  11217a:	2600      	movs	r6, #0
  11217c:	4f0f      	ldr	r7, [pc, #60]	; (1121bc <_strtod_r+0x974>)
  11217e:	e010      	b.n	1121a2 <_strtod_r+0x95a>
  112180:	f1b8 0f00 	cmp.w	r8, #0
  112184:	d103      	bne.n	11218e <_strtod_r+0x946>
  112186:	f3c9 0313 	ubfx	r3, r9, #0, #20
  11218a:	b93b      	cbnz	r3, 11219c <_strtod_r+0x954>
  11218c:	e01a      	b.n	1121c4 <_strtod_r+0x97c>
  11218e:	f1b8 0f01 	cmp.w	r8, #1
  112192:	d103      	bne.n	11219c <_strtod_r+0x954>
  112194:	f1b9 0f00 	cmp.w	r9, #0
  112198:	f43f af27 	beq.w	111fea <_strtod_r+0x7a2>
  11219c:	4f08      	ldr	r7, [pc, #32]	; (1121c0 <_strtod_r+0x978>)
  11219e:	2600      	movs	r6, #0
  1121a0:	2400      	movs	r4, #0
  1121a2:	4d06      	ldr	r5, [pc, #24]	; (1121bc <_strtod_r+0x974>)
  1121a4:	e03c      	b.n	112220 <_strtod_r+0x9d8>
  1121a6:	bf00      	nop
  1121a8:	fffffc02 	.word	0xfffffc02
  1121ac:	fffffbe2 	.word	0xfffffbe2
  1121b0:	000fffff 	.word	0x000fffff
  1121b4:	7ff00000 	.word	0x7ff00000
  1121b8:	7fefffff 	.word	0x7fefffff
  1121bc:	3ff00000 	.word	0x3ff00000
  1121c0:	bff00000 	.word	0xbff00000
  1121c4:	2200      	movs	r2, #0
  1121c6:	4b9a      	ldr	r3, [pc, #616]	; (112430 <_strtod_r+0xbe8>)
  1121c8:	4630      	mov	r0, r6
  1121ca:	4639      	mov	r1, r7
  1121cc:	f7fc fe56 	bl	10ee7c <__aeabi_dcmplt>
  1121d0:	b940      	cbnz	r0, 1121e4 <_strtod_r+0x99c>
  1121d2:	2200      	movs	r2, #0
  1121d4:	4b97      	ldr	r3, [pc, #604]	; (112434 <_strtod_r+0xbec>)
  1121d6:	4630      	mov	r0, r6
  1121d8:	4639      	mov	r1, r7
  1121da:	f7fc fbdd 	bl	10e998 <__aeabi_dmul>
  1121de:	4604      	mov	r4, r0
  1121e0:	460d      	mov	r5, r1
  1121e2:	e001      	b.n	1121e8 <_strtod_r+0x9a0>
  1121e4:	9c06      	ldr	r4, [sp, #24]
  1121e6:	4d93      	ldr	r5, [pc, #588]	; (112434 <_strtod_r+0xbec>)
  1121e8:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
  1121ec:	9414      	str	r4, [sp, #80]	; 0x50
  1121ee:	9315      	str	r3, [sp, #84]	; 0x54
  1121f0:	e9dd 6714 	ldrd	r6, r7, [sp, #80]	; 0x50
  1121f4:	e014      	b.n	112220 <_strtod_r+0x9d8>
  1121f6:	4b8f      	ldr	r3, [pc, #572]	; (112434 <_strtod_r+0xbec>)
  1121f8:	2200      	movs	r2, #0
  1121fa:	4630      	mov	r0, r6
  1121fc:	4639      	mov	r1, r7
  1121fe:	f7fc fbcb 	bl	10e998 <__aeabi_dmul>
  112202:	9b06      	ldr	r3, [sp, #24]
  112204:	4604      	mov	r4, r0
  112206:	460d      	mov	r5, r1
  112208:	b923      	cbnz	r3, 112214 <_strtod_r+0x9cc>
  11220a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  11220e:	900e      	str	r0, [sp, #56]	; 0x38
  112210:	930f      	str	r3, [sp, #60]	; 0x3c
  112212:	e003      	b.n	11221c <_strtod_r+0x9d4>
  112214:	4602      	mov	r2, r0
  112216:	460b      	mov	r3, r1
  112218:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  11221c:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	; 0x38
  112220:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  112224:	0d1b      	lsrs	r3, r3, #20
  112226:	051b      	lsls	r3, r3, #20
  112228:	9307      	str	r3, [sp, #28]
  11222a:	9a07      	ldr	r2, [sp, #28]
  11222c:	4b82      	ldr	r3, [pc, #520]	; (112438 <_strtod_r+0xbf0>)
  11222e:	429a      	cmp	r2, r3
  112230:	d12b      	bne.n	11228a <_strtod_r+0xa42>
  112232:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  112236:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
  11223a:	4640      	mov	r0, r8
  11223c:	4649      	mov	r1, r9
  11223e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  112242:	f001 ffe1 	bl	114208 <__ulp>
  112246:	4602      	mov	r2, r0
  112248:	460b      	mov	r3, r1
  11224a:	4630      	mov	r0, r6
  11224c:	4639      	mov	r1, r7
  11224e:	f7fc fba3 	bl	10e998 <__aeabi_dmul>
  112252:	4642      	mov	r2, r8
  112254:	464b      	mov	r3, r9
  112256:	f7fc f9ed 	bl	10e634 <__adddf3>
  11225a:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  11225e:	0d1b      	lsrs	r3, r3, #20
  112260:	4a76      	ldr	r2, [pc, #472]	; (11243c <_strtod_r+0xbf4>)
  112262:	051b      	lsls	r3, r3, #20
  112264:	4293      	cmp	r3, r2
  112266:	4680      	mov	r8, r0
  112268:	d90c      	bls.n	112284 <_strtod_r+0xa3c>
  11226a:	4b75      	ldr	r3, [pc, #468]	; (112440 <_strtod_r+0xbf8>)
  11226c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  11226e:	429a      	cmp	r2, r3
  112270:	d103      	bne.n	11227a <_strtod_r+0xa32>
  112272:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  112274:	3301      	adds	r3, #1
  112276:	f43f ad2d 	beq.w	111cd4 <_strtod_r+0x48c>
  11227a:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 112440 <_strtod_r+0xbf8>
  11227e:	f04f 38ff 	mov.w	r8, #4294967295
  112282:	e072      	b.n	11236a <_strtod_r+0xb22>
  112284:	f101 7954 	add.w	r9, r1, #55574528	; 0x3500000
  112288:	e039      	b.n	1122fe <_strtod_r+0xab6>
  11228a:	9b03      	ldr	r3, [sp, #12]
  11228c:	b33b      	cbz	r3, 1122de <_strtod_r+0xa96>
  11228e:	9b07      	ldr	r3, [sp, #28]
  112290:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
  112294:	d823      	bhi.n	1122de <_strtod_r+0xa96>
  112296:	a35e      	add	r3, pc, #376	; (adr r3, 112410 <_strtod_r+0xbc8>)
  112298:	e9d3 2300 	ldrd	r2, r3, [r3]
  11229c:	4620      	mov	r0, r4
  11229e:	4629      	mov	r1, r5
  1122a0:	f7fc fdf6 	bl	10ee90 <__aeabi_dcmple>
  1122a4:	b1b8      	cbz	r0, 1122d6 <_strtod_r+0xa8e>
  1122a6:	4629      	mov	r1, r5
  1122a8:	4620      	mov	r0, r4
  1122aa:	f002 fc0b 	bl	114ac4 <__aeabi_d2uiz>
  1122ae:	2800      	cmp	r0, #0
  1122b0:	bf08      	it	eq
  1122b2:	2001      	moveq	r0, #1
  1122b4:	f7fc fafa 	bl	10e8ac <__aeabi_ui2d>
  1122b8:	9b06      	ldr	r3, [sp, #24]
  1122ba:	4604      	mov	r4, r0
  1122bc:	460d      	mov	r5, r1
  1122be:	b923      	cbnz	r3, 1122ca <_strtod_r+0xa82>
  1122c0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  1122c4:	9010      	str	r0, [sp, #64]	; 0x40
  1122c6:	9311      	str	r3, [sp, #68]	; 0x44
  1122c8:	e003      	b.n	1122d2 <_strtod_r+0xa8a>
  1122ca:	4602      	mov	r2, r0
  1122cc:	460b      	mov	r3, r1
  1122ce:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  1122d2:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
  1122d6:	9a07      	ldr	r2, [sp, #28]
  1122d8:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
  1122dc:	1a9f      	subs	r7, r3, r2
  1122de:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  1122e2:	f001 ff91 	bl	114208 <__ulp>
  1122e6:	4602      	mov	r2, r0
  1122e8:	460b      	mov	r3, r1
  1122ea:	4630      	mov	r0, r6
  1122ec:	4639      	mov	r1, r7
  1122ee:	f7fc fb53 	bl	10e998 <__aeabi_dmul>
  1122f2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  1122f6:	f7fc f99d 	bl	10e634 <__adddf3>
  1122fa:	4680      	mov	r8, r0
  1122fc:	4689      	mov	r9, r1
  1122fe:	9b03      	ldr	r3, [sp, #12]
  112300:	bb9b      	cbnz	r3, 11236a <_strtod_r+0xb22>
  112302:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  112306:	0d1b      	lsrs	r3, r3, #20
  112308:	9a07      	ldr	r2, [sp, #28]
  11230a:	051b      	lsls	r3, r3, #20
  11230c:	429a      	cmp	r2, r3
  11230e:	464e      	mov	r6, r9
  112310:	d12b      	bne.n	11236a <_strtod_r+0xb22>
  112312:	4629      	mov	r1, r5
  112314:	4620      	mov	r0, r4
  112316:	f002 fbad 	bl	114a74 <__aeabi_d2iz>
  11231a:	f7fc fad7 	bl	10e8cc <__aeabi_i2d>
  11231e:	460b      	mov	r3, r1
  112320:	4602      	mov	r2, r0
  112322:	4629      	mov	r1, r5
  112324:	4620      	mov	r0, r4
  112326:	f7fc f983 	bl	10e630 <__aeabi_dsub>
  11232a:	9b06      	ldr	r3, [sp, #24]
  11232c:	4604      	mov	r4, r0
  11232e:	460d      	mov	r5, r1
  112330:	b92b      	cbnz	r3, 11233e <_strtod_r+0xaf6>
  112332:	f1b8 0f00 	cmp.w	r8, #0
  112336:	d102      	bne.n	11233e <_strtod_r+0xaf6>
  112338:	f3c9 0613 	ubfx	r6, r9, #0, #20
  11233c:	b17e      	cbz	r6, 11235e <_strtod_r+0xb16>
  11233e:	a336      	add	r3, pc, #216	; (adr r3, 112418 <_strtod_r+0xbd0>)
  112340:	e9d3 2300 	ldrd	r2, r3, [r3]
  112344:	4620      	mov	r0, r4
  112346:	4629      	mov	r1, r5
  112348:	f7fc fd98 	bl	10ee7c <__aeabi_dcmplt>
  11234c:	bb88      	cbnz	r0, 1123b2 <_strtod_r+0xb6a>
  11234e:	a334      	add	r3, pc, #208	; (adr r3, 112420 <_strtod_r+0xbd8>)
  112350:	e9d3 2300 	ldrd	r2, r3, [r3]
  112354:	4620      	mov	r0, r4
  112356:	4629      	mov	r1, r5
  112358:	f7fc fdae 	bl	10eeb8 <__aeabi_dcmpgt>
  11235c:	e004      	b.n	112368 <_strtod_r+0xb20>
  11235e:	a332      	add	r3, pc, #200	; (adr r3, 112428 <_strtod_r+0xbe0>)
  112360:	e9d3 2300 	ldrd	r2, r3, [r3]
  112364:	f7fc fd8a 	bl	10ee7c <__aeabi_dcmplt>
  112368:	bb18      	cbnz	r0, 1123b2 <_strtod_r+0xb6a>
  11236a:	9918      	ldr	r1, [sp, #96]	; 0x60
  11236c:	4650      	mov	r0, r10
  11236e:	f001 fcba 	bl	113ce6 <_Bfree>
  112372:	9904      	ldr	r1, [sp, #16]
  112374:	4650      	mov	r0, r10
  112376:	f001 fcb6 	bl	113ce6 <_Bfree>
  11237a:	9902      	ldr	r1, [sp, #8]
  11237c:	4650      	mov	r0, r10
  11237e:	f001 fcb2 	bl	113ce6 <_Bfree>
  112382:	4659      	mov	r1, r11
  112384:	4650      	mov	r0, r10
  112386:	f001 fcae 	bl	113ce6 <_Bfree>
  11238a:	e574      	b.n	111e76 <_strtod_r+0x62e>
  11238c:	9b03      	ldr	r3, [sp, #12]
  11238e:	b183      	cbz	r3, 1123b2 <_strtod_r+0xb6a>
  112390:	4b2c      	ldr	r3, [pc, #176]	; (112444 <_strtod_r+0xbfc>)
  112392:	4640      	mov	r0, r8
  112394:	930b      	str	r3, [sp, #44]	; 0x2c
  112396:	2300      	movs	r3, #0
  112398:	930a      	str	r3, [sp, #40]	; 0x28
  11239a:	4649      	mov	r1, r9
  11239c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  1123a0:	f7fc fafa 	bl	10e998 <__aeabi_dmul>
  1123a4:	4680      	mov	r8, r0
  1123a6:	4689      	mov	r9, r1
  1123a8:	b919      	cbnz	r1, 1123b2 <_strtod_r+0xb6a>
  1123aa:	b910      	cbnz	r0, 1123b2 <_strtod_r+0xb6a>
  1123ac:	2322      	movs	r3, #34	; 0x22
  1123ae:	f8ca 3000 	str.w	r3, [r10]
  1123b2:	9918      	ldr	r1, [sp, #96]	; 0x60
  1123b4:	4650      	mov	r0, r10
  1123b6:	f001 fc96 	bl	113ce6 <_Bfree>
  1123ba:	9904      	ldr	r1, [sp, #16]
  1123bc:	4650      	mov	r0, r10
  1123be:	f001 fc92 	bl	113ce6 <_Bfree>
  1123c2:	9902      	ldr	r1, [sp, #8]
  1123c4:	4650      	mov	r0, r10
  1123c6:	f001 fc8e 	bl	113ce6 <_Bfree>
  1123ca:	9905      	ldr	r1, [sp, #20]
  1123cc:	4650      	mov	r0, r10
  1123ce:	f001 fc8a 	bl	113ce6 <_Bfree>
  1123d2:	4659      	mov	r1, r11
  1123d4:	4650      	mov	r0, r10
  1123d6:	f001 fc86 	bl	113ce6 <_Bfree>
  1123da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  1123dc:	b113      	cbz	r3, 1123e4 <_strtod_r+0xb9c>
  1123de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  1123e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  1123e2:	6013      	str	r3, [r2, #0]
  1123e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  1123e6:	b11b      	cbz	r3, 1123f0 <_strtod_r+0xba8>
  1123e8:	4642      	mov	r2, r8
  1123ea:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
  1123ee:	e007      	b.n	112400 <_strtod_r+0xbb8>
  1123f0:	4642      	mov	r2, r8
  1123f2:	464b      	mov	r3, r9
  1123f4:	e004      	b.n	112400 <_strtod_r+0xbb8>
  1123f6:	2500      	movs	r5, #0
  1123f8:	462a      	mov	r2, r5
  1123fa:	2101      	movs	r1, #1
  1123fc:	f7ff bb47 	b.w	111a8e <_strtod_r+0x246>
  112400:	4610      	mov	r0, r2
  112402:	4619      	mov	r1, r3
  112404:	b01d      	add	sp, #116	; 0x74
  112406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  11240a:	bf00      	nop
  11240c:	f3af 8000 	nop.w
  112410:	ffc00000 	.word	0xffc00000
  112414:	41dfffff 	.word	0x41dfffff
  112418:	94a03595 	.word	0x94a03595
  11241c:	3fdfffff 	.word	0x3fdfffff
  112420:	35afe535 	.word	0x35afe535
  112424:	3fe00000 	.word	0x3fe00000
  112428:	94a03595 	.word	0x94a03595
  11242c:	3fcfffff 	.word	0x3fcfffff
  112430:	3ff00000 	.word	0x3ff00000
  112434:	3fe00000 	.word	0x3fe00000
  112438:	7fe00000 	.word	0x7fe00000
  11243c:	7c9fffff 	.word	0x7c9fffff
  112440:	7fefffff 	.word	0x7fefffff
  112444:	39500000 	.word	0x39500000

00112448 <_strtol_r>:
  112448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  11244c:	460f      	mov	r7, r1
  11244e:	4680      	mov	r8, r0
  112450:	483f      	ldr	r0, [pc, #252]	; (112550 <_strtol_r+0x108>)
  112452:	f8d0 9000 	ldr.w	r9, [r0]
  112456:	463d      	mov	r5, r7
  112458:	f815 4b01 	ldrb.w	r4, [r5], #1
  11245c:	eb09 0004 	add.w	r0, r9, r4
  112460:	7840      	ldrb	r0, [r0, #1]
  112462:	f000 0008 	and.w	r0, r0, #8
  112466:	f000 06ff 	and.w	r6, r0, #255	; 0xff
  11246a:	b108      	cbz	r0, 112470 <_strtol_r+0x28>
  11246c:	462f      	mov	r7, r5
  11246e:	e7f2      	b.n	112456 <_strtol_r+0xe>
  112470:	2c2d      	cmp	r4, #45	; 0x2d
  112472:	d103      	bne.n	11247c <_strtol_r+0x34>
  112474:	1cbd      	adds	r5, r7, #2
  112476:	787c      	ldrb	r4, [r7, #1]
  112478:	2601      	movs	r6, #1
  11247a:	e003      	b.n	112484 <_strtol_r+0x3c>
  11247c:	2c2b      	cmp	r4, #43	; 0x2b
  11247e:	bf04      	itt	eq
  112480:	787c      	ldrbeq	r4, [r7, #1]
  112482:	1cbd      	addeq	r5, r7, #2
  112484:	b113      	cbz	r3, 11248c <_strtol_r+0x44>
  112486:	2b10      	cmp	r3, #16
  112488:	d10a      	bne.n	1124a0 <_strtol_r+0x58>
  11248a:	e05b      	b.n	112544 <_strtol_r+0xfc>
  11248c:	2c30      	cmp	r4, #48	; 0x30
  11248e:	d157      	bne.n	112540 <_strtol_r+0xf8>
  112490:	7828      	ldrb	r0, [r5, #0]
  112492:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  112496:	2858      	cmp	r0, #88	; 0x58
  112498:	d14d      	bne.n	112536 <_strtol_r+0xee>
  11249a:	786c      	ldrb	r4, [r5, #1]
  11249c:	2310      	movs	r3, #16
  11249e:	3502      	adds	r5, #2
  1124a0:	2e00      	cmp	r6, #0
  1124a2:	bf14      	ite	ne
  1124a4:	f04f 4c00 	movne.w	r12, #2147483648	; 0x80000000
  1124a8:	f06f 4c00 	mvneq.w	r12, #2147483648	; 0x80000000
  1124ac:	fbbc faf3 	udiv	r10, r12, r3
  1124b0:	2700      	movs	r7, #0
  1124b2:	4638      	mov	r0, r7
  1124b4:	fb03 cc1a 	mls	r12, r3, r10, r12
  1124b8:	eb09 0e04 	add.w	lr, r9, r4
  1124bc:	f89e e001 	ldrb.w	lr, [lr, #1]
  1124c0:	f01e 0f04 	tst.w	lr, #4
  1124c4:	d001      	beq.n	1124ca <_strtol_r+0x82>
  1124c6:	3c30      	subs	r4, #48	; 0x30
  1124c8:	e00b      	b.n	1124e2 <_strtol_r+0x9a>
  1124ca:	f01e 0e03 	ands.w	lr, lr, #3
  1124ce:	d01b      	beq.n	112508 <_strtol_r+0xc0>
  1124d0:	f1be 0f01 	cmp.w	lr, #1
  1124d4:	bf0c      	ite	eq
  1124d6:	f04f 0e37 	moveq.w	lr, #55	; 0x37
  1124da:	f04f 0e57 	movne.w	lr, #87	; 0x57
  1124de:	ebce 0404 	rsb	r4, lr, r4
  1124e2:	42a3      	cmp	r3, r4
  1124e4:	dd10      	ble.n	112508 <_strtol_r+0xc0>
  1124e6:	f1b7 3fff 	cmp.w	r7, #4294967295
  1124ea:	d00a      	beq.n	112502 <_strtol_r+0xba>
  1124ec:	4550      	cmp	r0, r10
  1124ee:	d806      	bhi.n	1124fe <_strtol_r+0xb6>
  1124f0:	d101      	bne.n	1124f6 <_strtol_r+0xae>
  1124f2:	4564      	cmp	r4, r12
  1124f4:	dc03      	bgt.n	1124fe <_strtol_r+0xb6>
  1124f6:	fb03 4000 	mla	r0, r3, r0, r4
  1124fa:	2701      	movs	r7, #1
  1124fc:	e001      	b.n	112502 <_strtol_r+0xba>
  1124fe:	f04f 37ff 	mov.w	r7, #4294967295
  112502:	f815 4b01 	ldrb.w	r4, [r5], #1
  112506:	e7d7      	b.n	1124b8 <_strtol_r+0x70>
  112508:	1c7b      	adds	r3, r7, #1
  11250a:	d10c      	bne.n	112526 <_strtol_r+0xde>
  11250c:	2e00      	cmp	r6, #0
  11250e:	f04f 0322 	mov.w	r3, #34	; 0x22
  112512:	bf14      	ite	ne
  112514:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  112518:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  11251c:	f8c8 3000 	str.w	r3, [r8]
  112520:	b92a      	cbnz	r2, 11252e <_strtol_r+0xe6>
  112522:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  112526:	b106      	cbz	r6, 11252a <_strtol_r+0xe2>
  112528:	4240      	negs	r0, r0
  11252a:	b172      	cbz	r2, 11254a <_strtol_r+0x102>
  11252c:	b107      	cbz	r7, 112530 <_strtol_r+0xe8>
  11252e:	1e69      	subs	r1, r5, #1
  112530:	6011      	str	r1, [r2, #0]
  112532:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  112536:	2430      	movs	r4, #48	; 0x30
  112538:	2b00      	cmp	r3, #0
  11253a:	d1b1      	bne.n	1124a0 <_strtol_r+0x58>
  11253c:	2308      	movs	r3, #8
  11253e:	e7af      	b.n	1124a0 <_strtol_r+0x58>
  112540:	230a      	movs	r3, #10
  112542:	e7ad      	b.n	1124a0 <_strtol_r+0x58>
  112544:	2c30      	cmp	r4, #48	; 0x30
  112546:	d0a3      	beq.n	112490 <_strtol_r+0x48>
  112548:	e7aa      	b.n	1124a0 <_strtol_r+0x58>
  11254a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  11254e:	bf00      	nop
  112550:	3fff4200 	.word	0x3fff4200

00112554 <strtol>:
  112554:	4613      	mov	r3, r2
  112556:	460a      	mov	r2, r1
  112558:	4601      	mov	r1, r0
  11255a:	4802      	ldr	r0, [pc, #8]	; (112564 <strtol+0x10>)
  11255c:	6800      	ldr	r0, [r0, #0]
  11255e:	f7ff bf73 	b.w	112448 <_strtol_r>
  112562:	bf00      	nop
  112564:	3fff4264 	.word	0x3fff4264

00112568 <_strtoul_r>:
  112568:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  11256c:	460e      	mov	r6, r1
  11256e:	4680      	mov	r8, r0
  112570:	483b      	ldr	r0, [pc, #236]	; (112660 <_strtoul_r+0xf8>)
  112572:	f8d0 9000 	ldr.w	r9, [r0]
  112576:	4635      	mov	r5, r6
  112578:	f815 4b01 	ldrb.w	r4, [r5], #1
  11257c:	eb09 0004 	add.w	r0, r9, r4
  112580:	7840      	ldrb	r0, [r0, #1]
  112582:	f000 0008 	and.w	r0, r0, #8
  112586:	f000 07ff 	and.w	r7, r0, #255	; 0xff
  11258a:	b108      	cbz	r0, 112590 <_strtoul_r+0x28>
  11258c:	462e      	mov	r6, r5
  11258e:	e7f2      	b.n	112576 <_strtoul_r+0xe>
  112590:	2c2d      	cmp	r4, #45	; 0x2d
  112592:	d103      	bne.n	11259c <_strtoul_r+0x34>
  112594:	1cb5      	adds	r5, r6, #2
  112596:	7874      	ldrb	r4, [r6, #1]
  112598:	2701      	movs	r7, #1
  11259a:	e003      	b.n	1125a4 <_strtoul_r+0x3c>
  11259c:	2c2b      	cmp	r4, #43	; 0x2b
  11259e:	bf04      	itt	eq
  1125a0:	7874      	ldrbeq	r4, [r6, #1]
  1125a2:	1cb5      	addeq	r5, r6, #2
  1125a4:	b113      	cbz	r3, 1125ac <_strtoul_r+0x44>
  1125a6:	2b10      	cmp	r3, #16
  1125a8:	d10a      	bne.n	1125c0 <_strtoul_r+0x58>
  1125aa:	e053      	b.n	112654 <_strtoul_r+0xec>
  1125ac:	2c30      	cmp	r4, #48	; 0x30
  1125ae:	d14f      	bne.n	112650 <_strtoul_r+0xe8>
  1125b0:	7828      	ldrb	r0, [r5, #0]
  1125b2:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  1125b6:	2858      	cmp	r0, #88	; 0x58
  1125b8:	d145      	bne.n	112646 <_strtoul_r+0xde>
  1125ba:	786c      	ldrb	r4, [r5, #1]
  1125bc:	2310      	movs	r3, #16
  1125be:	3502      	adds	r5, #2
  1125c0:	f04f 3cff 	mov.w	r12, #4294967295
  1125c4:	fbbc fcf3 	udiv	r12, r12, r3
  1125c8:	fb03 fa0c 	mul.w	r10, r3, r12
  1125cc:	2600      	movs	r6, #0
  1125ce:	ea6f 0a0a 	mvn.w	r10, r10
  1125d2:	4630      	mov	r0, r6
  1125d4:	eb09 0e04 	add.w	lr, r9, r4
  1125d8:	f89e e001 	ldrb.w	lr, [lr, #1]
  1125dc:	f01e 0f04 	tst.w	lr, #4
  1125e0:	d001      	beq.n	1125e6 <_strtoul_r+0x7e>
  1125e2:	3c30      	subs	r4, #48	; 0x30
  1125e4:	e00b      	b.n	1125fe <_strtoul_r+0x96>
  1125e6:	f01e 0e03 	ands.w	lr, lr, #3
  1125ea:	d01a      	beq.n	112622 <_strtoul_r+0xba>
  1125ec:	f1be 0f01 	cmp.w	lr, #1
  1125f0:	bf0c      	ite	eq
  1125f2:	f04f 0e37 	moveq.w	lr, #55	; 0x37
  1125f6:	f04f 0e57 	movne.w	lr, #87	; 0x57
  1125fa:	ebce 0404 	rsb	r4, lr, r4
  1125fe:	42a3      	cmp	r3, r4
  112600:	dd0f      	ble.n	112622 <_strtoul_r+0xba>
  112602:	2e00      	cmp	r6, #0
  112604:	db08      	blt.n	112618 <_strtoul_r+0xb0>
  112606:	4560      	cmp	r0, r12
  112608:	d806      	bhi.n	112618 <_strtoul_r+0xb0>
  11260a:	d101      	bne.n	112610 <_strtoul_r+0xa8>
  11260c:	4554      	cmp	r4, r10
  11260e:	dc03      	bgt.n	112618 <_strtoul_r+0xb0>
  112610:	fb03 4000 	mla	r0, r3, r0, r4
  112614:	2601      	movs	r6, #1
  112616:	e001      	b.n	11261c <_strtoul_r+0xb4>
  112618:	f04f 36ff 	mov.w	r6, #4294967295
  11261c:	f815 4b01 	ldrb.w	r4, [r5], #1
  112620:	e7d8      	b.n	1125d4 <_strtoul_r+0x6c>
  112622:	2e00      	cmp	r6, #0
  112624:	da07      	bge.n	112636 <_strtoul_r+0xce>
  112626:	2322      	movs	r3, #34	; 0x22
  112628:	f8c8 3000 	str.w	r3, [r8]
  11262c:	f04f 30ff 	mov.w	r0, #4294967295
  112630:	b92a      	cbnz	r2, 11263e <_strtoul_r+0xd6>
  112632:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  112636:	b107      	cbz	r7, 11263a <_strtoul_r+0xd2>
  112638:	4240      	negs	r0, r0
  11263a:	b172      	cbz	r2, 11265a <_strtoul_r+0xf2>
  11263c:	b106      	cbz	r6, 112640 <_strtoul_r+0xd8>
  11263e:	1e69      	subs	r1, r5, #1
  112640:	6011      	str	r1, [r2, #0]
  112642:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  112646:	2430      	movs	r4, #48	; 0x30
  112648:	2b00      	cmp	r3, #0
  11264a:	d1b9      	bne.n	1125c0 <_strtoul_r+0x58>
  11264c:	2308      	movs	r3, #8
  11264e:	e7b7      	b.n	1125c0 <_strtoul_r+0x58>
  112650:	230a      	movs	r3, #10
  112652:	e7b5      	b.n	1125c0 <_strtoul_r+0x58>
  112654:	2c30      	cmp	r4, #48	; 0x30
  112656:	d0ab      	beq.n	1125b0 <_strtoul_r+0x48>
  112658:	e7b2      	b.n	1125c0 <_strtoul_r+0x58>
  11265a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  11265e:	bf00      	nop
  112660:	3fff4200 	.word	0x3fff4200

00112664 <strtoul>:
  112664:	4613      	mov	r3, r2
  112666:	460a      	mov	r2, r1
  112668:	4601      	mov	r1, r0
  11266a:	4802      	ldr	r0, [pc, #8]	; (112674 <strtoul+0x10>)
  11266c:	6800      	ldr	r0, [r0, #0]
  11266e:	f7ff bf7b 	b.w	112568 <_strtoul_r>
  112672:	bf00      	nop
  112674:	3fff4264 	.word	0x3fff4264

00112678 <__submore>:
  112678:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  11267c:	460c      	mov	r4, r1
  11267e:	6b49      	ldr	r1, [r1, #52]	; 0x34
  112680:	f104 0344 	add.w	r3, r4, #68	; 0x44
  112684:	4299      	cmp	r1, r3
  112686:	d11a      	bne.n	1126be <__submore+0x46>
  112688:	f44f 6180 	mov.w	r1, #1024	; 0x400
  11268c:	f7fa ff0f 	bl	10d4ae <__wrap__malloc_r>
  112690:	b918      	cbnz	r0, 11269a <__submore+0x22>
  112692:	f04f 30ff 	mov.w	r0, #4294967295
  112696:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  11269a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  11269e:	63a3      	str	r3, [r4, #56]	; 0x38
  1126a0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
  1126a4:	6360      	str	r0, [r4, #52]	; 0x34
  1126a6:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  1126aa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
  1126ae:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  1126b2:	7043      	strb	r3, [r0, #1]
  1126b4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
  1126b8:	7003      	strb	r3, [r0, #0]
  1126ba:	6020      	str	r0, [r4, #0]
  1126bc:	e012      	b.n	1126e4 <__submore+0x6c>
  1126be:	6ba6      	ldr	r6, [r4, #56]	; 0x38
  1126c0:	0077      	lsls	r7, r6, #1
  1126c2:	463a      	mov	r2, r7
  1126c4:	f7fa fef5 	bl	10d4b2 <__wrap__realloc_r>
  1126c8:	4605      	mov	r5, r0
  1126ca:	2800      	cmp	r0, #0
  1126cc:	d0e1      	beq.n	112692 <__submore+0x1a>
  1126ce:	eb00 0806 	add.w	r8, r0, r6
  1126d2:	4601      	mov	r1, r0
  1126d4:	4632      	mov	r2, r6
  1126d6:	4640      	mov	r0, r8
  1126d8:	f7fd fbff 	bl	10feda <memcpy>
  1126dc:	f8c4 8000 	str.w	r8, [r4]
  1126e0:	6365      	str	r5, [r4, #52]	; 0x34
  1126e2:	63a7      	str	r7, [r4, #56]	; 0x38
  1126e4:	2000      	movs	r0, #0
  1126e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

001126ea <_vsniprintf_r>:
  1126ea:	b530      	push	{r4, r5, lr}
  1126ec:	1e14      	subs	r4, r2, #0
  1126ee:	4605      	mov	r5, r0
  1126f0:	b09b      	sub	sp, #108	; 0x6c
  1126f2:	4618      	mov	r0, r3
  1126f4:	da04      	bge.n	112700 <_vsniprintf_r+0x16>
  1126f6:	238b      	movs	r3, #139	; 0x8b
  1126f8:	602b      	str	r3, [r5, #0]
  1126fa:	f04f 30ff 	mov.w	r0, #4294967295
  1126fe:	e01d      	b.n	11273c <_vsniprintf_r+0x52>
  112700:	f44f 7302 	mov.w	r3, #520	; 0x208
  112704:	f8ad 300c 	strh.w	r3, [sp, #12]
  112708:	bf0c      	ite	eq
  11270a:	4623      	moveq	r3, r4
  11270c:	f104 33ff 	addne.w	r3, r4, #4294967295
  112710:	9302      	str	r3, [sp, #8]
  112712:	9305      	str	r3, [sp, #20]
  112714:	f64f 73ff 	movw	r3, #65535	; 0xffff
  112718:	9100      	str	r1, [sp, #0]
  11271a:	9104      	str	r1, [sp, #16]
  11271c:	f8ad 300e 	strh.w	r3, [sp, #14]
  112720:	4602      	mov	r2, r0
  112722:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  112724:	4669      	mov	r1, sp
  112726:	4628      	mov	r0, r5
  112728:	f001 fef4 	bl	114514 <_svfiprintf_r>
  11272c:	1c43      	adds	r3, r0, #1
  11272e:	bfbc      	itt	lt
  112730:	238b      	movlt	r3, #139	; 0x8b
  112732:	602b      	strlt	r3, [r5, #0]
  112734:	b114      	cbz	r4, 11273c <_vsniprintf_r+0x52>
  112736:	9b00      	ldr	r3, [sp, #0]
  112738:	2200      	movs	r2, #0
  11273a:	701a      	strb	r2, [r3, #0]
  11273c:	b01b      	add	sp, #108	; 0x6c
  11273e:	bd30      	pop	{r4, r5, pc}

00112740 <vsniprintf>:
  112740:	b507      	push	{r0, r1, r2, lr}
  112742:	9300      	str	r3, [sp, #0]
  112744:	4613      	mov	r3, r2
  112746:	460a      	mov	r2, r1
  112748:	4601      	mov	r1, r0
  11274a:	4803      	ldr	r0, [pc, #12]	; (112758 <vsniprintf+0x18>)
  11274c:	6800      	ldr	r0, [r0, #0]
  11274e:	f7ff ffcc 	bl	1126ea <_vsniprintf_r>
  112752:	b003      	add	sp, #12
  112754:	f85d fb04 	ldr.w	pc, [sp], #4
  112758:	3fff4264 	.word	0x3fff4264

0011275c <__swbuf_r>:
  11275c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  11275e:	460f      	mov	r7, r1
  112760:	4614      	mov	r4, r2
  112762:	4606      	mov	r6, r0
  112764:	b118      	cbz	r0, 11276e <__swbuf_r+0x12>
  112766:	6983      	ldr	r3, [r0, #24]
  112768:	b90b      	cbnz	r3, 11276e <__swbuf_r+0x12>
  11276a:	f7fd f99f 	bl	10faac <__sinit>
  11276e:	4b22      	ldr	r3, [pc, #136]	; (1127f8 <__swbuf_r+0x9c>)
  112770:	429c      	cmp	r4, r3
  112772:	d101      	bne.n	112778 <__swbuf_r+0x1c>
  112774:	6874      	ldr	r4, [r6, #4]
  112776:	e008      	b.n	11278a <__swbuf_r+0x2e>
  112778:	4b20      	ldr	r3, [pc, #128]	; (1127fc <__swbuf_r+0xa0>)
  11277a:	429c      	cmp	r4, r3
  11277c:	d101      	bne.n	112782 <__swbuf_r+0x26>
  11277e:	68b4      	ldr	r4, [r6, #8]
  112780:	e003      	b.n	11278a <__swbuf_r+0x2e>
  112782:	4b1f      	ldr	r3, [pc, #124]	; (112800 <__swbuf_r+0xa4>)
  112784:	429c      	cmp	r4, r3
  112786:	bf08      	it	eq
  112788:	68f4      	ldreq	r4, [r6, #12]
  11278a:	69a3      	ldr	r3, [r4, #24]
  11278c:	60a3      	str	r3, [r4, #8]
  11278e:	89a3      	ldrh	r3, [r4, #12]
  112790:	071a      	lsls	r2, r3, #28
  112792:	d509      	bpl.n	1127a8 <__swbuf_r+0x4c>
  112794:	6923      	ldr	r3, [r4, #16]
  112796:	b13b      	cbz	r3, 1127a8 <__swbuf_r+0x4c>
  112798:	6823      	ldr	r3, [r4, #0]
  11279a:	6920      	ldr	r0, [r4, #16]
  11279c:	b2fd      	uxtb	r5, r7
  11279e:	1a18      	subs	r0, r3, r0
  1127a0:	6963      	ldr	r3, [r4, #20]
  1127a2:	4298      	cmp	r0, r3
  1127a4:	db0f      	blt.n	1127c6 <__swbuf_r+0x6a>
  1127a6:	e008      	b.n	1127ba <__swbuf_r+0x5e>
  1127a8:	4621      	mov	r1, r4
  1127aa:	4630      	mov	r0, r6
  1127ac:	f000 f83c 	bl	112828 <__swsetup_r>
  1127b0:	2800      	cmp	r0, #0
  1127b2:	d0f1      	beq.n	112798 <__swbuf_r+0x3c>
  1127b4:	f04f 30ff 	mov.w	r0, #4294967295
  1127b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1127ba:	4621      	mov	r1, r4
  1127bc:	4630      	mov	r0, r6
  1127be:	f7fd f8f9 	bl	10f9b4 <_fflush_r>
  1127c2:	2800      	cmp	r0, #0
  1127c4:	d1f6      	bne.n	1127b4 <__swbuf_r+0x58>
  1127c6:	68a3      	ldr	r3, [r4, #8]
  1127c8:	3b01      	subs	r3, #1
  1127ca:	60a3      	str	r3, [r4, #8]
  1127cc:	6823      	ldr	r3, [r4, #0]
  1127ce:	1c5a      	adds	r2, r3, #1
  1127d0:	6022      	str	r2, [r4, #0]
  1127d2:	701f      	strb	r7, [r3, #0]
  1127d4:	6962      	ldr	r2, [r4, #20]
  1127d6:	1c43      	adds	r3, r0, #1
  1127d8:	4293      	cmp	r3, r2
  1127da:	d004      	beq.n	1127e6 <__swbuf_r+0x8a>
  1127dc:	89a3      	ldrh	r3, [r4, #12]
  1127de:	07db      	lsls	r3, r3, #31
  1127e0:	d507      	bpl.n	1127f2 <__swbuf_r+0x96>
  1127e2:	2d0a      	cmp	r5, #10
  1127e4:	d105      	bne.n	1127f2 <__swbuf_r+0x96>
  1127e6:	4621      	mov	r1, r4
  1127e8:	4630      	mov	r0, r6
  1127ea:	f7fd f8e3 	bl	10f9b4 <_fflush_r>
  1127ee:	2800      	cmp	r0, #0
  1127f0:	d1e0      	bne.n	1127b4 <__swbuf_r+0x58>
  1127f2:	4628      	mov	r0, r5
  1127f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  1127f6:	bf00      	nop
  1127f8:	00119f10 	.word	0x00119f10
  1127fc:	00119f30 	.word	0x00119f30
  112800:	00119f50 	.word	0x00119f50

00112804 <_write_r>:
  112804:	b538      	push	{r3, r4, r5, lr}
  112806:	4c07      	ldr	r4, [pc, #28]	; (112824 <_write_r+0x20>)
  112808:	4605      	mov	r5, r0
  11280a:	4608      	mov	r0, r1
  11280c:	4611      	mov	r1, r2
  11280e:	2200      	movs	r2, #0
  112810:	6022      	str	r2, [r4, #0]
  112812:	461a      	mov	r2, r3
  112814:	f7fa fe8a 	bl	10d52c <_write>
  112818:	1c43      	adds	r3, r0, #1
  11281a:	d102      	bne.n	112822 <_write_r+0x1e>
  11281c:	6823      	ldr	r3, [r4, #0]
  11281e:	b103      	cbz	r3, 112822 <_write_r+0x1e>
  112820:	602b      	str	r3, [r5, #0]
  112822:	bd38      	pop	{r3, r4, r5, pc}
  112824:	3fff9f18 	.word	0x3fff9f18

00112828 <__swsetup_r>:
  112828:	4b31      	ldr	r3, [pc, #196]	; (1128f0 <__swsetup_r+0xc8>)
  11282a:	b570      	push	{r4, r5, r6, lr}
  11282c:	681d      	ldr	r5, [r3, #0]
  11282e:	4606      	mov	r6, r0
  112830:	460c      	mov	r4, r1
  112832:	b125      	cbz	r5, 11283e <__swsetup_r+0x16>
  112834:	69ab      	ldr	r3, [r5, #24]
  112836:	b913      	cbnz	r3, 11283e <__swsetup_r+0x16>
  112838:	4628      	mov	r0, r5
  11283a:	f7fd f937 	bl	10faac <__sinit>
  11283e:	4b2d      	ldr	r3, [pc, #180]	; (1128f4 <__swsetup_r+0xcc>)
  112840:	429c      	cmp	r4, r3
  112842:	d101      	bne.n	112848 <__swsetup_r+0x20>
  112844:	686c      	ldr	r4, [r5, #4]
  112846:	e008      	b.n	11285a <__swsetup_r+0x32>
  112848:	4b2b      	ldr	r3, [pc, #172]	; (1128f8 <__swsetup_r+0xd0>)
  11284a:	429c      	cmp	r4, r3
  11284c:	d101      	bne.n	112852 <__swsetup_r+0x2a>
  11284e:	68ac      	ldr	r4, [r5, #8]
  112850:	e003      	b.n	11285a <__swsetup_r+0x32>
  112852:	4b2a      	ldr	r3, [pc, #168]	; (1128fc <__swsetup_r+0xd4>)
  112854:	429c      	cmp	r4, r3
  112856:	bf08      	it	eq
  112858:	68ec      	ldreq	r4, [r5, #12]
  11285a:	89a3      	ldrh	r3, [r4, #12]
  11285c:	b29a      	uxth	r2, r3
  11285e:	0711      	lsls	r1, r2, #28
  112860:	d41d      	bmi.n	11289e <__swsetup_r+0x76>
  112862:	06d5      	lsls	r5, r2, #27
  112864:	d402      	bmi.n	11286c <__swsetup_r+0x44>
  112866:	2209      	movs	r2, #9
  112868:	6032      	str	r2, [r6, #0]
  11286a:	e038      	b.n	1128de <__swsetup_r+0xb6>
  11286c:	0750      	lsls	r0, r2, #29
  11286e:	d512      	bpl.n	112896 <__swsetup_r+0x6e>
  112870:	6b61      	ldr	r1, [r4, #52]	; 0x34
  112872:	b141      	cbz	r1, 112886 <__swsetup_r+0x5e>
  112874:	f104 0344 	add.w	r3, r4, #68	; 0x44
  112878:	4299      	cmp	r1, r3
  11287a:	d002      	beq.n	112882 <__swsetup_r+0x5a>
  11287c:	4630      	mov	r0, r6
  11287e:	f7fa fe1a 	bl	10d4b6 <__wrap__free_r>
  112882:	2300      	movs	r3, #0
  112884:	6363      	str	r3, [r4, #52]	; 0x34
  112886:	89a3      	ldrh	r3, [r4, #12]
  112888:	f023 0324 	bic.w	r3, r3, #36	; 0x24
  11288c:	81a3      	strh	r3, [r4, #12]
  11288e:	2300      	movs	r3, #0
  112890:	6063      	str	r3, [r4, #4]
  112892:	6923      	ldr	r3, [r4, #16]
  112894:	6023      	str	r3, [r4, #0]
  112896:	89a3      	ldrh	r3, [r4, #12]
  112898:	f043 0308 	orr.w	r3, r3, #8
  11289c:	81a3      	strh	r3, [r4, #12]
  11289e:	6923      	ldr	r3, [r4, #16]
  1128a0:	b94b      	cbnz	r3, 1128b6 <__swsetup_r+0x8e>
  1128a2:	89a3      	ldrh	r3, [r4, #12]
  1128a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
  1128a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  1128ac:	d003      	beq.n	1128b6 <__swsetup_r+0x8e>
  1128ae:	4621      	mov	r1, r4
  1128b0:	4630      	mov	r0, r6
  1128b2:	f7fd fa99 	bl	10fde8 <__smakebuf_r>
  1128b6:	89a3      	ldrh	r3, [r4, #12]
  1128b8:	f013 0201 	ands.w	r2, r3, #1
  1128bc:	d005      	beq.n	1128ca <__swsetup_r+0xa2>
  1128be:	2200      	movs	r2, #0
  1128c0:	60a2      	str	r2, [r4, #8]
  1128c2:	6962      	ldr	r2, [r4, #20]
  1128c4:	4252      	negs	r2, r2
  1128c6:	61a2      	str	r2, [r4, #24]
  1128c8:	e003      	b.n	1128d2 <__swsetup_r+0xaa>
  1128ca:	0799      	lsls	r1, r3, #30
  1128cc:	bf58      	it	pl
  1128ce:	6962      	ldrpl	r2, [r4, #20]
  1128d0:	60a2      	str	r2, [r4, #8]
  1128d2:	6922      	ldr	r2, [r4, #16]
  1128d4:	b94a      	cbnz	r2, 1128ea <__swsetup_r+0xc2>
  1128d6:	f003 0080 	and.w	r0, r3, #128	; 0x80
  1128da:	b280      	uxth	r0, r0
  1128dc:	b130      	cbz	r0, 1128ec <__swsetup_r+0xc4>
  1128de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  1128e2:	81a3      	strh	r3, [r4, #12]
  1128e4:	f04f 30ff 	mov.w	r0, #4294967295
  1128e8:	bd70      	pop	{r4, r5, r6, pc}
  1128ea:	2000      	movs	r0, #0
  1128ec:	bd70      	pop	{r4, r5, r6, pc}
  1128ee:	bf00      	nop
  1128f0:	3fff4264 	.word	0x3fff4264
  1128f4:	00119f10 	.word	0x00119f10
  1128f8:	00119f30 	.word	0x00119f30
  1128fc:	00119f50 	.word	0x00119f50

00112900 <_close_r>:
  112900:	b538      	push	{r3, r4, r5, lr}
  112902:	4c06      	ldr	r4, [pc, #24]	; (11291c <_close_r+0x1c>)
  112904:	2300      	movs	r3, #0
  112906:	4605      	mov	r5, r0
  112908:	4608      	mov	r0, r1
  11290a:	6023      	str	r3, [r4, #0]
  11290c:	f7fa fdee 	bl	10d4ec <_close>
  112910:	1c43      	adds	r3, r0, #1
  112912:	d102      	bne.n	11291a <_close_r+0x1a>
  112914:	6823      	ldr	r3, [r4, #0]
  112916:	b103      	cbz	r3, 11291a <_close_r+0x1a>
  112918:	602b      	str	r3, [r5, #0]
  11291a:	bd38      	pop	{r3, r4, r5, pc}
  11291c:	3fff9f18 	.word	0x3fff9f18

00112920 <quorem>:
  112920:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  112924:	6903      	ldr	r3, [r0, #16]
  112926:	690c      	ldr	r4, [r1, #16]
  112928:	4680      	mov	r8, r0
  11292a:	429c      	cmp	r4, r3
  11292c:	dc7f      	bgt.n	112a2e <quorem+0x10e>
  11292e:	3c01      	subs	r4, #1
  112930:	f101 0714 	add.w	r7, r1, #20
  112934:	ea4f 0e84 	mov.w	lr, r4, lsl #2
  112938:	f100 0614 	add.w	r6, r0, #20
  11293c:	eb06 030e 	add.w	r3, r6, lr
  112940:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
  112944:	9301      	str	r3, [sp, #4]
  112946:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
  11294a:	3501      	adds	r5, #1
  11294c:	fbb3 f5f5 	udiv	r5, r3, r5
  112950:	eb07 090e 	add.w	r9, r7, lr
  112954:	b3c5      	cbz	r5, 1129c8 <quorem+0xa8>
  112956:	f04f 0a00 	mov.w	r10, #0
  11295a:	4638      	mov	r0, r7
  11295c:	46b4      	mov	r12, r6
  11295e:	46d3      	mov	r11, r10
  112960:	f850 3b04 	ldr.w	r3, [r0], #4
  112964:	b29a      	uxth	r2, r3
  112966:	fb05 a202 	mla	r2, r5, r2, r10
  11296a:	0c1b      	lsrs	r3, r3, #16
  11296c:	ea4f 4a12 	mov.w	r10, r2, lsr #16
  112970:	fb05 a303 	mla	r3, r5, r3, r10
  112974:	b292      	uxth	r2, r2
  112976:	ebc2 0b0b 	rsb	r11, r2, r11
  11297a:	f8bc 2000 	ldrh.w	r2, [r12]
  11297e:	ea4f 4a13 	mov.w	r10, r3, lsr #16
  112982:	445a      	add	r2, r11
  112984:	fa1f fb83 	uxth.w	r11, r3
  112988:	f8dc 3000 	ldr.w	r3, [r12]
  11298c:	4581      	cmp	r9, r0
  11298e:	ebcb 4313 	rsb	r3, r11, r3, lsr #16
  112992:	eb03 4322 	add.w	r3, r3, r2, asr #16
  112996:	b292      	uxth	r2, r2
  112998:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  11299c:	ea4f 4b23 	mov.w	r11, r3, asr #16
  1129a0:	f84c 2b04 	str.w	r2, [r12], #4
  1129a4:	d2dc      	bcs.n	112960 <quorem+0x40>
  1129a6:	f856 300e 	ldr.w	r3, [r6, lr]
  1129aa:	b96b      	cbnz	r3, 1129c8 <quorem+0xa8>
  1129ac:	9b01      	ldr	r3, [sp, #4]
  1129ae:	3b04      	subs	r3, #4
  1129b0:	429e      	cmp	r6, r3
  1129b2:	461a      	mov	r2, r3
  1129b4:	d302      	bcc.n	1129bc <quorem+0x9c>
  1129b6:	f8c8 4010 	str.w	r4, [r8, #16]
  1129ba:	e005      	b.n	1129c8 <quorem+0xa8>
  1129bc:	6812      	ldr	r2, [r2, #0]
  1129be:	3b04      	subs	r3, #4
  1129c0:	2a00      	cmp	r2, #0
  1129c2:	d1f8      	bne.n	1129b6 <quorem+0x96>
  1129c4:	3c01      	subs	r4, #1
  1129c6:	e7f3      	b.n	1129b0 <quorem+0x90>
  1129c8:	4640      	mov	r0, r8
  1129ca:	f001 fba2 	bl	114112 <__mcmp>
  1129ce:	2800      	cmp	r0, #0
  1129d0:	db2b      	blt.n	112a2a <quorem+0x10a>
  1129d2:	4630      	mov	r0, r6
  1129d4:	3501      	adds	r5, #1
  1129d6:	f04f 0e00 	mov.w	lr, #0
  1129da:	f857 2b04 	ldr.w	r2, [r7], #4
  1129de:	6803      	ldr	r3, [r0, #0]
  1129e0:	b291      	uxth	r1, r2
  1129e2:	ebc1 0e0e 	rsb	lr, r1, lr
  1129e6:	0c12      	lsrs	r2, r2, #16
  1129e8:	b299      	uxth	r1, r3
  1129ea:	4471      	add	r1, lr
  1129ec:	ebc2 4313 	rsb	r3, r2, r3, lsr #16
  1129f0:	eb03 4321 	add.w	r3, r3, r1, asr #16
  1129f4:	b289      	uxth	r1, r1
  1129f6:	ea4f 4e23 	mov.w	lr, r3, asr #16
  1129fa:	45b9      	cmp	r9, r7
  1129fc:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
  112a00:	f840 3b04 	str.w	r3, [r0], #4
  112a04:	d2e9      	bcs.n	1129da <quorem+0xba>
  112a06:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
  112a0a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
  112a0e:	b962      	cbnz	r2, 112a2a <quorem+0x10a>
  112a10:	3b04      	subs	r3, #4
  112a12:	429e      	cmp	r6, r3
  112a14:	461a      	mov	r2, r3
  112a16:	d302      	bcc.n	112a1e <quorem+0xfe>
  112a18:	f8c8 4010 	str.w	r4, [r8, #16]
  112a1c:	e005      	b.n	112a2a <quorem+0x10a>
  112a1e:	6812      	ldr	r2, [r2, #0]
  112a20:	3b04      	subs	r3, #4
  112a22:	2a00      	cmp	r2, #0
  112a24:	d1f8      	bne.n	112a18 <quorem+0xf8>
  112a26:	3c01      	subs	r4, #1
  112a28:	e7f3      	b.n	112a12 <quorem+0xf2>
  112a2a:	4628      	mov	r0, r5
  112a2c:	e000      	b.n	112a30 <quorem+0x110>
  112a2e:	2000      	movs	r0, #0
  112a30:	b003      	add	sp, #12
  112a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
	...

00112a38 <_dtoa_r>:
  112a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  112a3c:	6a45      	ldr	r5, [r0, #36]	; 0x24
  112a3e:	b095      	sub	sp, #84	; 0x54
  112a40:	4682      	mov	r10, r0
  112a42:	9c21      	ldr	r4, [sp, #132]	; 0x84
  112a44:	e9cd 2302 	strd	r2, r3, [sp, #8]
  112a48:	b945      	cbnz	r5, 112a5c <_dtoa_r+0x24>
  112a4a:	2010      	movs	r0, #16
  112a4c:	f7fd fa18 	bl	10fe80 <malloc>
  112a50:	f8ca 0024 	str.w	r0, [r10, #36]	; 0x24
  112a54:	6045      	str	r5, [r0, #4]
  112a56:	6085      	str	r5, [r0, #8]
  112a58:	6005      	str	r5, [r0, #0]
  112a5a:	60c5      	str	r5, [r0, #12]
  112a5c:	f8da 3024 	ldr.w	r3, [r10, #36]	; 0x24
  112a60:	6819      	ldr	r1, [r3, #0]
  112a62:	b159      	cbz	r1, 112a7c <_dtoa_r+0x44>
  112a64:	685a      	ldr	r2, [r3, #4]
  112a66:	2301      	movs	r3, #1
  112a68:	4093      	lsls	r3, r2
  112a6a:	604a      	str	r2, [r1, #4]
  112a6c:	608b      	str	r3, [r1, #8]
  112a6e:	4650      	mov	r0, r10
  112a70:	f001 f939 	bl	113ce6 <_Bfree>
  112a74:	f8da 3024 	ldr.w	r3, [r10, #36]	; 0x24
  112a78:	2200      	movs	r2, #0
  112a7a:	601a      	str	r2, [r3, #0]
  112a7c:	9b03      	ldr	r3, [sp, #12]
  112a7e:	4aa0      	ldr	r2, [pc, #640]	; (112d00 <_dtoa_r+0x2c8>)
  112a80:	2b00      	cmp	r3, #0
  112a82:	bfbd      	ittte	lt
  112a84:	2301      	movlt	r3, #1
  112a86:	6023      	strlt	r3, [r4, #0]
  112a88:	9b03      	ldrlt	r3, [sp, #12]
  112a8a:	2300      	movge	r3, #0
  112a8c:	bfbc      	itt	lt
  112a8e:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
  112a92:	9303      	strlt	r3, [sp, #12]
  112a94:	f8dd 800c 	ldr.w	r8, [sp, #12]
  112a98:	bfa8      	it	ge
  112a9a:	6023      	strge	r3, [r4, #0]
  112a9c:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
  112aa0:	0d1b      	lsrs	r3, r3, #20
  112aa2:	051b      	lsls	r3, r3, #20
  112aa4:	4293      	cmp	r3, r2
  112aa6:	d11d      	bne.n	112ae4 <_dtoa_r+0xac>
  112aa8:	f242 730f 	movw	r3, #9999	; 0x270f
  112aac:	9a20      	ldr	r2, [sp, #128]	; 0x80
  112aae:	6013      	str	r3, [r2, #0]
  112ab0:	9b02      	ldr	r3, [sp, #8]
  112ab2:	b943      	cbnz	r3, 112ac6 <_dtoa_r+0x8e>
  112ab4:	4a93      	ldr	r2, [pc, #588]	; (112d04 <_dtoa_r+0x2cc>)
  112ab6:	4b94      	ldr	r3, [pc, #592]	; (112d08 <_dtoa_r+0x2d0>)
  112ab8:	f3c8 0013 	ubfx	r0, r8, #0, #20
  112abc:	2800      	cmp	r0, #0
  112abe:	bf14      	ite	ne
  112ac0:	4618      	movne	r0, r3
  112ac2:	4610      	moveq	r0, r2
  112ac4:	e000      	b.n	112ac8 <_dtoa_r+0x90>
  112ac6:	4890      	ldr	r0, [pc, #576]	; (112d08 <_dtoa_r+0x2d0>)
  112ac8:	9b22      	ldr	r3, [sp, #136]	; 0x88
  112aca:	2b00      	cmp	r3, #0
  112acc:	f000 8546 	beq.w	11355c <_dtoa_r+0xb24>
  112ad0:	78c3      	ldrb	r3, [r0, #3]
  112ad2:	b113      	cbz	r3, 112ada <_dtoa_r+0xa2>
  112ad4:	f100 0308 	add.w	r3, r0, #8
  112ad8:	e000      	b.n	112adc <_dtoa_r+0xa4>
  112ada:	1cc3      	adds	r3, r0, #3
  112adc:	9a22      	ldr	r2, [sp, #136]	; 0x88
  112ade:	6013      	str	r3, [r2, #0]
  112ae0:	f000 bd3c 	b.w	11355c <_dtoa_r+0xb24>
  112ae4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  112ae8:	2200      	movs	r2, #0
  112aea:	2300      	movs	r3, #0
  112aec:	4620      	mov	r0, r4
  112aee:	4629      	mov	r1, r5
  112af0:	f7fc f9ba 	bl	10ee68 <__aeabi_dcmpeq>
  112af4:	4607      	mov	r7, r0
  112af6:	b158      	cbz	r0, 112b10 <_dtoa_r+0xd8>
  112af8:	9a20      	ldr	r2, [sp, #128]	; 0x80
  112afa:	2301      	movs	r3, #1
  112afc:	6013      	str	r3, [r2, #0]
  112afe:	9b22      	ldr	r3, [sp, #136]	; 0x88
  112b00:	2b00      	cmp	r3, #0
  112b02:	f000 851e 	beq.w	113542 <_dtoa_r+0xb0a>
  112b06:	4881      	ldr	r0, [pc, #516]	; (112d0c <_dtoa_r+0x2d4>)
  112b08:	6018      	str	r0, [r3, #0]
  112b0a:	3801      	subs	r0, #1
  112b0c:	f000 bd26 	b.w	11355c <_dtoa_r+0xb24>
  112b10:	ab12      	add	r3, sp, #72	; 0x48
  112b12:	9301      	str	r3, [sp, #4]
  112b14:	ab13      	add	r3, sp, #76	; 0x4c
  112b16:	9300      	str	r3, [sp, #0]
  112b18:	4622      	mov	r2, r4
  112b1a:	462b      	mov	r3, r5
  112b1c:	4650      	mov	r0, r10
  112b1e:	f001 fbe4 	bl	1142ea <__d2b>
  112b22:	f3c8 560a 	ubfx	r6, r8, #20, #11
  112b26:	9004      	str	r0, [sp, #16]
  112b28:	b156      	cbz	r6, 112b40 <_dtoa_r+0x108>
  112b2a:	f3c5 0313 	ubfx	r3, r5, #0, #20
  112b2e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
  112b32:	4620      	mov	r0, r4
  112b34:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  112b38:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
  112b3c:	9711      	str	r7, [sp, #68]	; 0x44
  112b3e:	e01d      	b.n	112b7c <_dtoa_r+0x144>
  112b40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  112b42:	9e12      	ldr	r6, [sp, #72]	; 0x48
  112b44:	441e      	add	r6, r3
  112b46:	f206 4332 	addw	r3, r6, #1074	; 0x432
  112b4a:	2b20      	cmp	r3, #32
  112b4c:	dd0a      	ble.n	112b64 <_dtoa_r+0x12c>
  112b4e:	9a02      	ldr	r2, [sp, #8]
  112b50:	f206 4012 	addw	r0, r6, #1042	; 0x412
  112b54:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  112b58:	fa22 f000 	lsr.w	r0, r2, r0
  112b5c:	fa08 f303 	lsl.w	r3, r8, r3
  112b60:	4318      	orrs	r0, r3
  112b62:	e004      	b.n	112b6e <_dtoa_r+0x136>
  112b64:	f1c3 0020 	rsb	r0, r3, #32
  112b68:	9b02      	ldr	r3, [sp, #8]
  112b6a:	fa03 f000 	lsl.w	r0, r3, r0
  112b6e:	f7fb fe9d 	bl	10e8ac <__aeabi_ui2d>
  112b72:	2301      	movs	r3, #1
  112b74:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  112b78:	3e01      	subs	r6, #1
  112b7a:	9311      	str	r3, [sp, #68]	; 0x44
  112b7c:	2200      	movs	r2, #0
  112b7e:	4b64      	ldr	r3, [pc, #400]	; (112d10 <_dtoa_r+0x2d8>)
  112b80:	f7fb fd56 	bl	10e630 <__aeabi_dsub>
  112b84:	a358      	add	r3, pc, #352	; (adr r3, 112ce8 <_dtoa_r+0x2b0>)
  112b86:	e9d3 2300 	ldrd	r2, r3, [r3]
  112b8a:	f7fb ff05 	bl	10e998 <__aeabi_dmul>
  112b8e:	a358      	add	r3, pc, #352	; (adr r3, 112cf0 <_dtoa_r+0x2b8>)
  112b90:	e9d3 2300 	ldrd	r2, r3, [r3]
  112b94:	f7fb fd4e 	bl	10e634 <__adddf3>
  112b98:	4604      	mov	r4, r0
  112b9a:	4630      	mov	r0, r6
  112b9c:	460d      	mov	r5, r1
  112b9e:	f7fb fe95 	bl	10e8cc <__aeabi_i2d>
  112ba2:	a355      	add	r3, pc, #340	; (adr r3, 112cf8 <_dtoa_r+0x2c0>)
  112ba4:	e9d3 2300 	ldrd	r2, r3, [r3]
  112ba8:	f7fb fef6 	bl	10e998 <__aeabi_dmul>
  112bac:	4602      	mov	r2, r0
  112bae:	460b      	mov	r3, r1
  112bb0:	4620      	mov	r0, r4
  112bb2:	4629      	mov	r1, r5
  112bb4:	f7fb fd3e 	bl	10e634 <__adddf3>
  112bb8:	4604      	mov	r4, r0
  112bba:	460d      	mov	r5, r1
  112bbc:	f001 ff5a 	bl	114a74 <__aeabi_d2iz>
  112bc0:	2200      	movs	r2, #0
  112bc2:	4683      	mov	r11, r0
  112bc4:	2300      	movs	r3, #0
  112bc6:	4620      	mov	r0, r4
  112bc8:	4629      	mov	r1, r5
  112bca:	f7fc f957 	bl	10ee7c <__aeabi_dcmplt>
  112bce:	b158      	cbz	r0, 112be8 <_dtoa_r+0x1b0>
  112bd0:	4658      	mov	r0, r11
  112bd2:	f7fb fe7b 	bl	10e8cc <__aeabi_i2d>
  112bd6:	4602      	mov	r2, r0
  112bd8:	460b      	mov	r3, r1
  112bda:	4620      	mov	r0, r4
  112bdc:	4629      	mov	r1, r5
  112bde:	f7fc f943 	bl	10ee68 <__aeabi_dcmpeq>
  112be2:	b908      	cbnz	r0, 112be8 <_dtoa_r+0x1b0>
  112be4:	f10b 3bff 	add.w	r11, r11, #4294967295
  112be8:	f1bb 0f16 	cmp.w	r11, #22
  112bec:	d80d      	bhi.n	112c0a <_dtoa_r+0x1d2>
  112bee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  112bf2:	4948      	ldr	r1, [pc, #288]	; (112d14 <_dtoa_r+0x2dc>)
  112bf4:	eb01 01cb 	add.w	r1, r1, r11, lsl #3
  112bf8:	e9d1 0100 	ldrd	r0, r1, [r1]
  112bfc:	f7fc f95c 	bl	10eeb8 <__aeabi_dcmpgt>
  112c00:	b130      	cbz	r0, 112c10 <_dtoa_r+0x1d8>
  112c02:	f10b 3bff 	add.w	r11, r11, #4294967295
  112c06:	2300      	movs	r3, #0
  112c08:	e000      	b.n	112c0c <_dtoa_r+0x1d4>
  112c0a:	2301      	movs	r3, #1
  112c0c:	9310      	str	r3, [sp, #64]	; 0x40
  112c0e:	e000      	b.n	112c12 <_dtoa_r+0x1da>
  112c10:	9010      	str	r0, [sp, #64]	; 0x40
  112c12:	9b12      	ldr	r3, [sp, #72]	; 0x48
  112c14:	1b9e      	subs	r6, r3, r6
  112c16:	1e73      	subs	r3, r6, #1
  112c18:	9307      	str	r3, [sp, #28]
  112c1a:	bf43      	ittte	mi
  112c1c:	f1c3 0800 	rsbmi	r8, r3, #0
  112c20:	2300      	movmi	r3, #0
  112c22:	9307      	strmi	r3, [sp, #28]
  112c24:	f04f 0800 	movpl.w	r8, #0
  112c28:	f1bb 0f00 	cmp.w	r11, #0
  112c2c:	db06      	blt.n	112c3c <_dtoa_r+0x204>
  112c2e:	9b07      	ldr	r3, [sp, #28]
  112c30:	f8cd b02c 	str.w	r11, [sp, #44]	; 0x2c
  112c34:	445b      	add	r3, r11
  112c36:	9307      	str	r3, [sp, #28]
  112c38:	2700      	movs	r7, #0
  112c3a:	e005      	b.n	112c48 <_dtoa_r+0x210>
  112c3c:	2300      	movs	r3, #0
  112c3e:	ebcb 0808 	rsb	r8, r11, r8
  112c42:	f1cb 0700 	rsb	r7, r11, #0
  112c46:	930b      	str	r3, [sp, #44]	; 0x2c
  112c48:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  112c4a:	2b09      	cmp	r3, #9
  112c4c:	d828      	bhi.n	112ca0 <_dtoa_r+0x268>
  112c4e:	2b05      	cmp	r3, #5
  112c50:	bfc4      	itt	gt
  112c52:	3b04      	subgt	r3, #4
  112c54:	931e      	strgt	r3, [sp, #120]	; 0x78
  112c56:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  112c58:	bfc8      	it	gt
  112c5a:	2500      	movgt	r5, #0
  112c5c:	f1a3 0302 	sub.w	r3, r3, #2
  112c60:	bfd8      	it	le
  112c62:	2501      	movle	r5, #1
  112c64:	2b03      	cmp	r3, #3
  112c66:	d820      	bhi.n	112caa <_dtoa_r+0x272>
  112c68:	e8df f003 	tbb	[pc, r3]
  112c6c:	04020e06 	.word	0x04020e06
  112c70:	2301      	movs	r3, #1
  112c72:	e002      	b.n	112c7a <_dtoa_r+0x242>
  112c74:	2301      	movs	r3, #1
  112c76:	e008      	b.n	112c8a <_dtoa_r+0x252>
  112c78:	2300      	movs	r3, #0
  112c7a:	930a      	str	r3, [sp, #40]	; 0x28
  112c7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  112c7e:	2b00      	cmp	r3, #0
  112c80:	dd1d      	ble.n	112cbe <_dtoa_r+0x286>
  112c82:	4699      	mov	r9, r3
  112c84:	9305      	str	r3, [sp, #20]
  112c86:	e021      	b.n	112ccc <_dtoa_r+0x294>
  112c88:	2300      	movs	r3, #0
  112c8a:	930a      	str	r3, [sp, #40]	; 0x28
  112c8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  112c8e:	eb0b 0903 	add.w	r9, r11, r3
  112c92:	f109 0301 	add.w	r3, r9, #1
  112c96:	2b01      	cmp	r3, #1
  112c98:	9305      	str	r3, [sp, #20]
  112c9a:	bfb8      	it	lt
  112c9c:	2301      	movlt	r3, #1
  112c9e:	e015      	b.n	112ccc <_dtoa_r+0x294>
  112ca0:	2501      	movs	r5, #1
  112ca2:	2300      	movs	r3, #0
  112ca4:	931e      	str	r3, [sp, #120]	; 0x78
  112ca6:	950a      	str	r5, [sp, #40]	; 0x28
  112ca8:	e001      	b.n	112cae <_dtoa_r+0x276>
  112caa:	2301      	movs	r3, #1
  112cac:	930a      	str	r3, [sp, #40]	; 0x28
  112cae:	f04f 39ff 	mov.w	r9, #4294967295
  112cb2:	2200      	movs	r2, #0
  112cb4:	f8cd 9014 	str.w	r9, [sp, #20]
  112cb8:	2312      	movs	r3, #18
  112cba:	921f      	str	r2, [sp, #124]	; 0x7c
  112cbc:	e006      	b.n	112ccc <_dtoa_r+0x294>
  112cbe:	f04f 0901 	mov.w	r9, #1
  112cc2:	464b      	mov	r3, r9
  112cc4:	f8cd 9014 	str.w	r9, [sp, #20]
  112cc8:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
  112ccc:	f8da 4024 	ldr.w	r4, [r10, #36]	; 0x24
  112cd0:	2200      	movs	r2, #0
  112cd2:	6062      	str	r2, [r4, #4]
  112cd4:	2104      	movs	r1, #4
  112cd6:	f101 0214 	add.w	r2, r1, #20
  112cda:	429a      	cmp	r2, r3
  112cdc:	d81c      	bhi.n	112d18 <_dtoa_r+0x2e0>
  112cde:	6862      	ldr	r2, [r4, #4]
  112ce0:	0049      	lsls	r1, r1, #1
  112ce2:	3201      	adds	r2, #1
  112ce4:	6062      	str	r2, [r4, #4]
  112ce6:	e7f6      	b.n	112cd6 <_dtoa_r+0x29e>
  112ce8:	636f4361 	.word	0x636f4361
  112cec:	3fd287a7 	.word	0x3fd287a7
  112cf0:	8b60c8b3 	.word	0x8b60c8b3
  112cf4:	3fc68a28 	.word	0x3fc68a28
  112cf8:	509f79fb 	.word	0x509f79fb
  112cfc:	3fd34413 	.word	0x3fd34413
  112d00:	7ff00000 	.word	0x7ff00000
  112d04:	0011a038 	.word	0x0011a038
  112d08:	0011a041 	.word	0x0011a041
  112d0c:	00118313 	.word	0x00118313
  112d10:	3ff80000 	.word	0x3ff80000
  112d14:	0011a048 	.word	0x0011a048
  112d18:	6861      	ldr	r1, [r4, #4]
  112d1a:	4650      	mov	r0, r10
  112d1c:	f000 ffae 	bl	113c7c <_Balloc>
  112d20:	f8da 3024 	ldr.w	r3, [r10, #36]	; 0x24
  112d24:	6020      	str	r0, [r4, #0]
  112d26:	681b      	ldr	r3, [r3, #0]
  112d28:	9306      	str	r3, [sp, #24]
  112d2a:	9b05      	ldr	r3, [sp, #20]
  112d2c:	2b0e      	cmp	r3, #14
  112d2e:	f200 815b 	bhi.w	112fe8 <_dtoa_r+0x5b0>
  112d32:	2d00      	cmp	r5, #0
  112d34:	f000 8158 	beq.w	112fe8 <_dtoa_r+0x5b0>
  112d38:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
  112d3c:	f1bb 0f00 	cmp.w	r11, #0
  112d40:	e9cd 340e 	strd	r3, r4, [sp, #56]	; 0x38
  112d44:	dd30      	ble.n	112da8 <_dtoa_r+0x370>
  112d46:	4a9f      	ldr	r2, [pc, #636]	; (112fc4 <_dtoa_r+0x58c>)
  112d48:	f00b 030f 	and.w	r3, r11, #15
  112d4c:	ea4f 152b 	mov.w	r5, r11, asr #4
  112d50:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  112d54:	06e8      	lsls	r0, r5, #27
  112d56:	cb18      	ldmia	r3, {r3, r4}
  112d58:	e9cd 3408 	strd	r3, r4, [sp, #32]
  112d5c:	d50c      	bpl.n	112d78 <_dtoa_r+0x340>
  112d5e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  112d62:	4b99      	ldr	r3, [pc, #612]	; (112fc8 <_dtoa_r+0x590>)
  112d64:	f005 050f 	and.w	r5, r5, #15
  112d68:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  112d6c:	f7fb ff3e 	bl	10ebec <__aeabi_ddiv>
  112d70:	2403      	movs	r4, #3
  112d72:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112d76:	e000      	b.n	112d7a <_dtoa_r+0x342>
  112d78:	2402      	movs	r4, #2
  112d7a:	4e93      	ldr	r6, [pc, #588]	; (112fc8 <_dtoa_r+0x590>)
  112d7c:	b16d      	cbz	r5, 112d9a <_dtoa_r+0x362>
  112d7e:	07e9      	lsls	r1, r5, #31
  112d80:	d508      	bpl.n	112d94 <_dtoa_r+0x35c>
  112d82:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  112d86:	e9d6 2300 	ldrd	r2, r3, [r6]
  112d8a:	f7fb fe05 	bl	10e998 <__aeabi_dmul>
  112d8e:	e9cd 0108 	strd	r0, r1, [sp, #32]
  112d92:	3401      	adds	r4, #1
  112d94:	106d      	asrs	r5, r5, #1
  112d96:	3608      	adds	r6, #8
  112d98:	e7f0      	b.n	112d7c <_dtoa_r+0x344>
  112d9a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  112d9e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112da2:	f7fb ff23 	bl	10ebec <__aeabi_ddiv>
  112da6:	e020      	b.n	112dea <_dtoa_r+0x3b2>
  112da8:	f1cb 0500 	rsb	r5, r11, #0
  112dac:	b305      	cbz	r5, 112df0 <_dtoa_r+0x3b8>
  112dae:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  112db2:	4b84      	ldr	r3, [pc, #528]	; (112fc4 <_dtoa_r+0x58c>)
  112db4:	f005 020f 	and.w	r2, r5, #15
  112db8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  112dbc:	e9d3 2300 	ldrd	r2, r3, [r3]
  112dc0:	f7fb fdea 	bl	10e998 <__aeabi_dmul>
  112dc4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112dc8:	4e7f      	ldr	r6, [pc, #508]	; (112fc8 <_dtoa_r+0x590>)
  112dca:	112d      	asrs	r5, r5, #4
  112dcc:	2300      	movs	r3, #0
  112dce:	2402      	movs	r4, #2
  112dd0:	b155      	cbz	r5, 112de8 <_dtoa_r+0x3b0>
  112dd2:	07ea      	lsls	r2, r5, #31
  112dd4:	d505      	bpl.n	112de2 <_dtoa_r+0x3aa>
  112dd6:	e9d6 2300 	ldrd	r2, r3, [r6]
  112dda:	f7fb fddd 	bl	10e998 <__aeabi_dmul>
  112dde:	3401      	adds	r4, #1
  112de0:	2301      	movs	r3, #1
  112de2:	106d      	asrs	r5, r5, #1
  112de4:	3608      	adds	r6, #8
  112de6:	e7f3      	b.n	112dd0 <_dtoa_r+0x398>
  112de8:	b11b      	cbz	r3, 112df2 <_dtoa_r+0x3ba>
  112dea:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112dee:	e000      	b.n	112df2 <_dtoa_r+0x3ba>
  112df0:	2402      	movs	r4, #2
  112df2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  112df4:	b1e3      	cbz	r3, 112e30 <_dtoa_r+0x3f8>
  112df6:	e9dd 5602 	ldrd	r5, r6, [sp, #8]
  112dfa:	2200      	movs	r2, #0
  112dfc:	4b73      	ldr	r3, [pc, #460]	; (112fcc <_dtoa_r+0x594>)
  112dfe:	4628      	mov	r0, r5
  112e00:	4631      	mov	r1, r6
  112e02:	f7fc f83b 	bl	10ee7c <__aeabi_dcmplt>
  112e06:	b198      	cbz	r0, 112e30 <_dtoa_r+0x3f8>
  112e08:	9b05      	ldr	r3, [sp, #20]
  112e0a:	b18b      	cbz	r3, 112e30 <_dtoa_r+0x3f8>
  112e0c:	f1b9 0f00 	cmp.w	r9, #0
  112e10:	f340 80e6 	ble.w	112fe0 <_dtoa_r+0x5a8>
  112e14:	f10b 33ff 	add.w	r3, r11, #4294967295
  112e18:	9308      	str	r3, [sp, #32]
  112e1a:	4631      	mov	r1, r6
  112e1c:	2200      	movs	r2, #0
  112e1e:	4b6c      	ldr	r3, [pc, #432]	; (112fd0 <_dtoa_r+0x598>)
  112e20:	4628      	mov	r0, r5
  112e22:	f7fb fdb9 	bl	10e998 <__aeabi_dmul>
  112e26:	3401      	adds	r4, #1
  112e28:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112e2c:	464e      	mov	r6, r9
  112e2e:	e002      	b.n	112e36 <_dtoa_r+0x3fe>
  112e30:	9e05      	ldr	r6, [sp, #20]
  112e32:	f8cd b020 	str.w	r11, [sp, #32]
  112e36:	4620      	mov	r0, r4
  112e38:	f7fb fd48 	bl	10e8cc <__aeabi_i2d>
  112e3c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  112e40:	f7fb fdaa 	bl	10e998 <__aeabi_dmul>
  112e44:	4b63      	ldr	r3, [pc, #396]	; (112fd4 <_dtoa_r+0x59c>)
  112e46:	2200      	movs	r2, #0
  112e48:	f7fb fbf4 	bl	10e634 <__adddf3>
  112e4c:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
  112e50:	4604      	mov	r4, r0
  112e52:	930c      	str	r3, [sp, #48]	; 0x30
  112e54:	461d      	mov	r5, r3
  112e56:	b9d6      	cbnz	r6, 112e8e <_dtoa_r+0x456>
  112e58:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112e5c:	2200      	movs	r2, #0
  112e5e:	4b5e      	ldr	r3, [pc, #376]	; (112fd8 <_dtoa_r+0x5a0>)
  112e60:	f7fb fbe6 	bl	10e630 <__aeabi_dsub>
  112e64:	4622      	mov	r2, r4
  112e66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  112e68:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112e6c:	f7fc f824 	bl	10eeb8 <__aeabi_dcmpgt>
  112e70:	2800      	cmp	r0, #0
  112e72:	f040 823f 	bne.w	1132f4 <_dtoa_r+0x8bc>
  112e76:	990c      	ldr	r1, [sp, #48]	; 0x30
  112e78:	4622      	mov	r2, r4
  112e7a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  112e7e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112e82:	f7fb fffb 	bl	10ee7c <__aeabi_dcmplt>
  112e86:	2800      	cmp	r0, #0
  112e88:	f040 822b 	bne.w	1132e2 <_dtoa_r+0x8aa>
  112e8c:	e0a8      	b.n	112fe0 <_dtoa_r+0x5a8>
  112e8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  112e90:	4b4c      	ldr	r3, [pc, #304]	; (112fc4 <_dtoa_r+0x58c>)
  112e92:	1e71      	subs	r1, r6, #1
  112e94:	2a00      	cmp	r2, #0
  112e96:	d049      	beq.n	112f2c <_dtoa_r+0x4f4>
  112e98:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
  112e9c:	e9d3 2300 	ldrd	r2, r3, [r3]
  112ea0:	2000      	movs	r0, #0
  112ea2:	494e      	ldr	r1, [pc, #312]	; (112fdc <_dtoa_r+0x5a4>)
  112ea4:	f7fb fea2 	bl	10ebec <__aeabi_ddiv>
  112ea8:	4622      	mov	r2, r4
  112eaa:	462b      	mov	r3, r5
  112eac:	f7fb fbc0 	bl	10e630 <__aeabi_dsub>
  112eb0:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
  112eb4:	9c06      	ldr	r4, [sp, #24]
  112eb6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112eba:	f001 fddb 	bl	114a74 <__aeabi_d2iz>
  112ebe:	4605      	mov	r5, r0
  112ec0:	f7fb fd04 	bl	10e8cc <__aeabi_i2d>
  112ec4:	4602      	mov	r2, r0
  112ec6:	460b      	mov	r3, r1
  112ec8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112ecc:	f7fb fbb0 	bl	10e630 <__aeabi_dsub>
  112ed0:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  112ed4:	3530      	adds	r5, #48	; 0x30
  112ed6:	f804 5b01 	strb.w	r5, [r4], #1
  112eda:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112ede:	f7fb ffcd 	bl	10ee7c <__aeabi_dcmplt>
  112ee2:	2800      	cmp	r0, #0
  112ee4:	f040 831d 	bne.w	113522 <_dtoa_r+0xaea>
  112ee8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  112eec:	2000      	movs	r0, #0
  112eee:	4937      	ldr	r1, [pc, #220]	; (112fcc <_dtoa_r+0x594>)
  112ef0:	f7fb fb9e 	bl	10e630 <__aeabi_dsub>
  112ef4:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  112ef8:	f7fb ffc0 	bl	10ee7c <__aeabi_dcmplt>
  112efc:	2800      	cmp	r0, #0
  112efe:	f040 80d1 	bne.w	1130a4 <_dtoa_r+0x66c>
  112f02:	9b06      	ldr	r3, [sp, #24]
  112f04:	1ae3      	subs	r3, r4, r3
  112f06:	42b3      	cmp	r3, r6
  112f08:	da6a      	bge.n	112fe0 <_dtoa_r+0x5a8>
  112f0a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  112f0e:	2200      	movs	r2, #0
  112f10:	4b2f      	ldr	r3, [pc, #188]	; (112fd0 <_dtoa_r+0x598>)
  112f12:	f7fb fd41 	bl	10e998 <__aeabi_dmul>
  112f16:	2200      	movs	r2, #0
  112f18:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
  112f1c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112f20:	4b2b      	ldr	r3, [pc, #172]	; (112fd0 <_dtoa_r+0x598>)
  112f22:	f7fb fd39 	bl	10e998 <__aeabi_dmul>
  112f26:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112f2a:	e7c4      	b.n	112eb6 <_dtoa_r+0x47e>
  112f2c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
  112f30:	4622      	mov	r2, r4
  112f32:	e9d1 0100 	ldrd	r0, r1, [r1]
  112f36:	462b      	mov	r3, r5
  112f38:	f7fb fd2e 	bl	10e998 <__aeabi_dmul>
  112f3c:	9b06      	ldr	r3, [sp, #24]
  112f3e:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
  112f42:	461d      	mov	r5, r3
  112f44:	199c      	adds	r4, r3, r6
  112f46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112f4a:	f001 fd93 	bl	114a74 <__aeabi_d2iz>
  112f4e:	4606      	mov	r6, r0
  112f50:	f7fb fcbc 	bl	10e8cc <__aeabi_i2d>
  112f54:	4602      	mov	r2, r0
  112f56:	460b      	mov	r3, r1
  112f58:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112f5c:	f7fb fb68 	bl	10e630 <__aeabi_dsub>
  112f60:	3630      	adds	r6, #48	; 0x30
  112f62:	f805 6b01 	strb.w	r6, [r5], #1
  112f66:	42ac      	cmp	r4, r5
  112f68:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112f6c:	f04f 0200 	mov.w	r2, #0
  112f70:	d122      	bne.n	112fb8 <_dtoa_r+0x580>
  112f72:	4b1a      	ldr	r3, [pc, #104]	; (112fdc <_dtoa_r+0x5a4>)
  112f74:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  112f78:	f7fb fb5c 	bl	10e634 <__adddf3>
  112f7c:	4602      	mov	r2, r0
  112f7e:	460b      	mov	r3, r1
  112f80:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112f84:	f7fb ff98 	bl	10eeb8 <__aeabi_dcmpgt>
  112f88:	2800      	cmp	r0, #0
  112f8a:	f040 808b 	bne.w	1130a4 <_dtoa_r+0x66c>
  112f8e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  112f92:	2000      	movs	r0, #0
  112f94:	4911      	ldr	r1, [pc, #68]	; (112fdc <_dtoa_r+0x5a4>)
  112f96:	f7fb fb4b 	bl	10e630 <__aeabi_dsub>
  112f9a:	4602      	mov	r2, r0
  112f9c:	460b      	mov	r3, r1
  112f9e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  112fa2:	f7fb ff6b 	bl	10ee7c <__aeabi_dcmplt>
  112fa6:	b1d8      	cbz	r0, 112fe0 <_dtoa_r+0x5a8>
  112fa8:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  112fac:	1e62      	subs	r2, r4, #1
  112fae:	2b30      	cmp	r3, #48	; 0x30
  112fb0:	f040 82b7 	bne.w	113522 <_dtoa_r+0xaea>
  112fb4:	4614      	mov	r4, r2
  112fb6:	e7f7      	b.n	112fa8 <_dtoa_r+0x570>
  112fb8:	4b05      	ldr	r3, [pc, #20]	; (112fd0 <_dtoa_r+0x598>)
  112fba:	f7fb fced 	bl	10e998 <__aeabi_dmul>
  112fbe:	e9cd 0102 	strd	r0, r1, [sp, #8]
  112fc2:	e7c0      	b.n	112f46 <_dtoa_r+0x50e>
  112fc4:	0011a048 	.word	0x0011a048
  112fc8:	0011a120 	.word	0x0011a120
  112fcc:	3ff00000 	.word	0x3ff00000
  112fd0:	40240000 	.word	0x40240000
  112fd4:	401c0000 	.word	0x401c0000
  112fd8:	40140000 	.word	0x40140000
  112fdc:	3fe00000 	.word	0x3fe00000
  112fe0:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
  112fe4:	e9cd 3402 	strd	r3, r4, [sp, #8]
  112fe8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  112fea:	2b00      	cmp	r3, #0
  112fec:	db7c      	blt.n	1130e8 <_dtoa_r+0x6b0>
  112fee:	f1bb 0f0e 	cmp.w	r11, #14
  112ff2:	dc79      	bgt.n	1130e8 <_dtoa_r+0x6b0>
  112ff4:	4bab      	ldr	r3, [pc, #684]	; (1132a4 <_dtoa_r+0x86c>)
  112ff6:	eb03 03cb 	add.w	r3, r3, r11, lsl #3
  112ffa:	e9d3 6700 	ldrd	r6, r7, [r3]
  112ffe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  113000:	2b00      	cmp	r3, #0
  113002:	da14      	bge.n	11302e <_dtoa_r+0x5f6>
  113004:	9b05      	ldr	r3, [sp, #20]
  113006:	2b00      	cmp	r3, #0
  113008:	dc11      	bgt.n	11302e <_dtoa_r+0x5f6>
  11300a:	f040 816c 	bne.w	1132e6 <_dtoa_r+0x8ae>
  11300e:	2200      	movs	r2, #0
  113010:	4ba5      	ldr	r3, [pc, #660]	; (1132a8 <_dtoa_r+0x870>)
  113012:	4630      	mov	r0, r6
  113014:	4639      	mov	r1, r7
  113016:	f7fb fcbf 	bl	10e998 <__aeabi_dmul>
  11301a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  11301e:	f7fb ff41 	bl	10eea4 <__aeabi_dcmpge>
  113022:	9d05      	ldr	r5, [sp, #20]
  113024:	462e      	mov	r6, r5
  113026:	2800      	cmp	r0, #0
  113028:	f040 815f 	bne.w	1132ea <_dtoa_r+0x8b2>
  11302c:	e165      	b.n	1132fa <_dtoa_r+0x8c2>
  11302e:	9c06      	ldr	r4, [sp, #24]
  113030:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  113034:	4632      	mov	r2, r6
  113036:	463b      	mov	r3, r7
  113038:	4640      	mov	r0, r8
  11303a:	4649      	mov	r1, r9
  11303c:	f7fb fdd6 	bl	10ebec <__aeabi_ddiv>
  113040:	f001 fd18 	bl	114a74 <__aeabi_d2iz>
  113044:	4605      	mov	r5, r0
  113046:	f7fb fc41 	bl	10e8cc <__aeabi_i2d>
  11304a:	4632      	mov	r2, r6
  11304c:	463b      	mov	r3, r7
  11304e:	f7fb fca3 	bl	10e998 <__aeabi_dmul>
  113052:	460b      	mov	r3, r1
  113054:	4602      	mov	r2, r0
  113056:	4649      	mov	r1, r9
  113058:	4640      	mov	r0, r8
  11305a:	f7fb fae9 	bl	10e630 <__aeabi_dsub>
  11305e:	f105 0e30 	add.w	lr, r5, #48	; 0x30
  113062:	9b06      	ldr	r3, [sp, #24]
  113064:	f804 eb01 	strb.w	lr, [r4], #1
  113068:	ebc3 0e04 	rsb	lr, r3, r4
  11306c:	9b05      	ldr	r3, [sp, #20]
  11306e:	4573      	cmp	r3, lr
  113070:	d12d      	bne.n	1130ce <_dtoa_r+0x696>
  113072:	4602      	mov	r2, r0
  113074:	460b      	mov	r3, r1
  113076:	f7fb fadd 	bl	10e634 <__adddf3>
  11307a:	4680      	mov	r8, r0
  11307c:	4689      	mov	r9, r1
  11307e:	4602      	mov	r2, r0
  113080:	460b      	mov	r3, r1
  113082:	4630      	mov	r0, r6
  113084:	4639      	mov	r1, r7
  113086:	f7fb fef9 	bl	10ee7c <__aeabi_dcmplt>
  11308a:	b978      	cbnz	r0, 1130ac <_dtoa_r+0x674>
  11308c:	4642      	mov	r2, r8
  11308e:	464b      	mov	r3, r9
  113090:	4630      	mov	r0, r6
  113092:	4639      	mov	r1, r7
  113094:	f7fb fee8 	bl	10ee68 <__aeabi_dcmpeq>
  113098:	2800      	cmp	r0, #0
  11309a:	f000 8244 	beq.w	113526 <_dtoa_r+0xaee>
  11309e:	07eb      	lsls	r3, r5, #31
  1130a0:	d404      	bmi.n	1130ac <_dtoa_r+0x674>
  1130a2:	e240      	b.n	113526 <_dtoa_r+0xaee>
  1130a4:	f8dd b020 	ldr.w	r11, [sp, #32]
  1130a8:	e000      	b.n	1130ac <_dtoa_r+0x674>
  1130aa:	461c      	mov	r4, r3
  1130ac:	f814 2c01 	ldrb.w	r2, [r4, #-1]
  1130b0:	1e63      	subs	r3, r4, #1
  1130b2:	2a39      	cmp	r2, #57	; 0x39
  1130b4:	d107      	bne.n	1130c6 <_dtoa_r+0x68e>
  1130b6:	9a06      	ldr	r2, [sp, #24]
  1130b8:	429a      	cmp	r2, r3
  1130ba:	d1f6      	bne.n	1130aa <_dtoa_r+0x672>
  1130bc:	9906      	ldr	r1, [sp, #24]
  1130be:	2230      	movs	r2, #48	; 0x30
  1130c0:	f10b 0b01 	add.w	r11, r11, #1
  1130c4:	700a      	strb	r2, [r1, #0]
  1130c6:	781a      	ldrb	r2, [r3, #0]
  1130c8:	3201      	adds	r2, #1
  1130ca:	701a      	strb	r2, [r3, #0]
  1130cc:	e22b      	b.n	113526 <_dtoa_r+0xaee>
  1130ce:	2200      	movs	r2, #0
  1130d0:	4b76      	ldr	r3, [pc, #472]	; (1132ac <_dtoa_r+0x874>)
  1130d2:	f7fb fc61 	bl	10e998 <__aeabi_dmul>
  1130d6:	2200      	movs	r2, #0
  1130d8:	2300      	movs	r3, #0
  1130da:	4680      	mov	r8, r0
  1130dc:	4689      	mov	r9, r1
  1130de:	f7fb fec3 	bl	10ee68 <__aeabi_dcmpeq>
  1130e2:	2800      	cmp	r0, #0
  1130e4:	d0a6      	beq.n	113034 <_dtoa_r+0x5fc>
  1130e6:	e21e      	b.n	113526 <_dtoa_r+0xaee>
  1130e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  1130ea:	2a00      	cmp	r2, #0
  1130ec:	d02b      	beq.n	113146 <_dtoa_r+0x70e>
  1130ee:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  1130f0:	2a01      	cmp	r2, #1
  1130f2:	dc0a      	bgt.n	11310a <_dtoa_r+0x6d2>
  1130f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  1130f6:	b112      	cbz	r2, 1130fe <_dtoa_r+0x6c6>
  1130f8:	f203 4333 	addw	r3, r3, #1075	; 0x433
  1130fc:	e002      	b.n	113104 <_dtoa_r+0x6cc>
  1130fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  113100:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  113104:	463d      	mov	r5, r7
  113106:	4644      	mov	r4, r8
  113108:	e013      	b.n	113132 <_dtoa_r+0x6fa>
  11310a:	9b05      	ldr	r3, [sp, #20]
  11310c:	1e5d      	subs	r5, r3, #1
  11310e:	42af      	cmp	r7, r5
  113110:	bfbf      	itttt	lt
  113112:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
  113114:	1bea      	sublt	r2, r5, r7
  113116:	189b      	addlt	r3, r3, r2
  113118:	930b      	strlt	r3, [sp, #44]	; 0x2c
  11311a:	9b05      	ldr	r3, [sp, #20]
  11311c:	bfb6      	itet	lt
  11311e:	462f      	movlt	r7, r5
  113120:	1b7d      	subge	r5, r7, r5
  113122:	2500      	movlt	r5, #0
  113124:	2b00      	cmp	r3, #0
  113126:	bfa7      	ittee	ge
  113128:	4644      	movge	r4, r8
  11312a:	9b05      	ldrge	r3, [sp, #20]
  11312c:	ebc3 0408 	rsblt	r4, r3, r8
  113130:	2300      	movlt	r3, #0
  113132:	9a07      	ldr	r2, [sp, #28]
  113134:	2101      	movs	r1, #1
  113136:	441a      	add	r2, r3
  113138:	4650      	mov	r0, r10
  11313a:	4498      	add	r8, r3
  11313c:	9207      	str	r2, [sp, #28]
  11313e:	f000 feaf 	bl	113ea0 <__i2b>
  113142:	4606      	mov	r6, r0
  113144:	e002      	b.n	11314c <_dtoa_r+0x714>
  113146:	463d      	mov	r5, r7
  113148:	4644      	mov	r4, r8
  11314a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  11314c:	b15c      	cbz	r4, 113166 <_dtoa_r+0x72e>
  11314e:	9b07      	ldr	r3, [sp, #28]
  113150:	2b00      	cmp	r3, #0
  113152:	dd08      	ble.n	113166 <_dtoa_r+0x72e>
  113154:	42a3      	cmp	r3, r4
  113156:	bfa8      	it	ge
  113158:	4623      	movge	r3, r4
  11315a:	9a07      	ldr	r2, [sp, #28]
  11315c:	ebc3 0808 	rsb	r8, r3, r8
  113160:	1ae4      	subs	r4, r4, r3
  113162:	1ad3      	subs	r3, r2, r3
  113164:	9307      	str	r3, [sp, #28]
  113166:	2f00      	cmp	r7, #0
  113168:	dd1d      	ble.n	1131a6 <_dtoa_r+0x76e>
  11316a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  11316c:	b1ab      	cbz	r3, 11319a <_dtoa_r+0x762>
  11316e:	b18d      	cbz	r5, 113194 <_dtoa_r+0x75c>
  113170:	4631      	mov	r1, r6
  113172:	462a      	mov	r2, r5
  113174:	4650      	mov	r0, r10
  113176:	f000 ff2d 	bl	113fd4 <__pow5mult>
  11317a:	9a04      	ldr	r2, [sp, #16]
  11317c:	4601      	mov	r1, r0
  11317e:	4606      	mov	r6, r0
  113180:	4650      	mov	r0, r10
  113182:	f000 fe96 	bl	113eb2 <__multiply>
  113186:	9904      	ldr	r1, [sp, #16]
  113188:	9008      	str	r0, [sp, #32]
  11318a:	4650      	mov	r0, r10
  11318c:	f000 fdab 	bl	113ce6 <_Bfree>
  113190:	9b08      	ldr	r3, [sp, #32]
  113192:	9304      	str	r3, [sp, #16]
  113194:	1b7a      	subs	r2, r7, r5
  113196:	d006      	beq.n	1131a6 <_dtoa_r+0x76e>
  113198:	e000      	b.n	11319c <_dtoa_r+0x764>
  11319a:	463a      	mov	r2, r7
  11319c:	9904      	ldr	r1, [sp, #16]
  11319e:	4650      	mov	r0, r10
  1131a0:	f000 ff18 	bl	113fd4 <__pow5mult>
  1131a4:	9004      	str	r0, [sp, #16]
  1131a6:	2101      	movs	r1, #1
  1131a8:	4650      	mov	r0, r10
  1131aa:	f000 fe79 	bl	113ea0 <__i2b>
  1131ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  1131b0:	4605      	mov	r5, r0
  1131b2:	b35b      	cbz	r3, 11320c <_dtoa_r+0x7d4>
  1131b4:	461a      	mov	r2, r3
  1131b6:	4601      	mov	r1, r0
  1131b8:	4650      	mov	r0, r10
  1131ba:	f000 ff0b 	bl	113fd4 <__pow5mult>
  1131be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  1131c0:	4605      	mov	r5, r0
  1131c2:	2b01      	cmp	r3, #1
  1131c4:	dc18      	bgt.n	1131f8 <_dtoa_r+0x7c0>
  1131c6:	9b02      	ldr	r3, [sp, #8]
  1131c8:	b983      	cbnz	r3, 1131ec <_dtoa_r+0x7b4>
  1131ca:	9b03      	ldr	r3, [sp, #12]
  1131cc:	f3c3 0313 	ubfx	r3, r3, #0, #20
  1131d0:	b973      	cbnz	r3, 1131f0 <_dtoa_r+0x7b8>
  1131d2:	9b03      	ldr	r3, [sp, #12]
  1131d4:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
  1131d8:	0d3f      	lsrs	r7, r7, #20
  1131da:	053f      	lsls	r7, r7, #20
  1131dc:	b14f      	cbz	r7, 1131f2 <_dtoa_r+0x7ba>
  1131de:	9b07      	ldr	r3, [sp, #28]
  1131e0:	f108 0801 	add.w	r8, r8, #1
  1131e4:	3301      	adds	r3, #1
  1131e6:	9307      	str	r3, [sp, #28]
  1131e8:	2701      	movs	r7, #1
  1131ea:	e002      	b.n	1131f2 <_dtoa_r+0x7ba>
  1131ec:	2700      	movs	r7, #0
  1131ee:	e000      	b.n	1131f2 <_dtoa_r+0x7ba>
  1131f0:	9f02      	ldr	r7, [sp, #8]
  1131f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  1131f4:	b173      	cbz	r3, 113214 <_dtoa_r+0x7dc>
  1131f6:	e000      	b.n	1131fa <_dtoa_r+0x7c2>
  1131f8:	2700      	movs	r7, #0
  1131fa:	692b      	ldr	r3, [r5, #16]
  1131fc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  113200:	6918      	ldr	r0, [r3, #16]
  113202:	f000 fe00 	bl	113e06 <__hi0bits>
  113206:	f1c0 0020 	rsb	r0, r0, #32
  11320a:	e004      	b.n	113216 <_dtoa_r+0x7de>
  11320c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  11320e:	2b01      	cmp	r3, #1
  113210:	ddd9      	ble.n	1131c6 <_dtoa_r+0x78e>
  113212:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  113214:	2001      	movs	r0, #1
  113216:	9b07      	ldr	r3, [sp, #28]
  113218:	4418      	add	r0, r3
  11321a:	f010 001f 	ands.w	r0, r0, #31
  11321e:	d008      	beq.n	113232 <_dtoa_r+0x7fa>
  113220:	f1c0 0320 	rsb	r3, r0, #32
  113224:	2b04      	cmp	r3, #4
  113226:	dd02      	ble.n	11322e <_dtoa_r+0x7f6>
  113228:	f1c0 001c 	rsb	r0, r0, #28
  11322c:	e002      	b.n	113234 <_dtoa_r+0x7fc>
  11322e:	d006      	beq.n	11323e <_dtoa_r+0x806>
  113230:	4618      	mov	r0, r3
  113232:	301c      	adds	r0, #28
  113234:	9b07      	ldr	r3, [sp, #28]
  113236:	4480      	add	r8, r0
  113238:	4403      	add	r3, r0
  11323a:	4404      	add	r4, r0
  11323c:	9307      	str	r3, [sp, #28]
  11323e:	f1b8 0f00 	cmp.w	r8, #0
  113242:	dd05      	ble.n	113250 <_dtoa_r+0x818>
  113244:	4642      	mov	r2, r8
  113246:	9904      	ldr	r1, [sp, #16]
  113248:	4650      	mov	r0, r10
  11324a:	f000 ff11 	bl	114070 <__lshift>
  11324e:	9004      	str	r0, [sp, #16]
  113250:	9b07      	ldr	r3, [sp, #28]
  113252:	2b00      	cmp	r3, #0
  113254:	dd05      	ble.n	113262 <_dtoa_r+0x82a>
  113256:	4629      	mov	r1, r5
  113258:	461a      	mov	r2, r3
  11325a:	4650      	mov	r0, r10
  11325c:	f000 ff08 	bl	114070 <__lshift>
  113260:	4605      	mov	r5, r0
  113262:	9b10      	ldr	r3, [sp, #64]	; 0x40
  113264:	b323      	cbz	r3, 1132b0 <_dtoa_r+0x878>
  113266:	4629      	mov	r1, r5
  113268:	9804      	ldr	r0, [sp, #16]
  11326a:	f000 ff52 	bl	114112 <__mcmp>
  11326e:	2800      	cmp	r0, #0
  113270:	da1e      	bge.n	1132b0 <_dtoa_r+0x878>
  113272:	2300      	movs	r3, #0
  113274:	220a      	movs	r2, #10
  113276:	9904      	ldr	r1, [sp, #16]
  113278:	4650      	mov	r0, r10
  11327a:	f000 fd4b 	bl	113d14 <__multadd>
  11327e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  113280:	f10b 3bff 	add.w	r11, r11, #4294967295
  113284:	9004      	str	r0, [sp, #16]
  113286:	2b00      	cmp	r3, #0
  113288:	f000 815f 	beq.w	11354a <_dtoa_r+0xb12>
  11328c:	4631      	mov	r1, r6
  11328e:	2300      	movs	r3, #0
  113290:	220a      	movs	r2, #10
  113292:	4650      	mov	r0, r10
  113294:	f000 fd3e 	bl	113d14 <__multadd>
  113298:	f1b9 0f00 	cmp.w	r9, #0
  11329c:	4606      	mov	r6, r0
  11329e:	dc3f      	bgt.n	113320 <_dtoa_r+0x8e8>
  1132a0:	e03b      	b.n	11331a <_dtoa_r+0x8e2>
  1132a2:	bf00      	nop
  1132a4:	0011a048 	.word	0x0011a048
  1132a8:	40140000 	.word	0x40140000
  1132ac:	40240000 	.word	0x40240000
  1132b0:	9b05      	ldr	r3, [sp, #20]
  1132b2:	2b00      	cmp	r3, #0
  1132b4:	dc2b      	bgt.n	11330e <_dtoa_r+0x8d6>
  1132b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  1132b8:	2b02      	cmp	r3, #2
  1132ba:	dd28      	ble.n	11330e <_dtoa_r+0x8d6>
  1132bc:	f8dd 9014 	ldr.w	r9, [sp, #20]
  1132c0:	f1b9 0f00 	cmp.w	r9, #0
  1132c4:	d111      	bne.n	1132ea <_dtoa_r+0x8b2>
  1132c6:	4629      	mov	r1, r5
  1132c8:	464b      	mov	r3, r9
  1132ca:	2205      	movs	r2, #5
  1132cc:	4650      	mov	r0, r10
  1132ce:	f000 fd21 	bl	113d14 <__multadd>
  1132d2:	4601      	mov	r1, r0
  1132d4:	4605      	mov	r5, r0
  1132d6:	9804      	ldr	r0, [sp, #16]
  1132d8:	f000 ff1b 	bl	114112 <__mcmp>
  1132dc:	2800      	cmp	r0, #0
  1132de:	dc0c      	bgt.n	1132fa <_dtoa_r+0x8c2>
  1132e0:	e003      	b.n	1132ea <_dtoa_r+0x8b2>
  1132e2:	4635      	mov	r5, r6
  1132e4:	e000      	b.n	1132e8 <_dtoa_r+0x8b0>
  1132e6:	2500      	movs	r5, #0
  1132e8:	462e      	mov	r6, r5
  1132ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  1132ec:	9c06      	ldr	r4, [sp, #24]
  1132ee:	ea6f 0b03 	mvn.w	r11, r3
  1132f2:	e009      	b.n	113308 <_dtoa_r+0x8d0>
  1132f4:	4635      	mov	r5, r6
  1132f6:	f8dd b020 	ldr.w	r11, [sp, #32]
  1132fa:	9b06      	ldr	r3, [sp, #24]
  1132fc:	9a06      	ldr	r2, [sp, #24]
  1132fe:	1c5c      	adds	r4, r3, #1
  113300:	2331      	movs	r3, #49	; 0x31
  113302:	7013      	strb	r3, [r2, #0]
  113304:	f10b 0b01 	add.w	r11, r11, #1
  113308:	9605      	str	r6, [sp, #20]
  11330a:	2600      	movs	r6, #0
  11330c:	e0f7      	b.n	1134fe <_dtoa_r+0xac6>
  11330e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  113310:	f8dd 9014 	ldr.w	r9, [sp, #20]
  113314:	b923      	cbnz	r3, 113320 <_dtoa_r+0x8e8>
  113316:	9c06      	ldr	r4, [sp, #24]
  113318:	e0b2      	b.n	113480 <_dtoa_r+0xa48>
  11331a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  11331c:	2b02      	cmp	r3, #2
  11331e:	dccf      	bgt.n	1132c0 <_dtoa_r+0x888>
  113320:	2c00      	cmp	r4, #0
  113322:	dd05      	ble.n	113330 <_dtoa_r+0x8f8>
  113324:	4631      	mov	r1, r6
  113326:	4622      	mov	r2, r4
  113328:	4650      	mov	r0, r10
  11332a:	f000 fea1 	bl	114070 <__lshift>
  11332e:	4606      	mov	r6, r0
  113330:	b19f      	cbz	r7, 11335a <_dtoa_r+0x922>
  113332:	6871      	ldr	r1, [r6, #4]
  113334:	4650      	mov	r0, r10
  113336:	f000 fca1 	bl	113c7c <_Balloc>
  11333a:	4604      	mov	r4, r0
  11333c:	6932      	ldr	r2, [r6, #16]
  11333e:	f106 010c 	add.w	r1, r6, #12
  113342:	3202      	adds	r2, #2
  113344:	0092      	lsls	r2, r2, #2
  113346:	300c      	adds	r0, #12
  113348:	f7fc fdc7 	bl	10feda <memcpy>
  11334c:	2201      	movs	r2, #1
  11334e:	4621      	mov	r1, r4
  113350:	4650      	mov	r0, r10
  113352:	f000 fe8d 	bl	114070 <__lshift>
  113356:	9005      	str	r0, [sp, #20]
  113358:	e000      	b.n	11335c <_dtoa_r+0x924>
  11335a:	9605      	str	r6, [sp, #20]
  11335c:	9b02      	ldr	r3, [sp, #8]
  11335e:	9f06      	ldr	r7, [sp, #24]
  113360:	f003 0301 	and.w	r3, r3, #1
  113364:	9307      	str	r3, [sp, #28]
  113366:	4629      	mov	r1, r5
  113368:	9804      	ldr	r0, [sp, #16]
  11336a:	f7ff fad9 	bl	112920 <quorem>
  11336e:	4631      	mov	r1, r6
  113370:	4604      	mov	r4, r0
  113372:	f100 0830 	add.w	r8, r0, #48	; 0x30
  113376:	9804      	ldr	r0, [sp, #16]
  113378:	f000 fecb 	bl	114112 <__mcmp>
  11337c:	9a05      	ldr	r2, [sp, #20]
  11337e:	9002      	str	r0, [sp, #8]
  113380:	4629      	mov	r1, r5
  113382:	4650      	mov	r0, r10
  113384:	f000 fee1 	bl	11414a <__mdiff>
  113388:	68c3      	ldr	r3, [r0, #12]
  11338a:	4602      	mov	r2, r0
  11338c:	b93b      	cbnz	r3, 11339e <_dtoa_r+0x966>
  11338e:	4601      	mov	r1, r0
  113390:	900a      	str	r0, [sp, #40]	; 0x28
  113392:	9804      	ldr	r0, [sp, #16]
  113394:	f000 febd 	bl	114112 <__mcmp>
  113398:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  11339a:	4603      	mov	r3, r0
  11339c:	e000      	b.n	1133a0 <_dtoa_r+0x968>
  11339e:	2301      	movs	r3, #1
  1133a0:	4611      	mov	r1, r2
  1133a2:	4650      	mov	r0, r10
  1133a4:	930a      	str	r3, [sp, #40]	; 0x28
  1133a6:	f000 fc9e 	bl	113ce6 <_Bfree>
  1133aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  1133ac:	b953      	cbnz	r3, 1133c4 <_dtoa_r+0x98c>
  1133ae:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  1133b0:	b942      	cbnz	r2, 1133c4 <_dtoa_r+0x98c>
  1133b2:	9a07      	ldr	r2, [sp, #28]
  1133b4:	b932      	cbnz	r2, 1133c4 <_dtoa_r+0x98c>
  1133b6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  1133ba:	d02a      	beq.n	113412 <_dtoa_r+0x9da>
  1133bc:	9b02      	ldr	r3, [sp, #8]
  1133be:	2b00      	cmp	r3, #0
  1133c0:	dc1c      	bgt.n	1133fc <_dtoa_r+0x9c4>
  1133c2:	e01d      	b.n	113400 <_dtoa_r+0x9c8>
  1133c4:	9a02      	ldr	r2, [sp, #8]
  1133c6:	2a00      	cmp	r2, #0
  1133c8:	db04      	blt.n	1133d4 <_dtoa_r+0x99c>
  1133ca:	d11b      	bne.n	113404 <_dtoa_r+0x9cc>
  1133cc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  1133ce:	b9ca      	cbnz	r2, 113404 <_dtoa_r+0x9cc>
  1133d0:	9a07      	ldr	r2, [sp, #28]
  1133d2:	b9ba      	cbnz	r2, 113404 <_dtoa_r+0x9cc>
  1133d4:	2b00      	cmp	r3, #0
  1133d6:	dd13      	ble.n	113400 <_dtoa_r+0x9c8>
  1133d8:	2201      	movs	r2, #1
  1133da:	9904      	ldr	r1, [sp, #16]
  1133dc:	4650      	mov	r0, r10
  1133de:	f000 fe47 	bl	114070 <__lshift>
  1133e2:	4629      	mov	r1, r5
  1133e4:	9004      	str	r0, [sp, #16]
  1133e6:	f000 fe94 	bl	114112 <__mcmp>
  1133ea:	2800      	cmp	r0, #0
  1133ec:	dc03      	bgt.n	1133f6 <_dtoa_r+0x9be>
  1133ee:	d107      	bne.n	113400 <_dtoa_r+0x9c8>
  1133f0:	f018 0f01 	tst.w	r8, #1
  1133f4:	d004      	beq.n	113400 <_dtoa_r+0x9c8>
  1133f6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  1133fa:	d00a      	beq.n	113412 <_dtoa_r+0x9da>
  1133fc:	f104 0831 	add.w	r8, r4, #49	; 0x31
  113400:	1c7c      	adds	r4, r7, #1
  113402:	e00c      	b.n	11341e <_dtoa_r+0x9e6>
  113404:	2b00      	cmp	r3, #0
  113406:	f107 0401 	add.w	r4, r7, #1
  11340a:	dd0b      	ble.n	113424 <_dtoa_r+0x9ec>
  11340c:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  113410:	d103      	bne.n	11341a <_dtoa_r+0x9e2>
  113412:	2339      	movs	r3, #57	; 0x39
  113414:	703b      	strb	r3, [r7, #0]
  113416:	3701      	adds	r7, #1
  113418:	e056      	b.n	1134c8 <_dtoa_r+0xa90>
  11341a:	f108 0801 	add.w	r8, r8, #1
  11341e:	f887 8000 	strb.w	r8, [r7]
  113422:	e06c      	b.n	1134fe <_dtoa_r+0xac6>
  113424:	9b06      	ldr	r3, [sp, #24]
  113426:	4627      	mov	r7, r4
  113428:	1ae3      	subs	r3, r4, r3
  11342a:	454b      	cmp	r3, r9
  11342c:	f804 8c01 	strb.w	r8, [r4, #-1]
  113430:	d03b      	beq.n	1134aa <_dtoa_r+0xa72>
  113432:	2300      	movs	r3, #0
  113434:	220a      	movs	r2, #10
  113436:	9904      	ldr	r1, [sp, #16]
  113438:	4650      	mov	r0, r10
  11343a:	f000 fc6b 	bl	113d14 <__multadd>
  11343e:	9b05      	ldr	r3, [sp, #20]
  113440:	9004      	str	r0, [sp, #16]
  113442:	429e      	cmp	r6, r3
  113444:	f04f 020a 	mov.w	r2, #10
  113448:	f04f 0300 	mov.w	r3, #0
  11344c:	4631      	mov	r1, r6
  11344e:	4650      	mov	r0, r10
  113450:	d104      	bne.n	11345c <_dtoa_r+0xa24>
  113452:	f000 fc5f 	bl	113d14 <__multadd>
  113456:	4606      	mov	r6, r0
  113458:	9005      	str	r0, [sp, #20]
  11345a:	e784      	b.n	113366 <_dtoa_r+0x92e>
  11345c:	f000 fc5a 	bl	113d14 <__multadd>
  113460:	2300      	movs	r3, #0
  113462:	4606      	mov	r6, r0
  113464:	220a      	movs	r2, #10
  113466:	9905      	ldr	r1, [sp, #20]
  113468:	4650      	mov	r0, r10
  11346a:	f000 fc53 	bl	113d14 <__multadd>
  11346e:	9005      	str	r0, [sp, #20]
  113470:	e779      	b.n	113366 <_dtoa_r+0x92e>
  113472:	2300      	movs	r3, #0
  113474:	220a      	movs	r2, #10
  113476:	9904      	ldr	r1, [sp, #16]
  113478:	4650      	mov	r0, r10
  11347a:	f000 fc4b 	bl	113d14 <__multadd>
  11347e:	9004      	str	r0, [sp, #16]
  113480:	4629      	mov	r1, r5
  113482:	9804      	ldr	r0, [sp, #16]
  113484:	f7ff fa4c 	bl	112920 <quorem>
  113488:	9b06      	ldr	r3, [sp, #24]
  11348a:	f100 0830 	add.w	r8, r0, #48	; 0x30
  11348e:	f804 8b01 	strb.w	r8, [r4], #1
  113492:	1ae3      	subs	r3, r4, r3
  113494:	454b      	cmp	r3, r9
  113496:	dbec      	blt.n	113472 <_dtoa_r+0xa3a>
  113498:	9b06      	ldr	r3, [sp, #24]
  11349a:	9605      	str	r6, [sp, #20]
  11349c:	f1b9 0f01 	cmp.w	r9, #1
  1134a0:	bfac      	ite	ge
  1134a2:	444b      	addge	r3, r9
  1134a4:	3301      	addlt	r3, #1
  1134a6:	461f      	mov	r7, r3
  1134a8:	2600      	movs	r6, #0
  1134aa:	2201      	movs	r2, #1
  1134ac:	9904      	ldr	r1, [sp, #16]
  1134ae:	4650      	mov	r0, r10
  1134b0:	f000 fdde 	bl	114070 <__lshift>
  1134b4:	4629      	mov	r1, r5
  1134b6:	9004      	str	r0, [sp, #16]
  1134b8:	f000 fe2b 	bl	114112 <__mcmp>
  1134bc:	2800      	cmp	r0, #0
  1134be:	dc03      	bgt.n	1134c8 <_dtoa_r+0xa90>
  1134c0:	d115      	bne.n	1134ee <_dtoa_r+0xab6>
  1134c2:	f018 0f01 	tst.w	r8, #1
  1134c6:	d012      	beq.n	1134ee <_dtoa_r+0xab6>
  1134c8:	463c      	mov	r4, r7
  1134ca:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  1134ce:	1e62      	subs	r2, r4, #1
  1134d0:	2b39      	cmp	r3, #57	; 0x39
  1134d2:	d109      	bne.n	1134e8 <_dtoa_r+0xab0>
  1134d4:	9b06      	ldr	r3, [sp, #24]
  1134d6:	4293      	cmp	r3, r2
  1134d8:	d104      	bne.n	1134e4 <_dtoa_r+0xaac>
  1134da:	f10b 0b01 	add.w	r11, r11, #1
  1134de:	2331      	movs	r3, #49	; 0x31
  1134e0:	9a06      	ldr	r2, [sp, #24]
  1134e2:	e002      	b.n	1134ea <_dtoa_r+0xab2>
  1134e4:	4614      	mov	r4, r2
  1134e6:	e7f0      	b.n	1134ca <_dtoa_r+0xa92>
  1134e8:	3301      	adds	r3, #1
  1134ea:	7013      	strb	r3, [r2, #0]
  1134ec:	e007      	b.n	1134fe <_dtoa_r+0xac6>
  1134ee:	463c      	mov	r4, r7
  1134f0:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  1134f4:	1e62      	subs	r2, r4, #1
  1134f6:	2b30      	cmp	r3, #48	; 0x30
  1134f8:	d101      	bne.n	1134fe <_dtoa_r+0xac6>
  1134fa:	4614      	mov	r4, r2
  1134fc:	e7f8      	b.n	1134f0 <_dtoa_r+0xab8>
  1134fe:	4629      	mov	r1, r5
  113500:	4650      	mov	r0, r10
  113502:	f000 fbf0 	bl	113ce6 <_Bfree>
  113506:	9b05      	ldr	r3, [sp, #20]
  113508:	b16b      	cbz	r3, 113526 <_dtoa_r+0xaee>
  11350a:	b12e      	cbz	r6, 113518 <_dtoa_r+0xae0>
  11350c:	429e      	cmp	r6, r3
  11350e:	d003      	beq.n	113518 <_dtoa_r+0xae0>
  113510:	4631      	mov	r1, r6
  113512:	4650      	mov	r0, r10
  113514:	f000 fbe7 	bl	113ce6 <_Bfree>
  113518:	9905      	ldr	r1, [sp, #20]
  11351a:	4650      	mov	r0, r10
  11351c:	f000 fbe3 	bl	113ce6 <_Bfree>
  113520:	e001      	b.n	113526 <_dtoa_r+0xaee>
  113522:	f8dd b020 	ldr.w	r11, [sp, #32]
  113526:	9904      	ldr	r1, [sp, #16]
  113528:	4650      	mov	r0, r10
  11352a:	f000 fbdc 	bl	113ce6 <_Bfree>
  11352e:	2300      	movs	r3, #0
  113530:	9a20      	ldr	r2, [sp, #128]	; 0x80
  113532:	7023      	strb	r3, [r4, #0]
  113534:	f10b 0301 	add.w	r3, r11, #1
  113538:	6013      	str	r3, [r2, #0]
  11353a:	9b22      	ldr	r3, [sp, #136]	; 0x88
  11353c:	b11b      	cbz	r3, 113546 <_dtoa_r+0xb0e>
  11353e:	601c      	str	r4, [r3, #0]
  113540:	e001      	b.n	113546 <_dtoa_r+0xb0e>
  113542:	4808      	ldr	r0, [pc, #32]	; (113564 <_dtoa_r+0xb2c>)
  113544:	e00a      	b.n	11355c <_dtoa_r+0xb24>
  113546:	9806      	ldr	r0, [sp, #24]
  113548:	e008      	b.n	11355c <_dtoa_r+0xb24>
  11354a:	f1b9 0f00 	cmp.w	r9, #0
  11354e:	f73f aee2 	bgt.w	113316 <_dtoa_r+0x8de>
  113552:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  113554:	2b02      	cmp	r3, #2
  113556:	f77f aede 	ble.w	113316 <_dtoa_r+0x8de>
  11355a:	e6b1      	b.n	1132c0 <_dtoa_r+0x888>
  11355c:	b015      	add	sp, #84	; 0x54
  11355e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  113562:	bf00      	nop
  113564:	00118312 	.word	0x00118312

00113568 <__sflags>:
  113568:	780b      	ldrb	r3, [r1, #0]
  11356a:	b530      	push	{r4, r5, lr}
  11356c:	2b72      	cmp	r3, #114	; 0x72
  11356e:	d00e      	beq.n	11358e <__sflags+0x26>
  113570:	2b77      	cmp	r3, #119	; 0x77
  113572:	d007      	beq.n	113584 <__sflags+0x1c>
  113574:	2b61      	cmp	r3, #97	; 0x61
  113576:	d10e      	bne.n	113596 <__sflags+0x2e>
  113578:	f44f 7402 	mov.w	r4, #520	; 0x208
  11357c:	2301      	movs	r3, #1
  11357e:	f44f 7084 	mov.w	r0, #264	; 0x108
  113582:	e01a      	b.n	1135ba <__sflags+0x52>
  113584:	f44f 64c0 	mov.w	r4, #1536	; 0x600
  113588:	2301      	movs	r3, #1
  11358a:	2008      	movs	r0, #8
  11358c:	e015      	b.n	1135ba <__sflags+0x52>
  11358e:	2400      	movs	r4, #0
  113590:	4623      	mov	r3, r4
  113592:	2004      	movs	r0, #4
  113594:	e011      	b.n	1135ba <__sflags+0x52>
  113596:	2316      	movs	r3, #22
  113598:	6003      	str	r3, [r0, #0]
  11359a:	2000      	movs	r0, #0
  11359c:	bd30      	pop	{r4, r5, pc}
  11359e:	2d62      	cmp	r5, #98	; 0x62
  1135a0:	d010      	beq.n	1135c4 <__sflags+0x5c>
  1135a2:	2d78      	cmp	r5, #120	; 0x78
  1135a4:	d011      	beq.n	1135ca <__sflags+0x62>
  1135a6:	2d2b      	cmp	r5, #43	; 0x2b
  1135a8:	d107      	bne.n	1135ba <__sflags+0x52>
  1135aa:	f020 001c 	bic.w	r0, r0, #28
  1135ae:	f023 0303 	bic.w	r3, r3, #3
  1135b2:	f040 0010 	orr.w	r0, r0, #16
  1135b6:	f043 0302 	orr.w	r3, r3, #2
  1135ba:	f811 5f01 	ldrb.w	r5, [r1, #1]!
  1135be:	2d00      	cmp	r5, #0
  1135c0:	d1ed      	bne.n	11359e <__sflags+0x36>
  1135c2:	e005      	b.n	1135d0 <__sflags+0x68>
  1135c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  1135c8:	e7f7      	b.n	1135ba <__sflags+0x52>
  1135ca:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  1135ce:	e7f4      	b.n	1135ba <__sflags+0x52>
  1135d0:	4323      	orrs	r3, r4
  1135d2:	6013      	str	r3, [r2, #0]
  1135d4:	bd30      	pop	{r4, r5, pc}
	...

001135d8 <_fstat_r>:
  1135d8:	b538      	push	{r3, r4, r5, lr}
  1135da:	4c07      	ldr	r4, [pc, #28]	; (1135f8 <_fstat_r+0x20>)
  1135dc:	2300      	movs	r3, #0
  1135de:	4605      	mov	r5, r0
  1135e0:	4608      	mov	r0, r1
  1135e2:	4611      	mov	r1, r2
  1135e4:	6023      	str	r3, [r4, #0]
  1135e6:	f7fa f83f 	bl	10d668 <_fstat>
  1135ea:	1c43      	adds	r3, r0, #1
  1135ec:	d102      	bne.n	1135f4 <_fstat_r+0x1c>
  1135ee:	6823      	ldr	r3, [r4, #0]
  1135f0:	b103      	cbz	r3, 1135f4 <_fstat_r+0x1c>
  1135f2:	602b      	str	r3, [r5, #0]
  1135f4:	bd38      	pop	{r3, r4, r5, pc}
  1135f6:	bf00      	nop
  1135f8:	3fff9f18 	.word	0x3fff9f18

001135fc <rshift>:
  1135fc:	b5f0      	push	{r4, r5, r6, r7, lr}
  1135fe:	6906      	ldr	r6, [r0, #16]
  113600:	114b      	asrs	r3, r1, #5
  113602:	42b3      	cmp	r3, r6
  113604:	f100 0514 	add.w	r5, r0, #20
  113608:	da27      	bge.n	11365a <rshift+0x5e>
  11360a:	f011 011f 	ands.w	r1, r1, #31
  11360e:	eb05 0686 	add.w	r6, r5, r6, lsl #2
  113612:	eb05 0283 	add.w	r2, r5, r3, lsl #2
  113616:	d101      	bne.n	11361c <rshift+0x20>
  113618:	4629      	mov	r1, r5
  11361a:	e016      	b.n	11364a <rshift+0x4e>
  11361c:	1d14      	adds	r4, r2, #4
  11361e:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
  113622:	462b      	mov	r3, r5
  113624:	f1c1 0e20 	rsb	lr, r1, #32
  113628:	40ca      	lsrs	r2, r1
  11362a:	42b4      	cmp	r4, r6
  11362c:	d209      	bcs.n	113642 <rshift+0x46>
  11362e:	6827      	ldr	r7, [r4, #0]
  113630:	fa07 f70e 	lsl.w	r7, r7, lr
  113634:	433a      	orrs	r2, r7
  113636:	f843 2b04 	str.w	r2, [r3], #4
  11363a:	f854 2b04 	ldr.w	r2, [r4], #4
  11363e:	40ca      	lsrs	r2, r1
  113640:	e7f3      	b.n	11362a <rshift+0x2e>
  113642:	601a      	str	r2, [r3, #0]
  113644:	b152      	cbz	r2, 11365c <rshift+0x60>
  113646:	3304      	adds	r3, #4
  113648:	e008      	b.n	11365c <rshift+0x60>
  11364a:	42b2      	cmp	r2, r6
  11364c:	460b      	mov	r3, r1
  11364e:	d205      	bcs.n	11365c <rshift+0x60>
  113650:	f852 3b04 	ldr.w	r3, [r2], #4
  113654:	f841 3b04 	str.w	r3, [r1], #4
  113658:	e7f7      	b.n	11364a <rshift+0x4e>
  11365a:	462b      	mov	r3, r5
  11365c:	1b5b      	subs	r3, r3, r5
  11365e:	109b      	asrs	r3, r3, #2
  113660:	6103      	str	r3, [r0, #16]
  113662:	b903      	cbnz	r3, 113666 <rshift+0x6a>
  113664:	6143      	str	r3, [r0, #20]
  113666:	bdf0      	pop	{r4, r5, r6, r7, pc}

00113668 <__hexdig_fun>:
  113668:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
  11366c:	2b09      	cmp	r3, #9
  11366e:	d801      	bhi.n	113674 <__hexdig_fun+0xc>
  113670:	3820      	subs	r0, #32
  113672:	e00a      	b.n	11368a <__hexdig_fun+0x22>
  113674:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
  113678:	2b05      	cmp	r3, #5
  11367a:	d801      	bhi.n	113680 <__hexdig_fun+0x18>
  11367c:	3847      	subs	r0, #71	; 0x47
  11367e:	e004      	b.n	11368a <__hexdig_fun+0x22>
  113680:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
  113684:	2b05      	cmp	r3, #5
  113686:	d802      	bhi.n	11368e <__hexdig_fun+0x26>
  113688:	3827      	subs	r0, #39	; 0x27
  11368a:	b2c0      	uxtb	r0, r0
  11368c:	4770      	bx	lr
  11368e:	2000      	movs	r0, #0
  113690:	4770      	bx	lr

00113692 <__gethex>:
  113692:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  113696:	b08b      	sub	sp, #44	; 0x2c
  113698:	468a      	mov	r10, r1
  11369a:	4690      	mov	r8, r2
  11369c:	9306      	str	r3, [sp, #24]
  11369e:	9002      	str	r0, [sp, #8]
  1136a0:	f7fc fb9e 	bl	10fde0 <_localeconv_r>
  1136a4:	6803      	ldr	r3, [r0, #0]
  1136a6:	f04f 0b00 	mov.w	r11, #0
  1136aa:	4618      	mov	r0, r3
  1136ac:	9303      	str	r3, [sp, #12]
  1136ae:	f7fe f87a 	bl	1117a6 <strlen>
  1136b2:	9b03      	ldr	r3, [sp, #12]
  1136b4:	9001      	str	r0, [sp, #4]
  1136b6:	4403      	add	r3, r0
  1136b8:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  1136bc:	9307      	str	r3, [sp, #28]
  1136be:	f8da 3000 	ldr.w	r3, [r10]
  1136c2:	3302      	adds	r3, #2
  1136c4:	461f      	mov	r7, r3
  1136c6:	f813 0b01 	ldrb.w	r0, [r3], #1
  1136ca:	2830      	cmp	r0, #48	; 0x30
  1136cc:	d102      	bne.n	1136d4 <__gethex+0x42>
  1136ce:	f10b 0b01 	add.w	r11, r11, #1
  1136d2:	e7f7      	b.n	1136c4 <__gethex+0x32>
  1136d4:	f7ff ffc8 	bl	113668 <__hexdig_fun>
  1136d8:	4604      	mov	r4, r0
  1136da:	b9e0      	cbnz	r0, 113716 <__gethex+0x84>
  1136dc:	9a01      	ldr	r2, [sp, #4]
  1136de:	9903      	ldr	r1, [sp, #12]
  1136e0:	4638      	mov	r0, r7
  1136e2:	f7fe f868 	bl	1117b6 <strncmp>
  1136e6:	2800      	cmp	r0, #0
  1136e8:	d134      	bne.n	113754 <__gethex+0xc2>
  1136ea:	9b01      	ldr	r3, [sp, #4]
  1136ec:	5cf8      	ldrb	r0, [r7, r3]
  1136ee:	18fe      	adds	r6, r7, r3
  1136f0:	f7ff ffba 	bl	113668 <__hexdig_fun>
  1136f4:	b380      	cbz	r0, 113758 <__gethex+0xc6>
  1136f6:	4633      	mov	r3, r6
  1136f8:	7818      	ldrb	r0, [r3, #0]
  1136fa:	461f      	mov	r7, r3
  1136fc:	2830      	cmp	r0, #48	; 0x30
  1136fe:	f103 0301 	add.w	r3, r3, #1
  113702:	d0f9      	beq.n	1136f8 <__gethex+0x66>
  113704:	f7ff ffb0 	bl	113668 <__hexdig_fun>
  113708:	fab0 f580 	clz	r5, r0
  11370c:	4634      	mov	r4, r6
  11370e:	096d      	lsrs	r5, r5, #5
  113710:	f04f 0b01 	mov.w	r11, #1
  113714:	e001      	b.n	11371a <__gethex+0x88>
  113716:	2500      	movs	r5, #0
  113718:	462c      	mov	r4, r5
  11371a:	463a      	mov	r2, r7
  11371c:	4616      	mov	r6, r2
  11371e:	7830      	ldrb	r0, [r6, #0]
  113720:	3201      	adds	r2, #1
  113722:	f7ff ffa1 	bl	113668 <__hexdig_fun>
  113726:	2800      	cmp	r0, #0
  113728:	d1f8      	bne.n	11371c <__gethex+0x8a>
  11372a:	9a01      	ldr	r2, [sp, #4]
  11372c:	9903      	ldr	r1, [sp, #12]
  11372e:	4630      	mov	r0, r6
  113730:	f7fe f841 	bl	1117b6 <strncmp>
  113734:	b950      	cbnz	r0, 11374c <__gethex+0xba>
  113736:	b954      	cbnz	r4, 11374e <__gethex+0xbc>
  113738:	9b01      	ldr	r3, [sp, #4]
  11373a:	18f4      	adds	r4, r6, r3
  11373c:	4622      	mov	r2, r4
  11373e:	4616      	mov	r6, r2
  113740:	7830      	ldrb	r0, [r6, #0]
  113742:	3201      	adds	r2, #1
  113744:	f7ff ff90 	bl	113668 <__hexdig_fun>
  113748:	2800      	cmp	r0, #0
  11374a:	d1f8      	bne.n	11373e <__gethex+0xac>
  11374c:	b134      	cbz	r4, 11375c <__gethex+0xca>
  11374e:	1ba4      	subs	r4, r4, r6
  113750:	00a4      	lsls	r4, r4, #2
  113752:	e003      	b.n	11375c <__gethex+0xca>
  113754:	463e      	mov	r6, r7
  113756:	e000      	b.n	11375a <__gethex+0xc8>
  113758:	4604      	mov	r4, r0
  11375a:	2501      	movs	r5, #1
  11375c:	7833      	ldrb	r3, [r6, #0]
  11375e:	2b50      	cmp	r3, #80	; 0x50
  113760:	d001      	beq.n	113766 <__gethex+0xd4>
  113762:	2b70      	cmp	r3, #112	; 0x70
  113764:	d12a      	bne.n	1137bc <__gethex+0x12a>
  113766:	7873      	ldrb	r3, [r6, #1]
  113768:	2b2b      	cmp	r3, #43	; 0x2b
  11376a:	d008      	beq.n	11377e <__gethex+0xec>
  11376c:	2b2d      	cmp	r3, #45	; 0x2d
  11376e:	d003      	beq.n	113778 <__gethex+0xe6>
  113770:	1c71      	adds	r1, r6, #1
  113772:	f04f 0900 	mov.w	r9, #0
  113776:	e005      	b.n	113784 <__gethex+0xf2>
  113778:	f04f 0901 	mov.w	r9, #1
  11377c:	e001      	b.n	113782 <__gethex+0xf0>
  11377e:	f04f 0900 	mov.w	r9, #0
  113782:	1cb1      	adds	r1, r6, #2
  113784:	7808      	ldrb	r0, [r1, #0]
  113786:	f7ff ff6f 	bl	113668 <__hexdig_fun>
  11378a:	1e43      	subs	r3, r0, #1
  11378c:	b2db      	uxtb	r3, r3
  11378e:	2b18      	cmp	r3, #24
  113790:	d814      	bhi.n	1137bc <__gethex+0x12a>
  113792:	f1a0 0210 	sub.w	r2, r0, #16
  113796:	f811 0f01 	ldrb.w	r0, [r1, #1]!
  11379a:	f7ff ff65 	bl	113668 <__hexdig_fun>
  11379e:	1e43      	subs	r3, r0, #1
  1137a0:	b2db      	uxtb	r3, r3
  1137a2:	2b18      	cmp	r3, #24
  1137a4:	d804      	bhi.n	1137b0 <__gethex+0x11e>
  1137a6:	230a      	movs	r3, #10
  1137a8:	fb03 0202 	mla	r2, r3, r2, r0
  1137ac:	3a10      	subs	r2, #16
  1137ae:	e7f2      	b.n	113796 <__gethex+0x104>
  1137b0:	f1b9 0f00 	cmp.w	r9, #0
  1137b4:	d000      	beq.n	1137b8 <__gethex+0x126>
  1137b6:	4252      	negs	r2, r2
  1137b8:	4414      	add	r4, r2
  1137ba:	e000      	b.n	1137be <__gethex+0x12c>
  1137bc:	4631      	mov	r1, r6
  1137be:	f8ca 1000 	str.w	r1, [r10]
  1137c2:	b12d      	cbz	r5, 1137d0 <__gethex+0x13e>
  1137c4:	f1bb 0f00 	cmp.w	r11, #0
  1137c8:	bf14      	ite	ne
  1137ca:	2000      	movne	r0, #0
  1137cc:	2006      	moveq	r0, #6
  1137ce:	e17c      	b.n	113aca <__gethex+0x438>
  1137d0:	4629      	mov	r1, r5
  1137d2:	1bf3      	subs	r3, r6, r7
  1137d4:	3b01      	subs	r3, #1
  1137d6:	2b07      	cmp	r3, #7
  1137d8:	dd02      	ble.n	1137e0 <__gethex+0x14e>
  1137da:	3101      	adds	r1, #1
  1137dc:	105b      	asrs	r3, r3, #1
  1137de:	e7fa      	b.n	1137d6 <__gethex+0x144>
  1137e0:	9802      	ldr	r0, [sp, #8]
  1137e2:	f000 fa4b 	bl	113c7c <_Balloc>
  1137e6:	f04f 0900 	mov.w	r9, #0
  1137ea:	4605      	mov	r5, r0
  1137ec:	46cb      	mov	r11, r9
  1137ee:	9b01      	ldr	r3, [sp, #4]
  1137f0:	f100 0a14 	add.w	r10, r0, #20
  1137f4:	f1c3 0301 	rsb	r3, r3, #1
  1137f8:	f8cd a010 	str.w	r10, [sp, #16]
  1137fc:	9308      	str	r3, [sp, #32]
  1137fe:	42b7      	cmp	r7, r6
  113800:	d22f      	bcs.n	113862 <__gethex+0x1d0>
  113802:	1e73      	subs	r3, r6, #1
  113804:	9305      	str	r3, [sp, #20]
  113806:	9a07      	ldr	r2, [sp, #28]
  113808:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  11380c:	4293      	cmp	r3, r2
  11380e:	d00b      	beq.n	113828 <__gethex+0x196>
  113810:	f1bb 0f20 	cmp.w	r11, #32
  113814:	d116      	bne.n	113844 <__gethex+0x1b2>
  113816:	9b04      	ldr	r3, [sp, #16]
  113818:	f8c3 9000 	str.w	r9, [r3]
  11381c:	3304      	adds	r3, #4
  11381e:	f04f 0900 	mov.w	r9, #0
  113822:	9304      	str	r3, [sp, #16]
  113824:	46cb      	mov	r11, r9
  113826:	e00d      	b.n	113844 <__gethex+0x1b2>
  113828:	9b05      	ldr	r3, [sp, #20]
  11382a:	9a08      	ldr	r2, [sp, #32]
  11382c:	4413      	add	r3, r2
  11382e:	429f      	cmp	r7, r3
  113830:	d8ee      	bhi.n	113810 <__gethex+0x17e>
  113832:	4618      	mov	r0, r3
  113834:	9a01      	ldr	r2, [sp, #4]
  113836:	9903      	ldr	r1, [sp, #12]
  113838:	9309      	str	r3, [sp, #36]	; 0x24
  11383a:	f7fd ffbc 	bl	1117b6 <strncmp>
  11383e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  113840:	b168      	cbz	r0, 11385e <__gethex+0x1cc>
  113842:	e7e5      	b.n	113810 <__gethex+0x17e>
  113844:	f816 0c01 	ldrb.w	r0, [r6, #-1]
  113848:	f7ff ff0e 	bl	113668 <__hexdig_fun>
  11384c:	f000 000f 	and.w	r0, r0, #15
  113850:	fa00 f00b 	lsl.w	r0, r0, r11
  113854:	9b05      	ldr	r3, [sp, #20]
  113856:	ea49 0900 	orr.w	r9, r9, r0
  11385a:	f10b 0b04 	add.w	r11, r11, #4
  11385e:	461e      	mov	r6, r3
  113860:	e7cd      	b.n	1137fe <__gethex+0x16c>
  113862:	9804      	ldr	r0, [sp, #16]
  113864:	f840 9b04 	str.w	r9, [r0], #4
  113868:	ebca 0000 	rsb	r0, r10, r0
  11386c:	1080      	asrs	r0, r0, #2
  11386e:	6128      	str	r0, [r5, #16]
  113870:	0147      	lsls	r7, r0, #5
  113872:	4648      	mov	r0, r9
  113874:	f000 fac7 	bl	113e06 <__hi0bits>
  113878:	f8d8 6000 	ldr.w	r6, [r8]
  11387c:	1a38      	subs	r0, r7, r0
  11387e:	42b0      	cmp	r0, r6
  113880:	dd26      	ble.n	1138d0 <__gethex+0x23e>
  113882:	1b87      	subs	r7, r0, r6
  113884:	4639      	mov	r1, r7
  113886:	4628      	mov	r0, r5
  113888:	f000 fdbf 	bl	11440a <__any_on>
  11388c:	b1c8      	cbz	r0, 1138c2 <__gethex+0x230>
  11388e:	1e7b      	subs	r3, r7, #1
  113890:	1159      	asrs	r1, r3, #5
  113892:	f003 021f 	and.w	r2, r3, #31
  113896:	f04f 0901 	mov.w	r9, #1
  11389a:	f85a 1021 	ldr.w	r1, [r10, r1, lsl #2]
  11389e:	fa09 f202 	lsl.w	r2, r9, r2
  1138a2:	420a      	tst	r2, r1
  1138a4:	d00e      	beq.n	1138c4 <__gethex+0x232>
  1138a6:	454b      	cmp	r3, r9
  1138a8:	dc02      	bgt.n	1138b0 <__gethex+0x21e>
  1138aa:	f04f 0902 	mov.w	r9, #2
  1138ae:	e009      	b.n	1138c4 <__gethex+0x232>
  1138b0:	1eb9      	subs	r1, r7, #2
  1138b2:	4628      	mov	r0, r5
  1138b4:	f000 fda9 	bl	11440a <__any_on>
  1138b8:	2800      	cmp	r0, #0
  1138ba:	d0f6      	beq.n	1138aa <__gethex+0x218>
  1138bc:	f04f 0903 	mov.w	r9, #3
  1138c0:	e000      	b.n	1138c4 <__gethex+0x232>
  1138c2:	4681      	mov	r9, r0
  1138c4:	4639      	mov	r1, r7
  1138c6:	4628      	mov	r0, r5
  1138c8:	f7ff fe98 	bl	1135fc <rshift>
  1138cc:	443c      	add	r4, r7
  1138ce:	e00c      	b.n	1138ea <__gethex+0x258>
  1138d0:	da09      	bge.n	1138e6 <__gethex+0x254>
  1138d2:	1a37      	subs	r7, r6, r0
  1138d4:	4629      	mov	r1, r5
  1138d6:	463a      	mov	r2, r7
  1138d8:	9802      	ldr	r0, [sp, #8]
  1138da:	f000 fbc9 	bl	114070 <__lshift>
  1138de:	4605      	mov	r5, r0
  1138e0:	1be4      	subs	r4, r4, r7
  1138e2:	f100 0a14 	add.w	r10, r0, #20
  1138e6:	f04f 0900 	mov.w	r9, #0
  1138ea:	f8d8 3008 	ldr.w	r3, [r8, #8]
  1138ee:	429c      	cmp	r4, r3
  1138f0:	dd08      	ble.n	113904 <__gethex+0x272>
  1138f2:	9802      	ldr	r0, [sp, #8]
  1138f4:	4629      	mov	r1, r5
  1138f6:	f000 f9f6 	bl	113ce6 <_Bfree>
  1138fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
  1138fc:	2300      	movs	r3, #0
  1138fe:	6013      	str	r3, [r2, #0]
  113900:	20a3      	movs	r0, #163	; 0xa3
  113902:	e0e2      	b.n	113aca <__gethex+0x438>
  113904:	f8d8 0004 	ldr.w	r0, [r8, #4]
  113908:	4284      	cmp	r4, r0
  11390a:	da53      	bge.n	1139b4 <__gethex+0x322>
  11390c:	1b04      	subs	r4, r0, r4
  11390e:	42a6      	cmp	r6, r4
  113910:	dc2e      	bgt.n	113970 <__gethex+0x2de>
  113912:	f8d8 300c 	ldr.w	r3, [r8, #12]
  113916:	2b02      	cmp	r3, #2
  113918:	d01a      	beq.n	113950 <__gethex+0x2be>
  11391a:	2b03      	cmp	r3, #3
  11391c:	d01c      	beq.n	113958 <__gethex+0x2c6>
  11391e:	2b01      	cmp	r3, #1
  113920:	d11d      	bne.n	11395e <__gethex+0x2cc>
  113922:	42a6      	cmp	r6, r4
  113924:	d11b      	bne.n	11395e <__gethex+0x2cc>
  113926:	2e01      	cmp	r6, #1
  113928:	dc0b      	bgt.n	113942 <__gethex+0x2b0>
  11392a:	f8d8 3004 	ldr.w	r3, [r8, #4]
  11392e:	9a06      	ldr	r2, [sp, #24]
  113930:	2062      	movs	r0, #98	; 0x62
  113932:	6013      	str	r3, [r2, #0]
  113934:	2301      	movs	r3, #1
  113936:	612b      	str	r3, [r5, #16]
  113938:	f8ca 3000 	str.w	r3, [r10]
  11393c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  11393e:	601d      	str	r5, [r3, #0]
  113940:	e0c3      	b.n	113aca <__gethex+0x438>
  113942:	1e71      	subs	r1, r6, #1
  113944:	4628      	mov	r0, r5
  113946:	f000 fd60 	bl	11440a <__any_on>
  11394a:	2800      	cmp	r0, #0
  11394c:	d1ed      	bne.n	11392a <__gethex+0x298>
  11394e:	e006      	b.n	11395e <__gethex+0x2cc>
  113950:	9b15      	ldr	r3, [sp, #84]	; 0x54
  113952:	2b00      	cmp	r3, #0
  113954:	d0e9      	beq.n	11392a <__gethex+0x298>
  113956:	e002      	b.n	11395e <__gethex+0x2cc>
  113958:	9b15      	ldr	r3, [sp, #84]	; 0x54
  11395a:	2b00      	cmp	r3, #0
  11395c:	d1e5      	bne.n	11392a <__gethex+0x298>
  11395e:	9802      	ldr	r0, [sp, #8]
  113960:	4629      	mov	r1, r5
  113962:	f000 f9c0 	bl	113ce6 <_Bfree>
  113966:	9a14      	ldr	r2, [sp, #80]	; 0x50
  113968:	2300      	movs	r3, #0
  11396a:	6013      	str	r3, [r2, #0]
  11396c:	2050      	movs	r0, #80	; 0x50
  11396e:	e0ac      	b.n	113aca <__gethex+0x438>
  113970:	1e67      	subs	r7, r4, #1
  113972:	f1b9 0f00 	cmp.w	r9, #0
  113976:	d106      	bne.n	113986 <__gethex+0x2f4>
  113978:	b13f      	cbz	r7, 11398a <__gethex+0x2f8>
  11397a:	4639      	mov	r1, r7
  11397c:	4628      	mov	r0, r5
  11397e:	f000 fd44 	bl	11440a <__any_on>
  113982:	4681      	mov	r9, r0
  113984:	e001      	b.n	11398a <__gethex+0x2f8>
  113986:	f04f 0901 	mov.w	r9, #1
  11398a:	117a      	asrs	r2, r7, #5
  11398c:	2301      	movs	r3, #1
  11398e:	f007 071f 	and.w	r7, r7, #31
  113992:	fa03 f707 	lsl.w	r7, r3, r7
  113996:	f85a 3022 	ldr.w	r3, [r10, r2, lsl #2]
  11399a:	4621      	mov	r1, r4
  11399c:	421f      	tst	r7, r3
  11399e:	4628      	mov	r0, r5
  1139a0:	bf18      	it	ne
  1139a2:	f049 0902 	orrne.w	r9, r9, #2
  1139a6:	1b36      	subs	r6, r6, r4
  1139a8:	f7ff fe28 	bl	1135fc <rshift>
  1139ac:	2702      	movs	r7, #2
  1139ae:	f8d8 4004 	ldr.w	r4, [r8, #4]
  1139b2:	e000      	b.n	1139b6 <__gethex+0x324>
  1139b4:	2701      	movs	r7, #1
  1139b6:	f1b9 0f00 	cmp.w	r9, #0
  1139ba:	f000 8081 	beq.w	113ac0 <__gethex+0x42e>
  1139be:	f8d8 300c 	ldr.w	r3, [r8, #12]
  1139c2:	2b02      	cmp	r3, #2
  1139c4:	d00e      	beq.n	1139e4 <__gethex+0x352>
  1139c6:	2b03      	cmp	r3, #3
  1139c8:	d010      	beq.n	1139ec <__gethex+0x35a>
  1139ca:	2b01      	cmp	r3, #1
  1139cc:	d176      	bne.n	113abc <__gethex+0x42a>
  1139ce:	f019 0f02 	tst.w	r9, #2
  1139d2:	d073      	beq.n	113abc <__gethex+0x42a>
  1139d4:	f8da 0000 	ldr.w	r0, [r10]
  1139d8:	ea49 0900 	orr.w	r9, r9, r0
  1139dc:	f019 0f01 	tst.w	r9, #1
  1139e0:	d107      	bne.n	1139f2 <__gethex+0x360>
  1139e2:	e06b      	b.n	113abc <__gethex+0x42a>
  1139e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  1139e6:	f1c3 0301 	rsb	r3, r3, #1
  1139ea:	9315      	str	r3, [sp, #84]	; 0x54
  1139ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
  1139ee:	2b00      	cmp	r3, #0
  1139f0:	d064      	beq.n	113abc <__gethex+0x42a>
  1139f2:	f8d5 a010 	ldr.w	r10, [r5, #16]
  1139f6:	f105 0314 	add.w	r3, r5, #20
  1139fa:	ea4f 098a 	mov.w	r9, r10, lsl #2
  1139fe:	eb03 0109 	add.w	r1, r3, r9
  113a02:	2000      	movs	r0, #0
  113a04:	681a      	ldr	r2, [r3, #0]
  113a06:	f1b2 3fff 	cmp.w	r2, #4294967295
  113a0a:	d002      	beq.n	113a12 <__gethex+0x380>
  113a0c:	3201      	adds	r2, #1
  113a0e:	601a      	str	r2, [r3, #0]
  113a10:	e020      	b.n	113a54 <__gethex+0x3c2>
  113a12:	f843 0b04 	str.w	r0, [r3], #4
  113a16:	4299      	cmp	r1, r3
  113a18:	d8f4      	bhi.n	113a04 <__gethex+0x372>
  113a1a:	68ab      	ldr	r3, [r5, #8]
  113a1c:	459a      	cmp	r10, r3
  113a1e:	db12      	blt.n	113a46 <__gethex+0x3b4>
  113a20:	6869      	ldr	r1, [r5, #4]
  113a22:	9802      	ldr	r0, [sp, #8]
  113a24:	3101      	adds	r1, #1
  113a26:	f000 f929 	bl	113c7c <_Balloc>
  113a2a:	4683      	mov	r11, r0
  113a2c:	692a      	ldr	r2, [r5, #16]
  113a2e:	f105 010c 	add.w	r1, r5, #12
  113a32:	3202      	adds	r2, #2
  113a34:	0092      	lsls	r2, r2, #2
  113a36:	300c      	adds	r0, #12
  113a38:	f7fc fa4f 	bl	10feda <memcpy>
  113a3c:	4629      	mov	r1, r5
  113a3e:	9802      	ldr	r0, [sp, #8]
  113a40:	f000 f951 	bl	113ce6 <_Bfree>
  113a44:	465d      	mov	r5, r11
  113a46:	692b      	ldr	r3, [r5, #16]
  113a48:	1c5a      	adds	r2, r3, #1
  113a4a:	612a      	str	r2, [r5, #16]
  113a4c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  113a50:	2201      	movs	r2, #1
  113a52:	615a      	str	r2, [r3, #20]
  113a54:	2f02      	cmp	r7, #2
  113a56:	f105 0214 	add.w	r2, r5, #20
  113a5a:	d111      	bne.n	113a80 <__gethex+0x3ee>
  113a5c:	f8d8 3000 	ldr.w	r3, [r8]
  113a60:	3b01      	subs	r3, #1
  113a62:	429e      	cmp	r6, r3
  113a64:	d127      	bne.n	113ab6 <__gethex+0x424>
  113a66:	1171      	asrs	r1, r6, #5
  113a68:	2301      	movs	r3, #1
  113a6a:	f006 061f 	and.w	r6, r6, #31
  113a6e:	fa03 f606 	lsl.w	r6, r3, r6
  113a72:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
  113a76:	421e      	tst	r6, r3
  113a78:	bf0c      	ite	eq
  113a7a:	2702      	moveq	r7, #2
  113a7c:	2701      	movne	r7, #1
  113a7e:	e01a      	b.n	113ab6 <__gethex+0x424>
  113a80:	692b      	ldr	r3, [r5, #16]
  113a82:	459a      	cmp	r10, r3
  113a84:	da0a      	bge.n	113a9c <__gethex+0x40a>
  113a86:	2101      	movs	r1, #1
  113a88:	4628      	mov	r0, r5
  113a8a:	f7ff fdb7 	bl	1135fc <rshift>
  113a8e:	f8d8 3008 	ldr.w	r3, [r8, #8]
  113a92:	3401      	adds	r4, #1
  113a94:	429c      	cmp	r4, r3
  113a96:	f73f af2c 	bgt.w	1138f2 <__gethex+0x260>
  113a9a:	e00b      	b.n	113ab4 <__gethex+0x422>
  113a9c:	f016 061f 	ands.w	r6, r6, #31
  113aa0:	d008      	beq.n	113ab4 <__gethex+0x422>
  113aa2:	4491      	add	r9, r2
  113aa4:	f859 0c04 	ldr.w	r0, [r9, #-4]
  113aa8:	f000 f9ad 	bl	113e06 <__hi0bits>
  113aac:	f1c6 0620 	rsb	r6, r6, #32
  113ab0:	42b0      	cmp	r0, r6
  113ab2:	dbe8      	blt.n	113a86 <__gethex+0x3f4>
  113ab4:	2701      	movs	r7, #1
  113ab6:	f047 0720 	orr.w	r7, r7, #32
  113aba:	e001      	b.n	113ac0 <__gethex+0x42e>
  113abc:	f047 0710 	orr.w	r7, r7, #16
  113ac0:	4638      	mov	r0, r7
  113ac2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  113ac4:	601d      	str	r5, [r3, #0]
  113ac6:	9b06      	ldr	r3, [sp, #24]
  113ac8:	601c      	str	r4, [r3, #0]
  113aca:	b00b      	add	sp, #44	; 0x2c
  113acc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00113ad0 <L_shift>:
  113ad0:	f1c2 0208 	rsb	r2, r2, #8
  113ad4:	0092      	lsls	r2, r2, #2
  113ad6:	b570      	push	{r4, r5, r6, lr}
  113ad8:	f1c2 0620 	rsb	r6, r2, #32
  113adc:	6843      	ldr	r3, [r0, #4]
  113ade:	6805      	ldr	r5, [r0, #0]
  113ae0:	fa03 f406 	lsl.w	r4, r3, r6
  113ae4:	432c      	orrs	r4, r5
  113ae6:	40d3      	lsrs	r3, r2
  113ae8:	6004      	str	r4, [r0, #0]
  113aea:	f840 3f04 	str.w	r3, [r0, #4]!
  113aee:	4288      	cmp	r0, r1
  113af0:	d3f4      	bcc.n	113adc <L_shift+0xc>
  113af2:	bd70      	pop	{r4, r5, r6, pc}

00113af4 <__match>:
  113af4:	b530      	push	{r4, r5, lr}
  113af6:	6803      	ldr	r3, [r0, #0]
  113af8:	f811 4b01 	ldrb.w	r4, [r1], #1
  113afc:	3301      	adds	r3, #1
  113afe:	b14c      	cbz	r4, 113b14 <__match+0x20>
  113b00:	781a      	ldrb	r2, [r3, #0]
  113b02:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
  113b06:	2d19      	cmp	r5, #25
  113b08:	bf98      	it	ls
  113b0a:	3220      	addls	r2, #32
  113b0c:	42a2      	cmp	r2, r4
  113b0e:	d0f3      	beq.n	113af8 <__match+0x4>
  113b10:	2000      	movs	r0, #0
  113b12:	bd30      	pop	{r4, r5, pc}
  113b14:	6003      	str	r3, [r0, #0]
  113b16:	2001      	movs	r0, #1
  113b18:	bd30      	pop	{r4, r5, pc}

00113b1a <__hexnan>:
  113b1a:	680b      	ldr	r3, [r1, #0]
  113b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  113b20:	115e      	asrs	r6, r3, #5
  113b22:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  113b26:	f013 031f 	ands.w	r3, r3, #31
  113b2a:	bf18      	it	ne
  113b2c:	3604      	addne	r6, #4
  113b2e:	1f35      	subs	r5, r6, #4
  113b30:	4617      	mov	r7, r2
  113b32:	2200      	movs	r2, #0
  113b34:	4682      	mov	r10, r0
  113b36:	46a8      	mov	r8, r5
  113b38:	462c      	mov	r4, r5
  113b3a:	4691      	mov	r9, r2
  113b3c:	b085      	sub	sp, #20
  113b3e:	f8d0 b000 	ldr.w	r11, [r0]
  113b42:	9301      	str	r3, [sp, #4]
  113b44:	f846 2c04 	str.w	r2, [r6, #-4]
  113b48:	9200      	str	r2, [sp, #0]
  113b4a:	f81b 1f01 	ldrb.w	r1, [r11, #1]!
  113b4e:	2900      	cmp	r1, #0
  113b50:	d03c      	beq.n	113bcc <__hexnan+0xb2>
  113b52:	4608      	mov	r0, r1
  113b54:	9203      	str	r2, [sp, #12]
  113b56:	9102      	str	r1, [sp, #8]
  113b58:	f7ff fd86 	bl	113668 <__hexdig_fun>
  113b5c:	9a03      	ldr	r2, [sp, #12]
  113b5e:	bb00      	cbnz	r0, 113ba2 <__hexnan+0x88>
  113b60:	9902      	ldr	r1, [sp, #8]
  113b62:	2920      	cmp	r1, #32
  113b64:	d816      	bhi.n	113b94 <__hexnan+0x7a>
  113b66:	9b00      	ldr	r3, [sp, #0]
  113b68:	4599      	cmp	r9, r3
  113b6a:	ddee      	ble.n	113b4a <__hexnan+0x30>
  113b6c:	4544      	cmp	r4, r8
  113b6e:	d205      	bcs.n	113b7c <__hexnan+0x62>
  113b70:	2a07      	cmp	r2, #7
  113b72:	dc03      	bgt.n	113b7c <__hexnan+0x62>
  113b74:	4641      	mov	r1, r8
  113b76:	4620      	mov	r0, r4
  113b78:	f7ff ffaa 	bl	113ad0 <L_shift>
  113b7c:	42bc      	cmp	r4, r7
  113b7e:	d923      	bls.n	113bc8 <__hexnan+0xae>
  113b80:	2300      	movs	r3, #0
  113b82:	f1a4 0804 	sub.w	r8, r4, #4
  113b86:	f844 3c04 	str.w	r3, [r4, #-4]
  113b8a:	f8cd 9000 	str.w	r9, [sp]
  113b8e:	4644      	mov	r4, r8
  113b90:	461a      	mov	r2, r3
  113b92:	e7da      	b.n	113b4a <__hexnan+0x30>
  113b94:	2929      	cmp	r1, #41	; 0x29
  113b96:	d148      	bne.n	113c2a <__hexnan+0x110>
  113b98:	f10b 0301 	add.w	r3, r11, #1
  113b9c:	f8ca 3000 	str.w	r3, [r10]
  113ba0:	e014      	b.n	113bcc <__hexnan+0xb2>
  113ba2:	3201      	adds	r2, #1
  113ba4:	2a08      	cmp	r2, #8
  113ba6:	f109 0901 	add.w	r9, r9, #1
  113baa:	dd06      	ble.n	113bba <__hexnan+0xa0>
  113bac:	42bc      	cmp	r4, r7
  113bae:	d9cc      	bls.n	113b4a <__hexnan+0x30>
  113bb0:	2300      	movs	r3, #0
  113bb2:	f844 3c04 	str.w	r3, [r4, #-4]
  113bb6:	2201      	movs	r2, #1
  113bb8:	3c04      	subs	r4, #4
  113bba:	6821      	ldr	r1, [r4, #0]
  113bbc:	f000 000f 	and.w	r0, r0, #15
  113bc0:	ea40 1001 	orr.w	r0, r0, r1, lsl #4
  113bc4:	6020      	str	r0, [r4, #0]
  113bc6:	e7c0      	b.n	113b4a <__hexnan+0x30>
  113bc8:	2208      	movs	r2, #8
  113bca:	e7be      	b.n	113b4a <__hexnan+0x30>
  113bcc:	f1b9 0f00 	cmp.w	r9, #0
  113bd0:	d02b      	beq.n	113c2a <__hexnan+0x110>
  113bd2:	4544      	cmp	r4, r8
  113bd4:	d205      	bcs.n	113be2 <__hexnan+0xc8>
  113bd6:	2a07      	cmp	r2, #7
  113bd8:	dc03      	bgt.n	113be2 <__hexnan+0xc8>
  113bda:	4641      	mov	r1, r8
  113bdc:	4620      	mov	r0, r4
  113bde:	f7ff ff77 	bl	113ad0 <L_shift>
  113be2:	42bc      	cmp	r4, r7
  113be4:	d90c      	bls.n	113c00 <__hexnan+0xe6>
  113be6:	463b      	mov	r3, r7
  113be8:	f854 2b04 	ldr.w	r2, [r4], #4
  113bec:	42a5      	cmp	r5, r4
  113bee:	f843 2b04 	str.w	r2, [r3], #4
  113bf2:	d2f9      	bcs.n	113be8 <__hexnan+0xce>
  113bf4:	2200      	movs	r2, #0
  113bf6:	f843 2b04 	str.w	r2, [r3], #4
  113bfa:	429d      	cmp	r5, r3
  113bfc:	d2fb      	bcs.n	113bf6 <__hexnan+0xdc>
  113bfe:	e00b      	b.n	113c18 <__hexnan+0xfe>
  113c00:	9b01      	ldr	r3, [sp, #4]
  113c02:	b14b      	cbz	r3, 113c18 <__hexnan+0xfe>
  113c04:	f1c3 0220 	rsb	r2, r3, #32
  113c08:	f04f 33ff 	mov.w	r3, #4294967295
  113c0c:	40d3      	lsrs	r3, r2
  113c0e:	f856 2c04 	ldr.w	r2, [r6, #-4]
  113c12:	4013      	ands	r3, r2
  113c14:	f846 3c04 	str.w	r3, [r6, #-4]
  113c18:	682b      	ldr	r3, [r5, #0]
  113c1a:	b943      	cbnz	r3, 113c2e <__hexnan+0x114>
  113c1c:	42bd      	cmp	r5, r7
  113c1e:	d102      	bne.n	113c26 <__hexnan+0x10c>
  113c20:	2301      	movs	r3, #1
  113c22:	602b      	str	r3, [r5, #0]
  113c24:	e003      	b.n	113c2e <__hexnan+0x114>
  113c26:	3d04      	subs	r5, #4
  113c28:	e7f6      	b.n	113c18 <__hexnan+0xfe>
  113c2a:	2004      	movs	r0, #4
  113c2c:	e000      	b.n	113c30 <__hexnan+0x116>
  113c2e:	2005      	movs	r0, #5
  113c30:	b005      	add	sp, #20
  113c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
	...

00113c38 <_isatty_r>:
  113c38:	b538      	push	{r3, r4, r5, lr}
  113c3a:	4c06      	ldr	r4, [pc, #24]	; (113c54 <_isatty_r+0x1c>)
  113c3c:	2300      	movs	r3, #0
  113c3e:	4605      	mov	r5, r0
  113c40:	4608      	mov	r0, r1
  113c42:	6023      	str	r3, [r4, #0]
  113c44:	f7f1 ff28 	bl	105a98 <__wrap__isatty>
  113c48:	1c43      	adds	r3, r0, #1
  113c4a:	d102      	bne.n	113c52 <_isatty_r+0x1a>
  113c4c:	6823      	ldr	r3, [r4, #0]
  113c4e:	b103      	cbz	r3, 113c52 <_isatty_r+0x1a>
  113c50:	602b      	str	r3, [r5, #0]
  113c52:	bd38      	pop	{r3, r4, r5, pc}
  113c54:	3fff9f18 	.word	0x3fff9f18

00113c58 <_lseek_r>:
  113c58:	b538      	push	{r3, r4, r5, lr}
  113c5a:	4c07      	ldr	r4, [pc, #28]	; (113c78 <_lseek_r+0x20>)
  113c5c:	4605      	mov	r5, r0
  113c5e:	4608      	mov	r0, r1
  113c60:	4611      	mov	r1, r2
  113c62:	2200      	movs	r2, #0
  113c64:	6022      	str	r2, [r4, #0]
  113c66:	461a      	mov	r2, r3
  113c68:	f7f9 fcdc 	bl	10d624 <_lseek>
  113c6c:	1c43      	adds	r3, r0, #1
  113c6e:	d102      	bne.n	113c76 <_lseek_r+0x1e>
  113c70:	6823      	ldr	r3, [r4, #0]
  113c72:	b103      	cbz	r3, 113c76 <_lseek_r+0x1e>
  113c74:	602b      	str	r3, [r5, #0]
  113c76:	bd38      	pop	{r3, r4, r5, pc}
  113c78:	3fff9f18 	.word	0x3fff9f18

00113c7c <_Balloc>:
  113c7c:	b570      	push	{r4, r5, r6, lr}
  113c7e:	6a45      	ldr	r5, [r0, #36]	; 0x24
  113c80:	4604      	mov	r4, r0
  113c82:	460e      	mov	r6, r1
  113c84:	b93d      	cbnz	r5, 113c96 <_Balloc+0x1a>
  113c86:	2010      	movs	r0, #16
  113c88:	f7fc f8fa 	bl	10fe80 <malloc>
  113c8c:	6260      	str	r0, [r4, #36]	; 0x24
  113c8e:	6045      	str	r5, [r0, #4]
  113c90:	6085      	str	r5, [r0, #8]
  113c92:	6005      	str	r5, [r0, #0]
  113c94:	60c5      	str	r5, [r0, #12]
  113c96:	6a65      	ldr	r5, [r4, #36]	; 0x24
  113c98:	68eb      	ldr	r3, [r5, #12]
  113c9a:	b143      	cbz	r3, 113cae <_Balloc+0x32>
  113c9c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  113c9e:	68db      	ldr	r3, [r3, #12]
  113ca0:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
  113ca4:	b178      	cbz	r0, 113cc6 <_Balloc+0x4a>
  113ca6:	6802      	ldr	r2, [r0, #0]
  113ca8:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
  113cac:	e017      	b.n	113cde <_Balloc+0x62>
  113cae:	2221      	movs	r2, #33	; 0x21
  113cb0:	2104      	movs	r1, #4
  113cb2:	4620      	mov	r0, r4
  113cb4:	f7f9 fc01 	bl	10d4ba <__wrap__calloc_r>
  113cb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
  113cba:	60e8      	str	r0, [r5, #12]
  113cbc:	68db      	ldr	r3, [r3, #12]
  113cbe:	2b00      	cmp	r3, #0
  113cc0:	d1ec      	bne.n	113c9c <_Balloc+0x20>
  113cc2:	2000      	movs	r0, #0
  113cc4:	bd70      	pop	{r4, r5, r6, pc}
  113cc6:	2101      	movs	r1, #1
  113cc8:	fa01 f506 	lsl.w	r5, r1, r6
  113ccc:	1d6a      	adds	r2, r5, #5
  113cce:	0092      	lsls	r2, r2, #2
  113cd0:	4620      	mov	r0, r4
  113cd2:	f7f9 fbf2 	bl	10d4ba <__wrap__calloc_r>
  113cd6:	2800      	cmp	r0, #0
  113cd8:	d0f3      	beq.n	113cc2 <_Balloc+0x46>
  113cda:	6046      	str	r6, [r0, #4]
  113cdc:	6085      	str	r5, [r0, #8]
  113cde:	2300      	movs	r3, #0
  113ce0:	6103      	str	r3, [r0, #16]
  113ce2:	60c3      	str	r3, [r0, #12]
  113ce4:	bd70      	pop	{r4, r5, r6, pc}

00113ce6 <_Bfree>:
  113ce6:	b570      	push	{r4, r5, r6, lr}
  113ce8:	6a44      	ldr	r4, [r0, #36]	; 0x24
  113cea:	4606      	mov	r6, r0
  113cec:	460d      	mov	r5, r1
  113cee:	b93c      	cbnz	r4, 113d00 <_Bfree+0x1a>
  113cf0:	2010      	movs	r0, #16
  113cf2:	f7fc f8c5 	bl	10fe80 <malloc>
  113cf6:	6270      	str	r0, [r6, #36]	; 0x24
  113cf8:	6044      	str	r4, [r0, #4]
  113cfa:	6084      	str	r4, [r0, #8]
  113cfc:	6004      	str	r4, [r0, #0]
  113cfe:	60c4      	str	r4, [r0, #12]
  113d00:	b13d      	cbz	r5, 113d12 <_Bfree+0x2c>
  113d02:	6a73      	ldr	r3, [r6, #36]	; 0x24
  113d04:	686a      	ldr	r2, [r5, #4]
  113d06:	68db      	ldr	r3, [r3, #12]
  113d08:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  113d0c:	6029      	str	r1, [r5, #0]
  113d0e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  113d12:	bd70      	pop	{r4, r5, r6, pc}

00113d14 <__multadd>:
  113d14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  113d18:	4606      	mov	r6, r0
  113d1a:	460c      	mov	r4, r1
  113d1c:	690d      	ldr	r5, [r1, #16]
  113d1e:	461f      	mov	r7, r3
  113d20:	f101 0e14 	add.w	lr, r1, #20
  113d24:	2300      	movs	r3, #0
  113d26:	f8de 0000 	ldr.w	r0, [lr]
  113d2a:	3301      	adds	r3, #1
  113d2c:	b281      	uxth	r1, r0
  113d2e:	fb02 7101 	mla	r1, r2, r1, r7
  113d32:	0c00      	lsrs	r0, r0, #16
  113d34:	0c0f      	lsrs	r7, r1, #16
  113d36:	fb02 7000 	mla	r0, r2, r0, r7
  113d3a:	b289      	uxth	r1, r1
  113d3c:	eb01 4100 	add.w	r1, r1, r0, lsl #16
  113d40:	429d      	cmp	r5, r3
  113d42:	ea4f 4710 	mov.w	r7, r0, lsr #16
  113d46:	f84e 1b04 	str.w	r1, [lr], #4
  113d4a:	dcec      	bgt.n	113d26 <__multadd+0x12>
  113d4c:	b1d7      	cbz	r7, 113d84 <__multadd+0x70>
  113d4e:	68a3      	ldr	r3, [r4, #8]
  113d50:	429d      	cmp	r5, r3
  113d52:	db12      	blt.n	113d7a <__multadd+0x66>
  113d54:	6861      	ldr	r1, [r4, #4]
  113d56:	4630      	mov	r0, r6
  113d58:	3101      	adds	r1, #1
  113d5a:	f7ff ff8f 	bl	113c7c <_Balloc>
  113d5e:	4680      	mov	r8, r0
  113d60:	6922      	ldr	r2, [r4, #16]
  113d62:	f104 010c 	add.w	r1, r4, #12
  113d66:	3202      	adds	r2, #2
  113d68:	0092      	lsls	r2, r2, #2
  113d6a:	300c      	adds	r0, #12
  113d6c:	f7fc f8b5 	bl	10feda <memcpy>
  113d70:	4621      	mov	r1, r4
  113d72:	4630      	mov	r0, r6
  113d74:	f7ff ffb7 	bl	113ce6 <_Bfree>
  113d78:	4644      	mov	r4, r8
  113d7a:	eb04 0385 	add.w	r3, r4, r5, lsl #2
  113d7e:	3501      	adds	r5, #1
  113d80:	615f      	str	r7, [r3, #20]
  113d82:	6125      	str	r5, [r4, #16]
  113d84:	4620      	mov	r0, r4
  113d86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00113d8a <__s2b>:
  113d8a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  113d8e:	4606      	mov	r6, r0
  113d90:	4615      	mov	r5, r2
  113d92:	461f      	mov	r7, r3
  113d94:	2209      	movs	r2, #9
  113d96:	3308      	adds	r3, #8
  113d98:	460c      	mov	r4, r1
  113d9a:	fb93 f3f2 	sdiv	r3, r3, r2
  113d9e:	2100      	movs	r1, #0
  113da0:	2201      	movs	r2, #1
  113da2:	429a      	cmp	r2, r3
  113da4:	da02      	bge.n	113dac <__s2b+0x22>
  113da6:	0052      	lsls	r2, r2, #1
  113da8:	3101      	adds	r1, #1
  113daa:	e7fa      	b.n	113da2 <__s2b+0x18>
  113dac:	4630      	mov	r0, r6
  113dae:	f7ff ff65 	bl	113c7c <_Balloc>
  113db2:	9b08      	ldr	r3, [sp, #32]
  113db4:	2d09      	cmp	r5, #9
  113db6:	6143      	str	r3, [r0, #20]
  113db8:	f04f 0301 	mov.w	r3, #1
  113dbc:	6103      	str	r3, [r0, #16]
  113dbe:	dd11      	ble.n	113de4 <__s2b+0x5a>
  113dc0:	f104 0809 	add.w	r8, r4, #9
  113dc4:	46c1      	mov	r9, r8
  113dc6:	442c      	add	r4, r5
  113dc8:	f819 3b01 	ldrb.w	r3, [r9], #1
  113dcc:	4601      	mov	r1, r0
  113dce:	3b30      	subs	r3, #48	; 0x30
  113dd0:	220a      	movs	r2, #10
  113dd2:	4630      	mov	r0, r6
  113dd4:	f7ff ff9e 	bl	113d14 <__multadd>
  113dd8:	45a1      	cmp	r9, r4
  113dda:	d1f5      	bne.n	113dc8 <__s2b+0x3e>
  113ddc:	eb08 0405 	add.w	r4, r8, r5
  113de0:	3c08      	subs	r4, #8
  113de2:	e001      	b.n	113de8 <__s2b+0x5e>
  113de4:	340a      	adds	r4, #10
  113de6:	2509      	movs	r5, #9
  113de8:	1b2d      	subs	r5, r5, r4
  113dea:	1963      	adds	r3, r4, r5
  113dec:	429f      	cmp	r7, r3
  113dee:	dd08      	ble.n	113e02 <__s2b+0x78>
  113df0:	f814 3b01 	ldrb.w	r3, [r4], #1
  113df4:	4601      	mov	r1, r0
  113df6:	3b30      	subs	r3, #48	; 0x30
  113df8:	220a      	movs	r2, #10
  113dfa:	4630      	mov	r0, r6
  113dfc:	f7ff ff8a 	bl	113d14 <__multadd>
  113e00:	e7f3      	b.n	113dea <__s2b+0x60>
  113e02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00113e06 <__hi0bits>:
  113e06:	0c03      	lsrs	r3, r0, #16
  113e08:	041b      	lsls	r3, r3, #16
  113e0a:	b913      	cbnz	r3, 113e12 <__hi0bits+0xc>
  113e0c:	0400      	lsls	r0, r0, #16
  113e0e:	2310      	movs	r3, #16
  113e10:	e000      	b.n	113e14 <__hi0bits+0xe>
  113e12:	2300      	movs	r3, #0
  113e14:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
  113e18:	bf04      	itt	eq
  113e1a:	0200      	lsleq	r0, r0, #8
  113e1c:	3308      	addeq	r3, #8
  113e1e:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
  113e22:	bf04      	itt	eq
  113e24:	0100      	lsleq	r0, r0, #4
  113e26:	3304      	addeq	r3, #4
  113e28:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
  113e2c:	bf04      	itt	eq
  113e2e:	0080      	lsleq	r0, r0, #2
  113e30:	3302      	addeq	r3, #2
  113e32:	2800      	cmp	r0, #0
  113e34:	db03      	blt.n	113e3e <__hi0bits+0x38>
  113e36:	0042      	lsls	r2, r0, #1
  113e38:	d503      	bpl.n	113e42 <__hi0bits+0x3c>
  113e3a:	1c58      	adds	r0, r3, #1
  113e3c:	4770      	bx	lr
  113e3e:	4618      	mov	r0, r3
  113e40:	4770      	bx	lr
  113e42:	2020      	movs	r0, #32
  113e44:	4770      	bx	lr

00113e46 <__lo0bits>:
  113e46:	6803      	ldr	r3, [r0, #0]
  113e48:	f013 0207 	ands.w	r2, r3, #7
  113e4c:	d00b      	beq.n	113e66 <__lo0bits+0x20>
  113e4e:	07d9      	lsls	r1, r3, #31
  113e50:	d422      	bmi.n	113e98 <__lo0bits+0x52>
  113e52:	079a      	lsls	r2, r3, #30
  113e54:	bf4b      	itete	mi
  113e56:	085b      	lsrmi	r3, r3, #1
  113e58:	089b      	lsrpl	r3, r3, #2
  113e5a:	6003      	strmi	r3, [r0, #0]
  113e5c:	6003      	strpl	r3, [r0, #0]
  113e5e:	bf4c      	ite	mi
  113e60:	2001      	movmi	r0, #1
  113e62:	2002      	movpl	r0, #2
  113e64:	4770      	bx	lr
  113e66:	b299      	uxth	r1, r3
  113e68:	b909      	cbnz	r1, 113e6e <__lo0bits+0x28>
  113e6a:	0c1b      	lsrs	r3, r3, #16
  113e6c:	2210      	movs	r2, #16
  113e6e:	f013 0fff 	tst.w	r3, #255	; 0xff
  113e72:	bf04      	itt	eq
  113e74:	0a1b      	lsreq	r3, r3, #8
  113e76:	3208      	addeq	r2, #8
  113e78:	0719      	lsls	r1, r3, #28
  113e7a:	bf04      	itt	eq
  113e7c:	091b      	lsreq	r3, r3, #4
  113e7e:	3204      	addeq	r2, #4
  113e80:	0799      	lsls	r1, r3, #30
  113e82:	bf04      	itt	eq
  113e84:	089b      	lsreq	r3, r3, #2
  113e86:	3202      	addeq	r2, #2
  113e88:	07d9      	lsls	r1, r3, #31
  113e8a:	d402      	bmi.n	113e92 <__lo0bits+0x4c>
  113e8c:	085b      	lsrs	r3, r3, #1
  113e8e:	d005      	beq.n	113e9c <__lo0bits+0x56>
  113e90:	3201      	adds	r2, #1
  113e92:	6003      	str	r3, [r0, #0]
  113e94:	4610      	mov	r0, r2
  113e96:	4770      	bx	lr
  113e98:	2000      	movs	r0, #0
  113e9a:	4770      	bx	lr
  113e9c:	2020      	movs	r0, #32
  113e9e:	4770      	bx	lr

00113ea0 <__i2b>:
  113ea0:	b510      	push	{r4, lr}
  113ea2:	460c      	mov	r4, r1
  113ea4:	2101      	movs	r1, #1
  113ea6:	f7ff fee9 	bl	113c7c <_Balloc>
  113eaa:	2201      	movs	r2, #1
  113eac:	6144      	str	r4, [r0, #20]
  113eae:	6102      	str	r2, [r0, #16]
  113eb0:	bd10      	pop	{r4, pc}

00113eb2 <__multiply>:
  113eb2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
  113eb6:	4614      	mov	r4, r2
  113eb8:	690a      	ldr	r2, [r1, #16]
  113eba:	6923      	ldr	r3, [r4, #16]
  113ebc:	4688      	mov	r8, r1
  113ebe:	429a      	cmp	r2, r3
  113ec0:	bfbe      	ittt	lt
  113ec2:	460b      	movlt	r3, r1
  113ec4:	46a0      	movlt	r8, r4
  113ec6:	461c      	movlt	r4, r3
  113ec8:	f8d8 7010 	ldr.w	r7, [r8, #16]
  113ecc:	f8d4 9010 	ldr.w	r9, [r4, #16]
  113ed0:	f8d8 3008 	ldr.w	r3, [r8, #8]
  113ed4:	f8d8 1004 	ldr.w	r1, [r8, #4]
  113ed8:	eb07 0609 	add.w	r6, r7, r9
  113edc:	429e      	cmp	r6, r3
  113ede:	bfc8      	it	gt
  113ee0:	3101      	addgt	r1, #1
  113ee2:	f7ff fecb 	bl	113c7c <_Balloc>
  113ee6:	f100 0514 	add.w	r5, r0, #20
  113eea:	462b      	mov	r3, r5
  113eec:	eb05 0c86 	add.w	r12, r5, r6, lsl #2
  113ef0:	2200      	movs	r2, #0
  113ef2:	4563      	cmp	r3, r12
  113ef4:	d202      	bcs.n	113efc <__multiply+0x4a>
  113ef6:	f843 2b04 	str.w	r2, [r3], #4
  113efa:	e7fa      	b.n	113ef2 <__multiply+0x40>
  113efc:	f104 0214 	add.w	r2, r4, #20
  113f00:	f108 0114 	add.w	r1, r8, #20
  113f04:	eb02 0389 	add.w	r3, r2, r9, lsl #2
  113f08:	eb01 0787 	add.w	r7, r1, r7, lsl #2
  113f0c:	9300      	str	r3, [sp, #0]
  113f0e:	9b00      	ldr	r3, [sp, #0]
  113f10:	9201      	str	r2, [sp, #4]
  113f12:	4293      	cmp	r3, r2
  113f14:	d957      	bls.n	113fc6 <__multiply+0x114>
  113f16:	f8b2 b000 	ldrh.w	r11, [r2]
  113f1a:	f1bb 0f00 	cmp.w	r11, #0
  113f1e:	d023      	beq.n	113f68 <__multiply+0xb6>
  113f20:	4689      	mov	r9, r1
  113f22:	46ae      	mov	lr, r5
  113f24:	f04f 0800 	mov.w	r8, #0
  113f28:	f859 4b04 	ldr.w	r4, [r9], #4
  113f2c:	f8be a000 	ldrh.w	r10, [lr]
  113f30:	b2a3      	uxth	r3, r4
  113f32:	fb0b a303 	mla	r3, r11, r3, r10
  113f36:	ea4f 4a14 	mov.w	r10, r4, lsr #16
  113f3a:	f8de 4000 	ldr.w	r4, [lr]
  113f3e:	4443      	add	r3, r8
  113f40:	ea4f 4814 	mov.w	r8, r4, lsr #16
  113f44:	fb0b 840a 	mla	r4, r11, r10, r8
  113f48:	46f2      	mov	r10, lr
  113f4a:	eb04 4413 	add.w	r4, r4, r3, lsr #16
  113f4e:	b29b      	uxth	r3, r3
  113f50:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
  113f54:	454f      	cmp	r7, r9
  113f56:	ea4f 4814 	mov.w	r8, r4, lsr #16
  113f5a:	f84a 3b04 	str.w	r3, [r10], #4
  113f5e:	d901      	bls.n	113f64 <__multiply+0xb2>
  113f60:	46d6      	mov	lr, r10
  113f62:	e7e1      	b.n	113f28 <__multiply+0x76>
  113f64:	f8ce 8004 	str.w	r8, [lr, #4]
  113f68:	9b01      	ldr	r3, [sp, #4]
  113f6a:	3204      	adds	r2, #4
  113f6c:	f8b3 a002 	ldrh.w	r10, [r3, #2]
  113f70:	f1ba 0f00 	cmp.w	r10, #0
  113f74:	d021      	beq.n	113fba <__multiply+0x108>
  113f76:	462c      	mov	r4, r5
  113f78:	4689      	mov	r9, r1
  113f7a:	682b      	ldr	r3, [r5, #0]
  113f7c:	f04f 0800 	mov.w	r8, #0
  113f80:	f8b9 e000 	ldrh.w	lr, [r9]
  113f84:	f8b4 b002 	ldrh.w	r11, [r4, #2]
  113f88:	b29b      	uxth	r3, r3
  113f8a:	fb0a be0e 	mla	lr, r10, lr, r11
  113f8e:	46a3      	mov	r11, r4
  113f90:	44f0      	add	r8, lr
  113f92:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  113f96:	f84b 3b04 	str.w	r3, [r11], #4
  113f9a:	f859 3b04 	ldr.w	r3, [r9], #4
  113f9e:	f8b4 e004 	ldrh.w	lr, [r4, #4]
  113fa2:	0c1b      	lsrs	r3, r3, #16
  113fa4:	fb0a e303 	mla	r3, r10, r3, lr
  113fa8:	454f      	cmp	r7, r9
  113faa:	eb03 4318 	add.w	r3, r3, r8, lsr #16
  113fae:	ea4f 4813 	mov.w	r8, r3, lsr #16
  113fb2:	d901      	bls.n	113fb8 <__multiply+0x106>
  113fb4:	465c      	mov	r4, r11
  113fb6:	e7e3      	b.n	113f80 <__multiply+0xce>
  113fb8:	6063      	str	r3, [r4, #4]
  113fba:	3504      	adds	r5, #4
  113fbc:	e7a7      	b.n	113f0e <__multiply+0x5c>
  113fbe:	f85c 3d04 	ldr.w	r3, [r12, #-4]!
  113fc2:	b913      	cbnz	r3, 113fca <__multiply+0x118>
  113fc4:	3e01      	subs	r6, #1
  113fc6:	2e00      	cmp	r6, #0
  113fc8:	dcf9      	bgt.n	113fbe <__multiply+0x10c>
  113fca:	6106      	str	r6, [r0, #16]
  113fcc:	b003      	add	sp, #12
  113fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
	...

00113fd4 <__pow5mult>:
  113fd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  113fd8:	4615      	mov	r5, r2
  113fda:	f012 0203 	ands.w	r2, r2, #3
  113fde:	4606      	mov	r6, r0
  113fe0:	460f      	mov	r7, r1
  113fe2:	d007      	beq.n	113ff4 <__pow5mult+0x20>
  113fe4:	4c21      	ldr	r4, [pc, #132]	; (11406c <__pow5mult+0x98>)
  113fe6:	3a01      	subs	r2, #1
  113fe8:	2300      	movs	r3, #0
  113fea:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
  113fee:	f7ff fe91 	bl	113d14 <__multadd>
  113ff2:	4607      	mov	r7, r0
  113ff4:	10ad      	asrs	r5, r5, #2
  113ff6:	d036      	beq.n	114066 <__pow5mult+0x92>
  113ff8:	6a74      	ldr	r4, [r6, #36]	; 0x24
  113ffa:	b93c      	cbnz	r4, 11400c <__pow5mult+0x38>
  113ffc:	2010      	movs	r0, #16
  113ffe:	f7fb ff3f 	bl	10fe80 <malloc>
  114002:	6270      	str	r0, [r6, #36]	; 0x24
  114004:	6044      	str	r4, [r0, #4]
  114006:	6084      	str	r4, [r0, #8]
  114008:	6004      	str	r4, [r0, #0]
  11400a:	60c4      	str	r4, [r0, #12]
  11400c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
  114010:	f8d8 4008 	ldr.w	r4, [r8, #8]
  114014:	b94c      	cbnz	r4, 11402a <__pow5mult+0x56>
  114016:	f240 2171 	movw	r1, #625	; 0x271
  11401a:	4630      	mov	r0, r6
  11401c:	f7ff ff40 	bl	113ea0 <__i2b>
  114020:	4604      	mov	r4, r0
  114022:	2300      	movs	r3, #0
  114024:	f8c8 0008 	str.w	r0, [r8, #8]
  114028:	6003      	str	r3, [r0, #0]
  11402a:	f04f 0800 	mov.w	r8, #0
  11402e:	07eb      	lsls	r3, r5, #31
  114030:	d50a      	bpl.n	114048 <__pow5mult+0x74>
  114032:	4639      	mov	r1, r7
  114034:	4622      	mov	r2, r4
  114036:	4630      	mov	r0, r6
  114038:	f7ff ff3b 	bl	113eb2 <__multiply>
  11403c:	4681      	mov	r9, r0
  11403e:	4639      	mov	r1, r7
  114040:	4630      	mov	r0, r6
  114042:	f7ff fe50 	bl	113ce6 <_Bfree>
  114046:	464f      	mov	r7, r9
  114048:	106d      	asrs	r5, r5, #1
  11404a:	d00c      	beq.n	114066 <__pow5mult+0x92>
  11404c:	6820      	ldr	r0, [r4, #0]
  11404e:	b108      	cbz	r0, 114054 <__pow5mult+0x80>
  114050:	4604      	mov	r4, r0
  114052:	e7ec      	b.n	11402e <__pow5mult+0x5a>
  114054:	4622      	mov	r2, r4
  114056:	4621      	mov	r1, r4
  114058:	4630      	mov	r0, r6
  11405a:	f7ff ff2a 	bl	113eb2 <__multiply>
  11405e:	6020      	str	r0, [r4, #0]
  114060:	f8c0 8000 	str.w	r8, [r0]
  114064:	e7f4      	b.n	114050 <__pow5mult+0x7c>
  114066:	4638      	mov	r0, r7
  114068:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  11406c:	0011a110 	.word	0x0011a110

00114070 <__lshift>:
  114070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  114074:	460c      	mov	r4, r1
  114076:	4607      	mov	r7, r0
  114078:	4691      	mov	r9, r2
  11407a:	6926      	ldr	r6, [r4, #16]
  11407c:	ea4f 1a62 	mov.w	r10, r2, asr #5
  114080:	4456      	add	r6, r10
  114082:	6849      	ldr	r1, [r1, #4]
  114084:	68a3      	ldr	r3, [r4, #8]
  114086:	1c75      	adds	r5, r6, #1
  114088:	42ab      	cmp	r3, r5
  11408a:	da02      	bge.n	114092 <__lshift+0x22>
  11408c:	3101      	adds	r1, #1
  11408e:	005b      	lsls	r3, r3, #1
  114090:	e7fa      	b.n	114088 <__lshift+0x18>
  114092:	4638      	mov	r0, r7
  114094:	f7ff fdf2 	bl	113c7c <_Balloc>
  114098:	2300      	movs	r3, #0
  11409a:	4680      	mov	r8, r0
  11409c:	461a      	mov	r2, r3
  11409e:	f100 0114 	add.w	r1, r0, #20
  1140a2:	4553      	cmp	r3, r10
  1140a4:	da03      	bge.n	1140ae <__lshift+0x3e>
  1140a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  1140aa:	3301      	adds	r3, #1
  1140ac:	e7f9      	b.n	1140a2 <__lshift+0x32>
  1140ae:	ea2a 73ea 	bic.w	r3, r10, r10, asr #31
  1140b2:	6920      	ldr	r0, [r4, #16]
  1140b4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  1140b8:	f019 091f 	ands.w	r9, r9, #31
  1140bc:	f104 0114 	add.w	r1, r4, #20
  1140c0:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
  1140c4:	d014      	beq.n	1140f0 <__lshift+0x80>
  1140c6:	f1c9 0c20 	rsb	r12, r9, #32
  1140ca:	2200      	movs	r2, #0
  1140cc:	6808      	ldr	r0, [r1, #0]
  1140ce:	469a      	mov	r10, r3
  1140d0:	fa00 f009 	lsl.w	r0, r0, r9
  1140d4:	4302      	orrs	r2, r0
  1140d6:	f843 2b04 	str.w	r2, [r3], #4
  1140da:	f851 2b04 	ldr.w	r2, [r1], #4
  1140de:	458e      	cmp	lr, r1
  1140e0:	fa22 f20c 	lsr.w	r2, r2, r12
  1140e4:	d8f2      	bhi.n	1140cc <__lshift+0x5c>
  1140e6:	f8ca 2004 	str.w	r2, [r10, #4]
  1140ea:	b142      	cbz	r2, 1140fe <__lshift+0x8e>
  1140ec:	1cb5      	adds	r5, r6, #2
  1140ee:	e006      	b.n	1140fe <__lshift+0x8e>
  1140f0:	3b04      	subs	r3, #4
  1140f2:	f851 2b04 	ldr.w	r2, [r1], #4
  1140f6:	458e      	cmp	lr, r1
  1140f8:	f843 2f04 	str.w	r2, [r3, #4]!
  1140fc:	d8f9      	bhi.n	1140f2 <__lshift+0x82>
  1140fe:	3d01      	subs	r5, #1
  114100:	4638      	mov	r0, r7
  114102:	f8c8 5010 	str.w	r5, [r8, #16]
  114106:	4621      	mov	r1, r4
  114108:	f7ff fded 	bl	113ce6 <_Bfree>
  11410c:	4640      	mov	r0, r8
  11410e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

00114112 <__mcmp>:
  114112:	6903      	ldr	r3, [r0, #16]
  114114:	690a      	ldr	r2, [r1, #16]
  114116:	b510      	push	{r4, lr}
  114118:	1a9b      	subs	r3, r3, r2
  11411a:	d111      	bne.n	114140 <__mcmp+0x2e>
  11411c:	0092      	lsls	r2, r2, #2
  11411e:	3014      	adds	r0, #20
  114120:	3114      	adds	r1, #20
  114122:	1883      	adds	r3, r0, r2
  114124:	440a      	add	r2, r1
  114126:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  11412a:	f852 1d04 	ldr.w	r1, [r2, #-4]!
  11412e:	428c      	cmp	r4, r1
  114130:	d002      	beq.n	114138 <__mcmp+0x26>
  114132:	d307      	bcc.n	114144 <__mcmp+0x32>
  114134:	2001      	movs	r0, #1
  114136:	bd10      	pop	{r4, pc}
  114138:	4298      	cmp	r0, r3
  11413a:	d3f4      	bcc.n	114126 <__mcmp+0x14>
  11413c:	2000      	movs	r0, #0
  11413e:	bd10      	pop	{r4, pc}
  114140:	4618      	mov	r0, r3
  114142:	bd10      	pop	{r4, pc}
  114144:	f04f 30ff 	mov.w	r0, #4294967295
  114148:	bd10      	pop	{r4, pc}

0011414a <__mdiff>:
  11414a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  11414e:	460c      	mov	r4, r1
  114150:	4607      	mov	r7, r0
  114152:	4611      	mov	r1, r2
  114154:	4620      	mov	r0, r4
  114156:	4615      	mov	r5, r2
  114158:	f7ff ffdb 	bl	114112 <__mcmp>
  11415c:	1e06      	subs	r6, r0, #0
  11415e:	d108      	bne.n	114172 <__mdiff+0x28>
  114160:	4631      	mov	r1, r6
  114162:	4638      	mov	r0, r7
  114164:	f7ff fd8a 	bl	113c7c <_Balloc>
  114168:	2301      	movs	r3, #1
  11416a:	6103      	str	r3, [r0, #16]
  11416c:	6146      	str	r6, [r0, #20]
  11416e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  114172:	bfbc      	itt	lt
  114174:	4623      	movlt	r3, r4
  114176:	462c      	movlt	r4, r5
  114178:	4638      	mov	r0, r7
  11417a:	6861      	ldr	r1, [r4, #4]
  11417c:	bfba      	itte	lt
  11417e:	461d      	movlt	r5, r3
  114180:	2601      	movlt	r6, #1
  114182:	2600      	movge	r6, #0
  114184:	f7ff fd7a 	bl	113c7c <_Balloc>
  114188:	692b      	ldr	r3, [r5, #16]
  11418a:	60c6      	str	r6, [r0, #12]
  11418c:	6926      	ldr	r6, [r4, #16]
  11418e:	f105 0914 	add.w	r9, r5, #20
  114192:	f104 0114 	add.w	r1, r4, #20
  114196:	eb01 0786 	add.w	r7, r1, r6, lsl #2
  11419a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
  11419e:	f100 0514 	add.w	r5, r0, #20
  1141a2:	f04f 0c00 	mov.w	r12, #0
  1141a6:	f851 2b04 	ldr.w	r2, [r1], #4
  1141aa:	f859 4b04 	ldr.w	r4, [r9], #4
  1141ae:	b293      	uxth	r3, r2
  1141b0:	449c      	add	r12, r3
  1141b2:	b2a3      	uxth	r3, r4
  1141b4:	0c24      	lsrs	r4, r4, #16
  1141b6:	ebc3 030c 	rsb	r3, r3, r12
  1141ba:	ebc4 4212 	rsb	r2, r4, r2, lsr #16
  1141be:	eb02 4223 	add.w	r2, r2, r3, asr #16
  1141c2:	b29b      	uxth	r3, r3
  1141c4:	ea4f 4c22 	mov.w	r12, r2, asr #16
  1141c8:	45c8      	cmp	r8, r9
  1141ca:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  1141ce:	468e      	mov	lr, r1
  1141d0:	f845 2b04 	str.w	r2, [r5], #4
  1141d4:	d8e7      	bhi.n	1141a6 <__mdiff+0x5c>
  1141d6:	45be      	cmp	lr, r7
  1141d8:	d20e      	bcs.n	1141f8 <__mdiff+0xae>
  1141da:	f85e 1b04 	ldr.w	r1, [lr], #4
  1141de:	b28a      	uxth	r2, r1
  1141e0:	4462      	add	r2, r12
  1141e2:	1413      	asrs	r3, r2, #16
  1141e4:	eb03 4311 	add.w	r3, r3, r1, lsr #16
  1141e8:	b292      	uxth	r2, r2
  1141ea:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  1141ee:	ea4f 4c23 	mov.w	r12, r3, asr #16
  1141f2:	f845 2b04 	str.w	r2, [r5], #4
  1141f6:	e7ee      	b.n	1141d6 <__mdiff+0x8c>
  1141f8:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  1141fc:	b90b      	cbnz	r3, 114202 <__mdiff+0xb8>
  1141fe:	3e01      	subs	r6, #1
  114200:	e7fa      	b.n	1141f8 <__mdiff+0xae>
  114202:	6106      	str	r6, [r0, #16]
  114204:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00114208 <__ulp>:
  114208:	4b10      	ldr	r3, [pc, #64]	; (11424c <__ulp+0x44>)
  11420a:	400b      	ands	r3, r1
  11420c:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
  114210:	2b00      	cmp	r3, #0
  114212:	dd02      	ble.n	11421a <__ulp+0x12>
  114214:	2000      	movs	r0, #0
  114216:	4619      	mov	r1, r3
  114218:	4770      	bx	lr
  11421a:	425b      	negs	r3, r3
  11421c:	151b      	asrs	r3, r3, #20
  11421e:	2b13      	cmp	r3, #19
  114220:	f04f 0000 	mov.w	r0, #0
  114224:	f04f 0100 	mov.w	r1, #0
  114228:	dc04      	bgt.n	114234 <__ulp+0x2c>
  11422a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  11422e:	fa42 f103 	asr.w	r1, r2, r3
  114232:	4770      	bx	lr
  114234:	3b14      	subs	r3, #20
  114236:	2b1e      	cmp	r3, #30
  114238:	f04f 0201 	mov.w	r2, #1
  11423c:	bfce      	itee	gt
  11423e:	4613      	movgt	r3, r2
  114240:	f1c3 031f 	rsble	r3, r3, #31
  114244:	fa02 f303 	lslle.w	r3, r2, r3
  114248:	4618      	mov	r0, r3
  11424a:	4770      	bx	lr
  11424c:	7ff00000 	.word	0x7ff00000

00114250 <__b2d>:
  114250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  114252:	6905      	ldr	r5, [r0, #16]
  114254:	f100 0614 	add.w	r6, r0, #20
  114258:	eb06 0585 	add.w	r5, r6, r5, lsl #2
  11425c:	f855 4c04 	ldr.w	r4, [r5, #-4]
  114260:	1f2f      	subs	r7, r5, #4
  114262:	4620      	mov	r0, r4
  114264:	f7ff fdcf 	bl	113e06 <__hi0bits>
  114268:	f1c0 0320 	rsb	r3, r0, #32
  11426c:	280a      	cmp	r0, #10
  11426e:	600b      	str	r3, [r1, #0]
  114270:	dc14      	bgt.n	11429c <__b2d+0x4c>
  114272:	f1c0 0e0b 	rsb	lr, r0, #11
  114276:	fa24 f10e 	lsr.w	r1, r4, lr
  11427a:	42be      	cmp	r6, r7
  11427c:	f041 537f 	orr.w	r3, r1, #1069547520	; 0x3fc00000
  114280:	bf34      	ite	cc
  114282:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
  114286:	2100      	movcs	r1, #0
  114288:	3015      	adds	r0, #21
  11428a:	fa04 f000 	lsl.w	r0, r4, r0
  11428e:	fa21 f10e 	lsr.w	r1, r1, lr
  114292:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
  114296:	ea40 0201 	orr.w	r2, r0, r1
  11429a:	e023      	b.n	1142e4 <__b2d+0x94>
  11429c:	42be      	cmp	r6, r7
  11429e:	bf3a      	itte	cc
  1142a0:	f1a5 0708 	subcc.w	r7, r5, #8
  1142a4:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
  1142a8:	2100      	movcs	r1, #0
  1142aa:	380b      	subs	r0, #11
  1142ac:	d015      	beq.n	1142da <__b2d+0x8a>
  1142ae:	4084      	lsls	r4, r0
  1142b0:	f1c0 0520 	rsb	r5, r0, #32
  1142b4:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
  1142b8:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
  1142bc:	42b7      	cmp	r7, r6
  1142be:	fa21 fe05 	lsr.w	lr, r1, r5
  1142c2:	ea44 030e 	orr.w	r3, r4, lr
  1142c6:	bf8c      	ite	hi
  1142c8:	f857 4c04 	ldrhi.w	r4, [r7, #-4]
  1142cc:	2400      	movls	r4, #0
  1142ce:	fa01 f000 	lsl.w	r0, r1, r0
  1142d2:	40ec      	lsrs	r4, r5
  1142d4:	ea40 0204 	orr.w	r2, r0, r4
  1142d8:	e004      	b.n	1142e4 <__b2d+0x94>
  1142da:	460a      	mov	r2, r1
  1142dc:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
  1142e0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
  1142e4:	4610      	mov	r0, r2
  1142e6:	4619      	mov	r1, r3
  1142e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

001142ea <__d2b>:
  1142ea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  1142ee:	461c      	mov	r4, r3
  1142f0:	2101      	movs	r1, #1
  1142f2:	4690      	mov	r8, r2
  1142f4:	9e08      	ldr	r6, [sp, #32]
  1142f6:	9d09      	ldr	r5, [sp, #36]	; 0x24
  1142f8:	f7ff fcc0 	bl	113c7c <_Balloc>
  1142fc:	f3c4 0213 	ubfx	r2, r4, #0, #20
  114300:	f3c4 540a 	ubfx	r4, r4, #20, #11
  114304:	4607      	mov	r7, r0
  114306:	b10c      	cbz	r4, 11430c <__d2b+0x22>
  114308:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
  11430c:	9201      	str	r2, [sp, #4]
  11430e:	f1b8 0f00 	cmp.w	r8, #0
  114312:	d019      	beq.n	114348 <__d2b+0x5e>
  114314:	a802      	add	r0, sp, #8
  114316:	f840 8d08 	str.w	r8, [r0, #-8]!
  11431a:	f7ff fd94 	bl	113e46 <__lo0bits>
  11431e:	9b00      	ldr	r3, [sp, #0]
  114320:	b148      	cbz	r0, 114336 <__d2b+0x4c>
  114322:	9a01      	ldr	r2, [sp, #4]
  114324:	f1c0 0120 	rsb	r1, r0, #32
  114328:	fa02 f101 	lsl.w	r1, r2, r1
  11432c:	430b      	orrs	r3, r1
  11432e:	40c2      	lsrs	r2, r0
  114330:	617b      	str	r3, [r7, #20]
  114332:	9201      	str	r2, [sp, #4]
  114334:	e000      	b.n	114338 <__d2b+0x4e>
  114336:	617b      	str	r3, [r7, #20]
  114338:	9b01      	ldr	r3, [sp, #4]
  11433a:	2b00      	cmp	r3, #0
  11433c:	bf14      	ite	ne
  11433e:	2102      	movne	r1, #2
  114340:	2101      	moveq	r1, #1
  114342:	61bb      	str	r3, [r7, #24]
  114344:	6139      	str	r1, [r7, #16]
  114346:	e007      	b.n	114358 <__d2b+0x6e>
  114348:	a801      	add	r0, sp, #4
  11434a:	f7ff fd7c 	bl	113e46 <__lo0bits>
  11434e:	9b01      	ldr	r3, [sp, #4]
  114350:	2101      	movs	r1, #1
  114352:	617b      	str	r3, [r7, #20]
  114354:	6139      	str	r1, [r7, #16]
  114356:	3020      	adds	r0, #32
  114358:	b134      	cbz	r4, 114368 <__d2b+0x7e>
  11435a:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
  11435e:	4404      	add	r4, r0
  114360:	6034      	str	r4, [r6, #0]
  114362:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  114366:	e009      	b.n	11437c <__d2b+0x92>
  114368:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  11436c:	eb07 0381 	add.w	r3, r7, r1, lsl #2
  114370:	6030      	str	r0, [r6, #0]
  114372:	6918      	ldr	r0, [r3, #16]
  114374:	f7ff fd47 	bl	113e06 <__hi0bits>
  114378:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  11437c:	6028      	str	r0, [r5, #0]
  11437e:	4638      	mov	r0, r7
  114380:	b002      	add	sp, #8
  114382:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00114386 <__ratio>:
  114386:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  11438a:	4688      	mov	r8, r1
  11438c:	4669      	mov	r1, sp
  11438e:	4681      	mov	r9, r0
  114390:	f7ff ff5e 	bl	114250 <__b2d>
  114394:	460d      	mov	r5, r1
  114396:	4604      	mov	r4, r0
  114398:	a901      	add	r1, sp, #4
  11439a:	4640      	mov	r0, r8
  11439c:	f7ff ff58 	bl	114250 <__b2d>
  1143a0:	460f      	mov	r7, r1
  1143a2:	4606      	mov	r6, r0
  1143a4:	f8d9 3010 	ldr.w	r3, [r9, #16]
  1143a8:	f8d8 2010 	ldr.w	r2, [r8, #16]
  1143ac:	4620      	mov	r0, r4
  1143ae:	1a9a      	subs	r2, r3, r2
  1143b0:	e89d 000a 	ldmia.w	sp, {r1, r3}
  1143b4:	1ac9      	subs	r1, r1, r3
  1143b6:	eb01 1342 	add.w	r3, r1, r2, lsl #5
  1143ba:	2b00      	cmp	r3, #0
  1143bc:	bfcc      	ite	gt
  1143be:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
  1143c2:	eba7 5703 	suble.w	r7, r7, r3, lsl #20
  1143c6:	4632      	mov	r2, r6
  1143c8:	463b      	mov	r3, r7
  1143ca:	4629      	mov	r1, r5
  1143cc:	f7fa fc0e 	bl	10ebec <__aeabi_ddiv>
  1143d0:	b003      	add	sp, #12
  1143d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

001143d6 <__copybits>:
  1143d6:	3901      	subs	r1, #1
  1143d8:	b510      	push	{r4, lr}
  1143da:	1149      	asrs	r1, r1, #5
  1143dc:	6914      	ldr	r4, [r2, #16]
  1143de:	3101      	adds	r1, #1
  1143e0:	f102 0314 	add.w	r3, r2, #20
  1143e4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  1143e8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
  1143ec:	42a3      	cmp	r3, r4
  1143ee:	4602      	mov	r2, r0
  1143f0:	d204      	bcs.n	1143fc <__copybits+0x26>
  1143f2:	f853 2b04 	ldr.w	r2, [r3], #4
  1143f6:	f840 2b04 	str.w	r2, [r0], #4
  1143fa:	e7f7      	b.n	1143ec <__copybits+0x16>
  1143fc:	2300      	movs	r3, #0
  1143fe:	428a      	cmp	r2, r1
  114400:	d202      	bcs.n	114408 <__copybits+0x32>
  114402:	f842 3b04 	str.w	r3, [r2], #4
  114406:	e7fa      	b.n	1143fe <__copybits+0x28>
  114408:	bd10      	pop	{r4, pc}

0011440a <__any_on>:
  11440a:	f100 0214 	add.w	r2, r0, #20
  11440e:	6900      	ldr	r0, [r0, #16]
  114410:	114b      	asrs	r3, r1, #5
  114412:	4298      	cmp	r0, r3
  114414:	b510      	push	{r4, lr}
  114416:	db0c      	blt.n	114432 <__any_on+0x28>
  114418:	dd0c      	ble.n	114434 <__any_on+0x2a>
  11441a:	f011 011f 	ands.w	r1, r1, #31
  11441e:	d009      	beq.n	114434 <__any_on+0x2a>
  114420:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
  114424:	fa24 f001 	lsr.w	r0, r4, r1
  114428:	fa00 f101 	lsl.w	r1, r0, r1
  11442c:	428c      	cmp	r4, r1
  11442e:	d10c      	bne.n	11444a <__any_on+0x40>
  114430:	e000      	b.n	114434 <__any_on+0x2a>
  114432:	4603      	mov	r3, r0
  114434:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  114438:	4293      	cmp	r3, r2
  11443a:	d904      	bls.n	114446 <__any_on+0x3c>
  11443c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
  114440:	2900      	cmp	r1, #0
  114442:	d0f9      	beq.n	114438 <__any_on+0x2e>
  114444:	e001      	b.n	11444a <__any_on+0x40>
  114446:	2000      	movs	r0, #0
  114448:	bd10      	pop	{r4, pc}
  11444a:	2001      	movs	r0, #1
  11444c:	bd10      	pop	{r4, pc}

0011444e <_malloc_usable_size_r>:
  11444e:	f851 0c04 	ldr.w	r0, [r1, #-4]
  114452:	2800      	cmp	r0, #0
  114454:	bfbe      	ittt	lt
  114456:	1809      	addlt	r1, r1, r0
  114458:	f851 3c04 	ldrlt.w	r3, [r1, #-4]
  11445c:	18c0      	addlt	r0, r0, r3
  11445e:	3804      	subs	r0, #4
  114460:	4770      	bx	lr

00114462 <__ssputs_r>:
  114462:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
  114466:	688e      	ldr	r6, [r1, #8]
  114468:	4682      	mov	r10, r0
  11446a:	429e      	cmp	r6, r3
  11446c:	460c      	mov	r4, r1
  11446e:	4691      	mov	r9, r2
  114470:	4698      	mov	r8, r3
  114472:	d83e      	bhi.n	1144f2 <__ssputs_r+0x90>
  114474:	898a      	ldrh	r2, [r1, #12]
  114476:	f412 6f90 	tst.w	r2, #1152	; 0x480
  11447a:	d03a      	beq.n	1144f2 <__ssputs_r+0x90>
  11447c:	6825      	ldr	r5, [r4, #0]
  11447e:	6909      	ldr	r1, [r1, #16]
  114480:	2302      	movs	r3, #2
  114482:	1a6f      	subs	r7, r5, r1
  114484:	6965      	ldr	r5, [r4, #20]
  114486:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  11448a:	fb95 f5f3 	sdiv	r5, r5, r3
  11448e:	1c7b      	adds	r3, r7, #1
  114490:	4443      	add	r3, r8
  114492:	429d      	cmp	r5, r3
  114494:	bf38      	it	cc
  114496:	461d      	movcc	r5, r3
  114498:	0553      	lsls	r3, r2, #21
  11449a:	d50f      	bpl.n	1144bc <__ssputs_r+0x5a>
  11449c:	4629      	mov	r1, r5
  11449e:	f7f9 f806 	bl	10d4ae <__wrap__malloc_r>
  1144a2:	4606      	mov	r6, r0
  1144a4:	b198      	cbz	r0, 1144ce <__ssputs_r+0x6c>
  1144a6:	463a      	mov	r2, r7
  1144a8:	6921      	ldr	r1, [r4, #16]
  1144aa:	f7fb fd16 	bl	10feda <memcpy>
  1144ae:	89a3      	ldrh	r3, [r4, #12]
  1144b0:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  1144b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  1144b8:	81a3      	strh	r3, [r4, #12]
  1144ba:	e013      	b.n	1144e4 <__ssputs_r+0x82>
  1144bc:	462a      	mov	r2, r5
  1144be:	f7f8 fff8 	bl	10d4b2 <__wrap__realloc_r>
  1144c2:	4606      	mov	r6, r0
  1144c4:	b970      	cbnz	r0, 1144e4 <__ssputs_r+0x82>
  1144c6:	6921      	ldr	r1, [r4, #16]
  1144c8:	4650      	mov	r0, r10
  1144ca:	f7f8 fff4 	bl	10d4b6 <__wrap__free_r>
  1144ce:	230c      	movs	r3, #12
  1144d0:	f8ca 3000 	str.w	r3, [r10]
  1144d4:	89a3      	ldrh	r3, [r4, #12]
  1144d6:	f04f 30ff 	mov.w	r0, #4294967295
  1144da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  1144de:	81a3      	strh	r3, [r4, #12]
  1144e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
  1144e4:	6126      	str	r6, [r4, #16]
  1144e6:	443e      	add	r6, r7
  1144e8:	6026      	str	r6, [r4, #0]
  1144ea:	4646      	mov	r6, r8
  1144ec:	6165      	str	r5, [r4, #20]
  1144ee:	1bed      	subs	r5, r5, r7
  1144f0:	60a5      	str	r5, [r4, #8]
  1144f2:	4546      	cmp	r6, r8
  1144f4:	bf28      	it	cs
  1144f6:	4646      	movcs	r6, r8
  1144f8:	4649      	mov	r1, r9
  1144fa:	4632      	mov	r2, r6
  1144fc:	6820      	ldr	r0, [r4, #0]
  1144fe:	f7fb fcf7 	bl	10fef0 <memmove>
  114502:	68a3      	ldr	r3, [r4, #8]
  114504:	2000      	movs	r0, #0
  114506:	1b9b      	subs	r3, r3, r6
  114508:	60a3      	str	r3, [r4, #8]
  11450a:	6823      	ldr	r3, [r4, #0]
  11450c:	441e      	add	r6, r3
  11450e:	6026      	str	r6, [r4, #0]
  114510:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

00114514 <_svfiprintf_r>:
  114514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  114518:	b09d      	sub	sp, #116	; 0x74
  11451a:	9303      	str	r3, [sp, #12]
  11451c:	898b      	ldrh	r3, [r1, #12]
  11451e:	4680      	mov	r8, r0
  114520:	061c      	lsls	r4, r3, #24
  114522:	460d      	mov	r5, r1
  114524:	4616      	mov	r6, r2
  114526:	d50d      	bpl.n	114544 <_svfiprintf_r+0x30>
  114528:	690b      	ldr	r3, [r1, #16]
  11452a:	b95b      	cbnz	r3, 114544 <_svfiprintf_r+0x30>
  11452c:	2140      	movs	r1, #64	; 0x40
  11452e:	f7f8 ffbe 	bl	10d4ae <__wrap__malloc_r>
  114532:	6028      	str	r0, [r5, #0]
  114534:	6128      	str	r0, [r5, #16]
  114536:	b918      	cbnz	r0, 114540 <_svfiprintf_r+0x2c>
  114538:	230c      	movs	r3, #12
  11453a:	f8c8 3000 	str.w	r3, [r8]
  11453e:	e0cd      	b.n	1146dc <_svfiprintf_r+0x1c8>
  114540:	2340      	movs	r3, #64	; 0x40
  114542:	616b      	str	r3, [r5, #20]
  114544:	2300      	movs	r3, #0
  114546:	9309      	str	r3, [sp, #36]	; 0x24
  114548:	2320      	movs	r3, #32
  11454a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
  11454e:	f8df b19c 	ldr.w	r11, [pc, #412]	; 1146ec <_svfiprintf_r+0x1d8>
  114552:	2330      	movs	r3, #48	; 0x30
  114554:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
  114558:	4637      	mov	r7, r6
  11455a:	463c      	mov	r4, r7
  11455c:	f814 3b01 	ldrb.w	r3, [r4], #1
  114560:	b91b      	cbnz	r3, 11456a <_svfiprintf_r+0x56>
  114562:	ebb7 0906 	subs.w	r9, r7, r6
  114566:	d010      	beq.n	11458a <_svfiprintf_r+0x76>
  114568:	e003      	b.n	114572 <_svfiprintf_r+0x5e>
  11456a:	2b25      	cmp	r3, #37	; 0x25
  11456c:	d0f9      	beq.n	114562 <_svfiprintf_r+0x4e>
  11456e:	4627      	mov	r7, r4
  114570:	e7f3      	b.n	11455a <_svfiprintf_r+0x46>
  114572:	464b      	mov	r3, r9
  114574:	4632      	mov	r2, r6
  114576:	4629      	mov	r1, r5
  114578:	4640      	mov	r0, r8
  11457a:	f7ff ff72 	bl	114462 <__ssputs_r>
  11457e:	3001      	adds	r0, #1
  114580:	f000 80a7 	beq.w	1146d2 <_svfiprintf_r+0x1be>
  114584:	9b09      	ldr	r3, [sp, #36]	; 0x24
  114586:	444b      	add	r3, r9
  114588:	9309      	str	r3, [sp, #36]	; 0x24
  11458a:	783b      	ldrb	r3, [r7, #0]
  11458c:	2b00      	cmp	r3, #0
  11458e:	f000 80a0 	beq.w	1146d2 <_svfiprintf_r+0x1be>
  114592:	2300      	movs	r3, #0
  114594:	f04f 32ff 	mov.w	r2, #4294967295
  114598:	9304      	str	r3, [sp, #16]
  11459a:	9307      	str	r3, [sp, #28]
  11459c:	9205      	str	r2, [sp, #20]
  11459e:	9306      	str	r3, [sp, #24]
  1145a0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
  1145a4:	931a      	str	r3, [sp, #104]	; 0x68
  1145a6:	2601      	movs	r6, #1
  1145a8:	2205      	movs	r2, #5
  1145aa:	7821      	ldrb	r1, [r4, #0]
  1145ac:	484e      	ldr	r0, [pc, #312]	; (1146e8 <_svfiprintf_r+0x1d4>)
  1145ae:	f7fb fc77 	bl	10fea0 <memchr>
  1145b2:	1c67      	adds	r7, r4, #1
  1145b4:	9b04      	ldr	r3, [sp, #16]
  1145b6:	b138      	cbz	r0, 1145c8 <_svfiprintf_r+0xb4>
  1145b8:	4a4b      	ldr	r2, [pc, #300]	; (1146e8 <_svfiprintf_r+0x1d4>)
  1145ba:	463c      	mov	r4, r7
  1145bc:	1a80      	subs	r0, r0, r2
  1145be:	fa06 f000 	lsl.w	r0, r6, r0
  1145c2:	4318      	orrs	r0, r3
  1145c4:	9004      	str	r0, [sp, #16]
  1145c6:	e7ef      	b.n	1145a8 <_svfiprintf_r+0x94>
  1145c8:	06d9      	lsls	r1, r3, #27
  1145ca:	bf44      	itt	mi
  1145cc:	2220      	movmi	r2, #32
  1145ce:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  1145d2:	071a      	lsls	r2, r3, #28
  1145d4:	bf44      	itt	mi
  1145d6:	222b      	movmi	r2, #43	; 0x2b
  1145d8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  1145dc:	7822      	ldrb	r2, [r4, #0]
  1145de:	2a2a      	cmp	r2, #42	; 0x2a
  1145e0:	d003      	beq.n	1145ea <_svfiprintf_r+0xd6>
  1145e2:	9a07      	ldr	r2, [sp, #28]
  1145e4:	2100      	movs	r1, #0
  1145e6:	200a      	movs	r0, #10
  1145e8:	e00b      	b.n	114602 <_svfiprintf_r+0xee>
  1145ea:	9a03      	ldr	r2, [sp, #12]
  1145ec:	1d11      	adds	r1, r2, #4
  1145ee:	6812      	ldr	r2, [r2, #0]
  1145f0:	9103      	str	r1, [sp, #12]
  1145f2:	2a00      	cmp	r2, #0
  1145f4:	da10      	bge.n	114618 <_svfiprintf_r+0x104>
  1145f6:	4252      	negs	r2, r2
  1145f8:	f043 0002 	orr.w	r0, r3, #2
  1145fc:	9207      	str	r2, [sp, #28]
  1145fe:	9004      	str	r0, [sp, #16]
  114600:	e00b      	b.n	11461a <_svfiprintf_r+0x106>
  114602:	4627      	mov	r7, r4
  114604:	783b      	ldrb	r3, [r7, #0]
  114606:	3401      	adds	r4, #1
  114608:	3b30      	subs	r3, #48	; 0x30
  11460a:	2b09      	cmp	r3, #9
  11460c:	d803      	bhi.n	114616 <_svfiprintf_r+0x102>
  11460e:	fb00 3202 	mla	r2, r0, r2, r3
  114612:	2101      	movs	r1, #1
  114614:	e7f5      	b.n	114602 <_svfiprintf_r+0xee>
  114616:	b101      	cbz	r1, 11461a <_svfiprintf_r+0x106>
  114618:	9207      	str	r2, [sp, #28]
  11461a:	783b      	ldrb	r3, [r7, #0]
  11461c:	2b2e      	cmp	r3, #46	; 0x2e
  11461e:	d11e      	bne.n	11465e <_svfiprintf_r+0x14a>
  114620:	787b      	ldrb	r3, [r7, #1]
  114622:	2b2a      	cmp	r3, #42	; 0x2a
  114624:	d10a      	bne.n	11463c <_svfiprintf_r+0x128>
  114626:	9b03      	ldr	r3, [sp, #12]
  114628:	3702      	adds	r7, #2
  11462a:	1d1a      	adds	r2, r3, #4
  11462c:	681b      	ldr	r3, [r3, #0]
  11462e:	9203      	str	r2, [sp, #12]
  114630:	2b00      	cmp	r3, #0
  114632:	bfb8      	it	lt
  114634:	f04f 33ff 	movlt.w	r3, #4294967295
  114638:	9305      	str	r3, [sp, #20]
  11463a:	e010      	b.n	11465e <_svfiprintf_r+0x14a>
  11463c:	2300      	movs	r3, #0
  11463e:	4619      	mov	r1, r3
  114640:	9305      	str	r3, [sp, #20]
  114642:	1c78      	adds	r0, r7, #1
  114644:	240a      	movs	r4, #10
  114646:	4607      	mov	r7, r0
  114648:	783a      	ldrb	r2, [r7, #0]
  11464a:	3001      	adds	r0, #1
  11464c:	3a30      	subs	r2, #48	; 0x30
  11464e:	2a09      	cmp	r2, #9
  114650:	d803      	bhi.n	11465a <_svfiprintf_r+0x146>
  114652:	fb04 2101 	mla	r1, r4, r1, r2
  114656:	2301      	movs	r3, #1
  114658:	e7f5      	b.n	114646 <_svfiprintf_r+0x132>
  11465a:	b103      	cbz	r3, 11465e <_svfiprintf_r+0x14a>
  11465c:	9105      	str	r1, [sp, #20]
  11465e:	2203      	movs	r2, #3
  114660:	7839      	ldrb	r1, [r7, #0]
  114662:	4822      	ldr	r0, [pc, #136]	; (1146ec <_svfiprintf_r+0x1d8>)
  114664:	f7fb fc1c 	bl	10fea0 <memchr>
  114668:	b140      	cbz	r0, 11467c <_svfiprintf_r+0x168>
  11466a:	2340      	movs	r3, #64	; 0x40
  11466c:	ebcb 0000 	rsb	r0, r11, r0
  114670:	fa03 f000 	lsl.w	r0, r3, r0
  114674:	9b04      	ldr	r3, [sp, #16]
  114676:	3701      	adds	r7, #1
  114678:	4318      	orrs	r0, r3
  11467a:	9004      	str	r0, [sp, #16]
  11467c:	7839      	ldrb	r1, [r7, #0]
  11467e:	2206      	movs	r2, #6
  114680:	481b      	ldr	r0, [pc, #108]	; (1146f0 <_svfiprintf_r+0x1dc>)
  114682:	1c7e      	adds	r6, r7, #1
  114684:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
  114688:	f7fb fc0a 	bl	10fea0 <memchr>
  11468c:	b188      	cbz	r0, 1146b2 <_svfiprintf_r+0x19e>
  11468e:	4b19      	ldr	r3, [pc, #100]	; (1146f4 <_svfiprintf_r+0x1e0>)
  114690:	b933      	cbnz	r3, 1146a0 <_svfiprintf_r+0x18c>
  114692:	9b03      	ldr	r3, [sp, #12]
  114694:	3307      	adds	r3, #7
  114696:	f023 0307 	bic.w	r3, r3, #7
  11469a:	3308      	adds	r3, #8
  11469c:	9303      	str	r3, [sp, #12]
  11469e:	e014      	b.n	1146ca <_svfiprintf_r+0x1b6>
  1146a0:	ab03      	add	r3, sp, #12
  1146a2:	9300      	str	r3, [sp, #0]
  1146a4:	462a      	mov	r2, r5
  1146a6:	4b14      	ldr	r3, [pc, #80]	; (1146f8 <_svfiprintf_r+0x1e4>)
  1146a8:	a904      	add	r1, sp, #16
  1146aa:	4640      	mov	r0, r8
  1146ac:	f7fb fef0 	bl	110490 <_printf_float>
  1146b0:	e007      	b.n	1146c2 <_svfiprintf_r+0x1ae>
  1146b2:	ab03      	add	r3, sp, #12
  1146b4:	9300      	str	r3, [sp, #0]
  1146b6:	462a      	mov	r2, r5
  1146b8:	4b0f      	ldr	r3, [pc, #60]	; (1146f8 <_svfiprintf_r+0x1e4>)
  1146ba:	a904      	add	r1, sp, #16
  1146bc:	4640      	mov	r0, r8
  1146be:	f7fc f993 	bl	1109e8 <_printf_i>
  1146c2:	f1b0 3fff 	cmp.w	r0, #4294967295
  1146c6:	4682      	mov	r10, r0
  1146c8:	d003      	beq.n	1146d2 <_svfiprintf_r+0x1be>
  1146ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
  1146cc:	4453      	add	r3, r10
  1146ce:	9309      	str	r3, [sp, #36]	; 0x24
  1146d0:	e742      	b.n	114558 <_svfiprintf_r+0x44>
  1146d2:	89ab      	ldrh	r3, [r5, #12]
  1146d4:	065b      	lsls	r3, r3, #25
  1146d6:	d401      	bmi.n	1146dc <_svfiprintf_r+0x1c8>
  1146d8:	9809      	ldr	r0, [sp, #36]	; 0x24
  1146da:	e001      	b.n	1146e0 <_svfiprintf_r+0x1cc>
  1146dc:	f04f 30ff 	mov.w	r0, #4294967295
  1146e0:	b01d      	add	sp, #116	; 0x74
  1146e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  1146e6:	bf00      	nop
  1146e8:	00119f7c 	.word	0x00119f7c
  1146ec:	00119f82 	.word	0x00119f82
  1146f0:	00119f86 	.word	0x00119f86
  1146f4:	00110491 	.word	0x00110491
  1146f8:	00114463 	.word	0x00114463

001146fc <_sungetc_r>:
  1146fc:	1c4b      	adds	r3, r1, #1
  1146fe:	b570      	push	{r4, r5, r6, lr}
  114700:	460e      	mov	r6, r1
  114702:	4614      	mov	r4, r2
  114704:	d102      	bne.n	11470c <_sungetc_r+0x10>
  114706:	f04f 30ff 	mov.w	r0, #4294967295
  11470a:	bd70      	pop	{r4, r5, r6, pc}
  11470c:	8993      	ldrh	r3, [r2, #12]
  11470e:	b2cd      	uxtb	r5, r1
  114710:	f023 0320 	bic.w	r3, r3, #32
  114714:	8193      	strh	r3, [r2, #12]
  114716:	6b53      	ldr	r3, [r2, #52]	; 0x34
  114718:	6852      	ldr	r2, [r2, #4]
  11471a:	b183      	cbz	r3, 11473e <_sungetc_r+0x42>
  11471c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  11471e:	429a      	cmp	r2, r3
  114720:	da07      	bge.n	114732 <_sungetc_r+0x36>
  114722:	6823      	ldr	r3, [r4, #0]
  114724:	1e5a      	subs	r2, r3, #1
  114726:	6022      	str	r2, [r4, #0]
  114728:	f803 6c01 	strb.w	r6, [r3, #-1]
  11472c:	6863      	ldr	r3, [r4, #4]
  11472e:	3301      	adds	r3, #1
  114730:	e01f      	b.n	114772 <_sungetc_r+0x76>
  114732:	4621      	mov	r1, r4
  114734:	f7fd ffa0 	bl	112678 <__submore>
  114738:	2800      	cmp	r0, #0
  11473a:	d0f2      	beq.n	114722 <_sungetc_r+0x26>
  11473c:	e7e3      	b.n	114706 <_sungetc_r+0xa>
  11473e:	6921      	ldr	r1, [r4, #16]
  114740:	6823      	ldr	r3, [r4, #0]
  114742:	b151      	cbz	r1, 11475a <_sungetc_r+0x5e>
  114744:	4299      	cmp	r1, r3
  114746:	d208      	bcs.n	11475a <_sungetc_r+0x5e>
  114748:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  11474c:	428d      	cmp	r5, r1
  11474e:	d104      	bne.n	11475a <_sungetc_r+0x5e>
  114750:	3b01      	subs	r3, #1
  114752:	3201      	adds	r2, #1
  114754:	6023      	str	r3, [r4, #0]
  114756:	6062      	str	r2, [r4, #4]
  114758:	e00c      	b.n	114774 <_sungetc_r+0x78>
  11475a:	63e3      	str	r3, [r4, #60]	; 0x3c
  11475c:	f104 0344 	add.w	r3, r4, #68	; 0x44
  114760:	6363      	str	r3, [r4, #52]	; 0x34
  114762:	2303      	movs	r3, #3
  114764:	63a3      	str	r3, [r4, #56]	; 0x38
  114766:	4623      	mov	r3, r4
  114768:	6422      	str	r2, [r4, #64]	; 0x40
  11476a:	f803 6f46 	strb.w	r6, [r3, #70]!
  11476e:	6023      	str	r3, [r4, #0]
  114770:	2301      	movs	r3, #1
  114772:	6063      	str	r3, [r4, #4]
  114774:	4628      	mov	r0, r5
  114776:	bd70      	pop	{r4, r5, r6, pc}

00114778 <__ssrefill_r>:
  114778:	b510      	push	{r4, lr}
  11477a:	460c      	mov	r4, r1
  11477c:	6b49      	ldr	r1, [r1, #52]	; 0x34
  11477e:	b169      	cbz	r1, 11479c <__ssrefill_r+0x24>
  114780:	f104 0344 	add.w	r3, r4, #68	; 0x44
  114784:	4299      	cmp	r1, r3
  114786:	d001      	beq.n	11478c <__ssrefill_r+0x14>
  114788:	f7f8 fe95 	bl	10d4b6 <__wrap__free_r>
  11478c:	6c23      	ldr	r3, [r4, #64]	; 0x40
  11478e:	2000      	movs	r0, #0
  114790:	6360      	str	r0, [r4, #52]	; 0x34
  114792:	6063      	str	r3, [r4, #4]
  114794:	b113      	cbz	r3, 11479c <__ssrefill_r+0x24>
  114796:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  114798:	6023      	str	r3, [r4, #0]
  11479a:	bd10      	pop	{r4, pc}
  11479c:	6923      	ldr	r3, [r4, #16]
  11479e:	f04f 30ff 	mov.w	r0, #4294967295
  1147a2:	6023      	str	r3, [r4, #0]
  1147a4:	2300      	movs	r3, #0
  1147a6:	6063      	str	r3, [r4, #4]
  1147a8:	89a3      	ldrh	r3, [r4, #12]
  1147aa:	f043 0320 	orr.w	r3, r3, #32
  1147ae:	81a3      	strh	r3, [r4, #12]
  1147b0:	bd10      	pop	{r4, pc}
	...

001147b4 <__ssvfiscanf_r>:
  1147b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  1147b8:	f8df 9290 	ldr.w	r9, [pc, #656]	; 114a4c <__ssvfiscanf_r+0x298>
  1147bc:	4607      	mov	r7, r0
  1147be:	460c      	mov	r4, r1
  1147c0:	46ca      	mov	r10, r9
  1147c2:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
  1147c6:	9301      	str	r3, [sp, #4]
  1147c8:	2300      	movs	r3, #0
  1147ca:	9346      	str	r3, [sp, #280]	; 0x118
  1147cc:	9347      	str	r3, [sp, #284]	; 0x11c
  1147ce:	4b9b      	ldr	r3, [pc, #620]	; (114a3c <__ssvfiscanf_r+0x288>)
  1147d0:	f10d 080c 	add.w	r8, sp, #12
  1147d4:	93a2      	str	r3, [sp, #648]	; 0x288
  1147d6:	4b9a      	ldr	r3, [pc, #616]	; (114a40 <__ssvfiscanf_r+0x28c>)
  1147d8:	f8df b268 	ldr.w	r11, [pc, #616]	; 114a44 <__ssvfiscanf_r+0x290>
  1147dc:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
  1147e0:	93a3      	str	r3, [sp, #652]	; 0x28c
  1147e2:	7815      	ldrb	r5, [r2, #0]
  1147e4:	2d00      	cmp	r5, #0
  1147e6:	f000 8120 	beq.w	114a2a <__ssvfiscanf_r+0x276>
  1147ea:	f8d9 3000 	ldr.w	r3, [r9]
  1147ee:	442b      	add	r3, r5
  1147f0:	785b      	ldrb	r3, [r3, #1]
  1147f2:	f003 0308 	and.w	r3, r3, #8
  1147f6:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  1147fa:	b1f3      	cbz	r3, 11483a <__ssvfiscanf_r+0x86>
  1147fc:	6863      	ldr	r3, [r4, #4]
  1147fe:	2b00      	cmp	r3, #0
  114800:	dd10      	ble.n	114824 <__ssvfiscanf_r+0x70>
  114802:	6823      	ldr	r3, [r4, #0]
  114804:	f8da 0000 	ldr.w	r0, [r10]
  114808:	7819      	ldrb	r1, [r3, #0]
  11480a:	4401      	add	r1, r0
  11480c:	7849      	ldrb	r1, [r1, #1]
  11480e:	070d      	lsls	r5, r1, #28
  114810:	d510      	bpl.n	114834 <__ssvfiscanf_r+0x80>
  114812:	9947      	ldr	r1, [sp, #284]	; 0x11c
  114814:	3301      	adds	r3, #1
  114816:	3101      	adds	r1, #1
  114818:	9147      	str	r1, [sp, #284]	; 0x11c
  11481a:	6861      	ldr	r1, [r4, #4]
  11481c:	6023      	str	r3, [r4, #0]
  11481e:	3901      	subs	r1, #1
  114820:	6061      	str	r1, [r4, #4]
  114822:	e7eb      	b.n	1147fc <__ssvfiscanf_r+0x48>
  114824:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
  114826:	4621      	mov	r1, r4
  114828:	4638      	mov	r0, r7
  11482a:	9200      	str	r2, [sp, #0]
  11482c:	4798      	blx	r3
  11482e:	9a00      	ldr	r2, [sp, #0]
  114830:	2800      	cmp	r0, #0
  114832:	d0e6      	beq.n	114802 <__ssvfiscanf_r+0x4e>
  114834:	1c56      	adds	r6, r2, #1
  114836:	4632      	mov	r2, r6
  114838:	e7d3      	b.n	1147e2 <__ssvfiscanf_r+0x2e>
  11483a:	2d25      	cmp	r5, #37	; 0x25
  11483c:	f102 0601 	add.w	r6, r2, #1
  114840:	d14b      	bne.n	1148da <__ssvfiscanf_r+0x126>
  114842:	9143      	str	r1, [sp, #268]	; 0x10c
  114844:	9145      	str	r1, [sp, #276]	; 0x114
  114846:	7853      	ldrb	r3, [r2, #1]
  114848:	2b2a      	cmp	r3, #42	; 0x2a
  11484a:	bf02      	ittt	eq
  11484c:	2310      	moveq	r3, #16
  11484e:	1c96      	addeq	r6, r2, #2
  114850:	9343      	streq	r3, [sp, #268]	; 0x10c
  114852:	220a      	movs	r2, #10
  114854:	7831      	ldrb	r1, [r6, #0]
  114856:	4635      	mov	r5, r6
  114858:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
  11485c:	2b09      	cmp	r3, #9
  11485e:	f106 0601 	add.w	r6, r6, #1
  114862:	d805      	bhi.n	114870 <__ssvfiscanf_r+0xbc>
  114864:	9b45      	ldr	r3, [sp, #276]	; 0x114
  114866:	fb02 1303 	mla	r3, r2, r3, r1
  11486a:	3b30      	subs	r3, #48	; 0x30
  11486c:	9345      	str	r3, [sp, #276]	; 0x114
  11486e:	e7f1      	b.n	114854 <__ssvfiscanf_r+0xa0>
  114870:	2203      	movs	r2, #3
  114872:	4874      	ldr	r0, [pc, #464]	; (114a44 <__ssvfiscanf_r+0x290>)
  114874:	f7fb fb14 	bl	10fea0 <memchr>
  114878:	b140      	cbz	r0, 11488c <__ssvfiscanf_r+0xd8>
  11487a:	4635      	mov	r5, r6
  11487c:	2301      	movs	r3, #1
  11487e:	ebcb 0000 	rsb	r0, r11, r0
  114882:	fa03 f000 	lsl.w	r0, r3, r0
  114886:	9b43      	ldr	r3, [sp, #268]	; 0x10c
  114888:	4303      	orrs	r3, r0
  11488a:	9343      	str	r3, [sp, #268]	; 0x10c
  11488c:	1c6e      	adds	r6, r5, #1
  11488e:	782d      	ldrb	r5, [r5, #0]
  114890:	2d67      	cmp	r5, #103	; 0x67
  114892:	d80f      	bhi.n	1148b4 <__ssvfiscanf_r+0x100>
  114894:	2d65      	cmp	r5, #101	; 0x65
  114896:	d278      	bcs.n	11498a <__ssvfiscanf_r+0x1d6>
  114898:	2d5b      	cmp	r5, #91	; 0x5b
  11489a:	d054      	beq.n	114946 <__ssvfiscanf_r+0x192>
  11489c:	d805      	bhi.n	1148aa <__ssvfiscanf_r+0xf6>
  11489e:	2d00      	cmp	r5, #0
  1148a0:	f000 80c5 	beq.w	114a2e <__ssvfiscanf_r+0x27a>
  1148a4:	2d25      	cmp	r5, #37	; 0x25
  1148a6:	d018      	beq.n	1148da <__ssvfiscanf_r+0x126>
  1148a8:	e071      	b.n	11498e <__ssvfiscanf_r+0x1da>
  1148aa:	2d63      	cmp	r5, #99	; 0x63
  1148ac:	d057      	beq.n	11495e <__ssvfiscanf_r+0x1aa>
  1148ae:	2d64      	cmp	r5, #100	; 0x64
  1148b0:	d03f      	beq.n	114932 <__ssvfiscanf_r+0x17e>
  1148b2:	e06c      	b.n	11498e <__ssvfiscanf_r+0x1da>
  1148b4:	2d70      	cmp	r5, #112	; 0x70
  1148b6:	d032      	beq.n	11491e <__ssvfiscanf_r+0x16a>
  1148b8:	d807      	bhi.n	1148ca <__ssvfiscanf_r+0x116>
  1148ba:	2d6e      	cmp	r5, #110	; 0x6e
  1148bc:	d055      	beq.n	11496a <__ssvfiscanf_r+0x1b6>
  1148be:	d83a      	bhi.n	114936 <__ssvfiscanf_r+0x182>
  1148c0:	2d69      	cmp	r5, #105	; 0x69
  1148c2:	d164      	bne.n	11498e <__ssvfiscanf_r+0x1da>
  1148c4:	2300      	movs	r3, #0
  1148c6:	9344      	str	r3, [sp, #272]	; 0x110
  1148c8:	e03b      	b.n	114942 <__ssvfiscanf_r+0x18e>
  1148ca:	2d75      	cmp	r5, #117	; 0x75
  1148cc:	d031      	beq.n	114932 <__ssvfiscanf_r+0x17e>
  1148ce:	2d78      	cmp	r5, #120	; 0x78
  1148d0:	d029      	beq.n	114926 <__ssvfiscanf_r+0x172>
  1148d2:	2d73      	cmp	r5, #115	; 0x73
  1148d4:	d15b      	bne.n	11498e <__ssvfiscanf_r+0x1da>
  1148d6:	2302      	movs	r3, #2
  1148d8:	e03f      	b.n	11495a <__ssvfiscanf_r+0x1a6>
  1148da:	6863      	ldr	r3, [r4, #4]
  1148dc:	2b00      	cmp	r3, #0
  1148de:	dd0d      	ble.n	1148fc <__ssvfiscanf_r+0x148>
  1148e0:	6823      	ldr	r3, [r4, #0]
  1148e2:	781a      	ldrb	r2, [r3, #0]
  1148e4:	4295      	cmp	r5, r2
  1148e6:	f040 80a0 	bne.w	114a2a <__ssvfiscanf_r+0x276>
  1148ea:	3301      	adds	r3, #1
  1148ec:	6862      	ldr	r2, [r4, #4]
  1148ee:	6023      	str	r3, [r4, #0]
  1148f0:	9b47      	ldr	r3, [sp, #284]	; 0x11c
  1148f2:	3a01      	subs	r2, #1
  1148f4:	3301      	adds	r3, #1
  1148f6:	6062      	str	r2, [r4, #4]
  1148f8:	9347      	str	r3, [sp, #284]	; 0x11c
  1148fa:	e79c      	b.n	114836 <__ssvfiscanf_r+0x82>
  1148fc:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
  1148fe:	4621      	mov	r1, r4
  114900:	4638      	mov	r0, r7
  114902:	4798      	blx	r3
  114904:	2800      	cmp	r0, #0
  114906:	d0eb      	beq.n	1148e0 <__ssvfiscanf_r+0x12c>
  114908:	9846      	ldr	r0, [sp, #280]	; 0x118
  11490a:	2800      	cmp	r0, #0
  11490c:	f000 808f 	beq.w	114a2e <__ssvfiscanf_r+0x27a>
  114910:	89a3      	ldrh	r3, [r4, #12]
  114912:	f013 0f40 	tst.w	r3, #64	; 0x40
  114916:	bf18      	it	ne
  114918:	f04f 30ff 	movne.w	r0, #4294967295
  11491c:	e089      	b.n	114a32 <__ssvfiscanf_r+0x27e>
  11491e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
  114920:	f043 0320 	orr.w	r3, r3, #32
  114924:	9343      	str	r3, [sp, #268]	; 0x10c
  114926:	9b43      	ldr	r3, [sp, #268]	; 0x10c
  114928:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  11492c:	9343      	str	r3, [sp, #268]	; 0x10c
  11492e:	2310      	movs	r3, #16
  114930:	e002      	b.n	114938 <__ssvfiscanf_r+0x184>
  114932:	230a      	movs	r3, #10
  114934:	e000      	b.n	114938 <__ssvfiscanf_r+0x184>
  114936:	2308      	movs	r3, #8
  114938:	2d6e      	cmp	r5, #110	; 0x6e
  11493a:	9344      	str	r3, [sp, #272]	; 0x110
  11493c:	dd01      	ble.n	114942 <__ssvfiscanf_r+0x18e>
  11493e:	2304      	movs	r3, #4
  114940:	e00b      	b.n	11495a <__ssvfiscanf_r+0x1a6>
  114942:	2303      	movs	r3, #3
  114944:	e009      	b.n	11495a <__ssvfiscanf_r+0x1a6>
  114946:	4631      	mov	r1, r6
  114948:	4640      	mov	r0, r8
  11494a:	f7fc fd91 	bl	111470 <__sccl>
  11494e:	4606      	mov	r6, r0
  114950:	9b43      	ldr	r3, [sp, #268]	; 0x10c
  114952:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  114956:	9343      	str	r3, [sp, #268]	; 0x10c
  114958:	2301      	movs	r3, #1
  11495a:	9349      	str	r3, [sp, #292]	; 0x124
  11495c:	e01b      	b.n	114996 <__ssvfiscanf_r+0x1e2>
  11495e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
  114960:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  114964:	9343      	str	r3, [sp, #268]	; 0x10c
  114966:	2300      	movs	r3, #0
  114968:	e7f7      	b.n	11495a <__ssvfiscanf_r+0x1a6>
  11496a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
  11496c:	06d0      	lsls	r0, r2, #27
  11496e:	f53f af62 	bmi.w	114836 <__ssvfiscanf_r+0x82>
  114972:	f012 0f01 	tst.w	r2, #1
  114976:	9a01      	ldr	r2, [sp, #4]
  114978:	9b47      	ldr	r3, [sp, #284]	; 0x11c
  11497a:	f102 0104 	add.w	r1, r2, #4
  11497e:	9101      	str	r1, [sp, #4]
  114980:	6812      	ldr	r2, [r2, #0]
  114982:	bf14      	ite	ne
  114984:	8013      	strhne	r3, [r2, #0]
  114986:	6013      	streq	r3, [r2, #0]
  114988:	e755      	b.n	114836 <__ssvfiscanf_r+0x82>
  11498a:	2305      	movs	r3, #5
  11498c:	e7e5      	b.n	11495a <__ssvfiscanf_r+0x1a6>
  11498e:	2303      	movs	r3, #3
  114990:	9349      	str	r3, [sp, #292]	; 0x124
  114992:	230a      	movs	r3, #10
  114994:	9344      	str	r3, [sp, #272]	; 0x110
  114996:	6863      	ldr	r3, [r4, #4]
  114998:	2b00      	cmp	r3, #0
  11499a:	dd03      	ble.n	1149a4 <__ssvfiscanf_r+0x1f0>
  11499c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
  11499e:	0659      	lsls	r1, r3, #25
  1149a0:	d511      	bpl.n	1149c6 <__ssvfiscanf_r+0x212>
  1149a2:	e018      	b.n	1149d6 <__ssvfiscanf_r+0x222>
  1149a4:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
  1149a6:	4621      	mov	r1, r4
  1149a8:	4638      	mov	r0, r7
  1149aa:	4798      	blx	r3
  1149ac:	2800      	cmp	r0, #0
  1149ae:	d0f5      	beq.n	11499c <__ssvfiscanf_r+0x1e8>
  1149b0:	e7aa      	b.n	114908 <__ssvfiscanf_r+0x154>
  1149b2:	9a47      	ldr	r2, [sp, #284]	; 0x11c
  1149b4:	3201      	adds	r2, #1
  1149b6:	9247      	str	r2, [sp, #284]	; 0x11c
  1149b8:	6862      	ldr	r2, [r4, #4]
  1149ba:	3a01      	subs	r2, #1
  1149bc:	2a00      	cmp	r2, #0
  1149be:	6062      	str	r2, [r4, #4]
  1149c0:	dd13      	ble.n	1149ea <__ssvfiscanf_r+0x236>
  1149c2:	3301      	adds	r3, #1
  1149c4:	6023      	str	r3, [r4, #0]
  1149c6:	6823      	ldr	r3, [r4, #0]
  1149c8:	f8da 1000 	ldr.w	r1, [r10]
  1149cc:	781a      	ldrb	r2, [r3, #0]
  1149ce:	440a      	add	r2, r1
  1149d0:	7852      	ldrb	r2, [r2, #1]
  1149d2:	0712      	lsls	r2, r2, #28
  1149d4:	d4ed      	bmi.n	1149b2 <__ssvfiscanf_r+0x1fe>
  1149d6:	9b49      	ldr	r3, [sp, #292]	; 0x124
  1149d8:	2b02      	cmp	r3, #2
  1149da:	dc0d      	bgt.n	1149f8 <__ssvfiscanf_r+0x244>
  1149dc:	ab01      	add	r3, sp, #4
  1149de:	4622      	mov	r2, r4
  1149e0:	a943      	add	r1, sp, #268	; 0x10c
  1149e2:	4638      	mov	r0, r7
  1149e4:	f7fc fb02 	bl	110fec <_scanf_chars>
  1149e8:	e019      	b.n	114a1e <__ssvfiscanf_r+0x26a>
  1149ea:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
  1149ec:	4621      	mov	r1, r4
  1149ee:	4638      	mov	r0, r7
  1149f0:	4798      	blx	r3
  1149f2:	2800      	cmp	r0, #0
  1149f4:	d0e7      	beq.n	1149c6 <__ssvfiscanf_r+0x212>
  1149f6:	e787      	b.n	114908 <__ssvfiscanf_r+0x154>
  1149f8:	2b04      	cmp	r3, #4
  1149fa:	dc06      	bgt.n	114a0a <__ssvfiscanf_r+0x256>
  1149fc:	ab01      	add	r3, sp, #4
  1149fe:	4622      	mov	r2, r4
  114a00:	a943      	add	r1, sp, #268	; 0x10c
  114a02:	4638      	mov	r0, r7
  114a04:	f7fc fb58 	bl	1110b8 <_scanf_i>
  114a08:	e009      	b.n	114a1e <__ssvfiscanf_r+0x26a>
  114a0a:	4b0f      	ldr	r3, [pc, #60]	; (114a48 <__ssvfiscanf_r+0x294>)
  114a0c:	2b00      	cmp	r3, #0
  114a0e:	f43f af12 	beq.w	114836 <__ssvfiscanf_r+0x82>
  114a12:	ab01      	add	r3, sp, #4
  114a14:	4622      	mov	r2, r4
  114a16:	a943      	add	r1, sp, #268	; 0x10c
  114a18:	4638      	mov	r0, r7
  114a1a:	f7fc f90b 	bl	110c34 <_scanf_float>
  114a1e:	2801      	cmp	r0, #1
  114a20:	d003      	beq.n	114a2a <__ssvfiscanf_r+0x276>
  114a22:	2802      	cmp	r0, #2
  114a24:	f47f af07 	bne.w	114836 <__ssvfiscanf_r+0x82>
  114a28:	e76e      	b.n	114908 <__ssvfiscanf_r+0x154>
  114a2a:	9846      	ldr	r0, [sp, #280]	; 0x118
  114a2c:	e001      	b.n	114a32 <__ssvfiscanf_r+0x27e>
  114a2e:	f04f 30ff 	mov.w	r0, #4294967295
  114a32:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
  114a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  114a3a:	bf00      	nop
  114a3c:	001146fd 	.word	0x001146fd
  114a40:	00114779 	.word	0x00114779
  114a44:	00119f82 	.word	0x00119f82
  114a48:	00110c35 	.word	0x00110c35
  114a4c:	3fff4200 	.word	0x3fff4200

00114a50 <_read_r>:
  114a50:	b538      	push	{r3, r4, r5, lr}
  114a52:	4c07      	ldr	r4, [pc, #28]	; (114a70 <_read_r+0x20>)
  114a54:	4605      	mov	r5, r0
  114a56:	4608      	mov	r0, r1
  114a58:	4611      	mov	r1, r2
  114a5a:	2200      	movs	r2, #0
  114a5c:	6022      	str	r2, [r4, #0]
  114a5e:	461a      	mov	r2, r3
  114a60:	f7f8 fd94 	bl	10d58c <_read>
  114a64:	1c43      	adds	r3, r0, #1
  114a66:	d102      	bne.n	114a6e <_read_r+0x1e>
  114a68:	6823      	ldr	r3, [r4, #0]
  114a6a:	b103      	cbz	r3, 114a6e <_read_r+0x1e>
  114a6c:	602b      	str	r3, [r5, #0]
  114a6e:	bd38      	pop	{r3, r4, r5, pc}
  114a70:	3fff9f18 	.word	0x3fff9f18

00114a74 <__aeabi_d2iz>:
  114a74:	ea4f 0241 	mov.w	r2, r1, lsl #1
  114a78:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  114a7c:	d215      	bcs.n	114aaa <__aeabi_d2iz+0x36>
  114a7e:	d511      	bpl.n	114aa4 <__aeabi_d2iz+0x30>
  114a80:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  114a84:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  114a88:	d912      	bls.n	114ab0 <__aeabi_d2iz+0x3c>
  114a8a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  114a8e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  114a92:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  114a96:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  114a9a:	fa23 f002 	lsr.w	r0, r3, r2
  114a9e:	bf18      	it	ne
  114aa0:	4240      	negne	r0, r0
  114aa2:	4770      	bx	lr
  114aa4:	f04f 0000 	mov.w	r0, #0
  114aa8:	4770      	bx	lr
  114aaa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  114aae:	d105      	bne.n	114abc <__aeabi_d2iz+0x48>
  114ab0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  114ab4:	bf08      	it	eq
  114ab6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  114aba:	4770      	bx	lr
  114abc:	f04f 0000 	mov.w	r0, #0
  114ac0:	4770      	bx	lr
  114ac2:	bf00      	nop

00114ac4 <__aeabi_d2uiz>:
  114ac4:	004a      	lsls	r2, r1, #1
  114ac6:	d211      	bcs.n	114aec <__aeabi_d2uiz+0x28>
  114ac8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  114acc:	d211      	bcs.n	114af2 <__aeabi_d2uiz+0x2e>
  114ace:	d50d      	bpl.n	114aec <__aeabi_d2uiz+0x28>
  114ad0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  114ad4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  114ad8:	d40e      	bmi.n	114af8 <__aeabi_d2uiz+0x34>
  114ada:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  114ade:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  114ae2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  114ae6:	fa23 f002 	lsr.w	r0, r3, r2
  114aea:	4770      	bx	lr
  114aec:	f04f 0000 	mov.w	r0, #0
  114af0:	4770      	bx	lr
  114af2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  114af6:	d102      	bne.n	114afe <__aeabi_d2uiz+0x3a>
  114af8:	f04f 30ff 	mov.w	r0, #4294967295
  114afc:	4770      	bx	lr
  114afe:	f04f 0000 	mov.w	r0, #0
  114b02:	4770      	bx	lr

00114b04 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<WizFi250, void (WizFi250::*)()> >(void*, void const*)>:
  114b04:	4603      	mov	r3, r0
  114b06:	b110      	cbz	r0, 114b0e <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<WizFi250, void (WizFi250::*)()> >(void*, void const*)+0xa>
  114b08:	c907      	ldmia	r1, {r0, r1, r2}
  114b0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
  114b0e:	4770      	bx	lr

00114b10 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<WizFi250, void (WizFi250::*)()> >(void*)>:
  114b10:	4770      	bx	lr

00114b12 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<WizFi250, void (WizFi250::*)()> >(void const*)>:
  114b12:	6842      	ldr	r2, [r0, #4]
  114b14:	6803      	ldr	r3, [r0, #0]
  114b16:	6880      	ldr	r0, [r0, #8]
  114b18:	f012 0f01 	tst.w	r2, #1
  114b1c:	ea4f 0262 	mov.w	r2, r2, asr #1
  114b20:	bf18      	it	ne
  114b22:	5881      	ldrne	r1, [r0, r2]
  114b24:	4410      	add	r0, r2
  114b26:	bf18      	it	ne
  114b28:	58cb      	ldrne	r3, [r1, r3]
  114b2a:	4718      	bx	r3

00114b2c <WizFi250::csEnable()>:
  114b2c:	b510      	push	{r4, lr}
  114b2e:	2301      	movs	r3, #1
  114b30:	f100 0468 	add.w	r4, r0, #104	; 0x68
  114b34:	4619      	mov	r1, r3
  114b36:	4620      	mov	r0, r4
  114b38:	2206      	movs	r2, #6
  114b3a:	f7f3 f81b 	bl	107b74 <PCA9655E::setValue(Port, signed char, SetVal)>
  114b3e:	4620      	mov	r0, r4
  114b40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  114b44:	2300      	movs	r3, #0
  114b46:	2206      	movs	r2, #6
  114b48:	2101      	movs	r1, #1
  114b4a:	f7f3 b813 	b.w	107b74 <PCA9655E::setValue(Port, signed char, SetVal)>

00114b4e <WizFi250::csDisable()>:
  114b4e:	2301      	movs	r3, #1
  114b50:	2206      	movs	r2, #6
  114b52:	4619      	mov	r1, r3
  114b54:	3068      	adds	r0, #104	; 0x68
  114b56:	f7f3 b80d 	b.w	107b74 <PCA9655E::setValue(Port, signed char, SetVal)>
	...

00114b5c <WizFi250::initSpi(int, int, int)>:
  114b5c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  114b60:	4604      	mov	r4, r0
  114b62:	460f      	mov	r7, r1
  114b64:	4690      	mov	r8, r2
  114b66:	461e      	mov	r6, r3
  114b68:	4b28      	ldr	r3, [pc, #160]	; (114c0c <WizFi250::initSpi(int, int, int)+0xb0>)
  114b6a:	2205      	movs	r2, #5
  114b6c:	f100 0568 	add.w	r5, r0, #104	; 0x68
  114b70:	63da      	str	r2, [r3, #60]	; 0x3c
  114b72:	4927      	ldr	r1, [pc, #156]	; (114c10 <WizFi250::initSpi(int, int, int)+0xb4>)
  114b74:	4628      	mov	r0, r5
  114b76:	f7f2 ffad 	bl	107ad4 <PCA9655E::frequency(int)>
  114b7a:	2300      	movs	r3, #0
  114b7c:	2206      	movs	r2, #6
  114b7e:	2101      	movs	r1, #1
  114b80:	4628      	mov	r0, r5
  114b82:	f7f3 f827 	bl	107bd4 <PCA9655E::setDirection(Port, signed char, Direction)>
  114b86:	2301      	movs	r3, #1
  114b88:	4619      	mov	r1, r3
  114b8a:	2206      	movs	r2, #6
  114b8c:	4628      	mov	r0, r5
  114b8e:	f7f2 fff1 	bl	107b74 <PCA9655E::setValue(Port, signed char, SetVal)>
  114b92:	200a      	movs	r0, #10
  114b94:	f7f8 fe9a 	bl	10d8cc <wait_us>
  114b98:	4642      	mov	r2, r8
  114b9a:	4639      	mov	r1, r7
  114b9c:	4620      	mov	r0, r4
  114b9e:	f7f7 fe53 	bl	10c848 <mbed::SPI::format(int, int)>
  114ba2:	4631      	mov	r1, r6
  114ba4:	4620      	mov	r0, r4
  114ba6:	f7f7 fe67 	bl	10c878 <mbed::SPI::frequency(int)>
  114baa:	4b1a      	ldr	r3, [pc, #104]	; (114c14 <WizFi250::initSpi(int, int, int)+0xb8>)
  114bac:	f104 062c 	add.w	r6, r4, #44	; 0x2c
  114bb0:	9300      	str	r3, [sp, #0]
  114bb2:	2300      	movs	r3, #0
  114bb4:	9301      	str	r3, [sp, #4]
  114bb6:	4b18      	ldr	r3, [pc, #96]	; (114c18 <WizFi250::initSpi(int, int, int)+0xbc>)
  114bb8:	4669      	mov	r1, sp
  114bba:	4630      	mov	r0, r6
  114bbc:	9303      	str	r3, [sp, #12]
  114bbe:	9402      	str	r4, [sp, #8]
  114bc0:	f7f7 fcd6 	bl	10c570 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
  114bc4:	9b03      	ldr	r3, [sp, #12]
  114bc6:	b113      	cbz	r3, 114bce <WizFi250::initSpi(int, int, int)+0x72>
  114bc8:	689b      	ldr	r3, [r3, #8]
  114bca:	4668      	mov	r0, sp
  114bcc:	4798      	blx	r3
  114bce:	2532      	movs	r5, #50	; 0x32
  114bd0:	4620      	mov	r0, r4
  114bd2:	f000 fc81 	bl	1154d8 <WizFi250::getSpi()>
  114bd6:	3d01      	subs	r5, #1
  114bd8:	d1fa      	bne.n	114bd0 <WizFi250::initSpi(int, int, int)+0x74>
  114bda:	210d      	movs	r1, #13
  114bdc:	4620      	mov	r0, r4
  114bde:	f000 fcc7 	bl	115570 <WizFi250::putSpi(char)>
  114be2:	4620      	mov	r0, r4
  114be4:	210a      	movs	r1, #10
  114be6:	f000 fcc3 	bl	115570 <WizFi250::putSpi(char)>
  114bea:	2001      	movs	r0, #1
  114bec:	f7f8 fe92 	bl	10d914 <wait_ms>
  114bf0:	4630      	mov	r0, r6
  114bf2:	f7f7 fc50 	bl	10c496 <mbed::InterruptIn::read()>
  114bf6:	b118      	cbz	r0, 114c00 <WizFi250::initSpi(int, int, int)+0xa4>
  114bf8:	4620      	mov	r0, r4
  114bfa:	f000 fc6d 	bl	1154d8 <WizFi250::getSpi()>
  114bfe:	e7f7      	b.n	114bf0 <WizFi250::initSpi(int, int, int)+0x94>
  114c00:	f643 035c 	movw	r3, #14428	; 0x385c
  114c04:	50e0      	str	r0, [r4, r3]
  114c06:	b004      	add	sp, #16
  114c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  114c0c:	4001c000 	.word	0x4001c000
  114c10:	000f4240 	.word	0x000f4240
  114c14:	001153b9 	.word	0x001153b9
  114c18:	0011a148 	.word	0x0011a148

00114c1c <WizFi250::WizFi250(PinName, PinName, PinName, PinName, PinName, int, int, int)>:
  114c1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  114c1e:	4604      	mov	r4, r0
  114c20:	f04f 35ff 	mov.w	r5, #4294967295
  114c24:	9500      	str	r5, [sp, #0]
  114c26:	f7f7 fde5 	bl	10c7f4 <mbed::SPI::SPI(PinName, PinName, PinName, PinName)>
  114c2a:	f204 77dc 	addw	r7, r4, #2012	; 0x7dc
  114c2e:	f99d 1024 	ldrsb.w	r1, [sp, #36]	; 0x24
  114c32:	f104 002c 	add.w	r0, r4, #44	; 0x2c
  114c36:	f7f7 fc61 	bl	10c4fc <mbed::InterruptIn::InterruptIn(PinName)>
  114c3a:	9500      	str	r5, [sp, #0]
  114c3c:	463d      	mov	r5, r7
  114c3e:	2320      	movs	r3, #32
  114c40:	2202      	movs	r2, #2
  114c42:	2103      	movs	r1, #3
  114c44:	f104 0068 	add.w	r0, r4, #104	; 0x68
  114c48:	f7f2 ff30 	bl	107aac <PCA9655E::PCA9655E(PinName, PinName, unsigned char, PinName)>
  114c4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  114c4e:	f504 5661 	add.w	r6, r4, #14400	; 0x3840
  114c52:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
  114c56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  114c58:	361c      	adds	r6, #28
  114c5a:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
  114c5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  114c60:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
  114c64:	f105 0024 	add.w	r0, r5, #36	; 0x24
  114c68:	f240 52de 	movw	r2, #1502	; 0x5de
  114c6c:	2100      	movs	r1, #0
  114c6e:	f505 65c2 	add.w	r5, r5, #1552	; 0x610
  114c72:	f7fb f958 	bl	10ff26 <memset>
  114c76:	42b5      	cmp	r5, r6
  114c78:	d1f4      	bne.n	114c64 <WizFi250::WizFi250(PinName, PinName, PinName, PinName, PinName, int, int, int)+0x48>
  114c7a:	f643 035c 	movw	r3, #14428	; 0x385c
  114c7e:	2500      	movs	r5, #0
  114c80:	50e5      	str	r5, [r4, r3]
  114c82:	4b16      	ldr	r3, [pc, #88]	; (114cdc <WizFi250::WizFi250(PinName, PinName, PinName, PinName, PinName, int, int, int)+0xc0>)
  114c84:	f240 720c 	movw	r2, #1804	; 0x70c
  114c88:	4629      	mov	r1, r5
  114c8a:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
  114c8e:	601c      	str	r4, [r3, #0]
  114c90:	f7fb f949 	bl	10ff26 <memset>
  114c94:	f44f 5242 	mov.w	r2, #12416	; 0x3080
  114c98:	4629      	mov	r1, r5
  114c9a:	4638      	mov	r0, r7
  114c9c:	f7fb f943 	bl	10ff26 <memset>
  114ca0:	2301      	movs	r3, #1
  114ca2:	f884 31cb 	strb.w	r3, [r4, #459]	; 0x1cb
  114ca6:	f04f 33ff 	mov.w	r3, #4294967295
  114caa:	f8c4 31d0 	str.w	r3, [r4, #464]	; 0x1d0
  114cae:	f884 51c8 	strb.w	r5, [r4, #456]	; 0x1c8
  114cb2:	2010      	movs	r0, #16
  114cb4:	f7f8 fd34 	bl	10d720 <operator new(unsigned int)>
  114cb8:	6005      	str	r5, [r0, #0]
  114cba:	4606      	mov	r6, r0
  114cbc:	6045      	str	r5, [r0, #4]
  114cbe:	f240 6001 	movw	r0, #1537	; 0x601
  114cc2:	60b0      	str	r0, [r6, #8]
  114cc4:	f7fb f8dc 	bl	10fe80 <malloc>
  114cc8:	60f0      	str	r0, [r6, #12]
  114cca:	b910      	cbnz	r0, 114cd2 <WizFi250::WizFi250(PinName, PinName, PinName, PinName, PinName, int, int, int)+0xb6>
  114ccc:	4804      	ldr	r0, [pc, #16]	; (114ce0 <WizFi250::WizFi250(PinName, PinName, PinName, PinName, PinName, int, int, int)+0xc4>)
  114cce:	f7f3 fe09 	bl	1088e4 <error>
  114cd2:	4620      	mov	r0, r4
  114cd4:	f8c4 61d8 	str.w	r6, [r4, #472]	; 0x1d8
  114cd8:	b003      	add	sp, #12
  114cda:	bdf0      	pop	{r4, r5, r6, r7, pc}
  114cdc:	3fff8df0 	.word	0x3fff8df0
  114ce0:	0011a154 	.word	0x0011a154

00114ce4 <WizFi250::join(WizFi250::WiFiMode)>:
  114ce4:	b510      	push	{r4, lr}
  114ce6:	2901      	cmp	r1, #1
  114ce8:	bf16      	itet	ne
  114cea:	2300      	movne	r3, #0
  114cec:	f880 10d0 	strbeq.w	r1, [r0, #208]	; 0xd0
  114cf0:	f880 30d0 	strbne.w	r3, [r0, #208]	; 0xd0
  114cf4:	b086      	sub	sp, #24
  114cf6:	f890 11c0 	ldrb.w	r1, [r0, #448]	; 0x1c0
  114cfa:	4604      	mov	r4, r0
  114cfc:	f000 f9a2 	bl	115044 <WizFi250::cmdWNET(bool)>
  114d00:	4603      	mov	r3, r0
  114d02:	b110      	cbz	r0, 114d0a <WizFi250::join(WizFi250::WiFiMode)+0x26>
  114d04:	f04f 30ff 	mov.w	r0, #4294967295
  114d08:	e038      	b.n	114d7c <WizFi250::join(WizFi250::WiFiMode)+0x98>
  114d0a:	2201      	movs	r2, #1
  114d0c:	9200      	str	r2, [sp, #0]
  114d0e:	f894 10d0 	ldrb.w	r1, [r4, #208]	; 0xd0
  114d12:	f104 02d2 	add.w	r2, r4, #210	; 0xd2
  114d16:	4620      	mov	r0, r4
  114d18:	f000 f970 	bl	114ffc <WizFi250::cmdWSET(WizFi250::WiFiMode, char const*, char const*, int)>
  114d1c:	2800      	cmp	r0, #0
  114d1e:	d1f1      	bne.n	114d04 <WizFi250::join(WizFi250::WiFiMode)+0x20>
  114d20:	f894 30d1 	ldrb.w	r3, [r4, #209]	; 0xd1
  114d24:	2b07      	cmp	r3, #7
  114d26:	d817      	bhi.n	114d58 <WizFi250::join(WizFi250::WiFiMode)+0x74>
  114d28:	e8df f003 	tbb	[pc, r3]
  114d2c:	0a080604 	.word	0x0a080604
  114d30:	12100e0c 	.word	0x12100e0c
  114d34:	4912      	ldr	r1, [pc, #72]	; (114d80 <WizFi250::join(WizFi250::WiFiMode)+0x9c>)
  114d36:	e00c      	b.n	114d52 <WizFi250::join(WizFi250::WiFiMode)+0x6e>
  114d38:	4912      	ldr	r1, [pc, #72]	; (114d84 <WizFi250::join(WizFi250::WiFiMode)+0xa0>)
  114d3a:	e00a      	b.n	114d52 <WizFi250::join(WizFi250::WiFiMode)+0x6e>
  114d3c:	4912      	ldr	r1, [pc, #72]	; (114d88 <WizFi250::join(WizFi250::WiFiMode)+0xa4>)
  114d3e:	e008      	b.n	114d52 <WizFi250::join(WizFi250::WiFiMode)+0x6e>
  114d40:	4912      	ldr	r1, [pc, #72]	; (114d8c <WizFi250::join(WizFi250::WiFiMode)+0xa8>)
  114d42:	e006      	b.n	114d52 <WizFi250::join(WizFi250::WiFiMode)+0x6e>
  114d44:	4912      	ldr	r1, [pc, #72]	; (114d90 <WizFi250::join(WizFi250::WiFiMode)+0xac>)
  114d46:	e004      	b.n	114d52 <WizFi250::join(WizFi250::WiFiMode)+0x6e>
  114d48:	4912      	ldr	r1, [pc, #72]	; (114d94 <WizFi250::join(WizFi250::WiFiMode)+0xb0>)
  114d4a:	e002      	b.n	114d52 <WizFi250::join(WizFi250::WiFiMode)+0x6e>
  114d4c:	4912      	ldr	r1, [pc, #72]	; (114d98 <WizFi250::join(WizFi250::WiFiMode)+0xb4>)
  114d4e:	e000      	b.n	114d52 <WizFi250::join(WizFi250::WiFiMode)+0x6e>
  114d50:	4912      	ldr	r1, [pc, #72]	; (114d9c <WizFi250::join(WizFi250::WiFiMode)+0xb8>)
  114d52:	a803      	add	r0, sp, #12
  114d54:	f7fc fd1f 	bl	111796 <strcpy>
  114d58:	ab03      	add	r3, sp, #12
  114d5a:	f104 02f5 	add.w	r2, r4, #245	; 0xf5
  114d5e:	f894 10d0 	ldrb.w	r1, [r4, #208]	; 0xd0
  114d62:	4620      	mov	r0, r4
  114d64:	f000 f992 	bl	11508c <WizFi250::cmdWSEC(WizFi250::WiFiMode, char const*, char const*)>
  114d68:	2800      	cmp	r0, #0
  114d6a:	d1cb      	bne.n	114d04 <WizFi250::join(WizFi250::WiFiMode)+0x20>
  114d6c:	4620      	mov	r0, r4
  114d6e:	f000 f9cd 	bl	11510c <WizFi250::cmdWJOIN()>
  114d72:	2800      	cmp	r0, #0
  114d74:	d1c6      	bne.n	114d04 <WizFi250::join(WizFi250::WiFiMode)+0x20>
  114d76:	2301      	movs	r3, #1
  114d78:	f884 31c9 	strb.w	r3, [r4, #457]	; 0x1c9
  114d7c:	b006      	add	sp, #24
  114d7e:	bd10      	pop	{r4, pc}
  114d80:	001164ed 	.word	0x001164ed
  114d84:	0011a16a 	.word	0x0011a16a
  114d88:	0011a16f 	.word	0x0011a16f
  114d8c:	0011a173 	.word	0x0011a173
  114d90:	0011a177 	.word	0x0011a177
  114d94:	0011a17e 	.word	0x0011a17e
  114d98:	0011a186 	.word	0x0011a186
  114d9c:	0011a18f 	.word	0x0011a18f

00114da0 <WizFi250::isAssociated()>:
  114da0:	f890 01c9 	ldrb.w	r0, [r0, #457]	; 0x1c9
  114da4:	4770      	bx	lr

00114da6 <WizFi250::setAddress(char const*)>:
  114da6:	b508      	push	{r3, lr}
  114da8:	2301      	movs	r3, #1
  114daa:	f880 31c0 	strb.w	r3, [r0, #448]	; 0x1c0
  114dae:	2220      	movs	r2, #32
  114db0:	f200 1099 	addw	r0, r0, #409	; 0x199
  114db4:	f7fc fd14 	bl	1117e0 <strncpy>
  114db8:	2000      	movs	r0, #0
  114dba:	bd08      	pop	{r3, pc}

00114dbc <WizFi250::setSsid(char const*)>:
  114dbc:	b508      	push	{r3, lr}
  114dbe:	2223      	movs	r2, #35	; 0x23
  114dc0:	30d2      	adds	r0, #210	; 0xd2
  114dc2:	f7fc fd0d 	bl	1117e0 <strncpy>
  114dc6:	2000      	movs	r0, #0
  114dc8:	bd08      	pop	{r3, pc}

00114dca <WizFi250::setSec(WizFi250::Security, char const*)>:
  114dca:	b538      	push	{r3, r4, r5, lr}
  114dcc:	4604      	mov	r4, r0
  114dce:	f880 10d1 	strb.w	r1, [r0, #209]	; 0xd1
  114dd2:	4610      	mov	r0, r2
  114dd4:	4615      	mov	r5, r2
  114dd6:	f7fc fce6 	bl	1117a6 <strlen>
  114dda:	4629      	mov	r1, r5
  114ddc:	4602      	mov	r2, r0
  114dde:	f104 00f5 	add.w	r0, r4, #245	; 0xf5
  114de2:	f7fc fcfd 	bl	1117e0 <strncpy>
  114de6:	2000      	movs	r0, #0
  114de8:	bd38      	pop	{r3, r4, r5, pc}

00114dea <WizFi250::getIPAddress()>:
  114dea:	f200 1037 	addw	r0, r0, #311	; 0x137
  114dee:	4770      	bx	lr

00114df0 <WizFi250::getMACAddress()>:
  114df0:	f200 1077 	addw	r0, r0, #375	; 0x177
  114df4:	4770      	bx	lr
	...

00114df8 <WizFi250::clearBuffer()>:
  114df8:	b538      	push	{r3, r4, r5, lr}
  114dfa:	f04f 31ff 	mov.w	r1, #4294967295
  114dfe:	4604      	mov	r4, r0
  114e00:	4808      	ldr	r0, [pc, #32]	; (114e24 <WizFi250::clearBuffer()+0x2c>)
  114e02:	f7f8 fe72 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  114e06:	f104 052c 	add.w	r5, r4, #44	; 0x2c
  114e0a:	4628      	mov	r0, r5
  114e0c:	f7f7 fb43 	bl	10c496 <mbed::InterruptIn::read()>
  114e10:	b118      	cbz	r0, 114e1a <WizFi250::clearBuffer()+0x22>
  114e12:	4620      	mov	r0, r4
  114e14:	f000 fb60 	bl	1154d8 <WizFi250::getSpi()>
  114e18:	e7f7      	b.n	114e0a <WizFi250::clearBuffer()+0x12>
  114e1a:	4802      	ldr	r0, [pc, #8]	; (114e24 <WizFi250::clearBuffer()+0x2c>)
  114e1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  114e20:	f7f8 be66 	b.w	10daf0 <rtos::Mutex::unlock()>
  114e24:	3fff44ec 	.word	0x3fff44ec

00114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>:
  114e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  114e2c:	b088      	sub	sp, #32
  114e2e:	4604      	mov	r4, r0
  114e30:	4668      	mov	r0, sp
  114e32:	460f      	mov	r7, r1
  114e34:	4690      	mov	r8, r2
  114e36:	461e      	mov	r6, r3
  114e38:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  114e3a:	f7f7 fe36 	bl	10caaa <mbed::Timer::Timer()>
  114e3e:	f04f 31ff 	mov.w	r1, #4294967295
  114e42:	483c      	ldr	r0, [pc, #240]	; (114f34 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x10c>)
  114e44:	f7f8 fe51 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  114e48:	f643 025c 	movw	r2, #14428	; 0x385c
  114e4c:	2300      	movs	r3, #0
  114e4e:	f884 31cd 	strb.w	r3, [r4, #461]	; 0x1cd
  114e52:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
  114e56:	f884 31ce 	strb.w	r3, [r4, #462]	; 0x1ce
  114e5a:	4638      	mov	r0, r7
  114e5c:	f884 31cf 	strb.w	r3, [r4, #463]	; 0x1cf
  114e60:	f884 81cf 	strb.w	r8, [r4, #463]	; 0x1cf
  114e64:	50a3      	str	r3, [r4, r2]
  114e66:	f7fc fc9e 	bl	1117a6 <strlen>
  114e6a:	4639      	mov	r1, r7
  114e6c:	4602      	mov	r2, r0
  114e6e:	4620      	mov	r0, r4
  114e70:	f000 fb5c 	bl	11552c <WizFi250::putSpi(char const*, int)>
  114e74:	2d01      	cmp	r5, #1
  114e76:	d101      	bne.n	114e7c <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x54>
  114e78:	210d      	movs	r1, #13
  114e7a:	e006      	b.n	114e8a <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x62>
  114e7c:	2d02      	cmp	r5, #2
  114e7e:	d107      	bne.n	114e90 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x68>
  114e80:	210d      	movs	r1, #13
  114e82:	4620      	mov	r0, r4
  114e84:	f000 fb74 	bl	115570 <WizFi250::putSpi(char)>
  114e88:	210a      	movs	r1, #10
  114e8a:	4620      	mov	r0, r4
  114e8c:	f000 fb70 	bl	115570 <WizFi250::putSpi(char)>
  114e90:	2001      	movs	r0, #1
  114e92:	f7f8 fd3f 	bl	10d914 <wait_ms>
  114e96:	4827      	ldr	r0, [pc, #156]	; (114f34 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x10c>)
  114e98:	f7f8 fe2a 	bl	10daf0 <rtos::Mutex::unlock()>
  114e9c:	b346      	cbz	r6, 114ef0 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0xc8>
  114e9e:	4668      	mov	r0, sp
  114ea0:	f7f7 fd9d 	bl	10c9de <mbed::Timer::start()>
  114ea4:	f504 5561 	add.w	r5, r4, #14400	; 0x3840
  114ea8:	351c      	adds	r5, #28
  114eaa:	682b      	ldr	r3, [r5, #0]
  114eac:	2b01      	cmp	r3, #1
  114eae:	d116      	bne.n	114ede <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0xb6>
  114eb0:	f04f 31ff 	mov.w	r1, #4294967295
  114eb4:	481f      	ldr	r0, [pc, #124]	; (114f34 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x10c>)
  114eb6:	f7f8 fe18 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  114eba:	f104 072c 	add.w	r7, r4, #44	; 0x2c
  114ebe:	4638      	mov	r0, r7
  114ec0:	f7f7 fae9 	bl	10c496 <mbed::InterruptIn::read()>
  114ec4:	b138      	cbz	r0, 114ed6 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0xae>
  114ec6:	4620      	mov	r0, r4
  114ec8:	f000 fb06 	bl	1154d8 <WizFi250::getSpi()>
  114ecc:	4601      	mov	r1, r0
  114ece:	4620      	mov	r0, r4
  114ed0:	f000 fd6e 	bl	1159b0 <WizFi250::recvData(char)>
  114ed4:	e7f3      	b.n	114ebe <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x96>
  114ed6:	6028      	str	r0, [r5, #0]
  114ed8:	4816      	ldr	r0, [pc, #88]	; (114f34 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x10c>)
  114eda:	f7f8 fe09 	bl	10daf0 <rtos::Mutex::unlock()>
  114ede:	f894 31cd 	ldrb.w	r3, [r4, #461]	; 0x1cd
  114ee2:	b14b      	cbz	r3, 114ef8 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0xd0>
  114ee4:	f894 31cf 	ldrb.w	r3, [r4, #463]	; 0x1cf
  114ee8:	b933      	cbnz	r3, 114ef8 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0xd0>
  114eea:	4668      	mov	r0, sp
  114eec:	f7f7 fda0 	bl	10ca30 <mbed::Timer::stop()>
  114ef0:	2000      	movs	r0, #0
  114ef2:	f884 01cf 	strb.w	r0, [r4, #463]	; 0x1cf
  114ef6:	e01a      	b.n	114f2e <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x106>
  114ef8:	f894 31ce 	ldrb.w	r3, [r4, #462]	; 0x1ce
  114efc:	b923      	cbnz	r3, 114f08 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0xe0>
  114efe:	4668      	mov	r0, sp
  114f00:	f7f7 fdb9 	bl	10ca76 <mbed::Timer::read_ms()>
  114f04:	4286      	cmp	r6, r0
  114f06:	da0e      	bge.n	114f26 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0xfe>
  114f08:	2300      	movs	r3, #0
  114f0a:	f884 31cd 	strb.w	r3, [r4, #461]	; 0x1cd
  114f0e:	4668      	mov	r0, sp
  114f10:	f884 31ce 	strb.w	r3, [r4, #462]	; 0x1ce
  114f14:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
  114f18:	f884 31cf 	strb.w	r3, [r4, #463]	; 0x1cf
  114f1c:	f7f7 fd88 	bl	10ca30 <mbed::Timer::stop()>
  114f20:	f04f 30ff 	mov.w	r0, #4294967295
  114f24:	e003      	b.n	114f2e <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x106>
  114f26:	2001      	movs	r0, #1
  114f28:	f7f8 fed1 	bl	10dcce <rtos::Thread::wait(unsigned long)>
  114f2c:	e7bd      	b.n	114eaa <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)+0x82>
  114f2e:	b008      	add	sp, #32
  114f30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  114f34:	3fff44ec 	.word	0x3fff44ec

00114f38 <WizFi250::acceptConnection()>:
  114f38:	b510      	push	{r4, lr}
  114f3a:	4604      	mov	r4, r0
  114f3c:	f500 5361 	add.w	r3, r0, #14400	; 0x3840
  114f40:	331c      	adds	r3, #28
  114f42:	681a      	ldr	r2, [r3, #0]
  114f44:	2a01      	cmp	r2, #1
  114f46:	d1fc      	bne.n	114f42 <WizFi250::acceptConnection()+0xa>
  114f48:	f04f 31ff 	mov.w	r1, #4294967295
  114f4c:	4809      	ldr	r0, [pc, #36]	; (114f74 <WizFi250::acceptConnection()+0x3c>)
  114f4e:	f7f8 fdcc 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  114f52:	f8d4 31d0 	ldr.w	r3, [r4, #464]	; 0x1d0
  114f56:	3301      	adds	r3, #1
  114f58:	d107      	bne.n	114f6a <WizFi250::acceptConnection()+0x32>
  114f5a:	4620      	mov	r0, r4
  114f5c:	f000 fabc 	bl	1154d8 <WizFi250::getSpi()>
  114f60:	4601      	mov	r1, r0
  114f62:	4620      	mov	r0, r4
  114f64:	f000 fd24 	bl	1159b0 <WizFi250::recvData(char)>
  114f68:	e7f3      	b.n	114f52 <WizFi250::acceptConnection()+0x1a>
  114f6a:	4802      	ldr	r0, [pc, #8]	; (114f74 <WizFi250::acceptConnection()+0x3c>)
  114f6c:	f7f8 fdc0 	bl	10daf0 <rtos::Mutex::unlock()>
  114f70:	2000      	movs	r0, #0
  114f72:	bd10      	pop	{r4, pc}
  114f74:	3fff44ec 	.word	0x3fff44ec

00114f78 <WizFi250::cmdMODE()>:
  114f78:	b538      	push	{r3, r4, r5, lr}
  114f7a:	4604      	mov	r4, r0
  114f7c:	4d0b      	ldr	r5, [pc, #44]	; (114fac <WizFi250::cmdMODE()+0x34>)
  114f7e:	f04f 31ff 	mov.w	r1, #4294967295
  114f82:	4628      	mov	r0, r5
  114f84:	f7f8 fdb1 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  114f88:	2203      	movs	r2, #3
  114f8a:	4909      	ldr	r1, [pc, #36]	; (114fb0 <WizFi250::cmdMODE()+0x38>)
  114f8c:	4620      	mov	r0, r4
  114f8e:	f000 facd 	bl	11552c <WizFi250::putSpi(char const*, int)>
  114f92:	4628      	mov	r0, r5
  114f94:	f7f8 fdac 	bl	10daf0 <rtos::Mutex::unlock()>
  114f98:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  114f9c:	f7f8 fcae 	bl	10d8fc <wait>
  114fa0:	4620      	mov	r0, r4
  114fa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  114fa6:	f7ff bf27 	b.w	114df8 <WizFi250::clearBuffer()>
  114faa:	bf00      	nop
  114fac:	3fff44ec 	.word	0x3fff44ec
  114fb0:	0011a194 	.word	0x0011a194

00114fb4 <WizFi250::cmdAT()>:
  114fb4:	b507      	push	{r0, r1, r2, lr}
  114fb6:	2302      	movs	r3, #2
  114fb8:	9300      	str	r3, [sp, #0]
  114fba:	2200      	movs	r2, #0
  114fbc:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  114fc0:	4902      	ldr	r1, [pc, #8]	; (114fcc <WizFi250::cmdAT()+0x18>)
  114fc2:	f7ff ff31 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  114fc6:	b003      	add	sp, #12
  114fc8:	f85d fb04 	ldr.w	pc, [sp], #4
  114fcc:	0011a1a2 	.word	0x0011a1a2

00114fd0 <WizFi250::cmdMECHO(bool)>:
  114fd0:	b510      	push	{r4, lr}
  114fd2:	4604      	mov	r4, r0
  114fd4:	b0a2      	sub	sp, #136	; 0x88
  114fd6:	460a      	mov	r2, r1
  114fd8:	a802      	add	r0, sp, #8
  114fda:	4907      	ldr	r1, [pc, #28]	; (114ff8 <WizFi250::cmdMECHO(bool)+0x28>)
  114fdc:	f7fc fb3e 	bl	11165c <siprintf>
  114fe0:	2302      	movs	r3, #2
  114fe2:	9300      	str	r3, [sp, #0]
  114fe4:	2200      	movs	r2, #0
  114fe6:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  114fea:	a902      	add	r1, sp, #8
  114fec:	4620      	mov	r0, r4
  114fee:	f7ff ff1b 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  114ff2:	b022      	add	sp, #136	; 0x88
  114ff4:	bd10      	pop	{r4, pc}
  114ff6:	bf00      	nop
  114ff8:	0011a1a5 	.word	0x0011a1a5

00114ffc <WizFi250::cmdWSET(WizFi250::WiFiMode, char const*, char const*, int)>:
  114ffc:	b510      	push	{r4, lr}
  114ffe:	4604      	mov	r4, r0
  115000:	b0a2      	sub	sp, #136	; 0x88
  115002:	b933      	cbnz	r3, 115012 <WizFi250::cmdWSET(WizFi250::WiFiMode, char const*, char const*, int)+0x16>
  115004:	4613      	mov	r3, r2
  115006:	a802      	add	r0, sp, #8
  115008:	460a      	mov	r2, r1
  11500a:	490c      	ldr	r1, [pc, #48]	; (11503c <WizFi250::cmdWSET(WizFi250::WiFiMode, char const*, char const*, int)+0x40>)
  11500c:	f7fc fb26 	bl	11165c <siprintf>
  115010:	e008      	b.n	115024 <WizFi250::cmdWSET(WizFi250::WiFiMode, char const*, char const*, int)+0x28>
  115012:	9824      	ldr	r0, [sp, #144]	; 0x90
  115014:	9300      	str	r3, [sp, #0]
  115016:	9001      	str	r0, [sp, #4]
  115018:	4613      	mov	r3, r2
  11501a:	a802      	add	r0, sp, #8
  11501c:	460a      	mov	r2, r1
  11501e:	4908      	ldr	r1, [pc, #32]	; (115040 <WizFi250::cmdWSET(WizFi250::WiFiMode, char const*, char const*, int)+0x44>)
  115020:	f7fc fb1c 	bl	11165c <siprintf>
  115024:	2302      	movs	r3, #2
  115026:	9300      	str	r3, [sp, #0]
  115028:	2200      	movs	r2, #0
  11502a:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  11502e:	a902      	add	r1, sp, #8
  115030:	4620      	mov	r0, r4
  115032:	f7ff fef9 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  115036:	b022      	add	sp, #136	; 0x88
  115038:	bd10      	pop	{r4, pc}
  11503a:	bf00      	nop
  11503c:	0011a1da 	.word	0x0011a1da
  115040:	0011a1e8 	.word	0x0011a1e8

00115044 <WizFi250::cmdWNET(bool)>:
  115044:	b510      	push	{r4, lr}
  115046:	4604      	mov	r4, r0
  115048:	b0a2      	sub	sp, #136	; 0x88
  11504a:	b121      	cbz	r1, 115056 <WizFi250::cmdWNET(bool)+0x12>
  11504c:	490d      	ldr	r1, [pc, #52]	; (115084 <WizFi250::cmdWNET(bool)+0x40>)
  11504e:	a802      	add	r0, sp, #8
  115050:	f7fc fba1 	bl	111796 <strcpy>
  115054:	e00a      	b.n	11506c <WizFi250::cmdWNET(bool)+0x28>
  115056:	f200 1357 	addw	r3, r0, #343	; 0x157
  11505a:	9300      	str	r3, [sp, #0]
  11505c:	f200 1237 	addw	r2, r0, #311	; 0x137
  115060:	f200 1347 	addw	r3, r0, #327	; 0x147
  115064:	4908      	ldr	r1, [pc, #32]	; (115088 <WizFi250::cmdWNET(bool)+0x44>)
  115066:	a802      	add	r0, sp, #8
  115068:	f7fc faf8 	bl	11165c <siprintf>
  11506c:	2302      	movs	r3, #2
  11506e:	9300      	str	r3, [sp, #0]
  115070:	2200      	movs	r2, #0
  115072:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  115076:	a902      	add	r1, sp, #8
  115078:	4620      	mov	r0, r4
  11507a:	f7ff fed5 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  11507e:	b022      	add	sp, #136	; 0x88
  115080:	bd10      	pop	{r4, pc}
  115082:	bf00      	nop
  115084:	0011a207 	.word	0x0011a207
  115088:	0011a211 	.word	0x0011a211

0011508c <WizFi250::cmdWSEC(WizFi250::WiFiMode, char const*, char const*)>:
  11508c:	b510      	push	{r4, lr}
  11508e:	4604      	mov	r4, r0
  115090:	b0a2      	sub	sp, #136	; 0x88
  115092:	b933      	cbnz	r3, 1150a2 <WizFi250::cmdWSEC(WizFi250::WiFiMode, char const*, char const*)+0x16>
  115094:	4613      	mov	r3, r2
  115096:	a802      	add	r0, sp, #8
  115098:	460a      	mov	r2, r1
  11509a:	490a      	ldr	r1, [pc, #40]	; (1150c4 <WizFi250::cmdWSEC(WizFi250::WiFiMode, char const*, char const*)+0x38>)
  11509c:	f7fc fade 	bl	11165c <siprintf>
  1150a0:	e005      	b.n	1150ae <WizFi250::cmdWSEC(WizFi250::WiFiMode, char const*, char const*)+0x22>
  1150a2:	9200      	str	r2, [sp, #0]
  1150a4:	a802      	add	r0, sp, #8
  1150a6:	460a      	mov	r2, r1
  1150a8:	4907      	ldr	r1, [pc, #28]	; (1150c8 <WizFi250::cmdWSEC(WizFi250::WiFiMode, char const*, char const*)+0x3c>)
  1150aa:	f7fc fad7 	bl	11165c <siprintf>
  1150ae:	2302      	movs	r3, #2
  1150b0:	9300      	str	r3, [sp, #0]
  1150b2:	2200      	movs	r2, #0
  1150b4:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  1150b8:	a902      	add	r1, sp, #8
  1150ba:	4620      	mov	r0, r4
  1150bc:	f7ff feb4 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  1150c0:	b022      	add	sp, #136	; 0x88
  1150c2:	bd10      	pop	{r4, pc}
  1150c4:	0011a224 	.word	0x0011a224
  1150c8:	0011a233 	.word	0x0011a233

001150cc <WizFi250::cmdWLEAVE()>:
  1150cc:	b507      	push	{r0, r1, r2, lr}
  1150ce:	2302      	movs	r3, #2
  1150d0:	9300      	str	r3, [sp, #0]
  1150d2:	2200      	movs	r2, #0
  1150d4:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  1150d8:	4902      	ldr	r1, [pc, #8]	; (1150e4 <WizFi250::cmdWLEAVE()+0x18>)
  1150da:	f7ff fea5 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  1150de:	b003      	add	sp, #12
  1150e0:	f85d fb04 	ldr.w	pc, [sp], #4
  1150e4:	0011a244 	.word	0x0011a244

001150e8 <WizFi250::cmdWSTATUS()>:
  1150e8:	b507      	push	{r0, r1, r2, lr}
  1150ea:	2302      	movs	r3, #2
  1150ec:	9300      	str	r3, [sp, #0]
  1150ee:	2207      	movs	r2, #7
  1150f0:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  1150f4:	4904      	ldr	r1, [pc, #16]	; (115108 <WizFi250::cmdWSTATUS()+0x20>)
  1150f6:	f7ff fe97 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  1150fa:	3000      	adds	r0, #0
  1150fc:	bf18      	it	ne
  1150fe:	2001      	movne	r0, #1
  115100:	4240      	negs	r0, r0
  115102:	b003      	add	sp, #12
  115104:	f85d fb04 	ldr.w	pc, [sp], #4
  115108:	0011a24e 	.word	0x0011a24e

0011510c <WizFi250::cmdWJOIN()>:
  11510c:	b513      	push	{r0, r1, r4, lr}
  11510e:	2302      	movs	r3, #2
  115110:	9300      	str	r3, [sp, #0]
  115112:	2200      	movs	r2, #0
  115114:	f644 6320 	movw	r3, #20000	; 0x4e20
  115118:	4908      	ldr	r1, [pc, #32]	; (11513c <WizFi250::cmdWJOIN()+0x30>)
  11511a:	4604      	mov	r4, r0
  11511c:	f7ff fe84 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  115120:	b938      	cbnz	r0, 115132 <WizFi250::cmdWJOIN()+0x26>
  115122:	4620      	mov	r0, r4
  115124:	f7ff ffe0 	bl	1150e8 <WizFi250::cmdWSTATUS()>
  115128:	3000      	adds	r0, #0
  11512a:	bf18      	it	ne
  11512c:	2001      	movne	r0, #1
  11512e:	4240      	negs	r0, r0
  115130:	e001      	b.n	115136 <WizFi250::cmdWJOIN()+0x2a>
  115132:	f04f 30ff 	mov.w	r0, #4294967295
  115136:	b002      	add	sp, #8
  115138:	bd10      	pop	{r4, pc}
  11513a:	bf00      	nop
  11513c:	0011a259 	.word	0x0011a259

00115140 <WizFi250::cmdSCON(char const*, char const*, int, char const*)>:
  115140:	b510      	push	{r4, lr}
  115142:	4604      	mov	r4, r0
  115144:	b0a2      	sub	sp, #136	; 0x88
  115146:	9824      	ldr	r0, [sp, #144]	; 0x90
  115148:	9300      	str	r3, [sp, #0]
  11514a:	9001      	str	r0, [sp, #4]
  11514c:	4613      	mov	r3, r2
  11514e:	a802      	add	r0, sp, #8
  115150:	460a      	mov	r2, r1
  115152:	4907      	ldr	r1, [pc, #28]	; (115170 <WizFi250::cmdSCON(char const*, char const*, int, char const*)+0x30>)
  115154:	f7fc fa82 	bl	11165c <siprintf>
  115158:	2302      	movs	r3, #2
  11515a:	9300      	str	r3, [sp, #0]
  11515c:	2200      	movs	r2, #0
  11515e:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  115162:	a902      	add	r1, sp, #8
  115164:	4620      	mov	r0, r4
  115166:	f7ff fe5f 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  11516a:	b022      	add	sp, #136	; 0x88
  11516c:	bd10      	pop	{r4, pc}
  11516e:	bf00      	nop
  115170:	0011a262 	.word	0x0011a262

00115174 <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)>:
  115174:	b570      	push	{r4, r5, r6, lr}
  115176:	b0a4      	sub	sp, #144	; 0x90
  115178:	4d10      	ldr	r5, [pc, #64]	; (1151bc <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)+0x48>)
  11517a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
  11517c:	4606      	mov	r6, r0
  11517e:	9503      	str	r5, [sp, #12]
  115180:	9828      	ldr	r0, [sp, #160]	; 0xa0
  115182:	b93c      	cbnz	r4, 115194 <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)+0x20>
  115184:	4c0e      	ldr	r4, [pc, #56]	; (1151c0 <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)+0x4c>)
  115186:	9300      	str	r3, [sp, #0]
  115188:	9402      	str	r4, [sp, #8]
  11518a:	4613      	mov	r3, r2
  11518c:	9001      	str	r0, [sp, #4]
  11518e:	460a      	mov	r2, r1
  115190:	490c      	ldr	r1, [pc, #48]	; (1151c4 <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)+0x50>)
  115192:	e005      	b.n	1151a0 <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)+0x2c>
  115194:	9300      	str	r3, [sp, #0]
  115196:	4613      	mov	r3, r2
  115198:	460a      	mov	r2, r1
  11519a:	490b      	ldr	r1, [pc, #44]	; (1151c8 <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)+0x54>)
  11519c:	9402      	str	r4, [sp, #8]
  11519e:	9001      	str	r0, [sp, #4]
  1151a0:	a804      	add	r0, sp, #16
  1151a2:	f7fc fa5b 	bl	11165c <siprintf>
  1151a6:	2302      	movs	r3, #2
  1151a8:	9300      	str	r3, [sp, #0]
  1151aa:	2203      	movs	r2, #3
  1151ac:	f643 2398 	movw	r3, #15000	; 0x3a98
  1151b0:	a904      	add	r1, sp, #16
  1151b2:	4630      	mov	r0, r6
  1151b4:	f7ff fe38 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  1151b8:	b024      	add	sp, #144	; 0x90
  1151ba:	bd70      	pop	{r4, r5, r6, pc}
  1151bc:	00118312 	.word	0x00118312
  1151c0:	001164ed 	.word	0x001164ed
  1151c4:	0011a278 	.word	0x0011a278
  1151c8:	0011a292 	.word	0x0011a292

001151cc <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)>:
  1151cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  1151d0:	4616      	mov	r6, r2
  1151d2:	4604      	mov	r4, r0
  1151d4:	b0ad      	sub	sp, #180	; 0xb4
  1151d6:	a804      	add	r0, sp, #16
  1151d8:	461d      	mov	r5, r3
  1151da:	4688      	mov	r8, r1
  1151dc:	f8dd 90d0 	ldr.w	r9, [sp, #208]	; 0xd0
  1151e0:	9f36      	ldr	r7, [sp, #216]	; 0xd8
  1151e2:	f7f7 fc62 	bl	10caaa <mbed::Timer::Timer()>
  1151e6:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  1151ea:	fb03 4306 	mla	r3, r3, r6, r4
  1151ee:	f893 27dd 	ldrb.w	r2, [r3, #2013]	; 0x7dd
  1151f2:	b13a      	cbz	r2, 115204 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x38>
  1151f4:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  1151f8:	fb03 4306 	mla	r3, r3, r6, r4
  1151fc:	f893 37dd 	ldrb.w	r3, [r3, #2013]	; 0x7dd
  115200:	b15b      	cbz	r3, 11521a <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x4e>
  115202:	e027      	b.n	115254 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x88>
  115204:	2301      	movs	r3, #1
  115206:	9300      	str	r3, [sp, #0]
  115208:	4947      	ldr	r1, [pc, #284]	; (115328 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x15c>)
  11520a:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  11520e:	4620      	mov	r0, r4
  115210:	f7ff fe0a 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  115214:	2800      	cmp	r0, #0
  115216:	d0ed      	beq.n	1151f4 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x28>
  115218:	e081      	b.n	11531e <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x152>
  11521a:	f1b9 0f00 	cmp.w	r9, #0
  11521e:	d133      	bne.n	115288 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0xbc>
  115220:	f64a 73c8 	movw	r3, #45000	; 0xafc8
  115224:	4632      	mov	r2, r6
  115226:	9300      	str	r3, [sp, #0]
  115228:	4940      	ldr	r1, [pc, #256]	; (11532c <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x160>)
  11522a:	462b      	mov	r3, r5
  11522c:	a80c      	add	r0, sp, #48	; 0x30
  11522e:	f7fc fa15 	bl	11165c <siprintf>
  115232:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115236:	fb03 4306 	mla	r3, r3, r6, r4
  11523a:	f8c3 57f4 	str.w	r5, [r3, #2036]	; 0x7f4
  11523e:	2301      	movs	r3, #1
  115240:	9300      	str	r3, [sp, #0]
  115242:	2204      	movs	r2, #4
  115244:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  115248:	a90c      	add	r1, sp, #48	; 0x30
  11524a:	4620      	mov	r0, r4
  11524c:	f7ff fdec 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  115250:	2800      	cmp	r0, #0
  115252:	d164      	bne.n	11531e <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x152>
  115254:	f04f 31ff 	mov.w	r1, #4294967295
  115258:	4835      	ldr	r0, [pc, #212]	; (115330 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x164>)
  11525a:	f7f8 fc46 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  11525e:	f643 035c 	movw	r3, #14428	; 0x385c
  115262:	2200      	movs	r2, #0
  115264:	50e2      	str	r2, [r4, r3]
  115266:	4641      	mov	r1, r8
  115268:	462a      	mov	r2, r5
  11526a:	4620      	mov	r0, r4
  11526c:	f000 f95e 	bl	11552c <WizFi250::putSpi(char const*, int)>
  115270:	4605      	mov	r5, r0
  115272:	482f      	ldr	r0, [pc, #188]	; (115330 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x164>)
  115274:	f7f8 fc3c 	bl	10daf0 <rtos::Mutex::unlock()>
  115278:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  11527c:	fb03 4606 	mla	r6, r3, r6, r4
  115280:	f896 37dd 	ldrb.w	r3, [r6, #2013]	; 0x7dd
  115284:	b153      	cbz	r3, 11529c <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0xd0>
  115286:	e048      	b.n	11531a <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x14e>
  115288:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  11528a:	9501      	str	r5, [sp, #4]
  11528c:	9300      	str	r3, [sp, #0]
  11528e:	4632      	mov	r2, r6
  115290:	464b      	mov	r3, r9
  115292:	4928      	ldr	r1, [pc, #160]	; (115334 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x168>)
  115294:	a80c      	add	r0, sp, #48	; 0x30
  115296:	f7fc f9e1 	bl	11165c <siprintf>
  11529a:	e7ca      	b.n	115232 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x66>
  11529c:	2f00      	cmp	r7, #0
  11529e:	d03c      	beq.n	11531a <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x14e>
  1152a0:	a804      	add	r0, sp, #16
  1152a2:	f7f7 fb9c 	bl	10c9de <mbed::Timer::start()>
  1152a6:	f504 5661 	add.w	r6, r4, #14400	; 0x3840
  1152aa:	361c      	adds	r6, #28
  1152ac:	6833      	ldr	r3, [r6, #0]
  1152ae:	2b01      	cmp	r3, #1
  1152b0:	d121      	bne.n	1152f6 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x12a>
  1152b2:	f8df 8084 	ldr.w	r8, [pc, #132]	; 115338 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x16c>
  1152b6:	f04f 31ff 	mov.w	r1, #4294967295
  1152ba:	481d      	ldr	r0, [pc, #116]	; (115330 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x164>)
  1152bc:	f7f8 fc15 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  1152c0:	2130      	movs	r1, #48	; 0x30
  1152c2:	f8d8 0000 	ldr.w	r0, [r8]
  1152c6:	f7f8 fcdc 	bl	10dc82 <rtos::Thread::set_priority(osPriority_t)>
  1152ca:	f104 092c 	add.w	r9, r4, #44	; 0x2c
  1152ce:	4648      	mov	r0, r9
  1152d0:	f7f7 f8e1 	bl	10c496 <mbed::InterruptIn::read()>
  1152d4:	b130      	cbz	r0, 1152e4 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x118>
  1152d6:	2208      	movs	r2, #8
  1152d8:	eb0d 0102 	add.w	r1, sp, r2
  1152dc:	4620      	mov	r0, r4
  1152de:	f000 f8bf 	bl	115460 <WizFi250::getSpi(char*, int)>
  1152e2:	e7f4      	b.n	1152ce <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x102>
  1152e4:	6030      	str	r0, [r6, #0]
  1152e6:	4812      	ldr	r0, [pc, #72]	; (115330 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x164>)
  1152e8:	f7f8 fc02 	bl	10daf0 <rtos::Mutex::unlock()>
  1152ec:	2118      	movs	r1, #24
  1152ee:	f8d8 0000 	ldr.w	r0, [r8]
  1152f2:	f7f8 fcc6 	bl	10dc82 <rtos::Thread::set_priority(osPriority_t)>
  1152f6:	f894 31cd 	ldrb.w	r3, [r4, #461]	; 0x1cd
  1152fa:	b95b      	cbnz	r3, 115314 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x148>
  1152fc:	f894 31ce 	ldrb.w	r3, [r4, #462]	; 0x1ce
  115300:	b96b      	cbnz	r3, 11531e <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x152>
  115302:	a804      	add	r0, sp, #16
  115304:	f7f7 fbb7 	bl	10ca76 <mbed::Timer::read_ms()>
  115308:	4287      	cmp	r7, r0
  11530a:	db08      	blt.n	11531e <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x152>
  11530c:	2001      	movs	r0, #1
  11530e:	f7f8 fcde 	bl	10dcce <rtos::Thread::wait(unsigned long)>
  115312:	e7cb      	b.n	1152ac <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0xe0>
  115314:	a804      	add	r0, sp, #16
  115316:	f7f7 fb8b 	bl	10ca30 <mbed::Timer::stop()>
  11531a:	4628      	mov	r0, r5
  11531c:	e001      	b.n	115322 <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)+0x156>
  11531e:	f04f 30ff 	mov.w	r0, #4294967295
  115322:	b02d      	add	sp, #180	; 0xb4
  115324:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  115328:	0011a2ac 	.word	0x0011a2ac
  11532c:	0011a2bf 	.word	0x0011a2bf
  115330:	3fff44ec 	.word	0x3fff44ec
  115334:	0011a2d3 	.word	0x0011a2d3
  115338:	3fff44dc 	.word	0x3fff44dc

0011533c <WizFi250::cmdCLOSE(int)>:
  11533c:	b530      	push	{r4, r5, lr}
  11533e:	4604      	mov	r4, r0
  115340:	460d      	mov	r5, r1
  115342:	b0a3      	sub	sp, #140	; 0x8c
  115344:	f7ff fd58 	bl	114df8 <WizFi250::clearBuffer()>
  115348:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  11534c:	fb03 4305 	mla	r3, r3, r5, r4
  115350:	f893 37dd 	ldrb.w	r3, [r3, #2013]	; 0x7dd
  115354:	2b01      	cmp	r3, #1
  115356:	d102      	bne.n	11535e <WizFi250::cmdCLOSE(int)+0x22>
  115358:	4620      	mov	r0, r4
  11535a:	f7ff fe0d 	bl	114f78 <WizFi250::cmdMODE()>
  11535e:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  115362:	f7f8 facb 	bl	10d8fc <wait>
  115366:	462a      	mov	r2, r5
  115368:	4907      	ldr	r1, [pc, #28]	; (115388 <WizFi250::cmdCLOSE(int)+0x4c>)
  11536a:	a802      	add	r0, sp, #8
  11536c:	f7fc f976 	bl	11165c <siprintf>
  115370:	2302      	movs	r3, #2
  115372:	9300      	str	r3, [sp, #0]
  115374:	2200      	movs	r2, #0
  115376:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  11537a:	a902      	add	r1, sp, #8
  11537c:	4620      	mov	r0, r4
  11537e:	f7ff fd53 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  115382:	b023      	add	sp, #140	; 0x8c
  115384:	bd30      	pop	{r4, r5, pc}
  115386:	bf00      	nop
  115388:	0011a2e8 	.word	0x0011a2e8

0011538c <WizFi250::cmdFDNS(char const*)>:
  11538c:	b510      	push	{r4, lr}
  11538e:	4604      	mov	r4, r0
  115390:	b0a2      	sub	sp, #136	; 0x88
  115392:	460a      	mov	r2, r1
  115394:	a802      	add	r0, sp, #8
  115396:	4907      	ldr	r1, [pc, #28]	; (1153b4 <WizFi250::cmdFDNS(char const*)+0x28>)
  115398:	f7fc f960 	bl	11165c <siprintf>
  11539c:	2302      	movs	r3, #2
  11539e:	9300      	str	r3, [sp, #0]
  1153a0:	2205      	movs	r2, #5
  1153a2:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  1153a6:	a902      	add	r1, sp, #8
  1153a8:	4620      	mov	r0, r4
  1153aa:	f7ff fd3d 	bl	114e28 <WizFi250::sendCommand(char const*, WizFi250::Response, int, int)>
  1153ae:	b022      	add	sp, #136	; 0x88
  1153b0:	bd10      	pop	{r4, pc}
  1153b2:	bf00      	nop
  1153b4:	0011a2f4 	.word	0x0011a2f4

001153b8 <WizFi250::isrSpi()>:
  1153b8:	f643 035c 	movw	r3, #14428	; 0x385c
  1153bc:	2201      	movs	r2, #1
  1153be:	50c2      	str	r2, [r0, r3]
  1153c0:	4770      	bx	lr
	...

001153c4 <WizFi250::process_esc_code(char*, unsigned int*)>:
  1153c4:	b570      	push	{r4, r5, r6, lr}
  1153c6:	4605      	mov	r5, r0
  1153c8:	2000      	movs	r0, #0
  1153ca:	6010      	str	r0, [r2, #0]
  1153cc:	780b      	ldrb	r3, [r1, #0]
  1153ce:	460c      	mov	r4, r1
  1153d0:	2bf0      	cmp	r3, #240	; 0xf0
  1153d2:	d03f      	beq.n	115454 <WizFi250::process_esc_code(char*, unsigned int*)+0x90>
  1153d4:	2bf1      	cmp	r3, #241	; 0xf1
  1153d6:	4920      	ldr	r1, [pc, #128]	; (115458 <WizFi250::process_esc_code(char*, unsigned int*)+0x94>)
  1153d8:	d102      	bne.n	1153e0 <WizFi250::process_esc_code(char*, unsigned int*)+0x1c>
  1153da:	2301      	movs	r3, #1
  1153dc:	700b      	strb	r3, [r1, #0]
  1153de:	bd70      	pop	{r4, r5, r6, pc}
  1153e0:	780e      	ldrb	r6, [r1, #0]
  1153e2:	2e01      	cmp	r6, #1
  1153e4:	d134      	bne.n	115450 <WizFi250::process_esc_code(char*, unsigned int*)+0x8c>
  1153e6:	7008      	strb	r0, [r1, #0]
  1153e8:	2b04      	cmp	r3, #4
  1153ea:	d833      	bhi.n	115454 <WizFi250::process_esc_code(char*, unsigned int*)+0x90>
  1153ec:	e8df f003 	tbb	[pc, r3]
  1153f0:	320c0703 	.word	0x320c0703
  1153f4:	17          	.byte	0x17
  1153f5:	00          	.byte	0x00
  1153f6:	2301      	movs	r3, #1
  1153f8:	6013      	str	r3, [r2, #0]
  1153fa:	23f0      	movs	r3, #240	; 0xf0
  1153fc:	e002      	b.n	115404 <WizFi250::process_esc_code(char*, unsigned int*)+0x40>
  1153fe:	2301      	movs	r3, #1
  115400:	6013      	str	r3, [r2, #0]
  115402:	23f1      	movs	r3, #241	; 0xf1
  115404:	7023      	strb	r3, [r4, #0]
  115406:	bd70      	pop	{r4, r5, r6, pc}
  115408:	21f1      	movs	r1, #241	; 0xf1
  11540a:	4628      	mov	r0, r5
  11540c:	f7f7 fa4a 	bl	10c8a4 <mbed::SPI::write(int)>
  115410:	2102      	movs	r1, #2
  115412:	7020      	strb	r0, [r4, #0]
  115414:	4628      	mov	r0, r5
  115416:	f7f7 fa45 	bl	10c8a4 <mbed::SPI::write(int)>
  11541a:	7020      	strb	r0, [r4, #0]
  11541c:	bd70      	pop	{r4, r5, r6, pc}
  11541e:	4c0f      	ldr	r4, [pc, #60]	; (11545c <WizFi250::process_esc_code(char*, unsigned int*)+0x98>)
  115420:	200a      	movs	r0, #10
  115422:	f7f8 fa77 	bl	10d914 <wait_ms>
  115426:	21f0      	movs	r1, #240	; 0xf0
  115428:	4628      	mov	r0, r5
  11542a:	f7f7 fa3b 	bl	10c8a4 <mbed::SPI::write(int)>
  11542e:	b2c0      	uxtb	r0, r0
  115430:	28f0      	cmp	r0, #240	; 0xf0
  115432:	d0f5      	beq.n	115420 <WizFi250::process_esc_code(char*, unsigned int*)+0x5c>
  115434:	28f1      	cmp	r0, #241	; 0xf1
  115436:	d103      	bne.n	115440 <WizFi250::process_esc_code(char*, unsigned int*)+0x7c>
  115438:	4b08      	ldr	r3, [pc, #32]	; (11545c <WizFi250::process_esc_code(char*, unsigned int*)+0x98>)
  11543a:	2201      	movs	r2, #1
  11543c:	701a      	strb	r2, [r3, #0]
  11543e:	bd70      	pop	{r4, r5, r6, pc}
  115440:	7823      	ldrb	r3, [r4, #0]
  115442:	2b01      	cmp	r3, #1
  115444:	d1ec      	bne.n	115420 <WizFi250::process_esc_code(char*, unsigned int*)+0x5c>
  115446:	2300      	movs	r3, #0
  115448:	2803      	cmp	r0, #3
  11544a:	7023      	strb	r3, [r4, #0]
  11544c:	d002      	beq.n	115454 <WizFi250::process_esc_code(char*, unsigned int*)+0x90>
  11544e:	e7e7      	b.n	115420 <WizFi250::process_esc_code(char*, unsigned int*)+0x5c>
  115450:	2301      	movs	r3, #1
  115452:	6013      	str	r3, [r2, #0]
  115454:	bd70      	pop	{r4, r5, r6, pc}
  115456:	bf00      	nop
  115458:	3fff8df5 	.word	0x3fff8df5
  11545c:	3fff8df4 	.word	0x3fff8df4

00115460 <WizFi250::getSpi(char*, int)>:
  115460:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  115464:	4605      	mov	r5, r0
  115466:	2400      	movs	r4, #0
  115468:	460f      	mov	r7, r1
  11546a:	481a      	ldr	r0, [pc, #104]	; (1154d4 <WizFi250::getSpi(char*, int)+0x74>)
  11546c:	f04f 31ff 	mov.w	r1, #4294967295
  115470:	4616      	mov	r6, r2
  115472:	f88d 4003 	strb.w	r4, [sp, #3]
  115476:	9401      	str	r4, [sp, #4]
  115478:	f7f8 fb37 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  11547c:	4628      	mov	r0, r5
  11547e:	f7ff fb55 	bl	114b2c <WizFi250::csEnable()>
  115482:	f105 082c 	add.w	r8, r5, #44	; 0x2c
  115486:	4640      	mov	r0, r8
  115488:	f7f7 f805 	bl	10c496 <mbed::InterruptIn::read()>
  11548c:	b1b0      	cbz	r0, 1154bc <WizFi250::getSpi(char*, int)+0x5c>
  11548e:	21f0      	movs	r1, #240	; 0xf0
  115490:	4628      	mov	r0, r5
  115492:	f7f7 fa07 	bl	10c8a4 <mbed::SPI::write(int)>
  115496:	a902      	add	r1, sp, #8
  115498:	f801 0d05 	strb.w	r0, [r1, #-5]!
  11549c:	aa01      	add	r2, sp, #4
  11549e:	4628      	mov	r0, r5
  1154a0:	f7ff ff90 	bl	1153c4 <WizFi250::process_esc_code(char*, unsigned int*)>
  1154a4:	9b01      	ldr	r3, [sp, #4]
  1154a6:	2b01      	cmp	r3, #1
  1154a8:	d1ed      	bne.n	115486 <WizFi250::getSpi(char*, int)+0x26>
  1154aa:	42a6      	cmp	r6, r4
  1154ac:	bfc2      	ittt	gt
  1154ae:	f89d 3003 	ldrbgt.w	r3, [sp, #3]
  1154b2:	553b      	strbgt	r3, [r7, r4]
  1154b4:	3401      	addgt	r4, #1
  1154b6:	42b4      	cmp	r4, r6
  1154b8:	d1e5      	bne.n	115486 <WizFi250::getSpi(char*, int)+0x26>
  1154ba:	e000      	b.n	1154be <WizFi250::getSpi(char*, int)+0x5e>
  1154bc:	4626      	mov	r6, r4
  1154be:	4628      	mov	r0, r5
  1154c0:	f7ff fb45 	bl	114b4e <WizFi250::csDisable()>
  1154c4:	4803      	ldr	r0, [pc, #12]	; (1154d4 <WizFi250::getSpi(char*, int)+0x74>)
  1154c6:	f7f8 fb13 	bl	10daf0 <rtos::Mutex::unlock()>
  1154ca:	4630      	mov	r0, r6
  1154cc:	b002      	add	sp, #8
  1154ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1154d2:	bf00      	nop
  1154d4:	3fff44ec 	.word	0x3fff44ec

001154d8 <WizFi250::getSpi()>:
  1154d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
  1154da:	4605      	mov	r5, r0
  1154dc:	2400      	movs	r4, #0
  1154de:	f04f 31ff 	mov.w	r1, #4294967295
  1154e2:	4811      	ldr	r0, [pc, #68]	; (115528 <WizFi250::getSpi()+0x50>)
  1154e4:	f88d 4003 	strb.w	r4, [sp, #3]
  1154e8:	9401      	str	r4, [sp, #4]
  1154ea:	f7f8 fafe 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  1154ee:	4628      	mov	r0, r5
  1154f0:	f7ff fb1c 	bl	114b2c <WizFi250::csEnable()>
  1154f4:	21f0      	movs	r1, #240	; 0xf0
  1154f6:	4628      	mov	r0, r5
  1154f8:	f7f7 f9d4 	bl	10c8a4 <mbed::SPI::write(int)>
  1154fc:	aa01      	add	r2, sp, #4
  1154fe:	f10d 0103 	add.w	r1, sp, #3
  115502:	f88d 0003 	strb.w	r0, [sp, #3]
  115506:	4628      	mov	r0, r5
  115508:	f7ff ff5c 	bl	1153c4 <WizFi250::process_esc_code(char*, unsigned int*)>
  11550c:	9b01      	ldr	r3, [sp, #4]
  11550e:	4628      	mov	r0, r5
  115510:	2b01      	cmp	r3, #1
  115512:	bf08      	it	eq
  115514:	f89d 4003 	ldrbeq.w	r4, [sp, #3]
  115518:	f7ff fb19 	bl	114b4e <WizFi250::csDisable()>
  11551c:	4802      	ldr	r0, [pc, #8]	; (115528 <WizFi250::getSpi()+0x50>)
  11551e:	f7f8 fae7 	bl	10daf0 <rtos::Mutex::unlock()>
  115522:	4620      	mov	r0, r4
  115524:	b003      	add	sp, #12
  115526:	bd30      	pop	{r4, r5, pc}
  115528:	3fff44ec 	.word	0x3fff44ec

0011552c <WizFi250::putSpi(char const*, int)>:
  11552c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  11552e:	4604      	mov	r4, r0
  115530:	460f      	mov	r7, r1
  115532:	480e      	ldr	r0, [pc, #56]	; (11556c <WizFi250::putSpi(char const*, int)+0x40>)
  115534:	f04f 31ff 	mov.w	r1, #4294967295
  115538:	4616      	mov	r6, r2
  11553a:	f7f8 fad6 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  11553e:	4620      	mov	r0, r4
  115540:	f7ff faf4 	bl	114b2c <WizFi250::csEnable()>
  115544:	463d      	mov	r5, r7
  115546:	1beb      	subs	r3, r5, r7
  115548:	429e      	cmp	r6, r3
  11554a:	dd05      	ble.n	115558 <WizFi250::putSpi(char const*, int)+0x2c>
  11554c:	f815 1b01 	ldrb.w	r1, [r5], #1
  115550:	4620      	mov	r0, r4
  115552:	f7f7 f9a7 	bl	10c8a4 <mbed::SPI::write(int)>
  115556:	e7f6      	b.n	115546 <WizFi250::putSpi(char const*, int)+0x1a>
  115558:	4620      	mov	r0, r4
  11555a:	f7ff faf8 	bl	114b4e <WizFi250::csDisable()>
  11555e:	4803      	ldr	r0, [pc, #12]	; (11556c <WizFi250::putSpi(char const*, int)+0x40>)
  115560:	f7f8 fac6 	bl	10daf0 <rtos::Mutex::unlock()>
  115564:	ea26 70e6 	bic.w	r0, r6, r6, asr #31
  115568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  11556a:	bf00      	nop
  11556c:	3fff44ec 	.word	0x3fff44ec

00115570 <WizFi250::putSpi(char)>:
  115570:	b570      	push	{r4, r5, r6, lr}
  115572:	4604      	mov	r4, r0
  115574:	460e      	mov	r6, r1
  115576:	4d0a      	ldr	r5, [pc, #40]	; (1155a0 <WizFi250::putSpi(char)+0x30>)
  115578:	f04f 31ff 	mov.w	r1, #4294967295
  11557c:	4628      	mov	r0, r5
  11557e:	f7f8 fab4 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  115582:	4620      	mov	r0, r4
  115584:	f7ff fad2 	bl	114b2c <WizFi250::csEnable()>
  115588:	4631      	mov	r1, r6
  11558a:	4620      	mov	r0, r4
  11558c:	f7f7 f98a 	bl	10c8a4 <mbed::SPI::write(int)>
  115590:	4620      	mov	r0, r4
  115592:	f7ff fadc 	bl	114b4e <WizFi250::csDisable()>
  115596:	4628      	mov	r0, r5
  115598:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  11559c:	f7f8 baa8 	b.w	10daf0 <rtos::Mutex::unlock()>
  1155a0:	3fff44ec 	.word	0x3fff44ec

001155a4 <WizFi250::startup()>:
  1155a4:	b510      	push	{r4, lr}
  1155a6:	4604      	mov	r4, r0
  1155a8:	f8d0 30cc 	ldr.w	r3, [r0, #204]	; 0xcc
  1155ac:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
  1155b0:	f8d0 10c8 	ldr.w	r1, [r0, #200]	; 0xc8
  1155b4:	f7ff fad2 	bl	114b5c <WizFi250::initSpi(int, int, int)>
  1155b8:	4620      	mov	r0, r4
  1155ba:	f7ff fcfb 	bl	114fb4 <WizFi250::cmdAT()>
  1155be:	2100      	movs	r1, #0
  1155c0:	4620      	mov	r0, r4
  1155c2:	f7ff fd05 	bl	114fd0 <WizFi250::cmdMECHO(bool)>
  1155c6:	3001      	adds	r0, #1
  1155c8:	d009      	beq.n	1155de <WizFi250::startup()+0x3a>
  1155ca:	2001      	movs	r0, #1
  1155cc:	f7f8 f9a2 	bl	10d914 <wait_ms>
  1155d0:	4620      	mov	r0, r4
  1155d2:	f7ff fcef 	bl	114fb4 <WizFi250::cmdAT()>
  1155d6:	3001      	adds	r0, #1
  1155d8:	bf18      	it	ne
  1155da:	2001      	movne	r0, #1
  1155dc:	bd10      	pop	{r4, pc}
  1155de:	2000      	movs	r0, #0
  1155e0:	bd10      	pop	{r4, pc}

001155e2 <WizFi250::msgOk(char const*)>:
  1155e2:	2301      	movs	r3, #1
  1155e4:	f880 31cd 	strb.w	r3, [r0, #461]	; 0x1cd
  1155e8:	4770      	bx	lr

001155ea <WizFi250::msgError(char const*)>:
  1155ea:	2301      	movs	r3, #1
  1155ec:	f880 31ce 	strb.w	r3, [r0, #462]	; 0x1ce
  1155f0:	4770      	bx	lr

001155f2 <WizFi250::resSSEND(char const*)>:
  1155f2:	f8d0 31d0 	ldr.w	r3, [r0, #464]	; 0x1d0
  1155f6:	3301      	adds	r3, #1
  1155f8:	bf1f      	itttt	ne
  1155fa:	2300      	movne	r3, #0
  1155fc:	f880 31cf 	strbne.w	r3, [r0, #463]	; 0x1cf
  115600:	2301      	movne	r3, #1
  115602:	f880 31cd 	strbne.w	r3, [r0, #461]	; 0x1cd
  115606:	4770      	bx	lr

00115608 <WizFi250::msgDisconnect(char const*)>:
  115608:	b510      	push	{r4, lr}
  11560a:	7b0a      	ldrb	r2, [r1, #12]
  11560c:	4604      	mov	r4, r0
  11560e:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
  115612:	2b08      	cmp	r3, #8
  115614:	d80c      	bhi.n	115630 <WizFi250::msgDisconnect(char const*)+0x28>
  115616:	7b4b      	ldrb	r3, [r1, #13]
  115618:	2b5d      	cmp	r3, #93	; 0x5d
  11561a:	d109      	bne.n	115630 <WizFi250::msgDisconnect(char const*)+0x28>
  11561c:	4611      	mov	r1, r2
  11561e:	f000 fc73 	bl	115f08 <WizFi250::x2i(char)>
  115622:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115626:	fb03 4000 	mla	r0, r3, r0, r4
  11562a:	2300      	movs	r3, #0
  11562c:	f880 37de 	strb.w	r3, [r0, #2014]	; 0x7de
  115630:	bd10      	pop	{r4, pc}

00115632 <WizFi250::msgListen(char const*)>:
  115632:	b510      	push	{r4, lr}
  115634:	7a0b      	ldrb	r3, [r1, #8]
  115636:	4604      	mov	r4, r0
  115638:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  11563c:	2a08      	cmp	r2, #8
  11563e:	d807      	bhi.n	115650 <WizFi250::msgListen(char const*)+0x1e>
  115640:	7a4a      	ldrb	r2, [r1, #9]
  115642:	2a5d      	cmp	r2, #93	; 0x5d
  115644:	d104      	bne.n	115650 <WizFi250::msgListen(char const*)+0x1e>
  115646:	4619      	mov	r1, r3
  115648:	f000 fc5e 	bl	115f08 <WizFi250::x2i(char)>
  11564c:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
  115650:	bd10      	pop	{r4, pc}

00115652 <WizFi250::resConnect(char const*)>:
  115652:	b510      	push	{r4, lr}
  115654:	780b      	ldrb	r3, [r1, #0]
  115656:	4604      	mov	r4, r0
  115658:	2b5b      	cmp	r3, #91	; 0x5b
  11565a:	d127      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  11565c:	784b      	ldrb	r3, [r1, #1]
  11565e:	2b4f      	cmp	r3, #79	; 0x4f
  115660:	d106      	bne.n	115670 <WizFi250::resConnect(char const*)+0x1e>
  115662:	788b      	ldrb	r3, [r1, #2]
  115664:	2b4b      	cmp	r3, #75	; 0x4b
  115666:	d121      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  115668:	78cb      	ldrb	r3, [r1, #3]
  11566a:	2b5d      	cmp	r3, #93	; 0x5d
  11566c:	d11e      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  11566e:	e018      	b.n	1156a2 <WizFi250::resConnect(char const*)+0x50>
  115670:	2b43      	cmp	r3, #67	; 0x43
  115672:	d11b      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  115674:	788b      	ldrb	r3, [r1, #2]
  115676:	2b4f      	cmp	r3, #79	; 0x4f
  115678:	d118      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  11567a:	78cb      	ldrb	r3, [r1, #3]
  11567c:	2b4e      	cmp	r3, #78	; 0x4e
  11567e:	d115      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  115680:	790b      	ldrb	r3, [r1, #4]
  115682:	2b4e      	cmp	r3, #78	; 0x4e
  115684:	d112      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  115686:	794b      	ldrb	r3, [r1, #5]
  115688:	2b45      	cmp	r3, #69	; 0x45
  11568a:	d10f      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  11568c:	798b      	ldrb	r3, [r1, #6]
  11568e:	2b43      	cmp	r3, #67	; 0x43
  115690:	d10c      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  115692:	79cb      	ldrb	r3, [r1, #7]
  115694:	2b54      	cmp	r3, #84	; 0x54
  115696:	d109      	bne.n	1156ac <WizFi250::resConnect(char const*)+0x5a>
  115698:	7a49      	ldrb	r1, [r1, #9]
  11569a:	f000 fc35 	bl	115f08 <WizFi250::x2i(char)>
  11569e:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
  1156a2:	f8d4 31d4 	ldr.w	r3, [r4, #468]	; 0x1d4
  1156a6:	3301      	adds	r3, #1
  1156a8:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
  1156ac:	f8d4 31d4 	ldr.w	r3, [r4, #468]	; 0x1d4
  1156b0:	2b01      	cmp	r3, #1
  1156b2:	bfc1      	itttt	gt
  1156b4:	2300      	movgt	r3, #0
  1156b6:	f884 31cf 	strbgt.w	r3, [r4, #463]	; 0x1cf
  1156ba:	2301      	movgt	r3, #1
  1156bc:	f884 31cd 	strbgt.w	r3, [r4, #461]	; 0x1cd
  1156c0:	bd10      	pop	{r4, pc}

001156c2 <WizFi250::resSMGMT(char const*)>:
  1156c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  1156c4:	460d      	mov	r5, r1
  1156c6:	7809      	ldrb	r1, [r1, #0]
  1156c8:	4604      	mov	r4, r0
  1156ca:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
  1156ce:	2b08      	cmp	r3, #8
  1156d0:	d844      	bhi.n	11575c <WizFi250::resSMGMT(char const*)+0x9a>
  1156d2:	f000 fc19 	bl	115f08 <WizFi250::x2i(char)>
  1156d6:	f8d4 31d0 	ldr.w	r3, [r4, #464]	; 0x1d0
  1156da:	4298      	cmp	r0, r3
  1156dc:	d13e      	bne.n	11575c <WizFi250::resSMGMT(char const*)+0x9a>
  1156de:	f44f 66c2 	mov.w	r6, #1552	; 0x610
  1156e2:	4346      	muls	r6, r0
  1156e4:	1d6f      	adds	r7, r5, #5
  1156e6:	2300      	movs	r3, #0
  1156e8:	f817 2f01 	ldrb.w	r2, [r7, #1]!
  1156ec:	2a3a      	cmp	r2, #58	; 0x3a
  1156ee:	d109      	bne.n	115704 <WizFi250::resSMGMT(char const*)+0x42>
  1156f0:	f44f 62c2 	mov.w	r2, #1552	; 0x610
  1156f4:	fb02 4200 	mla	r2, r2, r0, r4
  1156f8:	2100      	movs	r1, #0
  1156fa:	441a      	add	r2, r3
  1156fc:	f882 17df 	strb.w	r1, [r2, #2015]	; 0x7df
  115700:	3301      	adds	r3, #1
  115702:	e00c      	b.n	11571e <WizFi250::resSMGMT(char const*)+0x5c>
  115704:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  115708:	2909      	cmp	r1, #9
  11570a:	d901      	bls.n	115710 <WizFi250::resSMGMT(char const*)+0x4e>
  11570c:	2a2e      	cmp	r2, #46	; 0x2e
  11570e:	d125      	bne.n	11575c <WizFi250::resSMGMT(char const*)+0x9a>
  115710:	1999      	adds	r1, r3, r6
  115712:	3301      	adds	r3, #1
  115714:	4421      	add	r1, r4
  115716:	2b10      	cmp	r3, #16
  115718:	f881 27df 	strb.w	r2, [r1, #2015]	; 0x7df
  11571c:	d1e4      	bne.n	1156e8 <WizFi250::resSMGMT(char const*)+0x26>
  11571e:	f44f 62c2 	mov.w	r2, #1552	; 0x610
  115722:	fb02 4000 	mla	r0, r2, r0, r4
  115726:	2200      	movs	r2, #0
  115728:	f8c0 27f0 	str.w	r2, [r0, #2032]	; 0x7f0
  11572c:	270a      	movs	r7, #10
  11572e:	18d1      	adds	r1, r2, r3
  115730:	4429      	add	r1, r5
  115732:	7989      	ldrb	r1, [r1, #6]
  115734:	292f      	cmp	r1, #47	; 0x2f
  115736:	d103      	bne.n	115740 <WizFi250::resSMGMT(char const*)+0x7e>
  115738:	2300      	movs	r3, #0
  11573a:	f884 31cf 	strb.w	r3, [r4, #463]	; 0x1cf
  11573e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  115740:	3930      	subs	r1, #48	; 0x30
  115742:	b2ce      	uxtb	r6, r1
  115744:	2e09      	cmp	r6, #9
  115746:	d809      	bhi.n	11575c <WizFi250::resSMGMT(char const*)+0x9a>
  115748:	f8d0 67f0 	ldr.w	r6, [r0, #2032]	; 0x7f0
  11574c:	3201      	adds	r2, #1
  11574e:	fb07 1106 	mla	r1, r7, r6, r1
  115752:	2a05      	cmp	r2, #5
  115754:	f8c0 17f0 	str.w	r1, [r0, #2032]	; 0x7f0
  115758:	d1e9      	bne.n	11572e <WizFi250::resSMGMT(char const*)+0x6c>
  11575a:	e7ed      	b.n	115738 <WizFi250::resSMGMT(char const*)+0x76>
  11575c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0011575e <WizFi250::msgConnect(char const*)>:
  11575e:	b538      	push	{r3, r4, r5, lr}
  115760:	7a4b      	ldrb	r3, [r1, #9]
  115762:	4605      	mov	r5, r0
  115764:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  115768:	2a08      	cmp	r2, #8
  11576a:	d816      	bhi.n	11579a <WizFi250::msgConnect(char const*)+0x3c>
  11576c:	7a8a      	ldrb	r2, [r1, #10]
  11576e:	2a5d      	cmp	r2, #93	; 0x5d
  115770:	d113      	bne.n	11579a <WizFi250::msgConnect(char const*)+0x3c>
  115772:	4619      	mov	r1, r3
  115774:	f000 fbc8 	bl	115f08 <WizFi250::x2i(char)>
  115778:	4604      	mov	r4, r0
  11577a:	4601      	mov	r1, r0
  11577c:	2201      	movs	r2, #1
  11577e:	4628      	mov	r0, r5
  115780:	f000 fa82 	bl	115c88 <WizFi250::initCon(int, bool)>
  115784:	f44f 60c2 	mov.w	r0, #1552	; 0x610
  115788:	fb00 5004 	mla	r0, r0, r4, r5
  11578c:	2301      	movs	r3, #1
  11578e:	f8c5 41d0 	str.w	r4, [r5, #464]	; 0x1d0
  115792:	f880 3de4 	strb.w	r3, [r0, #3556]	; 0xde4
  115796:	f8c0 4de0 	str.w	r4, [r0, #3552]	; 0xde0
  11579a:	bd38      	pop	{r3, r4, r5, pc}

0011579c <WizFi250::resFDNS(char const*)>:
  11579c:	b538      	push	{r3, r4, r5, lr}
  11579e:	460c      	mov	r4, r1
  1157a0:	4605      	mov	r5, r0
  1157a2:	4608      	mov	r0, r1
  1157a4:	f7fb ffff 	bl	1117a6 <strlen>
  1157a8:	4623      	mov	r3, r4
  1157aa:	4420      	add	r0, r4
  1157ac:	4283      	cmp	r3, r0
  1157ae:	d008      	beq.n	1157c2 <WizFi250::resFDNS(char const*)+0x26>
  1157b0:	f813 2b01 	ldrb.w	r2, [r3], #1
  1157b4:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  1157b8:	2909      	cmp	r1, #9
  1157ba:	d9f7      	bls.n	1157ac <WizFi250::resFDNS(char const*)+0x10>
  1157bc:	2a2e      	cmp	r2, #46	; 0x2e
  1157be:	d0f5      	beq.n	1157ac <WizFi250::resFDNS(char const*)+0x10>
  1157c0:	bd38      	pop	{r3, r4, r5, pc}
  1157c2:	2210      	movs	r2, #16
  1157c4:	4621      	mov	r1, r4
  1157c6:	f205 1089 	addw	r0, r5, #393	; 0x189
  1157ca:	f7fc f809 	bl	1117e0 <strncpy>
  1157ce:	2300      	movs	r3, #0
  1157d0:	f885 31cf 	strb.w	r3, [r5, #463]	; 0x1cf
  1157d4:	bd38      	pop	{r3, r4, r5, pc}
	...

001157d8 <WizFi250::resMacAddress(char const*)>:
  1157d8:	b538      	push	{r3, r4, r5, lr}
  1157da:	788a      	ldrb	r2, [r1, #2]
  1157dc:	4604      	mov	r4, r0
  1157de:	2a3a      	cmp	r2, #58	; 0x3a
  1157e0:	d118      	bne.n	115814 <WizFi250::resMacAddress(char const*)+0x3c>
  1157e2:	794b      	ldrb	r3, [r1, #5]
  1157e4:	2b3a      	cmp	r3, #58	; 0x3a
  1157e6:	d115      	bne.n	115814 <WizFi250::resMacAddress(char const*)+0x3c>
  1157e8:	f200 1577 	addw	r5, r0, #375	; 0x177
  1157ec:	2212      	movs	r2, #18
  1157ee:	4628      	mov	r0, r5
  1157f0:	f7fb fff6 	bl	1117e0 <strncpy>
  1157f4:	2300      	movs	r3, #0
  1157f6:	f884 3188 	strb.w	r3, [r4, #392]	; 0x188
  1157fa:	f884 31cf 	strb.w	r3, [r4, #463]	; 0x1cf
  1157fe:	2212      	movs	r2, #18
  115800:	4905      	ldr	r1, [pc, #20]	; (115818 <WizFi250::resMacAddress(char const*)+0x40>)
  115802:	4628      	mov	r0, r5
  115804:	f7fb ffd7 	bl	1117b6 <strncmp>
  115808:	b908      	cbnz	r0, 11580e <WizFi250::resMacAddress(char const*)+0x36>
  11580a:	f884 01cd 	strb.w	r0, [r4, #461]	; 0x1cd
  11580e:	2301      	movs	r3, #1
  115810:	f884 31cd 	strb.w	r3, [r4, #461]	; 0x1cd
  115814:	bd38      	pop	{r3, r4, r5, pc}
  115816:	bf00      	nop
  115818:	0011a364 	.word	0x0011a364

0011581c <WizFi250::resWSTATUS(char const*)>:
  11581c:	f8d0 31d4 	ldr.w	r3, [r0, #468]	; 0x1d4
  115820:	b570      	push	{r4, r5, r6, lr}
  115822:	b91b      	cbnz	r3, 11582c <WizFi250::resWSTATUS(char const*)+0x10>
  115824:	2301      	movs	r3, #1
  115826:	f8c0 31d4 	str.w	r3, [r0, #468]	; 0x1d4
  11582a:	bd70      	pop	{r4, r5, r6, pc}
  11582c:	2b01      	cmp	r3, #1
  11582e:	d122      	bne.n	115876 <WizFi250::resWSTATUS(char const*)+0x5a>
  115830:	2300      	movs	r3, #0
  115832:	461a      	mov	r2, r3
  115834:	461d      	mov	r5, r3
  115836:	3901      	subs	r1, #1
  115838:	f811 4f01 	ldrb.w	r4, [r1, #1]!
  11583c:	2c0d      	cmp	r4, #13
  11583e:	d011      	beq.n	115864 <WizFi250::resWSTATUS(char const*)+0x48>
  115840:	2c2f      	cmp	r4, #47	; 0x2f
  115842:	d101      	bne.n	115848 <WizFi250::resWSTATUS(char const*)+0x2c>
  115844:	3501      	adds	r5, #1
  115846:	e7f7      	b.n	115838 <WizFi250::resWSTATUS(char const*)+0x1c>
  115848:	2d02      	cmp	r5, #2
  11584a:	d104      	bne.n	115856 <WizFi250::resWSTATUS(char const*)+0x3a>
  11584c:	1886      	adds	r6, r0, r2
  11584e:	f886 4137 	strb.w	r4, [r6, #311]	; 0x137
  115852:	3201      	adds	r2, #1
  115854:	e7f0      	b.n	115838 <WizFi250::resWSTATUS(char const*)+0x1c>
  115856:	2d03      	cmp	r5, #3
  115858:	d1ee      	bne.n	115838 <WizFi250::resWSTATUS(char const*)+0x1c>
  11585a:	18c6      	adds	r6, r0, r3
  11585c:	f886 4157 	strb.w	r4, [r6, #343]	; 0x157
  115860:	3301      	adds	r3, #1
  115862:	e7e9      	b.n	115838 <WizFi250::resWSTATUS(char const*)+0x1c>
  115864:	2100      	movs	r1, #0
  115866:	4402      	add	r2, r0
  115868:	4403      	add	r3, r0
  11586a:	f882 1137 	strb.w	r1, [r2, #311]	; 0x137
  11586e:	f883 1157 	strb.w	r1, [r3, #343]	; 0x157
  115872:	f880 11cf 	strb.w	r1, [r0, #463]	; 0x1cf
  115876:	bd70      	pop	{r4, r5, r6, pc}

00115878 <CircBuffer<char>::queue(char)>:
  115878:	6803      	ldr	r3, [r0, #0]
  11587a:	b530      	push	{r4, r5, lr}
  11587c:	6884      	ldr	r4, [r0, #8]
  11587e:	3301      	adds	r3, #1
  115880:	fbb3 f2f4 	udiv	r2, r3, r4
  115884:	fb04 3312 	mls	r3, r4, r2, r3
  115888:	6845      	ldr	r5, [r0, #4]
  11588a:	42ab      	cmp	r3, r5
  11588c:	d00b      	beq.n	1158a6 <CircBuffer<char>::queue(char)+0x2e>
  11588e:	6803      	ldr	r3, [r0, #0]
  115890:	68c2      	ldr	r2, [r0, #12]
  115892:	1c5c      	adds	r4, r3, #1
  115894:	6004      	str	r4, [r0, #0]
  115896:	54d1      	strb	r1, [r2, r3]
  115898:	6801      	ldr	r1, [r0, #0]
  11589a:	6883      	ldr	r3, [r0, #8]
  11589c:	fbb1 f2f3 	udiv	r2, r1, r3
  1158a0:	fb03 1312 	mls	r3, r3, r2, r1
  1158a4:	6003      	str	r3, [r0, #0]
  1158a6:	bd30      	pop	{r4, r5, pc}

001158a8 <CircBuffer<char>::dequeue(char*)>:
  1158a8:	b570      	push	{r4, r5, r6, lr}
  1158aa:	6845      	ldr	r5, [r0, #4]
  1158ac:	6804      	ldr	r4, [r0, #0]
  1158ae:	42a5      	cmp	r5, r4
  1158b0:	d00c      	beq.n	1158cc <CircBuffer<char>::dequeue(char*)+0x24>
  1158b2:	6843      	ldr	r3, [r0, #4]
  1158b4:	68c2      	ldr	r2, [r0, #12]
  1158b6:	1c5e      	adds	r6, r3, #1
  1158b8:	6046      	str	r6, [r0, #4]
  1158ba:	5cd3      	ldrb	r3, [r2, r3]
  1158bc:	700b      	strb	r3, [r1, #0]
  1158be:	6841      	ldr	r1, [r0, #4]
  1158c0:	6883      	ldr	r3, [r0, #8]
  1158c2:	fbb1 f2f3 	udiv	r2, r1, r3
  1158c6:	fb03 1312 	mls	r3, r3, r2, r1
  1158ca:	6043      	str	r3, [r0, #4]
  1158cc:	1b28      	subs	r0, r5, r4
  1158ce:	bf18      	it	ne
  1158d0:	2001      	movne	r0, #1
  1158d2:	bd70      	pop	{r4, r5, r6, pc}

001158d4 <WizFi250::parseMessage()>:
  1158d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1158d8:	4604      	mov	r4, r0
  1158da:	b0a0      	sub	sp, #128	; 0x80
  1158dc:	2500      	movs	r5, #0
  1158de:	eb0d 0105 	add.w	r1, sp, r5
  1158e2:	f8d4 01d8 	ldr.w	r0, [r4, #472]	; 0x1d8
  1158e6:	f7ff ffdf 	bl	1158a8 <CircBuffer<char>::dequeue(char*)>
  1158ea:	b110      	cbz	r0, 1158f2 <WizFi250::parseMessage()+0x1e>
  1158ec:	3501      	adds	r5, #1
  1158ee:	2d80      	cmp	r5, #128	; 0x80
  1158f0:	d1f5      	bne.n	1158de <WizFi250::parseMessage()+0xa>
  1158f2:	ab20      	add	r3, sp, #128	; 0x80
  1158f4:	441d      	add	r5, r3
  1158f6:	2300      	movs	r3, #0
  1158f8:	f805 3c80 	strb.w	r3, [r5, #-128]
  1158fc:	f894 31cf 	ldrb.w	r3, [r4, #463]	; 0x1cf
  115900:	b91b      	cbnz	r3, 11590a <WizFi250::parseMessage()+0x36>
  115902:	2500      	movs	r5, #0
  115904:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 1159ac <WizFi250::parseMessage()+0xd8>
  115908:	e028      	b.n	11595c <WizFi250::parseMessage()+0x88>
  11590a:	4d27      	ldr	r5, [pc, #156]	; (1159a8 <WizFi250::parseMessage()+0xd4>)
  11590c:	f105 0754 	add.w	r7, r5, #84	; 0x54
  115910:	f815 6c04 	ldrb.w	r6, [r5, #-4]
  115914:	f894 31cf 	ldrb.w	r3, [r4, #463]	; 0x1cf
  115918:	429e      	cmp	r6, r3
  11591a:	d003      	beq.n	115924 <WizFi250::parseMessage()+0x50>
  11591c:	350c      	adds	r5, #12
  11591e:	42bd      	cmp	r5, r7
  115920:	d1f6      	bne.n	115910 <WizFi250::parseMessage()+0x3c>
  115922:	e7ee      	b.n	115902 <WizFi250::parseMessage()+0x2e>
  115924:	682b      	ldr	r3, [r5, #0]
  115926:	6868      	ldr	r0, [r5, #4]
  115928:	b90b      	cbnz	r3, 11592e <WizFi250::parseMessage()+0x5a>
  11592a:	07c2      	lsls	r2, r0, #31
  11592c:	d50a      	bpl.n	115944 <WizFi250::parseMessage()+0x70>
  11592e:	f010 0f01 	tst.w	r0, #1
  115932:	ea4f 0060 	mov.w	r0, r0, asr #1
  115936:	bf18      	it	ne
  115938:	5822      	ldrne	r2, [r4, r0]
  11593a:	4669      	mov	r1, sp
  11593c:	bf18      	it	ne
  11593e:	58d3      	ldrne	r3, [r2, r3]
  115940:	4420      	add	r0, r4
  115942:	4798      	blx	r3
  115944:	2e03      	cmp	r6, #3
  115946:	d1e9      	bne.n	11591c <WizFi250::parseMessage()+0x48>
  115948:	f8d4 31d4 	ldr.w	r3, [r4, #468]	; 0x1d4
  11594c:	2b01      	cmp	r3, #1
  11594e:	dce5      	bgt.n	11591c <WizFi250::parseMessage()+0x48>
  115950:	f04f 30ff 	mov.w	r0, #4294967295
  115954:	e024      	b.n	1159a0 <WizFi250::parseMessage()+0xcc>
  115956:	3501      	adds	r5, #1
  115958:	2d06      	cmp	r5, #6
  11595a:	d0f9      	beq.n	115950 <WizFi250::parseMessage()+0x7c>
  11595c:	016e      	lsls	r6, r5, #5
  11595e:	eb08 0706 	add.w	r7, r8, r6
  115962:	4638      	mov	r0, r7
  115964:	f7fb ff1f 	bl	1117a6 <strlen>
  115968:	4639      	mov	r1, r7
  11596a:	4602      	mov	r2, r0
  11596c:	4668      	mov	r0, sp
  11596e:	f7fb ff22 	bl	1117b6 <strncmp>
  115972:	2800      	cmp	r0, #0
  115974:	d1ef      	bne.n	115956 <WizFi250::parseMessage()+0x82>
  115976:	69bb      	ldr	r3, [r7, #24]
  115978:	b91b      	cbnz	r3, 115982 <WizFi250::parseMessage()+0xae>
  11597a:	69f8      	ldr	r0, [r7, #28]
  11597c:	f010 0001 	ands.w	r0, r0, #1
  115980:	d00e      	beq.n	1159a0 <WizFi250::parseMessage()+0xcc>
  115982:	4a0a      	ldr	r2, [pc, #40]	; (1159ac <WizFi250::parseMessage()+0xd8>)
  115984:	4669      	mov	r1, sp
  115986:	4416      	add	r6, r2
  115988:	69f0      	ldr	r0, [r6, #28]
  11598a:	f010 0f01 	tst.w	r0, #1
  11598e:	ea4f 0060 	mov.w	r0, r0, asr #1
  115992:	bf18      	it	ne
  115994:	5822      	ldrne	r2, [r4, r0]
  115996:	4420      	add	r0, r4
  115998:	bf18      	it	ne
  11599a:	58d3      	ldrne	r3, [r2, r3]
  11599c:	4798      	blx	r3
  11599e:	2000      	movs	r0, #0
  1159a0:	b020      	add	sp, #128	; 0x80
  1159a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  1159a6:	bf00      	nop
  1159a8:	0011a314 	.word	0x0011a314
  1159ac:	0011a384 	.word	0x0011a384

001159b0 <WizFi250::recvData(char)>:
  1159b0:	f890 21ca 	ldrb.w	r2, [r0, #458]	; 0x1ca
  1159b4:	b570      	push	{r4, r5, r6, lr}
  1159b6:	b2d2      	uxtb	r2, r2
  1159b8:	2a01      	cmp	r2, #1
  1159ba:	4604      	mov	r4, r0
  1159bc:	460b      	mov	r3, r1
  1159be:	d022      	beq.n	115a06 <WizFi250::recvData(char)+0x56>
  1159c0:	d302      	bcc.n	1159c8 <WizFi250::recvData(char)+0x18>
  1159c2:	2a02      	cmp	r2, #2
  1159c4:	d032      	beq.n	115a2c <WizFi250::recvData(char)+0x7c>
  1159c6:	bd70      	pop	{r4, r5, r6, pc}
  1159c8:	290a      	cmp	r1, #10
  1159ca:	f000 80e0 	beq.w	115b8e <WizFi250::recvData(char)+0x1de>
  1159ce:	d801      	bhi.n	1159d4 <WizFi250::recvData(char)+0x24>
  1159d0:	b979      	cbnz	r1, 1159f2 <WizFi250::recvData(char)+0x42>
  1159d2:	bd70      	pop	{r4, r5, r6, pc}
  1159d4:	290d      	cmp	r1, #13
  1159d6:	f000 80da 	beq.w	115b8e <WizFi250::recvData(char)+0x1de>
  1159da:	297b      	cmp	r1, #123	; 0x7b
  1159dc:	d109      	bne.n	1159f2 <WizFi250::recvData(char)+0x42>
  1159de:	f8d0 21d8 	ldr.w	r2, [r0, #472]	; 0x1d8
  1159e2:	2300      	movs	r3, #0
  1159e4:	6053      	str	r3, [r2, #4]
  1159e6:	6013      	str	r3, [r2, #0]
  1159e8:	2202      	movs	r2, #2
  1159ea:	f880 21ca 	strb.w	r2, [r0, #458]	; 0x1ca
  1159ee:	4a68      	ldr	r2, [pc, #416]	; (115b90 <WizFi250::recvData(char)+0x1e0>)
  1159f0:	e037      	b.n	115a62 <WizFi250::recvData(char)+0xb2>
  1159f2:	f8d4 01d8 	ldr.w	r0, [r4, #472]	; 0x1d8
  1159f6:	2200      	movs	r2, #0
  1159f8:	6042      	str	r2, [r0, #4]
  1159fa:	4619      	mov	r1, r3
  1159fc:	6002      	str	r2, [r0, #0]
  1159fe:	f7ff ff3b 	bl	115878 <CircBuffer<char>::queue(char)>
  115a02:	2301      	movs	r3, #1
  115a04:	e0c1      	b.n	115b8a <WizFi250::recvData(char)+0x1da>
  115a06:	290a      	cmp	r1, #10
  115a08:	f000 80c1 	beq.w	115b8e <WizFi250::recvData(char)+0x1de>
  115a0c:	290d      	cmp	r1, #13
  115a0e:	d001      	beq.n	115a14 <WizFi250::recvData(char)+0x64>
  115a10:	b939      	cbnz	r1, 115a22 <WizFi250::recvData(char)+0x72>
  115a12:	bd70      	pop	{r4, r5, r6, pc}
  115a14:	2300      	movs	r3, #0
  115a16:	f880 31ca 	strb.w	r3, [r0, #458]	; 0x1ca
  115a1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  115a1e:	f7ff bf59 	b.w	1158d4 <WizFi250::parseMessage()>
  115a22:	f8d0 01d8 	ldr.w	r0, [r0, #472]	; 0x1d8
  115a26:	f7ff ff27 	bl	115878 <CircBuffer<char>::queue(char)>
  115a2a:	bd70      	pop	{r4, r5, r6, pc}
  115a2c:	4a58      	ldr	r2, [pc, #352]	; (115b90 <WizFi250::recvData(char)+0x1e0>)
  115a2e:	6811      	ldr	r1, [r2, #0]
  115a30:	2903      	cmp	r1, #3
  115a32:	d878      	bhi.n	115b26 <WizFi250::recvData(char)+0x176>
  115a34:	e8df f001 	tbb	[pc, r1]
  115a38:	583d1702 	.word	0x583d1702
  115a3c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
  115a40:	2909      	cmp	r1, #9
  115a42:	d806      	bhi.n	115a52 <WizFi250::recvData(char)+0xa2>
  115a44:	4619      	mov	r1, r3
  115a46:	4620      	mov	r0, r4
  115a48:	f000 fa5e 	bl	115f08 <WizFi250::x2i(char)>
  115a4c:	4b51      	ldr	r3, [pc, #324]	; (115b94 <WizFi250::recvData(char)+0x1e4>)
  115a4e:	6018      	str	r0, [r3, #0]
  115a50:	bd70      	pop	{r4, r5, r6, pc}
  115a52:	2b2c      	cmp	r3, #44	; 0x2c
  115a54:	d165      	bne.n	115b22 <WizFi250::recvData(char)+0x172>
  115a56:	2301      	movs	r3, #1
  115a58:	6013      	str	r3, [r2, #0]
  115a5a:	4a4f      	ldr	r2, [pc, #316]	; (115b98 <WizFi250::recvData(char)+0x1e8>)
  115a5c:	2300      	movs	r3, #0
  115a5e:	6013      	str	r3, [r2, #0]
  115a60:	4a4e      	ldr	r2, [pc, #312]	; (115b9c <WizFi250::recvData(char)+0x1ec>)
  115a62:	6013      	str	r3, [r2, #0]
  115a64:	bd70      	pop	{r4, r5, r6, pc}
  115a66:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
  115a6a:	2909      	cmp	r1, #9
  115a6c:	d901      	bls.n	115a72 <WizFi250::recvData(char)+0xc2>
  115a6e:	2b2e      	cmp	r3, #46	; 0x2e
  115a70:	d10d      	bne.n	115a8e <WizFi250::recvData(char)+0xde>
  115a72:	4a48      	ldr	r2, [pc, #288]	; (115b94 <WizFi250::recvData(char)+0x1e4>)
  115a74:	f44f 65c2 	mov.w	r5, #1552	; 0x610
  115a78:	6812      	ldr	r2, [r2, #0]
  115a7a:	4847      	ldr	r0, [pc, #284]	; (115b98 <WizFi250::recvData(char)+0x1e8>)
  115a7c:	fb05 4402 	mla	r4, r5, r2, r4
  115a80:	6801      	ldr	r1, [r0, #0]
  115a82:	440c      	add	r4, r1
  115a84:	f884 37df 	strb.w	r3, [r4, #2015]	; 0x7df
  115a88:	3101      	adds	r1, #1
  115a8a:	6001      	str	r1, [r0, #0]
  115a8c:	bd70      	pop	{r4, r5, r6, pc}
  115a8e:	2b2c      	cmp	r3, #44	; 0x2c
  115a90:	d147      	bne.n	115b22 <WizFi250::recvData(char)+0x172>
  115a92:	4b40      	ldr	r3, [pc, #256]	; (115b94 <WizFi250::recvData(char)+0x1e4>)
  115a94:	f44f 60c2 	mov.w	r0, #1552	; 0x610
  115a98:	681b      	ldr	r3, [r3, #0]
  115a9a:	493f      	ldr	r1, [pc, #252]	; (115b98 <WizFi250::recvData(char)+0x1e8>)
  115a9c:	fb00 4403 	mla	r4, r0, r3, r4
  115aa0:	6809      	ldr	r1, [r1, #0]
  115aa2:	1863      	adds	r3, r4, r1
  115aa4:	2100      	movs	r1, #0
  115aa6:	f883 17df 	strb.w	r1, [r3, #2015]	; 0x7df
  115aaa:	f8c4 17f0 	str.w	r1, [r4, #2032]	; 0x7f0
  115aae:	2302      	movs	r3, #2
  115ab0:	e7d7      	b.n	115a62 <WizFi250::recvData(char)+0xb2>
  115ab2:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
  115ab6:	b2c8      	uxtb	r0, r1
  115ab8:	2809      	cmp	r0, #9
  115aba:	d80d      	bhi.n	115ad8 <WizFi250::recvData(char)+0x128>
  115abc:	4b35      	ldr	r3, [pc, #212]	; (115b94 <WizFi250::recvData(char)+0x1e4>)
  115abe:	f44f 62c2 	mov.w	r2, #1552	; 0x610
  115ac2:	681b      	ldr	r3, [r3, #0]
  115ac4:	fb02 4403 	mla	r4, r2, r3, r4
  115ac8:	f8d4 37f0 	ldr.w	r3, [r4, #2032]	; 0x7f0
  115acc:	220a      	movs	r2, #10
  115ace:	fb02 1303 	mla	r3, r2, r3, r1
  115ad2:	f8c4 37f0 	str.w	r3, [r4, #2032]	; 0x7f0
  115ad6:	bd70      	pop	{r4, r5, r6, pc}
  115ad8:	2b2c      	cmp	r3, #44	; 0x2c
  115ada:	d122      	bne.n	115b22 <WizFi250::recvData(char)+0x172>
  115adc:	2303      	movs	r3, #3
  115ade:	6013      	str	r3, [r2, #0]
  115ae0:	4b2d      	ldr	r3, [pc, #180]	; (115b98 <WizFi250::recvData(char)+0x1e8>)
  115ae2:	2200      	movs	r2, #0
  115ae4:	601a      	str	r2, [r3, #0]
  115ae6:	bd70      	pop	{r4, r5, r6, pc}
  115ae8:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
  115aec:	b2c8      	uxtb	r0, r1
  115aee:	2809      	cmp	r0, #9
  115af0:	d805      	bhi.n	115afe <WizFi250::recvData(char)+0x14e>
  115af2:	4a2a      	ldr	r2, [pc, #168]	; (115b9c <WizFi250::recvData(char)+0x1ec>)
  115af4:	200a      	movs	r0, #10
  115af6:	6813      	ldr	r3, [r2, #0]
  115af8:	fb00 1303 	mla	r3, r0, r3, r1
  115afc:	e7b1      	b.n	115a62 <WizFi250::recvData(char)+0xb2>
  115afe:	2b7d      	cmp	r3, #125	; 0x7d
  115b00:	d10f      	bne.n	115b22 <WizFi250::recvData(char)+0x172>
  115b02:	2304      	movs	r3, #4
  115b04:	6013      	str	r3, [r2, #0]
  115b06:	4b24      	ldr	r3, [pc, #144]	; (115b98 <WizFi250::recvData(char)+0x1e8>)
  115b08:	2200      	movs	r2, #0
  115b0a:	601a      	str	r2, [r3, #0]
  115b0c:	4b21      	ldr	r3, [pc, #132]	; (115b94 <WizFi250::recvData(char)+0x1e4>)
  115b0e:	f44f 62c2 	mov.w	r2, #1552	; 0x610
  115b12:	681b      	ldr	r3, [r3, #0]
  115b14:	fb02 4403 	mla	r4, r2, r3, r4
  115b18:	4b20      	ldr	r3, [pc, #128]	; (115b9c <WizFi250::recvData(char)+0x1ec>)
  115b1a:	681b      	ldr	r3, [r3, #0]
  115b1c:	f8c4 37f8 	str.w	r3, [r4, #2040]	; 0x7f8
  115b20:	bd70      	pop	{r4, r5, r6, pc}
  115b22:	2300      	movs	r3, #0
  115b24:	e031      	b.n	115b8a <WizFi250::recvData(char)+0x1da>
  115b26:	4a1b      	ldr	r2, [pc, #108]	; (115b94 <WizFi250::recvData(char)+0x1e4>)
  115b28:	f44f 66c2 	mov.w	r6, #1552	; 0x610
  115b2c:	6815      	ldr	r5, [r2, #0]
  115b2e:	fb06 4605 	mla	r6, r6, r5, r4
  115b32:	f8d6 07fc 	ldr.w	r0, [r6, #2044]	; 0x7fc
  115b36:	b1d8      	cbz	r0, 115b70 <WizFi250::recvData(char)+0x1c0>
  115b38:	4619      	mov	r1, r3
  115b3a:	f7ff fe9d 	bl	115878 <CircBuffer<char>::queue(char)>
  115b3e:	f8d6 27fc 	ldr.w	r2, [r6, #2044]	; 0x7fc
  115b42:	6811      	ldr	r1, [r2, #0]
  115b44:	6853      	ldr	r3, [r2, #4]
  115b46:	4299      	cmp	r1, r3
  115b48:	bf3d      	ittte	cc
  115b4a:	6851      	ldrcc	r1, [r2, #4]
  115b4c:	6813      	ldrcc	r3, [r2, #0]
  115b4e:	6892      	ldrcc	r2, [r2, #8]
  115b50:	6813      	ldrcs	r3, [r2, #0]
  115b52:	bf2b      	itete	cs
  115b54:	6852      	ldrcs	r2, [r2, #4]
  115b56:	189b      	addcc	r3, r3, r2
  115b58:	1a9b      	subcs	r3, r3, r2
  115b5a:	1a5b      	subcc	r3, r3, r1
  115b5c:	f5b3 6fbe 	cmp.w	r3, #1520	; 0x5f0
  115b60:	bf81      	itttt	hi
  115b62:	f44f 63c2 	movhi.w	r3, #1552	; 0x610
  115b66:	fb03 4305 	mlahi	r3, r3, r5, r4
  115b6a:	2201      	movhi	r2, #1
  115b6c:	f883 2dde 	strbhi.w	r2, [r3, #3550]	; 0xdde
  115b70:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115b74:	fb03 4505 	mla	r5, r3, r5, r4
  115b78:	f8d5 37f8 	ldr.w	r3, [r5, #2040]	; 0x7f8
  115b7c:	3b01      	subs	r3, #1
  115b7e:	f8c5 37f8 	str.w	r3, [r5, #2040]	; 0x7f8
  115b82:	b923      	cbnz	r3, 115b8e <WizFi250::recvData(char)+0x1de>
  115b84:	2201      	movs	r2, #1
  115b86:	f885 2dde 	strb.w	r2, [r5, #3550]	; 0xdde
  115b8a:	f884 31ca 	strb.w	r3, [r4, #458]	; 0x1ca
  115b8e:	bd70      	pop	{r4, r5, r6, pc}
  115b90:	3fff8df8 	.word	0x3fff8df8
  115b94:	3fff8dfc 	.word	0x3fff8dfc
  115b98:	3fff8e04 	.word	0x3fff8e04
  115b9c:	3fff8e00 	.word	0x3fff8e00

00115ba0 <WizFi250::getHostByName(char const*, char*)>:
  115ba0:	b570      	push	{r4, r5, r6, lr}
  115ba2:	4605      	mov	r5, r0
  115ba4:	460c      	mov	r4, r1
  115ba6:	4616      	mov	r6, r2
  115ba8:	f7ff f8fa 	bl	114da0 <WizFi250::isAssociated()>
  115bac:	b910      	cbnz	r0, 115bb4 <WizFi250::getHostByName(char const*, char*)+0x14>
  115bae:	f04f 30ff 	mov.w	r0, #4294967295
  115bb2:	bd70      	pop	{r4, r5, r6, pc}
  115bb4:	f895 31cb 	ldrb.w	r3, [r5, #459]	; 0x1cb
  115bb8:	2b01      	cmp	r3, #1
  115bba:	d1f8      	bne.n	115bae <WizFi250::getHostByName(char const*, char*)+0xe>
  115bbc:	4620      	mov	r0, r4
  115bbe:	f7fb fdf2 	bl	1117a6 <strlen>
  115bc2:	4623      	mov	r3, r4
  115bc4:	4420      	add	r0, r4
  115bc6:	4298      	cmp	r0, r3
  115bc8:	d008      	beq.n	115bdc <WizFi250::getHostByName(char const*, char*)+0x3c>
  115bca:	f813 2b01 	ldrb.w	r2, [r3], #1
  115bce:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  115bd2:	2909      	cmp	r1, #9
  115bd4:	d9f7      	bls.n	115bc6 <WizFi250::getHostByName(char const*, char*)+0x26>
  115bd6:	2a2e      	cmp	r2, #46	; 0x2e
  115bd8:	d0f5      	beq.n	115bc6 <WizFi250::getHostByName(char const*, char*)+0x26>
  115bda:	e006      	b.n	115bea <WizFi250::getHostByName(char const*, char*)+0x4a>
  115bdc:	4621      	mov	r1, r4
  115bde:	2210      	movs	r2, #16
  115be0:	4630      	mov	r0, r6
  115be2:	f7fb fdfd 	bl	1117e0 <strncpy>
  115be6:	2000      	movs	r0, #0
  115be8:	bd70      	pop	{r4, r5, r6, pc}
  115bea:	4621      	mov	r1, r4
  115bec:	4628      	mov	r0, r5
  115bee:	f7ff fbcd 	bl	11538c <WizFi250::cmdFDNS(char const*)>
  115bf2:	b140      	cbz	r0, 115c06 <WizFi250::getHostByName(char const*, char*)+0x66>
  115bf4:	2001      	movs	r0, #1
  115bf6:	f7f7 fe8d 	bl	10d914 <wait_ms>
  115bfa:	4621      	mov	r1, r4
  115bfc:	4628      	mov	r0, r5
  115bfe:	f7ff fbc5 	bl	11538c <WizFi250::cmdFDNS(char const*)>
  115c02:	2800      	cmp	r0, #0
  115c04:	d1d3      	bne.n	115bae <WizFi250::getHostByName(char const*, char*)+0xe>
  115c06:	2210      	movs	r2, #16
  115c08:	f205 1189 	addw	r1, r5, #393	; 0x189
  115c0c:	e7e8      	b.n	115be0 <WizFi250::getHostByName(char const*, char*)+0x40>
	...

00115c10 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))>:
  115c10:	b573      	push	{r0, r1, r4, r5, r6, lr}
  115c12:	4604      	mov	r4, r0
  115c14:	460e      	mov	r6, r1
  115c16:	4615      	mov	r5, r2
  115c18:	f7ff f8c2 	bl	114da0 <WizFi250::isAssociated()>
  115c1c:	b130      	cbz	r0, 115c2c <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x1c>
  115c1e:	f894 31cb 	ldrb.w	r3, [r4, #459]	; 0x1cb
  115c22:	f04f 30ff 	mov.w	r0, #4294967295
  115c26:	2b01      	cmp	r3, #1
  115c28:	d118      	bne.n	115c5c <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x4c>
  115c2a:	e002      	b.n	115c32 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x22>
  115c2c:	f04f 30ff 	mov.w	r0, #4294967295
  115c30:	e014      	b.n	115c5c <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x4c>
  115c32:	2e01      	cmp	r6, #1
  115c34:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
  115c38:	d104      	bne.n	115c44 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x34>
  115c3a:	4b09      	ldr	r3, [pc, #36]	; (115c60 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x50>)
  115c3c:	4a09      	ldr	r2, [pc, #36]	; (115c64 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x54>)
  115c3e:	9300      	str	r3, [sp, #0]
  115c40:	462b      	mov	r3, r5
  115c42:	e003      	b.n	115c4c <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x3c>
  115c44:	4b08      	ldr	r3, [pc, #32]	; (115c68 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x58>)
  115c46:	4a09      	ldr	r2, [pc, #36]	; (115c6c <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x5c>)
  115c48:	9300      	str	r3, [sp, #0]
  115c4a:	462b      	mov	r3, r5
  115c4c:	4908      	ldr	r1, [pc, #32]	; (115c70 <WizFi250::listen(WizFi250::Protocol, int, void (*)(int))+0x60>)
  115c4e:	4620      	mov	r0, r4
  115c50:	f7ff fa76 	bl	115140 <WizFi250::cmdSCON(char const*, char const*, int, char const*)>
  115c54:	3000      	adds	r0, #0
  115c56:	bf18      	it	ne
  115c58:	2001      	movne	r0, #1
  115c5a:	4240      	negs	r0, r0
  115c5c:	b002      	add	sp, #8
  115c5e:	bd70      	pop	{r4, r5, r6, pc}
  115c60:	001183ad 	.word	0x001183ad
  115c64:	0011a444 	.word	0x0011a444
  115c68:	00118312 	.word	0x00118312
  115c6c:	0011a44b 	.word	0x0011a44b
  115c70:	0011a448 	.word	0x0011a448

00115c74 <WizFi250::close(int)>:
  115c74:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115c78:	fb03 0301 	mla	r3, r3, r1, r0
  115c7c:	2200      	movs	r2, #0
  115c7e:	f883 27de 	strb.w	r2, [r3, #2014]	; 0x7de
  115c82:	f7ff bb5b 	b.w	11533c <WizFi250::cmdCLOSE(int)>
	...

00115c88 <WizFi250::initCon(int, bool)>:
  115c88:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115c8c:	fb03 0301 	mla	r3, r3, r1, r0
  115c90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  115c94:	4690      	mov	r8, r2
  115c96:	f8d3 77fc 	ldr.w	r7, [r3, #2044]	; 0x7fc
  115c9a:	f04f 32ff 	mov.w	r2, #4294967295
  115c9e:	f8c3 2de0 	str.w	r2, [r3, #3552]	; 0xde0
  115ca2:	2200      	movs	r2, #0
  115ca4:	4605      	mov	r5, r0
  115ca6:	460e      	mov	r6, r1
  115ca8:	f8c3 2de8 	str.w	r2, [r3, #3560]	; 0xde8
  115cac:	f883 2de4 	strb.w	r2, [r3, #3556]	; 0xde4
  115cb0:	bb3f      	cbnz	r7, 115d02 <WizFi250::initCon(int, bool)+0x7a>
  115cb2:	2010      	movs	r0, #16
  115cb4:	f7f7 fd34 	bl	10d720 <operator new(unsigned int)>
  115cb8:	6007      	str	r7, [r0, #0]
  115cba:	4604      	mov	r4, r0
  115cbc:	6047      	str	r7, [r0, #4]
  115cbe:	f240 6001 	movw	r0, #1537	; 0x601
  115cc2:	60a0      	str	r0, [r4, #8]
  115cc4:	f7fa f8dc 	bl	10fe80 <malloc>
  115cc8:	60e0      	str	r0, [r4, #12]
  115cca:	b910      	cbnz	r0, 115cd2 <WizFi250::initCon(int, bool)+0x4a>
  115ccc:	4810      	ldr	r0, [pc, #64]	; (115d10 <WizFi250::initCon(int, bool)+0x88>)
  115cce:	f7f2 fe09 	bl	1088e4 <error>
  115cd2:	f44f 67c2 	mov.w	r7, #1552	; 0x610
  115cd6:	fb07 5706 	mla	r7, r7, r6, r5
  115cda:	f8c7 47fc 	str.w	r4, [r7, #2044]	; 0x7fc
  115cde:	b984      	cbnz	r4, 115d02 <WizFi250::initCon(int, bool)+0x7a>
  115ce0:	480b      	ldr	r0, [pc, #44]	; (115d10 <WizFi250::initCon(int, bool)+0x88>)
  115ce2:	f7f2 fdff 	bl	1088e4 <error>
  115ce6:	f8d7 37fc 	ldr.w	r3, [r7, #2044]	; 0x7fc
  115cea:	b113      	cbz	r3, 115cf2 <WizFi250::initCon(int, bool)+0x6a>
  115cec:	2200      	movs	r2, #0
  115cee:	605a      	str	r2, [r3, #4]
  115cf0:	601a      	str	r2, [r3, #0]
  115cf2:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115cf6:	fb03 5506 	mla	r5, r3, r6, r5
  115cfa:	f885 87de 	strb.w	r8, [r5, #2014]	; 0x7de
  115cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  115d02:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115d06:	fb03 5306 	mla	r3, r3, r6, r5
  115d0a:	f8d3 37fc 	ldr.w	r3, [r3, #2044]	; 0x7fc
  115d0e:	e7ed      	b.n	115cec <WizFi250::initCon(int, bool)+0x64>
  115d10:	0011a154 	.word	0x0011a154

00115d14 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))>:
  115d14:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  115d18:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  115d1c:	4604      	mov	r4, r0
  115d1e:	460d      	mov	r5, r1
  115d20:	4616      	mov	r6, r2
  115d22:	461f      	mov	r7, r3
  115d24:	f7ff f83c 	bl	114da0 <WizFi250::isAssociated()>
  115d28:	b910      	cbnz	r0, 115d30 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x1c>
  115d2a:	f04f 30ff 	mov.w	r0, #4294967295
  115d2e:	e035      	b.n	115d9c <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x88>
  115d30:	f894 31cb 	ldrb.w	r3, [r4, #459]	; 0x1cb
  115d34:	2b01      	cmp	r3, #1
  115d36:	d1f8      	bne.n	115d2a <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x16>
  115d38:	f04f 33ff 	mov.w	r3, #4294967295
  115d3c:	2d01      	cmp	r5, #1
  115d3e:	f8c4 31d0 	str.w	r3, [r4, #464]	; 0x1d0
  115d42:	d106      	bne.n	115d52 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x3e>
  115d44:	4b17      	ldr	r3, [pc, #92]	; (115da4 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x90>)
  115d46:	e88d 0180 	stmia.w	sp, {r7, r8}
  115d4a:	9302      	str	r3, [sp, #8]
  115d4c:	4a16      	ldr	r2, [pc, #88]	; (115da8 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x94>)
  115d4e:	4633      	mov	r3, r6
  115d50:	e01d      	b.n	115d8e <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x7a>
  115d52:	b1b5      	cbz	r5, 115d82 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x6e>
  115d54:	f8d4 11d0 	ldr.w	r1, [r4, #464]	; 0x1d0
  115d58:	2900      	cmp	r1, #0
  115d5a:	dbe6      	blt.n	115d2a <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x16>
  115d5c:	4620      	mov	r0, r4
  115d5e:	2201      	movs	r2, #1
  115d60:	f7ff ff92 	bl	115c88 <WizFi250::initCon(int, bool)>
  115d64:	f8d4 01d0 	ldr.w	r0, [r4, #464]	; 0x1d0
  115d68:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115d6c:	fb03 4400 	mla	r4, r3, r0, r4
  115d70:	2300      	movs	r3, #0
  115d72:	f884 37dd 	strb.w	r3, [r4, #2013]	; 0x7dd
  115d76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  115d78:	f884 57dc 	strb.w	r5, [r4, #2012]	; 0x7dc
  115d7c:	f8c4 3de8 	str.w	r3, [r4, #3560]	; 0xde8
  115d80:	e00c      	b.n	115d9c <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x88>
  115d82:	4b08      	ldr	r3, [pc, #32]	; (115da4 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x90>)
  115d84:	e88d 0180 	stmia.w	sp, {r7, r8}
  115d88:	9302      	str	r3, [sp, #8]
  115d8a:	4633      	mov	r3, r6
  115d8c:	4a07      	ldr	r2, [pc, #28]	; (115dac <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x98>)
  115d8e:	4908      	ldr	r1, [pc, #32]	; (115db0 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x9c>)
  115d90:	4620      	mov	r0, r4
  115d92:	f7ff f9ef 	bl	115174 <WizFi250::cmdSCON(char const*, char const*, char const*, int, int, char const*)>
  115d96:	2800      	cmp	r0, #0
  115d98:	d0dc      	beq.n	115d54 <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x40>
  115d9a:	e7c6      	b.n	115d2a <WizFi250::open(WizFi250::Protocol, char const*, int, int, void (*)(int))+0x16>
  115d9c:	b004      	add	sp, #16
  115d9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  115da2:	bf00      	nop
  115da4:	00118312 	.word	0x00118312
  115da8:	0011a44f 	.word	0x0011a44f
  115dac:	0011a453 	.word	0x0011a453
  115db0:	0011a448 	.word	0x0011a448

00115db4 <WizFi250::send(int, char const*, int)>:
  115db4:	b530      	push	{r4, r5, lr}
  115db6:	2907      	cmp	r1, #7
  115db8:	b085      	sub	sp, #20
  115dba:	4614      	mov	r4, r2
  115dbc:	d815      	bhi.n	115dea <WizFi250::send(int, char const*, int)+0x36>
  115dbe:	f44f 62c2 	mov.w	r2, #1552	; 0x610
  115dc2:	fb02 0201 	mla	r2, r2, r1, r0
  115dc6:	f892 57de 	ldrb.w	r5, [r2, #2014]	; 0x7de
  115dca:	b175      	cbz	r5, 115dea <WizFi250::send(int, char const*, int)+0x36>
  115dcc:	f892 27dc 	ldrb.w	r2, [r2, #2012]	; 0x7dc
  115dd0:	2a01      	cmp	r2, #1
  115dd2:	d80a      	bhi.n	115dea <WizFi250::send(int, char const*, int)+0x36>
  115dd4:	f242 7210 	movw	r2, #10000	; 0x2710
  115dd8:	9202      	str	r2, [sp, #8]
  115dda:	2200      	movs	r2, #0
  115ddc:	9201      	str	r2, [sp, #4]
  115dde:	9200      	str	r2, [sp, #0]
  115de0:	460a      	mov	r2, r1
  115de2:	4621      	mov	r1, r4
  115de4:	f7ff f9f2 	bl	1151cc <WizFi250::cmdSSEND(char const*, int, int, char const*, int, int)>
  115de8:	e001      	b.n	115dee <WizFi250::send(int, char const*, int)+0x3a>
  115dea:	f04f 30ff 	mov.w	r0, #4294967295
  115dee:	b005      	add	sp, #20
  115df0:	bd30      	pop	{r4, r5, pc}
	...

00115df4 <WizFi250::recv(int, char*, int)>:
  115df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
  115df8:	460f      	mov	r7, r1
  115dfa:	4605      	mov	r5, r0
  115dfc:	f44f 64c2 	mov.w	r4, #1552	; 0x610
  115e00:	437c      	muls	r4, r7
  115e02:	b089      	sub	sp, #36	; 0x24
  115e04:	eb05 0a04 	add.w	r10, r5, r4
  115e08:	4668      	mov	r0, sp
  115e0a:	f50a 6a00 	add.w	r10, r10, #2048	; 0x800
  115e0e:	4699      	mov	r9, r3
  115e10:	4690      	mov	r8, r2
  115e12:	f7f6 fe4a 	bl	10caaa <mbed::Timer::Timer()>
  115e16:	f240 52de 	movw	r2, #1502	; 0x5de
  115e1a:	2100      	movs	r1, #0
  115e1c:	4650      	mov	r0, r10
  115e1e:	f7fa f882 	bl	10ff26 <memset>
  115e22:	4668      	mov	r0, sp
  115e24:	f7f6 fddb 	bl	10c9de <mbed::Timer::start()>
  115e28:	192e      	adds	r6, r5, r4
  115e2a:	f505 5b61 	add.w	r11, r5, #14400	; 0x3840
  115e2e:	f8db 301c 	ldr.w	r3, [r11, #28]
  115e32:	f10b 0b1c 	add.w	r11, r11, #28
  115e36:	2b01      	cmp	r3, #1
  115e38:	d138      	bne.n	115eac <WizFi250::recv(int, char*, int)+0xb8>
  115e3a:	4e27      	ldr	r6, [pc, #156]	; (115ed8 <WizFi250::recv(int, char*, int)+0xe4>)
  115e3c:	f04f 31ff 	mov.w	r1, #4294967295
  115e40:	4826      	ldr	r0, [pc, #152]	; (115edc <WizFi250::recv(int, char*, int)+0xe8>)
  115e42:	f7f7 fe52 	bl	10daea <rtos::Mutex::lock(unsigned long)>
  115e46:	2130      	movs	r1, #48	; 0x30
  115e48:	6830      	ldr	r0, [r6, #0]
  115e4a:	f7f7 ff1a 	bl	10dc82 <rtos::Thread::set_priority(osPriority_t)>
  115e4e:	464a      	mov	r2, r9
  115e50:	4651      	mov	r1, r10
  115e52:	4628      	mov	r0, r5
  115e54:	f7ff fb04 	bl	115460 <WizFi250::getSpi(char*, int)>
  115e58:	4604      	mov	r4, r0
  115e5a:	f105 002c 	add.w	r0, r5, #44	; 0x2c
  115e5e:	f7f6 fb1a 	bl	10c496 <mbed::InterruptIn::read()>
  115e62:	b908      	cbnz	r0, 115e68 <WizFi250::recv(int, char*, int)+0x74>
  115e64:	f8cb 0000 	str.w	r0, [r11]
  115e68:	481c      	ldr	r0, [pc, #112]	; (115edc <WizFi250::recv(int, char*, int)+0xe8>)
  115e6a:	f7f7 fe41 	bl	10daf0 <rtos::Mutex::unlock()>
  115e6e:	2118      	movs	r1, #24
  115e70:	6830      	ldr	r0, [r6, #0]
  115e72:	f7f7 ff06 	bl	10dc82 <rtos::Thread::set_priority(osPriority_t)>
  115e76:	4668      	mov	r0, sp
  115e78:	f7f6 fdda 	bl	10ca30 <mbed::Timer::stop()>
  115e7c:	f1b9 0f00 	cmp.w	r9, #0
  115e80:	dc01      	bgt.n	115e86 <WizFi250::recv(int, char*, int)+0x92>
  115e82:	2000      	movs	r0, #0
  115e84:	e025      	b.n	115ed2 <WizFi250::recv(int, char*, int)+0xde>
  115e86:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115e8a:	435f      	muls	r7, r3
  115e8c:	2300      	movs	r3, #0
  115e8e:	42a3      	cmp	r3, r4
  115e90:	da07      	bge.n	115ea2 <WizFi250::recv(int, char*, int)+0xae>
  115e92:	19da      	adds	r2, r3, r7
  115e94:	442a      	add	r2, r5
  115e96:	f892 2800 	ldrb.w	r2, [r2, #2048]	; 0x800
  115e9a:	f808 2003 	strb.w	r2, [r8, r3]
  115e9e:	3301      	adds	r3, #1
  115ea0:	e7f5      	b.n	115e8e <WizFi250::recv(int, char*, int)+0x9a>
  115ea2:	2300      	movs	r3, #0
  115ea4:	f808 3004 	strb.w	r3, [r8, r4]
  115ea8:	4620      	mov	r0, r4
  115eaa:	e012      	b.n	115ed2 <WizFi250::recv(int, char*, int)+0xde>
  115eac:	4668      	mov	r0, sp
  115eae:	f7f6 fde2 	bl	10ca76 <mbed::Timer::read_ms()>
  115eb2:	f5b0 6ffa 	cmp.w	r0, #2000	; 0x7d0
  115eb6:	dd08      	ble.n	115eca <WizFi250::recv(int, char*, int)+0xd6>
  115eb8:	f896 47dd 	ldrb.w	r4, [r6, #2013]	; 0x7dd
  115ebc:	4668      	mov	r0, sp
  115ebe:	b914      	cbnz	r4, 115ec6 <WizFi250::recv(int, char*, int)+0xd2>
  115ec0:	f7f6 fdb6 	bl	10ca30 <mbed::Timer::stop()>
  115ec4:	e7f0      	b.n	115ea8 <WizFi250::recv(int, char*, int)+0xb4>
  115ec6:	f7f6 fddf 	bl	10ca88 <mbed::Timer::reset()>
  115eca:	2001      	movs	r0, #1
  115ecc:	f7f7 feff 	bl	10dcce <rtos::Thread::wait(unsigned long)>
  115ed0:	e7ab      	b.n	115e2a <WizFi250::recv(int, char*, int)+0x36>
  115ed2:	b009      	add	sp, #36	; 0x24
  115ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
  115ed8:	3fff44dc 	.word	0x3fff44dc
  115edc:	3fff44ec 	.word	0x3fff44ec

00115ee0 <WizFi250::accept(int)>:
  115ee0:	2907      	cmp	r1, #7
  115ee2:	d809      	bhi.n	115ef8 <WizFi250::accept(int)+0x18>
  115ee4:	f44f 63c2 	mov.w	r3, #1552	; 0x610
  115ee8:	fb03 0001 	mla	r0, r3, r1, r0
  115eec:	f890 37de 	ldrb.w	r3, [r0, #2014]	; 0x7de
  115ef0:	b113      	cbz	r3, 115ef8 <WizFi250::accept(int)+0x18>
  115ef2:	f890 3de4 	ldrb.w	r3, [r0, #3556]	; 0xde4
  115ef6:	b913      	cbnz	r3, 115efe <WizFi250::accept(int)+0x1e>
  115ef8:	f04f 30ff 	mov.w	r0, #4294967295
  115efc:	4770      	bx	lr
  115efe:	2300      	movs	r3, #0
  115f00:	f880 3de4 	strb.w	r3, [r0, #3556]	; 0xde4
  115f04:	4608      	mov	r0, r1
  115f06:	4770      	bx	lr

00115f08 <WizFi250::x2i(char)>:
  115f08:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
  115f0c:	b2c3      	uxtb	r3, r0
  115f0e:	2b09      	cmp	r3, #9
  115f10:	d90e      	bls.n	115f30 <WizFi250::x2i(char)+0x28>
  115f12:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
  115f16:	2b05      	cmp	r3, #5
  115f18:	d802      	bhi.n	115f20 <WizFi250::x2i(char)+0x18>
  115f1a:	f1a1 0037 	sub.w	r0, r1, #55	; 0x37
  115f1e:	4770      	bx	lr
  115f20:	f1a1 0361 	sub.w	r3, r1, #97	; 0x61
  115f24:	2b05      	cmp	r3, #5
  115f26:	d802      	bhi.n	115f2e <WizFi250::x2i(char)+0x26>
  115f28:	f1a1 0057 	sub.w	r0, r1, #87	; 0x57
  115f2c:	4770      	bx	lr
  115f2e:	2000      	movs	r0, #0
  115f30:	4770      	bx	lr
	...

00115f34 <_init>:
  115f34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  115f36:	bf00      	nop
  115f38:	bcf8      	pop	{r3, r4, r5, r6, r7}
  115f3a:	bc08      	pop	{r3}
  115f3c:	469e      	mov	lr, r3
  115f3e:	4770      	bx	lr

00115f40 <_fini>:
  115f40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  115f42:	bf00      	nop
  115f44:	bcf8      	pop	{r3, r4, r5, r6, r7}
  115f46:	bc08      	pop	{r3}
  115f48:	469e      	mov	lr, r3
  115f4a:	4770      	bx	lr
  115f4c:	65636341 	.word	0x65636341
  115f50:	475f7373 	.word	0x475f7373
  115f54:	746e6172 	.word	0x746e6172
  115f58:	495f6465 	.word	0x495f6465
  115f5c:	5f3a3444 	.word	0x5f3a3444
  115f60:	6e617649 	.word	0x6e617649
  115f64:	6b61525f 	.word	0x6b61525f
  115f68:	63697469 	.word	0x63697469
  115f6c:	63634100 	.word	0x63634100
  115f70:	5f737365 	.word	0x5f737365
  115f74:	6e617247 	.word	0x6e617247
  115f78:	5f646574 	.word	0x5f646574
  115f7c:	3a334449 	.word	0x3a334449
  115f80:	6b754c5f 	.word	0x6b754c5f
  115f84:	6f4d5f61 	.word	0x6f4d5f61
  115f88:	63697264 	.word	0x63697264
  115f8c:	63634100 	.word	0x63634100
  115f90:	5f737365 	.word	0x5f737365
  115f94:	6e617247 	.word	0x6e617247
  115f98:	5f646574 	.word	0x5f646574
  115f9c:	3a324449 	.word	0x3a324449
  115fa0:	7264415f 	.word	0x7264415f
  115fa4:	6e616a69 	.word	0x6e616a69
  115fa8:	7261425f 	.word	0x7261425f
  115fac:	41006369 	.word	0x41006369
  115fb0:	73656363 	.word	0x73656363
  115fb4:	72475f73 	.word	0x72475f73
  115fb8:	65746e61 	.word	0x65746e61
  115fbc:	44495f64 	.word	0x44495f64
  115fc0:	545f3a31 	.word	0x545f3a31
  115fc4:	6b747276 	.word	0x6b747276
  115fc8:	614d5f6f 	.word	0x614d5f6f
  115fcc:	6369646e 	.word	0x6369646e
  115fd0:	63634100 	.word	0x63634100
  115fd4:	5f737365 	.word	0x5f737365
  115fd8:	696e6544 	.word	0x696e6544
  115fdc:	495f6465 	.word	0x495f6465
  115fe0:	6f6e5f44 	.word	0x6f6e5f44
  115fe4:	6e695f74 	.word	0x6e695f74
  115fe8:	7461645f 	.word	0x7461645f
  115fec:	73616261 	.word	0x73616261
  115ff0:	00000065 	.word	0x00000065

00115ff4 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
  115ff4:	001022dd 001022e1 001022e9 65766f4d     ."..."..."..Move
  116004:	746e656d 74654420 65746365 000a0d64     ment Detected...
  116014:	69736162 74735f63 676e6972 4d5f3a3a     basic_string::_M
  116024:	6e6f635f 75727473 6e207463 206c6c75     _construct null 
  116034:	20746f6e 696c6176 6f630064 6e65746e     not valid.conten
  116044:	656c2d74 6874676e 74746800 43007370     t-length.https.C
  116054:	6e4f2f3a 696d6553 646e6f63 6f746375     :/OnSemiconducto
  116064:	78652f72 6e726574 6d2f6c61 2d646562     r/external/mbed-
  116074:	702f736f 6674616c 2f6d726f 6c6c6143     os/platform/Call
  116084:	6b636162 5f00682e 0073706f 7474485b     back.h._ops.[Htt
  116094:	73655270 736e6f70 72205d65 6c6c6165     pResponse] reall
  1160a4:	6620636f 2520726f 79622064 20736574     oc for %d bytes 
  1160b4:	6c696166 000a6465 74736f48 6e6f4300     failed..Host.Con
  1160c4:	746e6574 6e654c2d 00687467 25207325     tent-Length.%s %
  1160d4:	73253f73 54544820 2e312f50 000a0d31     s?%s HTTP/1.1...
  1160e4:	25207325 20732573 50545448 312e312f     %s %s%s HTTP/1.1
  1160f4:	25000a0d 25203a73 000a0d73 50545448     ...%s: %s...HTTP
  116104:	72617020 676e6973 69616620 2e64656c      parsing failed.
  116114:	72615020 20646573 62206425 73657479      Parsed %d bytes
  116124:	6572202c 76696563 25206465 79622064     , received %d by
  116134:	0a736574 3d3d3d00 203e3e3e 65636552     tes..===>>> Rece
  116144:	64657669 73656c20 20726573 6e616874     ived lesser than
  116154:	70786520 65746365 79622064 2e736574      expected bytes.
  116164:	3c3c3c20 0d3d3d3d 6e6f4300 7463656e      <<<===..Connect
  116174:	20676e69 77206f74 0d696669 6d53000a     ing to wifi...Sm
  116184:	4c747261 30324241 53003831 7472616d     artLAB2018.Smart
  116194:	0042414c 6e6e6f43 69746365 74206e6f     LAB.Connection t
  1161a4:	6361206f 73736563 696f7020 6620746e     o access point f
  1161b4:	656c6961 000a0d64 49464957 6e6f6320     ailed...WIFI con
  1161c4:	7463656e 74206465 6f68206f 6f707374     nected to hotspo
  1161d4:	000a0d74 61420a0d 6f626573 20647261     t.....Baseboard 
  1161e4:	61205049 65726464 273a7373 0a277325     IP address:'%s'.
  1161f4:	72724500 6420726f 63697665 73692065     .Error device is
  116204:	746f6e20 74616d20 6e696863 000a0d67      not matching...
  116214:	20534c41 74696e69 696c6169 0d64657a     ALS initialized.
  116224:	4950000a 6e692052 61697469 657a696c     ..PIR initialize
  116234:	000a0d64 69646152 6f4d206f 656c7564     d...Radio Module
  116244:	69203a20 6974696e 7a696c61 6f697461      : initializatio
  116254:	6166206e 64656c69 7265202c 20726f72     n failed, error 
  116264:	6425203d 21212120 52000a0d 6f696461     = %d !!!...Radio
  116274:	646f4d20 20656c75 6e69203a 61697469      Module : initia
  116284:	617a696c 6e6f6974 63757320 73736563     lization success
  116294:	2e2e2e20 54000a0d 72656d69 696e6920      ......Timer ini
  1162a4:	6c616974 64657a69 000a0d20 65726548     tialized ...Here
  1162b4:	20736920 49206e61 203a2044 30257830      is an ID : 0x%0
  1162c4:	0d207838 6548000a 69206572 68742073     8x ...Here is th
  1162d4:	74732065 73757461 726f6320 70736572     e status corresp
  1162e4:	69646e6f 3a20676e 20732520 59000a0d     onding : %s ...Y
  1162f4:	204e5741 736e6553 6e20726f 2065646f     AWN Sensor node 
  116304:	65732031 6e69646e 61642067 0d206174     1 sending data .
  116314:	4159000a 49204e57 544e4544 45494649     ..YAWN IDENTIFIE
  116324:	203a2052 0a0d6425 4d530020 4c545241     R : %d.. .SMARTL
  116334:	54204241 45504d45 55544152 3a204552     AB TEMPERATURE :
  116344:	312e2520 43b02066 59000a0d 204e5741      %.1f .C...YAWN 
  116354:	736e6553 6e20726f 2065646f 65732032     Sensor node 2 se
  116364:	6e69646e 61642067 0d206174 4159000a     nding data ...YA
  116374:	53204e57 6f736e65 2e322072 65732031     WN Sensor 2.1 se
  116384:	6e69646e 61642067 0d206174 6f50000a     nding data ...Po
  116394:	20726577 736e6f43 74706d75 206e6f69     wer Consumption 
  1163a4:	20312e32 2e25203a 57206631 20545441     2.1 : %.1f WATT 
  1163b4:	00200a0d 4e574159 6e655320 20726f73     .. .YAWN Sensor 
  1163c4:	20322e32 646e6573 20676e69 61746164     2.2 sending data
  1163d4:	000a0d20 65776f50 6f432072 6d75736e      ...Power Consum
  1163e4:	6f697470 2e32206e 203a2032 66312e25     ption 2.2 : %.1f
  1163f4:	54415720 0a0d2054 41590020 53204e57      WATT .. .YAWN S
  116404:	6f736e65 2e322072 65732033 6e69646e     ensor 2.3 sendin
  116414:	61642067 0d206174 6f50000a 20726577     g data ...Power 
  116424:	736e6f43 74706d75 206e6f69 20332e32     Consumption 2.3 
  116434:	2e25203a 57206631 20545441 00200a0d     : %.1f WATT .. .
  116444:	4e574159 6e655320 20726f73 65646f6e     YAWN Sensor node
  116454:	73203320 69646e65 6420676e 20617461      3 sending data 
  116464:	53000a0d 7472616d 2042414c 726f6f64     ...SmartLAB door
  116474:	20736920 6e65706f 000a0d20 72616d53      is open ...Smar
  116484:	42414c74 6f6f6420 73692072 6f6c6320     tLAB door is clo
  116494:	20646573 43000a0d 6b636568 20676e69     sed ...Checking 
  1164a4:	20726f66 69204449 6164206e 61626174     for ID in databa
  1164b4:	0d206573 7830000a 78323025 54000a0d     se ...0x%02x...T
  1164c4:	6c61746f 20444920 7830203a 78383025     otal ID : 0x%08x
  1164d4:	41000a0d 73656363 72472073 65746e61     ...Access Grante
  1164e4:	21212064 0d202121 6553000a 0d20746e     d !!!! ...Sent .
  1164f4:	6341000a 73736563 6e654420 20646569     ..Access Denied 
  116504:	2e2e2e2e 56000a0d 5455314f 58495754     .......VO1UTTWIX
  116514:	39453736 00535130 70747468 612f2f3a     67E90QS.http://a
  116524:	742e6970 676e6968 61657073 6f632e6b     pi.thingspeak.co
  116534:	70752f6d 65746164 6970613f 79656b5f     m/update?api_key
  116544:	2673253d 6c656966 253d3364 69662666     =%s&field3=%f&fi
  116554:	34646c65 2666253d 6c656966 253d3164     eld4=%f&field1=%
  116564:	69662664 32646c65 2664253d 6c656966     d&field2=%d&fiel
  116574:	253d3564 69662664 36646c65 2664253d     d5=%d&field6=%d&
  116584:	74617473 253d7375 69662673 37646c65     status=%s&field7
  116594:	2666253d 6c656966 253d3864 00202066     =%f&field8=%f  .
  1165a4:	646e6553 20676e69 206c6c61 61746144     Sending all Data
  1165b4:	0d2e2e2e 202b000a 646e6553 20676e69     ......+ Sending 
  1165c4:	65776f70 6d6f6372 2e2e3270 000a0d2e     powercomp2......
  1165d4:	6553202b 6e69646e 6f702067 63726577     + Sending powerc
  1165e4:	33706d6f 0d2e2e2e 6f44000a 0d20656e     omp3......Done .
  1165f4:	7468000a 2f3a7074 6970612f 6968742e     ..http://api.thi
  116604:	7073676e 2e6b6165 2f6d6f63 61647075     ngspeak.com/upda
  116614:	613f6574 6b5f6970 253d7965 69662673     te?api_key=%s&fi
  116624:	33646c65 2666253d 6c656966 253d3464     eld3=%f&field4=%
  116634:	69662666 31646c65 2664253d 6c656966     f&field1=%d&fiel
  116644:	253d3264 69662664 35646c65 2664253d     d2=%d&field5=%d&
  116654:	6c656966 253d3764 69662666 38646c65     field7=%f&field8
  116664:	2066253d 65530020 6e69646e 6c612067     =%f  .Sending al
  116674:	6144206c 62206174 49207475 65686344     l Data but IDche
  116684:	2e2e6b63 000a0d2e 70747468 612f2f3a     ck......http://a
  116694:	742e6970 676e6968 61657073 6f632e6b     pi.thingspeak.co
  1166a4:	70752f6d 65746164 6970613f 79656b5f     m/update?api_key
  1166b4:	2673253d 6c656966 253d3364 69662666     =%s&field3=%f&fi
  1166c4:	34646c65 2666253d 6c656966 253d3164     eld4=%f&field1=%
  1166d4:	69662664 32646c65 2664253d 6c656966     d&field2=%d&fiel
  1166e4:	253d3664 74732664 73757461 2673253d     d6=%d&status=%s&
  1166f4:	6c656966 253d3764 69662666 38646c65     field7=%f&field8
  116704:	2066253d 65530020 6e69646e 6c612067     =%f  .Sending al
  116714:	6144206c 62206174 64207475 20726f6f     l Data but door 
  116724:	74617473 2e2e7375 000a0d2e 70747468     status......http
  116734:	612f2f3a 742e6970 676e6968 61657073     ://api.thingspea
  116744:	6f632e6b 70752f6d 65746164 6970613f     k.com/update?api
  116754:	79656b5f 2673253d 6c656966 253d3364     _key=%s&field3=%
  116764:	69662666 34646c65 2666253d 6c656966     f&field4=%f&fiel
  116774:	253d3164 69662664 32646c65 2664253d     d1=%d&field2=%d&
  116784:	6c656966 253d3764 69662666 38646c65     field7=%f&field8
  116794:	2066253d 6e655300 676e6964 6c6c6120     =%f .Sending all
  1167a4:	74614420 75622061 6f642074 7320726f      Data but door s
  1167b4:	75746174 6e612073 44492064 63656863     tatus and IDchec
  1167c4:	2e2e2e6b 68000a0d 3a707474 70612f2f     k......http://ap
  1167d4:	68742e69 73676e69 6b616570 6d6f632e     i.thingspeak.com
  1167e4:	6470752f 3f657461 5f697061 3d79656b     /update?api_key=
  1167f4:	66267325 646c6569 66253d33 65696626     %s&field3=%f&fie
  116804:	3d36646c 66266425 646c6569 64253d31     ld6=%d&field1=%d
  116814:	65696626 3d32646c 73266425 75746174     &field2=%d&statu
  116824:	73253d73 65696626 3d37646c 66266625     s=%s&field7=%f&f
  116834:	646c6569 66253d38 53002020 69646e65     ield8=%f  .Sendi
  116844:	6120676e 44206c6c 20617461 20747562     ng all Data but 
  116854:	726f6f64 61747320 20737574 20646e61     door status and 
  116864:	72727563 2e746e65 0a0d2e2e 74746800     current......htt
  116874:	2f2f3a70 2e697061 6e696874 65707367     p://api.thingspe
  116884:	632e6b61 752f6d6f 74616470 70613f65     ak.com/update?ap
  116894:	656b5f69 73253d79 65696626 3d33646c     i_key=%s&field3=
  1168a4:	66266625 646c6569 64253d31 65696626     %f&field1=%d&fie
  1168b4:	3d32646c 66266425 646c6569 64253d35     ld2=%d&field5=%d
  1168c4:	65696626 3d37646c 66266625 646c6569     &field7=%f&field
  1168d4:	66253d38 53002020 69646e65 6120676e     8=%f  .Sending a
  1168e4:	44206c6c 20617461 20747562 72727563     ll Data but curr
  1168f4:	20746e65 20646e61 68634449 2e6b6365     ent and IDcheck.
  116904:	0a0d2e2e 74746800 2f2f3a70 2e697061     .....http://api.
  116914:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  116924:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  116934:	65696626 3d34646c 66266625 646c6569     &field4=%f&field
  116944:	64253d31 65696626 3d32646c 66266425     1=%d&field2=%d&f
  116954:	646c6569 64253d35 65696626 3d36646c     ield5=%d&field6=
  116964:	73266425 75746174 73253d73 65696626     %d&status=%s&fie
  116974:	3d37646c 66266625 646c6569 66253d38     ld7=%f&field8=%f
  116984:	53002020 69646e65 6120676e 44206c6c       .Sending all D
  116994:	20617461 20747562 706d6574 0d2e2e2e     ata but temp....
  1169a4:	7468000a 2f3a7074 6970612f 6968742e     ..http://api.thi
  1169b4:	7073676e 2e6b6165 2f6d6f63 61647075     ngspeak.com/upda
  1169c4:	613f6574 6b5f6970 253d7965 69662673     te?api_key=%s&fi
  1169d4:	34646c65 2666253d 6c656966 253d3164     eld4=%f&field1=%
  1169e4:	69662664 32646c65 2664253d 6c656966     d&field2=%d&fiel
  1169f4:	253d3564 69662664 37646c65 2666253d     d5=%d&field7=%f&
  116a04:	6c656966 253d3864 00202066 646e6553     field8=%f  .Send
  116a14:	20676e69 206c6c61 61746144 74756220     ing all Data but
  116a24:	6d657420 6e612070 44492064 63656863      temp and IDchec
  116a34:	2e2e2e6b 68000a0d 3a707474 70612f2f     k......http://ap
  116a44:	68742e69 73676e69 6b616570 6d6f632e     i.thingspeak.com
  116a54:	6470752f 3f657461 5f697061 3d79656b     /update?api_key=
  116a64:	66267325 646c6569 66253d34 65696626     %s&field4=%f&fie
  116a74:	3d31646c 66266425 646c6569 64253d32     ld1=%d&field2=%d
  116a84:	65696626 3d36646c 73266425 75746174     &field6=%d&statu
  116a94:	73253d73 65696626 3d37646c 66266625     s=%s&field7=%f&f
  116aa4:	646c6569 66253d38 53002020 69646e65     ield8=%f  .Sendi
  116ab4:	6120676e 44206c6c 20617461 20747562     ng all Data but 
  116ac4:	706d6574 646e6120 6f6f6420 61747372     temp and doorsta
  116ad4:	2e737574 0a0d2e2e 74746800 2f2f3a70     tus......http://
  116ae4:	2e697061 6e696874 65707367 632e6b61     api.thingspeak.c
  116af4:	752f6d6f 74616470 70613f65 656b5f69     om/update?api_ke
  116b04:	73253d79 65696626 3d36646c 66266425     y=%s&field6=%d&f
  116b14:	646c6569 64253d31 65696626 3d32646c     ield1=%d&field2=
  116b24:	66266425 646c6569 64253d35 61747326     %d&field5=%d&sta
  116b34:	3d737574 66267325 646c6569 66253d37     tus=%s&field7=%f
  116b44:	65696626 3d38646c 20206625 6e655300     &field8=%f  .Sen
  116b54:	676e6964 6c6c6120 74614420 75622061     ding all Data bu
  116b64:	65742074 6120706d 6320646e 65727275     t temp and curre
  116b74:	2e2e746e 000a0d2e 70747468 612f2f3a     nt......http://a
  116b84:	742e6970 676e6968 61657073 6f632e6b     pi.thingspeak.co
  116b94:	70752f6d 65746164 6970613f 79656b5f     m/update?api_key
  116ba4:	2673253d 6c656966 253d3464 69662666     =%s&field4=%f&fi
  116bb4:	31646c65 2664253d 6c656966 253d3264     eld1=%d&field2=%
  116bc4:	69662664 37646c65 2666253d 6c656966     d&field7=%f&fiel
  116bd4:	253d3864 00202066 646e6553 20676e69     d8=%f  .Sending 
  116be4:	206c6c61 61746144 74756220 6d657420     all Data but tem
  116bf4:	6e612070 6f642064 7320726f 75746174     p and door statu
  116c04:	6e612073 44492064 63656863 2e2e2e6b     s and IDcheck...
  116c14:	68000a0d 3a707474 70612f2f 68742e69     ...http://api.th
  116c24:	73676e69 6b616570 6d6f632e 6470752f     ingspeak.com/upd
  116c34:	3f657461 5f697061 3d79656b 66267325     ate?api_key=%s&f
  116c44:	646c6569 66253d33 65696626 3d31646c     ield3=%f&field1=
  116c54:	66266425 646c6569 64253d32 65696626     %d&field2=%d&fie
  116c64:	3d37646c 66266625 646c6569 66253d38     ld7=%f&field8=%f
  116c74:	53002020 69646e65 6120676e 44206c6c       .Sending all D
  116c84:	20617461 20747562 72727563 20746e65     ata but current 
  116c94:	20646e61 726f6f64 61747320 20737574     and door status 
  116ca4:	20646e61 68634449 2e6b6365 0a0d2e2e     and IDcheck.....
  116cb4:	74746800 2f2f3a70 2e697061 6e696874     .http://api.thin
  116cc4:	65707367 632e6b61 752f6d6f 74616470     gspeak.com/updat
  116cd4:	70613f65 656b5f69 73253d79 65696626     e?api_key=%s&fie
  116ce4:	3d35646c 66266425 646c6569 64253d31     ld5=%d&field1=%d
  116cf4:	65696626 3d32646c 66266425 646c6569     &field2=%d&field
  116d04:	66253d37 65696626 3d38646c 20206625     7=%f&field8=%f  
  116d14:	6e655300 676e6964 6c6c6120 74614420     .Sending all Dat
  116d24:	75622061 75632074 6e657272 6e612074     a but current an
  116d34:	65742064 6120706d 4920646e 65686344     d temp and IDche
  116d44:	2e2e6b63 000a0d2e 70747468 612f2f3a     ck......http://a
  116d54:	742e6970 676e6968 61657073 6f632e6b     pi.thingspeak.co
  116d64:	70752f6d 65746164 6970613f 79656b5f     m/update?api_key
  116d74:	2673253d 6c656966 253d3664 69662664     =%s&field6=%d&fi
  116d84:	31646c65 2664253d 6c656966 253d3264     eld1=%d&field2=%
  116d94:	74732664 73757461 2673253d 6c656966     d&status=%s&fiel
  116da4:	253d3764 69662666 38646c65 2066253d     d7=%f&field8=%f 
  116db4:	65530020 6e69646e 6c612067 6144206c      .Sending all Da
  116dc4:	62206174 63207475 65727275 6120746e     ta but current a
  116dd4:	7420646e 20706d65 20646e61 726f6f64     nd temp and door
  116de4:	61747320 2e737574 0a0d2e2e 74746800      status......htt
  116df4:	2f2f3a70 2e697061 6e696874 65707367     p://api.thingspe
  116e04:	632e6b61 752f6d6f 74616470 70613f65     ak.com/update?ap
  116e14:	656b5f69 73253d79 65696626 3d31646c     i_key=%s&field1=
  116e24:	66266425 646c6569 64253d32 65696626     %d&field2=%d&fie
  116e34:	3d37646c 66266625 646c6569 66253d38     ld7=%f&field8=%f
  116e44:	53002020 69646e65 6120676e 44206c6c       .Sending all D
  116e54:	20617461 20747562 706d6574 646e6120     ata but temp and
  116e64:	72756320 746e6572 646e6120 6f6f6420      current and doo
  116e74:	74732072 73757461 646e6120 63444920     r status and IDc
  116e84:	6b636568 0d2e2e2e 7468000a 2f3a7074     heck......http:/
  116e94:	6970612f 6968742e 7073676e 2e6b6165     /api.thingspeak.
  116ea4:	2f6d6f63 61647075 613f6574 6b5f6970     com/update?api_k
  116eb4:	253d7965 69662673 33646c65 2666253d     ey=%s&field3=%f&
  116ec4:	6c656966 253d3464 69662666 31646c65     field4=%f&field1
  116ed4:	2664253d 6c656966 253d3264 69662664     =%d&field2=%d&fi
  116ee4:	35646c65 2664253d 6c656966 253d3664     eld5=%d&field6=%
  116ef4:	74732664 73757461 2673253d 6c656966     d&status=%s&fiel
  116f04:	253d3864 00202066 70747468 612f2f3a     d8=%f  .http://a
  116f14:	742e6970 676e6968 61657073 6f632e6b     pi.thingspeak.co
  116f24:	70752f6d 65746164 6970613f 79656b5f     m/update?api_key
  116f34:	2673253d 6c656966 253d3364 69662666     =%s&field3=%f&fi
  116f44:	34646c65 2666253d 6c656966 253d3164     eld4=%f&field1=%
  116f54:	69662664 32646c65 2664253d 6c656966     d&field2=%d&fiel
  116f64:	253d3564 69662664 38646c65 2066253d     d5=%d&field8=%f 
  116f74:	74680020 2f3a7074 6970612f 6968742e      .http://api.thi
  116f84:	7073676e 2e6b6165 2f6d6f63 61647075     ngspeak.com/upda
  116f94:	613f6574 6b5f6970 253d7965 69662673     te?api_key=%s&fi
  116fa4:	33646c65 2666253d 6c656966 253d3464     eld3=%f&field4=%
  116fb4:	69662666 31646c65 2664253d 6c656966     f&field1=%d&fiel
  116fc4:	253d3264 69662664 36646c65 2664253d     d2=%d&field6=%d&
  116fd4:	74617473 253d7375 69662673 38646c65     status=%s&field8
  116fe4:	2066253d 74680020 2f3a7074 6970612f     =%f  .http://api
  116ff4:	6968742e 7073676e 2e6b6165 2f6d6f63     .thingspeak.com/
  117004:	61647075 613f6574 6b5f6970 253d7965     update?api_key=%
  117014:	69662673 33646c65 2666253d 6c656966     s&field3=%f&fiel
  117024:	253d3464 69662666 31646c65 2664253d     d4=%f&field1=%d&
  117034:	6c656966 253d3264 69662664 38646c65     field2=%d&field8
  117044:	2066253d 74680020 2f3a7074 6970612f     =%f  .http://api
  117054:	6968742e 7073676e 2e6b6165 2f6d6f63     .thingspeak.com/
  117064:	61647075 613f6574 6b5f6970 253d7965     update?api_key=%
  117074:	69662673 33646c65 2666253d 6c656966     s&field3=%f&fiel
  117084:	253d3664 69662664 31646c65 2664253d     d6=%d&field1=%d&
  117094:	6c656966 253d3264 74732664 73757461     field2=%d&status
  1170a4:	2673253d 6c656966 253d3864 00202066     =%s&field8=%f  .
  1170b4:	70747468 612f2f3a 742e6970 676e6968     http://api.thing
  1170c4:	61657073 6f632e6b 70752f6d 65746164     speak.com/update
  1170d4:	6970613f 79656b5f 2673253d 6c656966     ?api_key=%s&fiel
  1170e4:	253d3364 69662666 31646c65 2664253d     d3=%f&field1=%d&
  1170f4:	6c656966 253d3264 69662664 35646c65     field2=%d&field5
  117104:	2664253d 6c656966 253d3864 00202066     =%d&field8=%f  .
  117114:	70747468 612f2f3a 742e6970 676e6968     http://api.thing
  117124:	61657073 6f632e6b 70752f6d 65746164     speak.com/update
  117134:	6970613f 79656b5f 2673253d 6c656966     ?api_key=%s&fiel
  117144:	253d3464 69662666 31646c65 2664253d     d4=%f&field1=%d&
  117154:	6c656966 253d3264 69662664 35646c65     field2=%d&field5
  117164:	2664253d 6c656966 253d3664 74732664     =%d&field6=%d&st
  117174:	73757461 2673253d 6c656966 253d3864     atus=%s&field8=%
  117184:	00202066 70747468 612f2f3a 742e6970     f  .http://api.t
  117194:	676e6968 61657073 6f632e6b 70752f6d     hingspeak.com/up
  1171a4:	65746164 6970613f 79656b5f 2673253d     date?api_key=%s&
  1171b4:	6c656966 253d3464 69662666 31646c65     field4=%f&field1
  1171c4:	2664253d 6c656966 253d3264 69662664     =%d&field2=%d&fi
  1171d4:	35646c65 2664253d 6c656966 253d3864     eld5=%d&field8=%
  1171e4:	00202066 70747468 612f2f3a 742e6970     f  .http://api.t
  1171f4:	676e6968 61657073 6f632e6b 70752f6d     hingspeak.com/up
  117204:	65746164 6970613f 79656b5f 2673253d     date?api_key=%s&
  117214:	6c656966 253d3464 69662666 31646c65     field4=%f&field1
  117224:	2664253d 6c656966 253d3264 69662664     =%d&field2=%d&fi
  117234:	36646c65 2664253d 74617473 253d7375     eld6=%d&status=%
  117244:	69662673 38646c65 2066253d 74680020     s&field8=%f  .ht
  117254:	2f3a7074 6970612f 6968742e 7073676e     tp://api.thingsp
  117264:	2e6b6165 2f6d6f63 61647075 613f6574     eak.com/update?a
  117274:	6b5f6970 253d7965 69662673 36646c65     pi_key=%s&field6
  117284:	2664253d 6c656966 253d3164 69662664     =%d&field1=%d&fi
  117294:	32646c65 2664253d 6c656966 253d3564     eld2=%d&field5=%
  1172a4:	74732664 73757461 2673253d 6c656966     d&status=%s&fiel
  1172b4:	253d3864 00202066 70747468 612f2f3a     d8=%f  .http://a
  1172c4:	742e6970 676e6968 61657073 6f632e6b     pi.thingspeak.co
  1172d4:	70752f6d 65746164 6970613f 79656b5f     m/update?api_key
  1172e4:	2673253d 6c656966 253d3464 69662666     =%s&field4=%f&fi
  1172f4:	31646c65 2664253d 6c656966 253d3264     eld1=%d&field2=%
  117304:	69662664 38646c65 2066253d 74680020     d&field8=%f  .ht
  117314:	2f3a7074 6970612f 6968742e 7073676e     tp://api.thingsp
  117324:	2e6b6165 2f6d6f63 61647075 613f6574     eak.com/update?a
  117334:	6b5f6970 253d7965 69662673 33646c65     pi_key=%s&field3
  117344:	2666253d 6c656966 253d3164 69662664     =%f&field1=%d&fi
  117354:	32646c65 2664253d 6c656966 253d3864     eld2=%d&field8=%
  117364:	00202066 70747468 612f2f3a 742e6970     f  .http://api.t
  117374:	676e6968 61657073 6f632e6b 70752f6d     hingspeak.com/up
  117384:	65746164 6970613f 79656b5f 2673253d     date?api_key=%s&
  117394:	6c656966 253d3564 69662664 31646c65     field5=%d&field1
  1173a4:	2664253d 6c656966 253d3264 69662664     =%d&field2=%d&fi
  1173b4:	38646c65 2066253d 74680020 2f3a7074     eld8=%f  .http:/
  1173c4:	6970612f 6968742e 7073676e 2e6b6165     /api.thingspeak.
  1173d4:	2f6d6f63 61647075 613f6574 6b5f6970     com/update?api_k
  1173e4:	253d7965 69662673 36646c65 2664253d     ey=%s&field6=%d&
  1173f4:	6c656966 253d3164 69662664 32646c65     field1=%d&field2
  117404:	2664253d 74617473 253d7375 69662673     =%d&status=%s&fi
  117414:	38646c65 2066253d 74680020 2f3a7074     eld8=%f  .http:/
  117424:	6970612f 6968742e 7073676e 2e6b6165     /api.thingspeak.
  117434:	2f6d6f63 61647075 613f6574 6b5f6970     com/update?api_k
  117444:	253d7965 69662673 31646c65 2664253d     ey=%s&field1=%d&
  117454:	6c656966 253d3264 69662664 38646c65     field2=%d&field8
  117464:	2066253d 74680020 2f3a7074 6970612f     =%f  .http://api
  117474:	6968742e 7073676e 2e6b6165 2f6d6f63     .thingspeak.com/
  117484:	61647075 613f6574 6b5f6970 253d7965     update?api_key=%
  117494:	69662673 33646c65 2666253d 6c656966     s&field3=%f&fiel
  1174a4:	253d3464 69662666 31646c65 2664253d     d4=%f&field1=%d&
  1174b4:	6c656966 253d3264 69662664 35646c65     field2=%d&field5
  1174c4:	2664253d 6c656966 253d3664 74732664     =%d&field6=%d&st
  1174d4:	73757461 2673253d 6c656966 253d3764     atus=%s&field7=%
  1174e4:	00202066 70747468 612f2f3a 742e6970     f  .http://api.t
  1174f4:	676e6968 61657073 6f632e6b 70752f6d     hingspeak.com/up
  117504:	65746164 6970613f 79656b5f 2673253d     date?api_key=%s&
  117514:	6c656966 253d3364 69662666 34646c65     field3=%f&field4
  117524:	2666253d 6c656966 253d3164 69662664     =%f&field1=%d&fi
  117534:	32646c65 2664253d 6c656966 253d3564     eld2=%d&field5=%
  117544:	69662664 37646c65 2066253d 74680020     d&field7=%f  .ht
  117554:	2f3a7074 6970612f 6968742e 7073676e     tp://api.thingsp
  117564:	2e6b6165 2f6d6f63 61647075 613f6574     eak.com/update?a
  117574:	6b5f6970 253d7965 69662673 33646c65     pi_key=%s&field3
  117584:	2666253d 6c656966 253d3464 69662666     =%f&field4=%f&fi
  117594:	31646c65 2664253d 6c656966 253d3264     eld1=%d&field2=%
  1175a4:	69662664 36646c65 2664253d 74617473     d&field6=%d&stat
  1175b4:	253d7375 69662673 37646c65 2066253d     us=%s&field7=%f 
  1175c4:	74680020 2f3a7074 6970612f 6968742e      .http://api.thi
  1175d4:	7073676e 2e6b6165 2f6d6f63 61647075     ngspeak.com/upda
  1175e4:	613f6574 6b5f6970 253d7965 69662673     te?api_key=%s&fi
  1175f4:	33646c65 2666253d 6c656966 253d3464     eld3=%f&field4=%
  117604:	69662666 31646c65 2664253d 6c656966     f&field1=%d&fiel
  117614:	253d3264 69662664 37646c65 2066253d     d2=%d&field7=%f 
  117624:	74746800 2f2f3a70 2e697061 6e696874     .http://api.thin
  117634:	65707367 632e6b61 752f6d6f 74616470     gspeak.com/updat
  117644:	70613f65 656b5f69 73253d79 65696626     e?api_key=%s&fie
  117654:	3d33646c 66266625 646c6569 64253d36     ld3=%f&field6=%d
  117664:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117674:	64253d32 61747326 3d737574 66267325     2=%d&status=%s&f
  117684:	646c6569 66253d37 68002020 3a707474     ield7=%f  .http:
  117694:	70612f2f 68742e69 73676e69 6b616570     //api.thingspeak
  1176a4:	6d6f632e 6470752f 3f657461 5f697061     .com/update?api_
  1176b4:	3d79656b 66267325 646c6569 66253d33     key=%s&field3=%f
  1176c4:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  1176d4:	64253d32 65696626 3d35646c 66266425     2=%d&field5=%d&f
  1176e4:	646c6569 66253d37 68002020 3a707474     ield7=%f  .http:
  1176f4:	70612f2f 68742e69 73676e69 6b616570     //api.thingspeak
  117704:	6d6f632e 6470752f 3f657461 5f697061     .com/update?api_
  117714:	3d79656b 66267325 646c6569 66253d34     key=%s&field4=%f
  117724:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117734:	64253d32 65696626 3d35646c 66266425     2=%d&field5=%d&f
  117744:	646c6569 64253d36 61747326 3d737574     ield6=%d&status=
  117754:	66267325 646c6569 66253d37 68002020     %s&field7=%f  .h
  117764:	3a707474 70612f2f 68742e69 73676e69     ttp://api.things
  117774:	6b616570 6d6f632e 6470752f 3f657461     peak.com/update?
  117784:	5f697061 3d79656b 66267325 646c6569     api_key=%s&field
  117794:	66253d34 65696626 3d31646c 66266425     4=%f&field1=%d&f
  1177a4:	646c6569 64253d32 65696626 3d35646c     ield2=%d&field5=
  1177b4:	66266425 646c6569 66253d37 68002020     %d&field7=%f  .h
  1177c4:	3a707474 70612f2f 68742e69 73676e69     ttp://api.things
  1177d4:	6b616570 6d6f632e 6470752f 3f657461     peak.com/update?
  1177e4:	5f697061 3d79656b 66267325 646c6569     api_key=%s&field
  1177f4:	66253d34 65696626 3d31646c 66266425     4=%f&field1=%d&f
  117804:	646c6569 64253d32 65696626 3d36646c     ield2=%d&field6=
  117814:	73266425 75746174 73253d73 65696626     %d&status=%s&fie
  117824:	3d37646c 20206625 74746800 2f2f3a70     ld7=%f  .http://
  117834:	2e697061 6e696874 65707367 632e6b61     api.thingspeak.c
  117844:	752f6d6f 74616470 70613f65 656b5f69     om/update?api_ke
  117854:	73253d79 65696626 3d36646c 66266425     y=%s&field6=%d&f
  117864:	646c6569 64253d31 65696626 3d32646c     ield1=%d&field2=
  117874:	66266425 646c6569 64253d35 61747326     %d&field5=%d&sta
  117884:	3d737574 66267325 646c6569 66253d37     tus=%s&field7=%f
  117894:	68002020 3a707474 70612f2f 68742e69       .http://api.th
  1178a4:	73676e69 6b616570 6d6f632e 6470752f     ingspeak.com/upd
  1178b4:	3f657461 5f697061 3d79656b 66267325     ate?api_key=%s&f
  1178c4:	646c6569 66253d34 65696626 3d31646c     ield4=%f&field1=
  1178d4:	66266425 646c6569 64253d32 65696626     %d&field2=%d&fie
  1178e4:	3d37646c 20206625 74746800 2f2f3a70     ld7=%f  .http://
  1178f4:	2e697061 6e696874 65707367 632e6b61     api.thingspeak.c
  117904:	752f6d6f 74616470 70613f65 656b5f69     om/update?api_ke
  117914:	73253d79 65696626 3d33646c 66266625     y=%s&field3=%f&f
  117924:	646c6569 64253d31 65696626 3d32646c     ield1=%d&field2=
  117934:	66266425 646c6569 66253d37 68002020     %d&field7=%f  .h
  117944:	3a707474 70612f2f 68742e69 73676e69     ttp://api.things
  117954:	6b616570 6d6f632e 6470752f 3f657461     peak.com/update?
  117964:	5f697061 3d79656b 66267325 646c6569     api_key=%s&field
  117974:	64253d35 65696626 3d31646c 66266425     5=%d&field1=%d&f
  117984:	646c6569 64253d32 65696626 3d37646c     ield2=%d&field7=
  117994:	20206625 74746800 2f2f3a70 2e697061     %f  .http://api.
  1179a4:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  1179b4:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  1179c4:	65696626 3d36646c 66266425 646c6569     &field6=%d&field
  1179d4:	64253d31 65696626 3d32646c 73266425     1=%d&field2=%d&s
  1179e4:	75746174 73253d73 65696626 3d37646c     tatus=%s&field7=
  1179f4:	20206625 74746800 2f2f3a70 2e697061     %f  .http://api.
  117a04:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  117a14:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  117a24:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117a34:	64253d32 65696626 3d37646c 20206625     2=%d&field7=%f  
  117a44:	74746800 2f2f3a70 2e697061 6e696874     .http://api.thin
  117a54:	65707367 632e6b61 752f6d6f 74616470     gspeak.com/updat
  117a64:	70613f65 656b5f69 73253d79 65696626     e?api_key=%s&fie
  117a74:	3d33646c 66266625 646c6569 66253d34     ld3=%f&field4=%f
  117a84:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117a94:	64253d32 65696626 3d35646c 66266425     2=%d&field5=%d&f
  117aa4:	646c6569 64253d36 61747326 3d737574     ield6=%d&status=
  117ab4:	20207325 74746800 2f2f3a70 2e697061     %s  .http://api.
  117ac4:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  117ad4:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  117ae4:	65696626 3d33646c 66266625 646c6569     &field3=%f&field
  117af4:	66253d34 65696626 3d31646c 66266425     4=%f&field1=%d&f
  117b04:	646c6569 64253d32 65696626 3d35646c     ield2=%d&field5=
  117b14:	20206425 74746800 2f2f3a70 2e697061     %d  .http://api.
  117b24:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  117b34:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  117b44:	65696626 3d33646c 66266625 646c6569     &field3=%f&field
  117b54:	66253d34 65696626 3d31646c 66266425     4=%f&field1=%d&f
  117b64:	646c6569 64253d32 65696626 3d36646c     ield2=%d&field6=
  117b74:	73266425 75746174 73253d73 68002020     %d&status=%s  .h
  117b84:	3a707474 70612f2f 68742e69 73676e69     ttp://api.things
  117b94:	6b616570 6d6f632e 6470752f 3f657461     peak.com/update?
  117ba4:	5f697061 3d79656b 66267325 646c6569     api_key=%s&field
  117bb4:	66253d33 65696626 3d34646c 66266625     3=%f&field4=%f&f
  117bc4:	646c6569 64253d31 65696626 3d32646c     ield1=%d&field2=
  117bd4:	20206425 74746800 2f2f3a70 2e697061     %d  .http://api.
  117be4:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  117bf4:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  117c04:	65696626 3d33646c 66266625 646c6569     &field3=%f&field
  117c14:	64253d36 65696626 3d31646c 66266425     6=%d&field1=%d&f
  117c24:	646c6569 64253d32 61747326 3d737574     ield2=%d&status=
  117c34:	20207325 74746800 2f2f3a70 2e697061     %s  .http://api.
  117c44:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  117c54:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  117c64:	65696626 3d33646c 66266625 646c6569     &field3=%f&field
  117c74:	64253d31 65696626 3d32646c 66266425     1=%d&field2=%d&f
  117c84:	646c6569 64253d35 68002020 3a707474     ield5=%d  .http:
  117c94:	70612f2f 68742e69 73676e69 6b616570     //api.thingspeak
  117ca4:	6d6f632e 6470752f 3f657461 5f697061     .com/update?api_
  117cb4:	3d79656b 66267325 646c6569 66253d34     key=%s&field4=%f
  117cc4:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117cd4:	64253d32 65696626 3d35646c 66266425     2=%d&field5=%d&f
  117ce4:	646c6569 64253d36 61747326 3d737574     ield6=%d&status=
  117cf4:	20207325 74746800 2f2f3a70 2e697061     %s  .http://api.
  117d04:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  117d14:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  117d24:	65696626 3d34646c 66266625 646c6569     &field4=%f&field
  117d34:	64253d31 65696626 3d32646c 66266425     1=%d&field2=%d&f
  117d44:	646c6569 64253d35 68002020 3a707474     ield5=%d  .http:
  117d54:	70612f2f 68742e69 73676e69 6b616570     //api.thingspeak
  117d64:	6d6f632e 6470752f 3f657461 5f697061     .com/update?api_
  117d74:	3d79656b 66267325 646c6569 66253d34     key=%s&field4=%f
  117d84:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117d94:	64253d32 65696626 3d36646c 73266425     2=%d&field6=%d&s
  117da4:	75746174 73253d73 68002020 3a707474     tatus=%s  .http:
  117db4:	70612f2f 68742e69 73676e69 6b616570     //api.thingspeak
  117dc4:	6d6f632e 6470752f 3f657461 5f697061     .com/update?api_
  117dd4:	3d79656b 66267325 646c6569 64253d36     key=%s&field6=%d
  117de4:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117df4:	64253d32 65696626 3d35646c 73266425     2=%d&field5=%d&s
  117e04:	75746174 73253d73 68002020 3a707474     tatus=%s  .http:
  117e14:	70612f2f 68742e69 73676e69 6b616570     //api.thingspeak
  117e24:	6d6f632e 6470752f 3f657461 5f697061     .com/update?api_
  117e34:	3d79656b 66267325 646c6569 66253d34     key=%s&field4=%f
  117e44:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117e54:	64253d32 68002020 3a707474 70612f2f     2=%d  .http://ap
  117e64:	68742e69 73676e69 6b616570 6d6f632e     i.thingspeak.com
  117e74:	6470752f 3f657461 5f697061 3d79656b     /update?api_key=
  117e84:	66267325 646c6569 66253d33 65696626     %s&field3=%f&fie
  117e94:	3d31646c 66266425 646c6569 64253d32     ld1=%d&field2=%d
  117ea4:	68002020 3a707474 70612f2f 68742e69       .http://api.th
  117eb4:	73676e69 6b616570 6d6f632e 6470752f     ingspeak.com/upd
  117ec4:	3f657461 5f697061 3d79656b 66267325     ate?api_key=%s&f
  117ed4:	646c6569 64253d35 65696626 3d31646c     ield5=%d&field1=
  117ee4:	66266425 646c6569 64253d32 68002020     %d&field2=%d  .h
  117ef4:	3a707474 70612f2f 68742e69 73676e69     ttp://api.things
  117f04:	6b616570 6d6f632e 6470752f 3f657461     peak.com/update?
  117f14:	5f697061 3d79656b 66267325 646c6569     api_key=%s&field
  117f24:	64253d36 65696626 3d31646c 66266425     6=%d&field1=%d&f
  117f34:	646c6569 64253d32 61747326 3d737574     ield2=%d&status=
  117f44:	20207325 74746800 2f2f3a70 2e697061     %s  .http://api.
  117f54:	6e696874 65707367 632e6b61 752f6d6f     thingspeak.com/u
  117f64:	74616470 70613f65 656b5f69 73253d79     pdate?api_key=%s
  117f74:	65696626 3d31646c 66266425 646c6569     &field1=%d&field
  117f84:	64253d32 43002020 6e4f2f3a 696d6553     2=%d  .C:/OnSemi
  117f94:	646e6f63 6f746375 78652f72 6e726574     conductor/extern
  117fa4:	6d2f6c61 2d646562 702f736f 6674616c     al/mbed-os/platf
  117fb4:	2f6d726f 676e6953 6f74656c 7274506e     orm/SingletonPtr
  117fc4:	5f00682e 20727470 28203d3d 292a2054     .h._ptr == (T *)
  117fd4:	61645f26 00006174                       &_data..

00117fdc <vtable for mbed::SPI2>:
	...
  117fe4:	00105995 001059bd 00105a41 00105a59     .Y...Y..AZ..YZ..
  117ff4:	00105899 0010589b                       .X...X..

00117ffc <unhex>:
  117ffc:	ffffffff ffffffff ffffffff ffffffff     ................
  11800c:	ffffffff ffffffff ffffffff ffffffff     ................
  11801c:	ffffffff ffffffff ffffffff ffffffff     ................
  11802c:	03020100 07060504 ffff0908 ffffffff     ................
  11803c:	0c0b0aff ff0f0e0d ffffffff ffffffff     ................
  11804c:	ffffffff ffffffff ffffffff ffffffff     ................
  11805c:	0c0b0aff ff0f0e0d ffffffff ffffffff     ................
  11806c:	ffffffff ffffffff ffffffff ffffffff     ................
	...

001180fc <normal_url_char>:
  1180fc:	00000000 7ffffff6 ffffffff 7fffffff     ................
	...

0011811c <tokens>:
	...
  11813c:	23002100 27262524 2b2a0000 002e2d00     .!.#$%&'..*+.-..
  11814c:	33323130 37363534 00003938 00000000     0123456789......
  11815c:	63626100 67666564 6b6a6968 6f6e6d6c     .abcdefghijklmno
  11816c:	73727170 77767574 007a7978 5f5e0000     pqrstuvwxyz...^_
  11817c:	63626160 67666564 6b6a6968 6f6e6d6c     `abcdefghijklmno
  11818c:	73727170 77767574 007a7978 007e007c     pqrstuvwxyz.|.~.
	...
  11821c:	50545448 5241505f 5f524553 4e525245     HTTP_PARSER_ERRN
  11822c:	6170284f 72657372 3d3d2029 45504820     O(parser) == HPE
  11823c:	004b4f5f 70747468 7261705f 2e726573     _OK.http_parser.
  11824c:	00707063 26262030 6e552220 776f6e6b     cpp.0 && "Unknow
  11825c:	6568206e 72656461 6174735f 00226574     n header_state".
  11826c:	26262030 68532220 646c756f 2074276e     0 && "Shouldn't 
  11827c:	20746567 65726568 7000222e 65737261     get here.".parse
  11828c:	633e2d72 65746e6f 6c5f746e 74676e65     r->content_lengt
  11829c:	3d212068 26203020 61702026 72657372     h != 0 && parser
  1182ac:	6f633e2d 6e65746e 656c5f74 6874676e     ->content_length
  1182bc:	203d2120 4f4c4c55 4d5f474e 70005841      != ULLONG_MAX.p
  1182cc:	65737261 6e3e2d72 64616572 203d3d20     arser->nread == 
  1182dc:	61700031 72657372 6c663e2d 20736761     1.parser->flags 
  1182ec:	5f462026 4e554843 0044454b 73726170     & F_CHUNKED.pars
  1182fc:	3e2d7265 746e6f63 5f746e65 676e656c     er->content_leng
  11830c:	3d206874 0030203d 26262030 6e752220     th == 0.0 && "un
  11831c:	646e6168 2064656c 74617473 28002265     handled state".(
  11832c:	61656828 5f726564 6c656966 616d5f64     (header_field_ma
  11833c:	3f206b72 3a203120 20293020 6828202b     rk ? 1 : 0) + (h
  11834c:	65646165 61765f72 5f65756c 6b72616d     eader_value_mark
  11835c:	31203f20 30203a20 202b2029 6c727528      ? 1 : 0) + (url
  11836c:	72616d5f 203f206b 203a2031 2b202930     _mark ? 1 : 0) +
  11837c:	6f622820 6d5f7964 206b7261 2031203f      (body_mark ? 1 
  11838c:	2930203a 28202b20 74617473 6d5f7375     : 0) + (status_m
  11839c:	206b7261 2031203f 2930203a 3d3c2029     ark ? 1 : 0)) <=
  1183ac:	70003120 79786f72 6e6f632d 7463656e      1.proxy-connect
  1183bc:	006e6f69 6e617274 72656673 636e652d     ion.transfer-enc
  1183cc:	6e69646f 70750067 64617267 68630065     oding.upgrade.ch
  1183dc:	656b6e75 656b0064 612d7065 6576696c     unked.keep-alive
  1183ec:	6f6c6300 3c006573 6e6b6e75 3e6e776f     .close.<unknown>
  1183fc:	73282800 5f657a69 65202974 20297272     .((size_t) err) 
  11840c:	5241203c 5f594152 455a4953 74746828     < ARRAY_SIZE(htt
  11841c:	74735f70 72726572 745f726f 00296261     p_strerror_tab).
  11842c:	6e552221 65707865 64657463 61747320     !"Unexpected sta
  11843c:	00226574 26262030 74412220 706d6574     te".0 && "Attemp
  11844c:	676e6974 206f7420 73756170 61702065     ting to pause pa
  11845c:	72657372 206e6920 6f727265 74732072     rser in error st
  11846c:	22657461 63757300 73736563 45504800     ate".success.HPE
  11847c:	5f42435f 7373656d 5f656761 69676562     _CB_message_begi
  11848c:	6874006e 6e6f2065 73656d5f 65676173     n.the on_message
  11849c:	6765625f 63206e69 626c6c61 206b6361     _begin callback 
  1184ac:	6c696166 48006465 435f4550 72755f42     failed.HPE_CB_ur
  1184bc:	6874006c 6e6f2065 6c72755f 6c616320     l.the on_url cal
  1184cc:	6361626c 6166206b 64656c69 45504800     lback failed.HPE
  1184dc:	5f42435f 64616568 665f7265 646c6569     _CB_header_field
  1184ec:	65687400 5f6e6f20 64616568 665f7265     .the on_header_f
  1184fc:	646c6569 6c616320 6361626c 6166206b     ield callback fa
  11850c:	64656c69 45504800 5f42435f 64616568     iled.HPE_CB_head
  11851c:	765f7265 65756c61 65687400 5f6e6f20     er_value.the on_
  11852c:	64616568 765f7265 65756c61 6c616320     header_value cal
  11853c:	6361626c 6166206b 64656c69 45504800     lback failed.HPE
  11854c:	5f42435f 64616568 5f737265 706d6f63     _CB_headers_comp
  11855c:	6574656c 65687400 5f6e6f20 64616568     lete.the on_head
  11856c:	5f737265 706d6f63 6574656c 6c616320     ers_complete cal
  11857c:	6361626c 6166206b 64656c69 45504800     lback failed.HPE
  11858c:	5f42435f 79646f62 65687400 5f6e6f20     _CB_body.the on_
  11859c:	79646f62 6c616320 6361626c 6166206b     body callback fa
  1185ac:	64656c69 45504800 5f42435f 7373656d     iled.HPE_CB_mess
  1185bc:	5f656761 706d6f63 6574656c 65687400     age_complete.the
  1185cc:	5f6e6f20 7373656d 5f656761 706d6f63      on_message_comp
  1185dc:	6574656c 6c616320 6361626c 6166206b     lete callback fa
  1185ec:	64656c69 45504800 5f42435f 74617473     iled.HPE_CB_stat
  1185fc:	74007375 6f206568 74735f6e 73757461     us.the on_status
  11860c:	6c616320 6361626c 6166206b 64656c69      callback failed
  11861c:	45504800 5f42435f 6e756863 65685f6b     .HPE_CB_chunk_he
  11862c:	72656461 65687400 5f6e6f20 6e756863     ader.the on_chun
  11863c:	65685f6b 72656461 6c616320 6361626c     k_header callbac
  11864c:	6166206b 64656c69 45504800 5f42435f     k failed.HPE_CB_
  11865c:	6e756863 6f635f6b 656c706d 74006574     chunk_complete.t
  11866c:	6f206568 68635f6e 5f6b6e75 706d6f63     he on_chunk_comp
  11867c:	6574656c 6c616320 6361626c 6166206b     lete callback fa
  11868c:	64656c69 45504800 564e495f 44494c41     iled.HPE_INVALID
  11869c:	464f455f 4154535f 73004554 61657274     _EOF_STATE.strea
  1186ac:	6e65206d 20646564 61207461 6e75206e     m ended at an un
  1186bc:	65707865 64657463 6d697420 50480065     expected time.HP
  1186cc:	45485f45 52454441 45564f5f 4f4c4652     E_HEADER_OVERFLO
  1186dc:	6f740057 616d206f 6820796e 65646165     W.too many heade
  1186ec:	79622072 20736574 6e656573 766f203b     r bytes seen; ov
  1186fc:	6c667265 6420776f 63657465 00646574     erflow detected.
  11870c:	5f455048 534f4c43 435f4445 454e4e4f     HPE_CLOSED_CONNE
  11871c:	4f495443 6164004e 72206174 69656365     CTION.data recei
  11872c:	20646576 65746661 6f632072 656c706d     ved after comple
  11873c:	20646574 6e6e6f63 69746365 203a6e6f     ted connection: 
  11874c:	736f6c63 656d2065 67617373 50480065     close message.HP
  11875c:	4e495f45 494c4156 45565f44 4f495352     E_INVALID_VERSIO
  11876c:	6e69004e 696c6176 54482064 76205054     N.invalid HTTP v
  11877c:	69737265 48006e6f 495f4550 4c41564e     ersion.HPE_INVAL
  11878c:	535f4449 55544154 6e690053 696c6176     ID_STATUS.invali
  11879c:	54482064 73205054 75746174 6f632073     d HTTP status co
  1187ac:	48006564 495f4550 4c41564e 4d5f4449     de.HPE_INVALID_M
  1187bc:	4f485445 6e690044 696c6176 54482064     ETHOD.invalid HT
  1187cc:	6d205054 6f687465 50480064 4e495f45     TP method.HPE_IN
  1187dc:	494c4156 52555f44 6e69004c 696c6176     VALID_URL.invali
  1187ec:	52552064 5048004c 4e495f45 494c4156     d URL.HPE_INVALI
  1187fc:	4f485f44 69005453 6c61766e 68206469     D_HOST.invalid h
  11880c:	0074736f 5f455048 41564e49 5f44494c     ost.HPE_INVALID_
  11881c:	54524f50 766e6900 64696c61 726f7020     PORT.invalid por
  11882c:	50480074 4e495f45 494c4156 41505f44     t.HPE_INVALID_PA
  11883c:	69004854 6c61766e 70206469 00687461     TH.invalid path.
  11884c:	5f455048 41564e49 5f44494c 52455551     HPE_INVALID_QUER
  11885c:	54535f59 474e4952 766e6900 64696c61     Y_STRING.invalid
  11886c:	65757120 73207972 6e697274 50480067      query string.HP
  11887c:	4e495f45 494c4156 52465f44 454d4741     E_INVALID_FRAGME
  11888c:	6900544e 6c61766e 66206469 6d676172     NT.invalid fragm
  11889c:	00746e65 5f455048 455f464c 43455058     ent.HPE_LF_EXPEC
  1188ac:	00444554 6320464c 61726168 72657463     TED.LF character
  1188bc:	70786520 65746365 50480064 4e495f45      expected.HPE_IN
  1188cc:	494c4156 45485f44 52454441 4b4f545f     VALID_HEADER_TOK
  1188dc:	69004e45 6c61766e 63206469 61726168     EN.invalid chara
  1188ec:	72657463 206e6920 64616568 48007265     cter in header.H
  1188fc:	495f4550 4c41564e 435f4449 45544e4f     PE_INVALID_CONTE
  11890c:	4c5f544e 54474e45 6e690048 696c6176     NT_LENGTH.invali
  11891c:	68632064 63617261 20726574 63206e69     d character in c
  11892c:	65746e6f 6c2d746e 74676e65 65682068     ontent-length he
  11893c:	72656461 45504800 454e555f 43455058     ader.HPE_UNEXPEC
  11894c:	5f444554 544e4f43 5f544e45 474e454c     TED_CONTENT_LENG
  11895c:	75004854 7078656e 65746365 6f632064     TH.unexpected co
  11896c:	6e65746e 656c2d74 6874676e 61656820     ntent-length hea
  11897c:	00726564 5f455048 41564e49 5f44494c     der.HPE_INVALID_
  11898c:	4e554843 49535f4b 6900455a 6c61766e     CHUNK_SIZE.inval
  11899c:	63206469 61726168 72657463 206e6920     id character in 
  1189ac:	6e756863 6973206b 6820657a 65646165     chunk size heade
  1189bc:	50480072 4e495f45 494c4156 4f435f44     r.HPE_INVALID_CO
  1189cc:	4154534e 6900544e 6c61766e 63206469     NSTANT.invalid c
  1189dc:	74736e6f 20746e61 69727473 4800676e     onstant string.H
  1189ec:	495f4550 4c41564e 495f4449 5245544e     PE_INVALID_INTER
  1189fc:	5f4c414e 54415453 6e650045 6e756f63     NAL_STATE.encoun
  118a0c:	65726574 6e752064 65707865 64657463     tered unexpected
  118a1c:	746e6920 616e7265 7473206c 00657461      internal state.
  118a2c:	5f455048 49525453 73005443 63697274     HPE_STRICT.stric
  118a3c:	6f6d2074 61206564 72657373 6e6f6974     t mode assertion
  118a4c:	69616620 0064656c 5f455048 53554150      failed.HPE_PAUS
  118a5c:	70004445 65737261 73692072 75617020     ED.parser is pau
  118a6c:	00646573 5f455048 4e4b4e55 004e574f     sed.HPE_UNKNOWN.
  118a7c:	75206e61 6f6e6b6e 65206e77 726f7272     an unknown error
  118a8c:	63636f20 65727275 45440064 4554454c      occurred.DELETE
  118a9c:	54454700 41454800 4f500044 50005453     .GET.HEAD.POST.P
  118aac:	43005455 454e4e4f 4f005443 4f495450     UT.CONNECT.OPTIO
  118abc:	5400534e 45434152 504f4300 4b4d0059     NS.TRACE.COPY.MK
  118acc:	004c4f43 45564f4d 4f525000 4e494650     COL.MOVE.PROPFIN
  118adc:	52500044 4150504f 00484354 4f4c4e55     D.PROPPATCH.UNLO
  118aec:	52004b43 4e494245 4e550044 444e4942     CK.REBIND.UNBIND
  118afc:	4c434100 50455200 0054524f 43414b4d     .ACL.REPORT.MKAC
  118b0c:	49564954 43005954 4b434548 0054554f     TIVITY.CHECKOUT.
  118b1c:	4752454d 2d4d0045 52414553 4e004843     MERGE.M-SEARCH.N
  118b2c:	4649544f 4e550059 53425553 42495243     OTIFY.UNSUBSCRIB
  118b3c:	55500045 00454752 41434b4d 444e454c     E.PURGE.MKCALEND
  118b4c:	55005241 4e494c4e 6973004b                       AR.UNLINK.

00118b56 <http_parser_execute::__PRETTY_FUNCTION__>:
  118b56:	657a6973 6820745f 5f707474 73726170     size_t http_pars
  118b66:	655f7265 75636578 68286574 5f707474     er_execute(http_
  118b76:	73726170 2c2a7265 6e6f6320 68207473     parser*, const h
  118b86:	5f707474 73726170 735f7265 69747465     ttp_parser_setti
  118b96:	2a73676e 6f63202c 2074736e 72616863     ngs*, const char
  118ba6:	73202c2a 5f657a69 69002974                       *, size_t).

00118bb1 <http_parser_parse_url::__PRETTY_FUNCTION__>:
  118bb1:	20746e69 70747468 7261705f 5f726573     int http_parser_
  118bc1:	73726170 72755f65 6f63286c 2074736e     parse_url(const 
  118bd1:	72616863 73202c2a 5f657a69 69202c74     char*, size_t, i
  118be1:	202c746e 70747468 7261705f 5f726573     nt, http_parser_
  118bf1:	2a6c7275 96000029                                url*)..

00118bf8 <method_strings>:
  118bf8:	00118a96 00118a9d 00118aa1 00118aa6     ................
  118c08:	00118aab 00118aaf 00118ab7 00118abf     ................
  118c18:	00118ac5 00118aea 00118aca 00118ad0     ................
  118c28:	00118ad5 00118ade 00118b24 00118ae8     ........$.......
  118c38:	00118af1 00118aef 00118af6 00118afd     ................
  118c48:	00118b01 00118b08 00118b13 00118b1c     ................
  118c58:	00118b22 00118b2b 00118b34 00118b32     "...+...4...2...
  118c68:	00118ae2 00118b3e 00118b44 00118b51     ....>...D...Q...
  118c78:	00118b4f 502f2e2e 36394143 5f453535     O...../PCA9655E_
  118c88:	58454f49 43502f50 35363941 495f4535     IOEXP/PCA9655E_I
  118c98:	5058454f 7070632e 69702800 3d3e206e     OEXP.cpp.(pin >=
  118ca8:	20293020 28202626 206e6970 37203d3c      0) && (pin <= 7
  118cb8:	00000029                                )...

00118cbc <vtable for WizFi250Interface>:
	...
  118cc4:	00105511 00105541 00108271 0010828d     .U..AU..q.......
  118cd4:	0010cbc3 0010cb81 0010cb89 001082cd     ................
  118ce4:	001082f9 0010833d 0010834d 00108375     ....=...M...u...
  118cf4:	001083e1 00108461 00108481 001081b1     ....a...........
  118d04:	001081e5 001081f5 0010cb91 0010cb99     ................
  118d14:	00108165 001081f9 00108175 00108185     e.......u.......
  118d24:	00108251 0010827f 00108195 001081a1     Q...............
  118d34:	0010815d fffffffc 00000000 00105539     ]...........9U..
  118d44:	00105553 00108285 00108277 0010cb4d     SU......w...M...
  118d54:	0010cb4d 0010cb51 0010cb59 0010816d     M...Q...Y...m...
  118d64:	00108269 001082c3 0010cb69 0010815f     i.......i..._...
  118d74:	0010817d 0010818d 00108199 00108249     }...........I...
  118d84:	001081a9                                ....

00118d88 <lp_interface>:
  118d88:	0010b64b 0010b64f 0010b65b 0010b65f     K...O...[..._...
  118d98:	0010b657                                W...

00118d9c <lp_data>:
  118d9c:	00118d88 3fff8558 6c756f63 6f6e2064     ....X..?could no
  118dac:	69702074 74756f6e 6e697000 2070616d     t pinout.pinmap 
  118dbc:	2d73696d 6374616d 69700068 70616d6e     mis-match.pinmap
  118dcc:	746f6e20 756f6620 6620646e 7020726f      not found for p
  118ddc:	70697265 61726568 6970006c 70616d6e     eripheral.pinmap
  118dec:	746f6e20 756f6620 6620646e 6620726f      not found for f
  118dfc:	74636e75 006e6f69                       unction.

00118e04 <us_interface>:
  118e04:	0010b8a1 0010b8b1 0010b959 0010b969     ........Y...i...
  118e14:	0010b975                                u...

00118e18 <us_data>:
  118e18:	00118e04 3fff8570 6465626d 73736120     ....p..?mbed ass
  118e28:	61747265 6e6f6974 69616620 3a64656c     ertation failed:
  118e38:	2c732520 6c696620 25203a65 6c202c73      %s, file: %s, l
  118e48:	20656e69 0a206425 2f2e2e00 652f2e2e     ine %d ..../../e
  118e58:	72657478 2f6c616e 6465626d 2f736f2d     xternal/mbed-os/
  118e68:	74616c70 6d726f66 65626d2f 72635f64     platform/mbed_cr
  118e78:	63697469 632e6c61 746e6900 75727265     itical.c.interru
  118e88:	655f7470 6c62616e 6f635f65 65746e75     pt_enable_counte
  118e98:	203c2072 544e4955 4d5f3233 69005841     r < UINT32_MAX.i
  118ea8:	7265746e 74707572 69645f73 6c626173     nterrupts_disabl
  118eb8:	73006465 6c676e69 6e6f7465 74756d5f     ed.singleton_mut
  118ec8:	6d007865 6f6c6c61 756d5f63 00786574     ex.malloc_mutex.
  118ed8:	5f766e65 6574756d 616d0078 745f6e69     env_mutex.main_t
  118ee8:	61657268 72500064 616d2065 74206e69     hread.Pre main t
  118ef8:	61657268 6f6e2064 72632074 65746165     hread not create
  118f08:	4d430064 2d534953 534f5452 72726520     d.CMSIS-RTOS err
  118f18:	203a726f 63617453 6e75206b 66726564     or: Stack underf
  118f28:	20776f6c 61747328 3a737574 25783020     low (status: 0x%
  118f38:	74202c58 206b7361 203a4449 58257830     X, task ID: 0x%X
  118f48:	6174202c 6e206b73 3a656d61 29732520     , task name: %s)
  118f58:	43000d0a 5349534d 4f54522d 72652053     ...CMSIS-RTOS er
  118f68:	3a726f72 52534920 65755120 6f206575     ror: ISR Queue o
  118f78:	66726576 20776f6c 61747328 3a737574     verflow (status:
  118f88:	25783020 74202c58 206b7361 203a4449      0x%X, task ID: 
  118f98:	58257830 626f202c 7463656a 3a444920     0x%X, object ID:
  118fa8:	25783020 0d0a2958 534d4300 522d5349      0x%X)...CMSIS-R
  118fb8:	20534f54 6f727265 55203a72 20726573     TOS error: User 
  118fc8:	656d6954 61432072 61626c6c 51206b63     Timer Callback Q
  118fd8:	65756575 65766f20 6f6c6672 73282077     ueue overflow (s
  118fe8:	75746174 30203a73 2c582578 73617420     tatus: 0x%X, tas
  118ff8:	4449206b 7830203a 202c5825 656d6974     k ID: 0x%X, time
  119008:	44492072 7830203a 0a295825 4d43000d     r ID: 0x%X)...CM
  119018:	2d534953 534f5452 72726520 203a726f     SIS-RTOS error: 
  119028:	20445453 2b432f43 696c202b 72617262     STD C/C++ librar
  119038:	696c2079 61707362 6e206563 6120746f     y libspace not a
  119048:	6c696176 656c6261 74732820 73757461     vailable (status
  119058:	7830203a 202c5825 6b736174 3a444920     : 0x%X, task ID:
  119068:	25783020 0d0a2958 534d4300 522d5349      0x%X)...CMSIS-R
  119078:	20534f54 6f727265 53203a72 43204454     TOS error: STD C
  119088:	2b2b432f 62696c20 79726172 74756d20     /C++ library mut
  119098:	69207865 6974696e 7a696c61 6f697461     ex initializatio
  1190a8:	6166206e 64656c69 74732820 73757461     n failed (status
  1190b8:	7830203a 202c5825 6b736174 3a444920     : 0x%X, task ID:
  1190c8:	25783020 0d0a2958 534d4300 522d5349      0x%X)...CMSIS-R
  1190d8:	20534f54 6f727265 55203a72 6f6e6b6e     TOS error: Unkno
  1190e8:	28206e77 74617473 203a7375 58257830     wn (status: 0x%X
  1190f8:	6174202c 49206b73 30203a44 29582578     , task ID: 0x%X)
  119108:	52000d0a 56205854 2e312e35 00000031     ...RTX V5.1.1...

00119118 <os_cb_sections>:
	...

00119150 <osRtxConfig>:
  119150:	00000003 000003e8 00000005 3fff8598     ...............?
  119160:	00000010 00000000 00000000 00000000     ................
	...
  1191a4:	00001000 001191b8 001191e0 00119204     ................
  1191b4:	00000004                                ....

001191b8 <os_idle_thread_attr>:
	...
  1191c0:	3fff8aa8 00000048 3fff8960 00000100     ...?H...`..?....
  1191d0:	00000001 00000000 00000000              ............

001191dc <osRtxUserSVC>:
  1191dc:	00000000                                ....

001191e0 <os_timer_thread_attr>:
	...
  1191e8:	3fff8a60 00000048 3fff8660 00000300     `..?H...`..?....
  1191f8:	00000028 00000000 00000000              (...........

00119204 <os_timer_mq_attr>:
	...
  11920c:	3fff85d8 00000034 3fff860c 00000050     ...?4......?P...
  11921c:	24392220 2e2a2826 2e343230 2e2e2f2e      "9$&(*.024../..
  11922c:	7478652f 616e7265 626d2f6c 6f2d6465     /external/mbed-o
  11923c:	61742f73 74656772 41542f73 54454752     s/targets/TARGET
  11924c:	534e4f5f 2f494d45 47524154 4e5f5445     _ONSEMI/TARGET_N
  11925c:	36335343 2f303135 3373636e 30313536     CS36510/ncs36510
  11926c:	6332695f 2800632e 29746e69 2d6a626f     _i2c.c.(int)obj-
  11927c:	6d656d3e 65736162 203d2120 4300434e     >membase != NC.C
  11928c:	6e4f2f3a 696d6553 646e6f63 6f746375     :/OnSemiconducto
  11929c:	78652f72 6e726574 6d2f6c61 2d646562     r/external/mbed-
  1192ac:	742f736f 65677261 542f7374 45475241     os/targets/TARGE
  1192bc:	4e4f5f54 494d4553 5241542f 5f544547     T_ONSEMI/TARGET_
  1192cc:	3353434e 30313536 73636e2f 31353633     NCS36510/ncs3651
  1192dc:	70735f30 00632e69                       0_spi.c.

001192e4 <PinMap_SPI_MISO>:
  1192e4:	00000006 40006000 00000006 0000000a     .....`.@........
  1192f4:	40006000 00000006 00000010 40009000     .`.@...........@
  119304:	00000006 000000ff ffffffff 00000000     ................

00119314 <PinMap_SPI_SCLK>:
  119314:	00000004 40006000 00000006 00000008     .....`.@........
  119324:	40006000 00000006 0000000e 40009000     .`.@...........@
  119334:	00000006 000000ff ffffffff 00000000     ................

00119344 <PinMap_I2C_SDA>:
  119344:	00000003 40007000 00000005 00000004     .....p.@........
  119354:	40007000 00000005 0000000a 40007000     .p.@.........p.@
  119364:	00000005 0000000c 40007000 00000005     .........p.@....
  119374:	000000ff ffffffff 00000005 000000ff     ................
  119384:	ffffffff 00000005 000000ff ffffffff     ................
  119394:	00000000                                ....

00119398 <PinMap_UART_RX>:
  119398:	00000001 40005000 00000007 00000009     .....P.@........
  1193a8:	40008000 00000007 000000ff ffffffff     ...@............
  1193b8:	00000000                                ....

001193bc <PinMap_I2C_SCL>:
  1193bc:	00000002 40007000 00000005 00000005     .....p.@........
  1193cc:	40007000 00000005 0000000b 40007000     .p.@.........p.@
  1193dc:	00000005 0000000d 40007000 00000005     .........p.@....
  1193ec:	000000ff ffffffff 00000005 000000ff     ................
  1193fc:	ffffffff 00000005 000000ff ffffffff     ................
  11940c:	00000000                                ....

00119410 <PinMap_UART_TX>:
  119410:	00000000 40005000 00000007 00000008     .....P.@........
  119420:	40008000 00000007 000000ff ffffffff     ...@............
  119430:	00000000                                ....

00119434 <PinMap_SPI_MOSI>:
  119434:	00000005 40006000 00000006 00000009     .....`.@........
  119444:	40006000 00000006 0000000f 40009000     .`.@...........@
  119454:	00000006 000000ff ffffffff 00000000     ................

00119464 <PinMap_SPI_SSEL>:
  119464:	00000000 40006000 00000006 00000001     .....`.@........
  119474:	40006000 00000006 00000002 40006000     .`.@.........`.@
  119484:	00000006 00000003 40006000 00000006     .........`.@....
  119494:	00000007 40006000 00000006 00000008     .....`.@........
  1194a4:	40006000 00000006 00000009 40006000     .`.@.........`.@
  1194b4:	00000006 0000000a 40006000 00000006     .........`.@....
  1194c4:	00000011 40009000 00000006 00000011     .......@........
  1194d4:	40009000 00000006 000000ff ffffffff     ...@............
  1194e4:	00000000 2e2f2e2e 78652f2e 6e726574     ....../../extern
  1194f4:	6d2f6c61 2d646562 742f736f 65677261     al/mbed-os/targe
  119504:	542f7374 45475241 4e4f5f54 494d4553     ts/TARGET_ONSEMI
  119514:	5241542f 5f544547 3353434e 30313536     /TARGET_NCS36510
  119524:	6374722f 6300632e 65727275 745f746e     /rtc.c.current_t
  119534:	20656d69 6c203d3e 5f747361 656d6974     ime >= last_time
  119544:	6165725f 2e2e0064 2f2e2e2f 65747865     _read.../../exte
  119554:	6c616e72 65626d2f 736f2d64 7261742f     rnal/mbed-os/tar
  119564:	73746567 5241542f 5f544547 45534e4f     gets/TARGET_ONSE
  119574:	542f494d 45475241 434e5f54 35363353     MI/TARGET_NCS365
  119584:	732f3031 61697265 70615f6c 00632e69     10/serial_api.c.
  119594:	2d6a626f 5241553e 47455254 203d2120     obj->UARTREG != 
  1195a4:	72615528 43363174 52303535 705f6765     (Uart16C550Reg_p
  1195b4:	4e202974 61460043 0065736c 4f2f3a43     t) NC.False.C:/O
  1195c4:	6d65536e 6e6f6369 74637564 652f726f     nSemiconductor/e
  1195d4:	72657478 2f6c616e 6465626d 2f736f2d     xternal/mbed-os/
  1195e4:	67726174 2f737465 47524154 4f5f5445     targets/TARGET_O
  1195f4:	4d45534e 41542f49 54454752 53434e5f     NSEMI/TARGET_NCS
  119604:	31353633 70732f30 70615f69 00632e69     36510/spi_api.c.
  119614:	69622828 3d207374 4f57203d 575f4452     ((bits == WORD_W
  119624:	48544449 2029385f 28207c7c 73746962     IDTH_8) || (bits
  119634:	203d3d20 44524f57 4449575f 315f4854      == WORD_WIDTH_1
  119644:	7c202936 6228207c 20737469 57203d3d     6) || (bits == W
  119654:	5f44524f 54444957 32335f48 26202929     ORD_WIDTH_32)) &
  119664:	6d282026 2065646f 30203d3e 20262620     & (mode >= 0 && 
  119674:	65646f6d 203d3c20 00002933                       mode <= 3).

0011967f <CSWTCH.17>:
  11967f:	01010100                                         ...

00119682 <CSWTCH.18>:
  119682:	00010001 00000000                                ......

00119688 <vtable for mbed::I2C>:
	...
  119690:	0010c469 0010c481 00107ded 00107def     i........}...}..

001196a0 <vtable for mbed::InterruptIn>:
	...
  1196a8:	0010c49d 0010c4c5 2e2f2e2e 78652f2e     ........../../ex
  1196b8:	6e726574 6d2f6c61 2d646562 702f736f     ternal/mbed-os/p
  1196c8:	6674616c 2f6d726f 6c6c6143 6b636162     latform/Callback
  1196d8:	0000682e                                .h..

001196dc <vtable for mbed::Serial>:
	...
  1196e4:	0010c683 0010c695 0010266d 00105331     ........m&..1S..
  1196f4:	0010c66b 0010c677 ffffffcc 00000000     k...w...........
  119704:	001026a1 00105343 0010d955 0010d923     .&..CS..U...#...
  119714:	0010d987 0010d98d 0010d98d 0010d98d     ................
  119724:	0010d991 0010d98b 0010d991 0010c64d     ............M...
  119734:	0010c653 0010c659 0010c65f 0010c665     S...Y..._...e...
  119744:	0010c669 0010c67b 0010c66f 0010c68d     i...{...o.......
  119754:	0010c69b ffffffc8 00000000 001026a7     .............&..
  119764:	00105349                                IS..

00119768 <vtable for mbed::SerialBase>:
	...
  119770:	0010c6df 0010c6df 00102631 00102659     ........1&..Y&..

00119780 <vtable for mbed::SPI>:
	...
  119788:	0010c8a5 0010c8cd 0010c905 0010c91d     ................
  119798:	0010c7a9 0010c7ab                       ........

001197a0 <vtable for mbed::Ticker>:
	...
  1197a8:	001025f9 0010261d 0010c931              .%...&..1...

001197b4 <vtable for mbed::TimerEvent>:
	...
  1197c4:	00105aad                                .Z..

001197c8 <vtable for Socket>:
	...
  1197d8:	00105aad 00105aad                       .Z...Z..

001197e0 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<Socket, void (Socket::*)()> >(mbed::Callback<void ()>::method_context<Socket, void (Socket::*)()> const&)::ops>:
  1197e0:	0010cc1b 0010cc0d 0010cc19 00786825     ............%hx.
  1197f0:	75686825 2e642500 252e6425 64252e64     %hhu.%d.%d.%d.%d
  119800:	32302500 32302578 00000078              .%02x%02x...

0011980c <vtable for TCPSocket>:
	...
  119814:	0010d291 0010d2bd 0010cfe7 0010cfeb     ................
  119824:	2e2f2e2e 78652f2e 6e726574 6d2f6c61     ../../external/m
  119834:	2d646562 662f736f 75746165 2f736572     bed-os/features/
  119844:	7374656e 656b636f 43542f74 636f5350     netsocket/TCPSoc
  119854:	2e74656b 00707063 72775f21 5f657469     ket.cpp.!_write_
  119864:	705f6e69 72676f72 00737365 65725f21     in_progress.!_re
  119874:	695f6461 72705f6e 6572676f 00007373     ad_in_progress..

00119884 <vtable for mbed::FileBase>:
	...
  11988c:	0010d31d 0010d379                       ....y...

00119894 <vtable for mbed::FileHandle>:
	...
  1198a4:	00105aad 00105aad 00105aad 00105aad     .Z...Z...Z...Z..
  1198b4:	0010d3dd 0010d3e1 0010cb39 0010cb43     ........9...C...
  1198c4:	0010d3e5 0010c64d 0010c653 0010c659     ....M...S...Y...
  1198d4:	0010c65f 0010c665 0010c669              _...e...i...

001198e0 <__stdin_name>:
  1198e0:	6474732f 2f006e69                                /stdin.

001198e7 <__stderr_name>:
  1198e7:	6474732f 00727265 65637845 6f697470     /stderr.Exceptio
  1198f7:	253a006e 2e2e0070 2f2e2e2f 65747865     n.:%p.../../exte
  119907:	6c616e72 65626d2f 736f2d64 616c702f     rnal/mbed-os/pla
  119917:	726f6674 626d2f6d 725f6465 72617465     tform/mbed_retar
  119927:	2e746567 00707063 3d3d2030 672a2820     get.cpp.0 == (*g
  119937:	64726175 6a626f5f 20746365 58432026     uard_object & CX
  119947:	55475f41 5f445241 4b53414d 58430029     A_GUARD_MASK).CX
  119957:	55475f41 5f445241 54494e49 5f4e495f     A_GUARD_INIT_IN_
  119967:	474f5250 53534552 203d3d20 75672a28     PROGRESS == (*gu
  119977:	5f647261 656a626f 26207463 41584320     ard_object & CXA
  119987:	4155475f 4d5f4452 294b5341 65704f00     _GUARD_MASK).Ope
  119997:	6f746172 656e2072 756f2077 666f2074     rator new out of
  1199a7:	6d656d20 0d79726f 704f000a 74617265      memory...Operat
  1199b7:	6e20726f 5d5b7765 74756f20 20666f20     or new[] out of 
  1199c7:	6f6d656d 0a0d7972 2f2e2e00 652f2e2e     memory...../../e
  1199d7:	72657478 2f6c616e 6465626d 2f736f2d     xternal/mbed-os/
  1199e7:	74616c70 6d726f66 6e69532f 74656c67     platform/Singlet
  1199f7:	74506e6f 00682e72                       onPtr.h.

001199ff <__stdout_name>:
  1199ff:	6474732f 0074756f 00000000                       /stdout..

00119a08 <vtable for mbed::FileLike>:
	...
  119a18:	00105aad 00105aad 00105aad 00105aad     .Z...Z...Z...Z..
  119a28:	0010d3dd 0010d3e1 0010cb39 0010cb43     ........9...C...
  119a38:	0010d3e5 0010c64d 0010c653 0010c659     ....M...S...Y...
  119a48:	0010c65f 0010c665 0010c669 fffffffc     _...e...i.......
	...

00119a64 <vtable for mbed::Stream>:
	...
  119a74:	0010d955 0010d923 0010d987 0010d98d     U...#...........
  119a84:	0010d98d 0010d98d 0010d991 0010d98b     ................
  119a94:	0010d991 0010c64d 0010c653 0010c659     ....M...S...Y...
  119aa4:	0010c65f 0010c665 0010c669 00105aad     _...e...i....Z..
  119ab4:	00105aad 0010d91f 0010d921 fffffffc     .Z......!.......
	...
  119ad0:	53002b77 61657274 626f206d 6166206a     w+.Stream obj fa
  119ae0:	72756c69 65202c65 6f6e7272 0d64253d     ilure, errno=%d.
  119af0:	7061000a 6163696c 6e6f6974 6e6e755f     ..aplication_unn
  119b00:	64656d61 74756d5f 2e007865 2e2e2f2e     amed_mutex.../..
  119b10:	7478652f 616e7265 626d2f6c 6f2d6465     /external/mbed-o
  119b20:	74722f73 4d2f736f 78657475 7070632e     s/rtos/Mutex.cpp
  119b30:	64695f00 2f2e2e00 652f2e2e 72657478     ._id.../../exter
  119b40:	2f6c616e 6465626d 2f736f2d 736f7472     nal/mbed-os/rtos
  119b50:	6d65532f 6f687061 632e6572 5f007070     /Semaphore.cpp._
  119b60:	21206469 554e203d 61004c4c 696c7070     id != NULL.appli
  119b70:	69746163 755f6e6f 6d616e6e 745f6465     cation_unnamed_t
  119b80:	61657268 2e2e0064 2f2e2e2f 65747865     hread.../../exte
  119b90:	6c616e72 65626d2f 736f2d64 6f74722f     rnal/mbed-os/rto
  119ba0:	68542f73 64616572 7070632e 4c554e00     s/Thread.cpp.NUL
  119bb0:	3d3d204c 69745f20 615f0064 2e727474     L == _tid._attr.
  119bc0:	63617473 656d5f6b 3d21206d 4c554e20     stack_mem != NUL
  119bd0:	534f004c 6e617220 74756f20 20666f20     L.OS ran out of 
  119be0:	65726874 21736461 6854000a 64616572     threads!..Thread
  119bf0:	726c6120 79646165 6e757220 676e696e      already running
  119c00:	45000a21 726f7272 6c6c6120 7461636f     !..Error allocat
  119c10:	20676e69 20656874 63617473 656d206b     ing the stack me
  119c20:	79726f6d 0000000a                       mory....

00119c28 <vtable for rtos::Thread>:
	...
  119c30:	0010dcd5 0010dd11 69736162 74735f63     ........basic_st
  119c40:	676e6972 4d5f3a3a 6572635f 00657461     ring::_M_create.
  119c50:	203a7325 6f705f5f 77282073 68636968     %s: __pos (which
  119c60:	20736920 29757a25 74203e20 2d736968      is %zu) > this-
  119c70:	7a69733e 20292865 69687728 69206863     >size() (which i
  119c80:	7a252073 62002975 63697361 7274735f     s %zu).basic_str
  119c90:	3a676e69 3a74613a 6e5f5f20 68772820     ing::at: __n (wh
  119ca0:	20686369 25207369 2029757a 74203d3e     ich is %zu) >= t
  119cb0:	2d736968 7a69733e 20292865 69687728     his->size() (whi
  119cc0:	69206863 7a252073 62002975 63697361     ch is %zu).basic
  119cd0:	7274735f 3a676e69 6172653a 62006573     _string::erase.b
  119ce0:	63697361 7274735f 3a676e69 5f4d5f3a     asic_string::_M_
  119cf0:	6c706572 5f656361 00787561 69736162     replace_aux.basi
  119d00:	74735f63 676e6972 6e693a3a 74726573     c_string::insert
  119d10:	73616200 735f6369 6e697274 723a3a67     .basic_string::r
  119d20:	616c7065 62006563 63697361 7274735f     eplace.basic_str
  119d30:	3a676e69 5f4d5f3a 6c706572 00656361     ing::_M_replace.
  119d40:	69736162 74735f63 676e6972 73613a3a     basic_string::as
  119d50:	6e676973 73616200 735f6369 6e697274     sign.basic_strin
  119d60:	613a3a67 6e657070 61620064 5f636973     g::append.basic_
  119d70:	69727473 3a3a676e 79706f63 73616200     string::copy.bas
  119d80:	735f6369 6e697274 633a3a67 61706d6f     ic_string::compa
  119d90:	62006572 63697361 7274735f 3a676e69     re.basic_string:
  119da0:	7361623a 735f6369 6e697274 61620067     :basic_string.ba
  119db0:	5f636973 69727473 3a3a676e 73627573     sic_string::subs
  119dc0:	73007274 6e697274 733a3a67 6e697274     tr.string::strin
  119dd0:	202c0067 636e7566 6e6f6974 6100203a     g., function: .a
  119de0:	72657373 6e6f6974 73252220 61662022     ssertion "%s" fa
  119df0:	64656c69 6966203a 2220656c 2c227325     iled: file "%s",
  119e00:	6e696c20 64252065 73257325 2000000a               line %d%s%s..

00119e0e <_ctype_>:
  119e0e:	20202000 20202020 28282020 20282828     .         ((((( 
  119e1e:	20202020 20202020 20202020 20202020                     
  119e2e:	10108820 10101010 10101010 10101010      ...............
  119e3e:	04040410 04040404 10040404 10101010     ................
  119e4e:	41411010 41414141 01010101 01010101     ..AAAAAA........
  119e5e:	01010101 01010101 01010101 10101010     ................
  119e6e:	42421010 42424242 02020202 02020202     ..BBBBBB........
  119e7e:	02020202 02020202 02020202 10101010     ................
  119e8e:	00000020 00000000 00000000 00000000      ...............
	...

00119f10 <__sf_fake_stdin>:
	...

00119f30 <__sf_fake_stdout>:
	...

00119f50 <__sf_fake_stderr>:
	...

00119f70 <_global_impure_ptr>:
  119f70:	3fff4204 49534f50 002e0058 2b302d23     .B.?POSIX...#-0+
  119f80:	6c680020 6665004c 47464567 464e4900      .hlL.efgEFG.INF
  119f90:	666e6900 4e414e00 6e616e00 32313000     .inf.NAN.nan.012
  119fa0:	36353433 41393837 45444342 31300046     3456789ABCDEF.01
  119fb0:	35343332 39383736 64636261 65006665     23456789abcdef.e
  119fc0:	00646c25 00119fe2 0011a2bc 00119fe5     %ld.............
  119fd0:	61462d41 3938662d 33323130 37363534     A-Fa-f8901234567
  119fe0:	2d2b005d 00587800                       ].+-.xX.

00119fe8 <fpinan.5407>:
  119fe8:	00000034 fffffbce 000003cb 00000001     4...............
  119ff8:	00000000                                ....

00119ffc <fpi.5371>:
  119ffc:	00000035 fffffbce 000003cb 00000001     5...............
  11a00c:	00000000                                ....

0011a010 <tinytens>:
  11a010:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
  11a020:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
  11a030:	64ac6f43 11680628 69666e49 7974696e     Co.d(.h.Infinity
  11a040:	4e614e00 00000000                       .NaN....

0011a048 <__mprec_tens>:
  11a048:	00000000 3ff00000 00000000 40240000     .......?......$@
  11a058:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  11a068:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  11a078:	00000000 412e8480 00000000 416312d0     .......A......cA
  11a088:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  11a098:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  11a0a8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  11a0b8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  11a0c8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  11a0d8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  11a0e8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  11a0f8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  11a108:	79d99db4 44ea7843                       ...yCx.D

0011a110 <p05.5414>:
  11a110:	00000005 00000019 0000007d 00000000     ........}.......

0011a120 <__mprec_bigtens>:
  11a120:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  11a130:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  11a140:	7f73bf3c 75154fdd                       <.s..O.u

0011a148 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<WizFi250, void (WizFi250::*)()> >(mbed::Callback<void ()>::method_context<WizFi250, void (WizFi250::*)()> const&)::ops>:
  11a148:	00114b13 00114b05 00114b11 276e6143     .K...K...K..Can'
  11a158:	6c612074 61636f6c 6d206574 726f6d65     t allocate memor
  11a168:	504f0079 57004e45 57005045 57004150     y.OPEN.WEP.WPA.W
  11a178:	45414150 50570053 45413241 50570053     PAAES.WPA2AES.WP
  11a188:	4b543241 57005049 00324150 002b2b2b     A2TKIP.WPA2.+++.
  11a198:	4d2b5441 45534552 54410054 2b544100     AT+MRESET.AT.AT+
  11a1a8:	4843454d 64253d4f 2b544100 54455355     MECHO=%d.AT+USET
  11a1b8:	2c64253d 2c382c4e 73252c31 2b544100     =%d,N,8,1,%s.AT+
  11a1c8:	43414d4d 0073253d 4d2b5441 3d43414d     MMAC=%s.AT+MMAC=
  11a1d8:	5441003f 4553572b 64253d54 0073252c     ?.AT+WSET=%d,%s.
  11a1e8:	572b5441 3d544553 252c6425 73252c73     AT+WSET=%d,%s,%s
  11a1f8:	0064252c 572b5441 3d544e41 41006425     ,%d.AT+WANT=%d.A
  11a208:	4e572b54 313d5445 2b544100 54454e57     T+WNET=1.AT+WNET
  11a218:	252c303d 73252c73 0073252c 572b5441     =0,%s,%s,%s.AT+W
  11a228:	3d434553 2c2c6425 41007325 53572b54     SEC=%d,,%s.AT+WS
  11a238:	253d4345 73252c64 0073252c 572b5441     EC=%d,%s,%s.AT+W
  11a248:	5641454c 54410045 5453572b 53555441     LEAVE.AT+WSTATUS
  11a258:	2b544100 494f4a57 5441004e 4f43532b     .AT+WJOIN.AT+SCO
  11a268:	73253d4e 2c73252c 64252c2c 0073252c     N=%s,%s,,,%d,%s.
  11a278:	532b5441 3d4e4f43 252c7325 73252c73     AT+SCON=%s,%s,%s
  11a288:	2c64252c 252c7325 54410073 4f43532b     ,%d,%s,%s.AT+SCO
  11a298:	73253d4e 2c73252c 252c7325 64252c64     N=%s,%s,%s,%d,%d
  11a2a8:	0073252c 532b5441 4d524f46 3030303d     ,%s.AT+SFORM=000
  11a2b8:	30303030 41003030 53532b54 3d444e45     000000.AT+SSEND=
  11a2c8:	2c2c6425 2c64252c 41006425 53532b54     %d,,,%d,%d.AT+SS
  11a2d8:	3d444e45 252c6425 64252c73 0064252c     END=%d,%s,%d,%d.
  11a2e8:	532b5441 544d474d 0064253d 462b5441     AT+SMGMT=%d.AT+F
  11a2f8:	3d534e44 332c7325 00303030 532b5441     DNS=%s,3000.AT+S
  11a308:	544d474d 00003f3d                       MGMT=?..

0011a310 <WizFi250::parseMessage()::res_table>:
	...
  11a31c:	00000001 001157d9 00000000 00000003     .....W..........
  11a32c:	00115653 00000000 00000004 001155f3     SV...........U..
  11a33c:	00000000 00000005 0011579d 00000000     .........W......
  11a34c:	00000006 001156c3 00000000 00000007     .....V..........
  11a35c:	0011581d 00000000 303a3030 43443a38     .X......00:08:DC
  11a36c:	3a30303a 303a3030 445b0030 4f435349     :00:00:00.[DISCO
  11a37c:	43454e4e 00002054                       NNECT ..

0011a384 <WizFi250::parseMessage()::msg_table>:
  11a384:	5d4b4f5b 00000000 00000000 00000000     [OK]............
	...
  11a39c:	001155e3 00000000 5252455b 005d524f     .U......[ERROR].
	...
  11a3bc:	001155eb 00000000 5252455b 493a524f     .U......[ERROR:I
  11a3cc:	4c41564e 4e494449 5d545550 00000000     NVALIDINPUT]....
  11a3dc:	001155eb 00000000 4e4f435b 5443454e     .U......[CONNECT
  11a3ec:	00000020 00000000 00000000 00000000      ...............
  11a3fc:	0011575f 00000000 5349445b 4e4e4f43     _W......[DISCONN
  11a40c:	20544345 00000000 00000000 00000000     ECT ............
  11a41c:	00115609 00000000 53494c5b 204e4554     .V......[LISTEN 
	...
  11a43c:	00115633 00000000 004e5354 55004f53     3V......TSN.SO.U
  11a44c:	54004e53 55004e43 00004e43              SN.TCN.UCN..

0011a458 <__EH_FRAME_BEGIN__>:
  11a458:	00000000                                ....
