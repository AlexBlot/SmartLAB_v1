

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 24 10:16:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	text22,local,class=CODE,merge=1,delta=2
    31                           	psect	text23,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.45
    35                           ; Generated 16/11/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16LF1459 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011D                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  018E                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0391                     	;# 
   161  0392                     	;# 
   162  0393                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  039A                     	;# 
   167  039B                     	;# 
   168  0611                     	;# 
   169  0612                     	;# 
   170  0613                     	;# 
   171  0613                     	;# 
   172  0614                     	;# 
   173  0615                     	;# 
   174  0616                     	;# 
   175  0616                     	;# 
   176  0691                     	;# 
   177  0692                     	;# 
   178  0693                     	;# 
   179  0694                     	;# 
   180  0695                     	;# 
   181  0E8E                     	;# 
   182  0E8F                     	;# 
   183  0E90                     	;# 
   184  0E91                     	;# 
   185  0E92                     	;# 
   186  0E93                     	;# 
   187  0E94                     	;# 
   188  0E94                     	;# 
   189  0E95                     	;# 
   190  0E96                     	;# 
   191  0E97                     	;# 
   192  0E98                     	;# 
   193  0E99                     	;# 
   194  0E9A                     	;# 
   195  0E9B                     	;# 
   196  0E9C                     	;# 
   197  0E9D                     	;# 
   198  0E9E                     	;# 
   199  0E9F                     	;# 
   200  0FE4                     	;# 
   201  0FE5                     	;# 
   202  0FE6                     	;# 
   203  0FE7                     	;# 
   204  0FE8                     	;# 
   205  0FE9                     	;# 
   206  0FEA                     	;# 
   207  0FEB                     	;# 
   208  0FED                     	;# 
   209  0FEE                     	;# 
   210  0FEF                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011D                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0199                     	;# 
   279  019A                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  020C                     	;# 
   287  020D                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0216                     	;# 
   300  0216                     	;# 
   301  0217                     	;# 
   302  0217                     	;# 
   303  0391                     	;# 
   304  0392                     	;# 
   305  0393                     	;# 
   306  0394                     	;# 
   307  0395                     	;# 
   308  0396                     	;# 
   309  039A                     	;# 
   310  039B                     	;# 
   311  0611                     	;# 
   312  0612                     	;# 
   313  0613                     	;# 
   314  0613                     	;# 
   315  0614                     	;# 
   316  0615                     	;# 
   317  0616                     	;# 
   318  0616                     	;# 
   319  0691                     	;# 
   320  0692                     	;# 
   321  0693                     	;# 
   322  0694                     	;# 
   323  0695                     	;# 
   324  0E8E                     	;# 
   325  0E8F                     	;# 
   326  0E90                     	;# 
   327  0E91                     	;# 
   328  0E92                     	;# 
   329  0E93                     	;# 
   330  0E94                     	;# 
   331  0E94                     	;# 
   332  0E95                     	;# 
   333  0E96                     	;# 
   334  0E97                     	;# 
   335  0E98                     	;# 
   336  0E99                     	;# 
   337  0E9A                     	;# 
   338  0E9B                     	;# 
   339  0E9C                     	;# 
   340  0E9D                     	;# 
   341  0E9E                     	;# 
   342  0E9F                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0016                     	;# 
   374  0017                     	;# 
   375  0018                     	;# 
   376  0019                     	;# 
   377  001A                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0095                     	;# 
   386  0096                     	;# 
   387  0097                     	;# 
   388  0098                     	;# 
   389  0099                     	;# 
   390  009A                     	;# 
   391  009B                     	;# 
   392  009B                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  0111                     	;# 
   401  0112                     	;# 
   402  0113                     	;# 
   403  0114                     	;# 
   404  0115                     	;# 
   405  0116                     	;# 
   406  0117                     	;# 
   407  0118                     	;# 
   408  0119                     	;# 
   409  011D                     	;# 
   410  018C                     	;# 
   411  018D                     	;# 
   412  018E                     	;# 
   413  0191                     	;# 
   414  0191                     	;# 
   415  0192                     	;# 
   416  0193                     	;# 
   417  0193                     	;# 
   418  0194                     	;# 
   419  0195                     	;# 
   420  0196                     	;# 
   421  0199                     	;# 
   422  019A                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019C                     	;# 
   426  019D                     	;# 
   427  019E                     	;# 
   428  019F                     	;# 
   429  020C                     	;# 
   430  020D                     	;# 
   431  0211                     	;# 
   432  0211                     	;# 
   433  0212                     	;# 
   434  0212                     	;# 
   435  0213                     	;# 
   436  0213                     	;# 
   437  0214                     	;# 
   438  0214                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0216                     	;# 
   443  0216                     	;# 
   444  0217                     	;# 
   445  0217                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  0394                     	;# 
   450  0395                     	;# 
   451  0396                     	;# 
   452  039A                     	;# 
   453  039B                     	;# 
   454  0611                     	;# 
   455  0612                     	;# 
   456  0613                     	;# 
   457  0613                     	;# 
   458  0614                     	;# 
   459  0615                     	;# 
   460  0616                     	;# 
   461  0616                     	;# 
   462  0691                     	;# 
   463  0692                     	;# 
   464  0693                     	;# 
   465  0694                     	;# 
   466  0695                     	;# 
   467  0E8E                     	;# 
   468  0E8F                     	;# 
   469  0E90                     	;# 
   470  0E91                     	;# 
   471  0E92                     	;# 
   472  0E93                     	;# 
   473  0E94                     	;# 
   474  0E94                     	;# 
   475  0E95                     	;# 
   476  0E96                     	;# 
   477  0E97                     	;# 
   478  0E98                     	;# 
   479  0E99                     	;# 
   480  0E9A                     	;# 
   481  0E9B                     	;# 
   482  0E9C                     	;# 
   483  0E9D                     	;# 
   484  0E9E                     	;# 
   485  0E9F                     	;# 
   486  0FE4                     	;# 
   487  0FE5                     	;# 
   488  0FE6                     	;# 
   489  0FE7                     	;# 
   490  0FE8                     	;# 
   491  0FE9                     	;# 
   492  0FEA                     	;# 
   493  0FEB                     	;# 
   494  0FED                     	;# 
   495  0FEE                     	;# 
   496  0FEF                     	;# 
   497  0000                     	;# 
   498  0001                     	;# 
   499  0002                     	;# 
   500  0003                     	;# 
   501  0004                     	;# 
   502  0005                     	;# 
   503  0006                     	;# 
   504  0007                     	;# 
   505  0008                     	;# 
   506  0009                     	;# 
   507  000A                     	;# 
   508  000B                     	;# 
   509  000C                     	;# 
   510  000D                     	;# 
   511  000E                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  0111                     	;# 
   544  0112                     	;# 
   545  0113                     	;# 
   546  0114                     	;# 
   547  0115                     	;# 
   548  0116                     	;# 
   549  0117                     	;# 
   550  0118                     	;# 
   551  0119                     	;# 
   552  011D                     	;# 
   553  018C                     	;# 
   554  018D                     	;# 
   555  018E                     	;# 
   556  0191                     	;# 
   557  0191                     	;# 
   558  0192                     	;# 
   559  0193                     	;# 
   560  0193                     	;# 
   561  0194                     	;# 
   562  0195                     	;# 
   563  0196                     	;# 
   564  0199                     	;# 
   565  019A                     	;# 
   566  019B                     	;# 
   567  019B                     	;# 
   568  019C                     	;# 
   569  019D                     	;# 
   570  019E                     	;# 
   571  019F                     	;# 
   572  020C                     	;# 
   573  020D                     	;# 
   574  0211                     	;# 
   575  0211                     	;# 
   576  0212                     	;# 
   577  0212                     	;# 
   578  0213                     	;# 
   579  0213                     	;# 
   580  0214                     	;# 
   581  0214                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0215                     	;# 
   585  0216                     	;# 
   586  0216                     	;# 
   587  0217                     	;# 
   588  0217                     	;# 
   589  0391                     	;# 
   590  0392                     	;# 
   591  0393                     	;# 
   592  0394                     	;# 
   593  0395                     	;# 
   594  0396                     	;# 
   595  039A                     	;# 
   596  039B                     	;# 
   597  0611                     	;# 
   598  0612                     	;# 
   599  0613                     	;# 
   600  0613                     	;# 
   601  0614                     	;# 
   602  0615                     	;# 
   603  0616                     	;# 
   604  0616                     	;# 
   605  0691                     	;# 
   606  0692                     	;# 
   607  0693                     	;# 
   608  0694                     	;# 
   609  0695                     	;# 
   610  0E8E                     	;# 
   611  0E8F                     	;# 
   612  0E90                     	;# 
   613  0E91                     	;# 
   614  0E92                     	;# 
   615  0E93                     	;# 
   616  0E94                     	;# 
   617  0E94                     	;# 
   618  0E95                     	;# 
   619  0E96                     	;# 
   620  0E97                     	;# 
   621  0E98                     	;# 
   622  0E99                     	;# 
   623  0E9A                     	;# 
   624  0E9B                     	;# 
   625  0E9C                     	;# 
   626  0E9D                     	;# 
   627  0E9E                     	;# 
   628  0E9F                     	;# 
   629  0FE4                     	;# 
   630  0FE5                     	;# 
   631  0FE6                     	;# 
   632  0FE7                     	;# 
   633  0FE8                     	;# 
   634  0FE9                     	;# 
   635  0FEA                     	;# 
   636  0FEB                     	;# 
   637  0FED                     	;# 
   638  0FEE                     	;# 
   639  0FEF                     	;# 
   640  0000                     	;# 
   641  0001                     	;# 
   642  0002                     	;# 
   643  0003                     	;# 
   644  0004                     	;# 
   645  0005                     	;# 
   646  0006                     	;# 
   647  0007                     	;# 
   648  0008                     	;# 
   649  0009                     	;# 
   650  000A                     	;# 
   651  000B                     	;# 
   652  000C                     	;# 
   653  000D                     	;# 
   654  000E                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  0091                     	;# 
   670  0092                     	;# 
   671  0095                     	;# 
   672  0096                     	;# 
   673  0097                     	;# 
   674  0098                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009B                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  009F                     	;# 
   683  010C                     	;# 
   684  010D                     	;# 
   685  010E                     	;# 
   686  0111                     	;# 
   687  0112                     	;# 
   688  0113                     	;# 
   689  0114                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0117                     	;# 
   693  0118                     	;# 
   694  0119                     	;# 
   695  011D                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0194                     	;# 
   705  0195                     	;# 
   706  0196                     	;# 
   707  0199                     	;# 
   708  019A                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019C                     	;# 
   712  019D                     	;# 
   713  019E                     	;# 
   714  019F                     	;# 
   715  020C                     	;# 
   716  020D                     	;# 
   717  0211                     	;# 
   718  0211                     	;# 
   719  0212                     	;# 
   720  0212                     	;# 
   721  0213                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0214                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0215                     	;# 
   728  0216                     	;# 
   729  0216                     	;# 
   730  0217                     	;# 
   731  0217                     	;# 
   732  0391                     	;# 
   733  0392                     	;# 
   734  0393                     	;# 
   735  0394                     	;# 
   736  0395                     	;# 
   737  0396                     	;# 
   738  039A                     	;# 
   739  039B                     	;# 
   740  0611                     	;# 
   741  0612                     	;# 
   742  0613                     	;# 
   743  0613                     	;# 
   744  0614                     	;# 
   745  0615                     	;# 
   746  0616                     	;# 
   747  0616                     	;# 
   748  0691                     	;# 
   749  0692                     	;# 
   750  0693                     	;# 
   751  0694                     	;# 
   752  0695                     	;# 
   753  0E8E                     	;# 
   754  0E8F                     	;# 
   755  0E90                     	;# 
   756  0E91                     	;# 
   757  0E92                     	;# 
   758  0E93                     	;# 
   759  0E94                     	;# 
   760  0E94                     	;# 
   761  0E95                     	;# 
   762  0E96                     	;# 
   763  0E97                     	;# 
   764  0E98                     	;# 
   765  0E99                     	;# 
   766  0E9A                     	;# 
   767  0E9B                     	;# 
   768  0E9C                     	;# 
   769  0E9D                     	;# 
   770  0E9E                     	;# 
   771  0E9F                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000D                     	;# 
   797  000E                     	;# 
   798  0011                     	;# 
   799  0012                     	;# 
   800  0015                     	;# 
   801  0016                     	;# 
   802  0016                     	;# 
   803  0017                     	;# 
   804  0018                     	;# 
   805  0019                     	;# 
   806  001A                     	;# 
   807  001B                     	;# 
   808  001C                     	;# 
   809  008C                     	;# 
   810  008D                     	;# 
   811  008E                     	;# 
   812  0091                     	;# 
   813  0092                     	;# 
   814  0095                     	;# 
   815  0096                     	;# 
   816  0097                     	;# 
   817  0098                     	;# 
   818  0099                     	;# 
   819  009A                     	;# 
   820  009B                     	;# 
   821  009B                     	;# 
   822  009C                     	;# 
   823  009D                     	;# 
   824  009E                     	;# 
   825  009F                     	;# 
   826  010C                     	;# 
   827  010D                     	;# 
   828  010E                     	;# 
   829  0111                     	;# 
   830  0112                     	;# 
   831  0113                     	;# 
   832  0114                     	;# 
   833  0115                     	;# 
   834  0116                     	;# 
   835  0117                     	;# 
   836  0118                     	;# 
   837  0119                     	;# 
   838  011D                     	;# 
   839  018C                     	;# 
   840  018D                     	;# 
   841  018E                     	;# 
   842  0191                     	;# 
   843  0191                     	;# 
   844  0192                     	;# 
   845  0193                     	;# 
   846  0193                     	;# 
   847  0194                     	;# 
   848  0195                     	;# 
   849  0196                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019C                     	;# 
   855  019D                     	;# 
   856  019E                     	;# 
   857  019F                     	;# 
   858  020C                     	;# 
   859  020D                     	;# 
   860  0211                     	;# 
   861  0211                     	;# 
   862  0212                     	;# 
   863  0212                     	;# 
   864  0213                     	;# 
   865  0213                     	;# 
   866  0214                     	;# 
   867  0214                     	;# 
   868  0215                     	;# 
   869  0215                     	;# 
   870  0215                     	;# 
   871  0216                     	;# 
   872  0216                     	;# 
   873  0217                     	;# 
   874  0217                     	;# 
   875  0391                     	;# 
   876  0392                     	;# 
   877  0393                     	;# 
   878  0394                     	;# 
   879  0395                     	;# 
   880  0396                     	;# 
   881  039A                     	;# 
   882  039B                     	;# 
   883  0611                     	;# 
   884  0612                     	;# 
   885  0613                     	;# 
   886  0613                     	;# 
   887  0614                     	;# 
   888  0615                     	;# 
   889  0616                     	;# 
   890  0616                     	;# 
   891  0691                     	;# 
   892  0692                     	;# 
   893  0693                     	;# 
   894  0694                     	;# 
   895  0695                     	;# 
   896  0E8E                     	;# 
   897  0E8F                     	;# 
   898  0E90                     	;# 
   899  0E91                     	;# 
   900  0E92                     	;# 
   901  0E93                     	;# 
   902  0E94                     	;# 
   903  0E94                     	;# 
   904  0E95                     	;# 
   905  0E96                     	;# 
   906  0E97                     	;# 
   907  0E98                     	;# 
   908  0E99                     	;# 
   909  0E9A                     	;# 
   910  0E9B                     	;# 
   911  0E9C                     	;# 
   912  0E9D                     	;# 
   913  0E9E                     	;# 
   914  0E9F                     	;# 
   915  0FE4                     	;# 
   916  0FE5                     	;# 
   917  0FE6                     	;# 
   918  0FE7                     	;# 
   919  0FE8                     	;# 
   920  0FE9                     	;# 
   921  0FEA                     	;# 
   922  0FEB                     	;# 
   923  0FED                     	;# 
   924  0FEE                     	;# 
   925  0FEF                     	;# 
   926  000B                     _INTCON	set	11
   927  0016                     _TMR1L	set	22
   928  0017                     _TMR1H	set	23
   929  0018                     _T1CONbits	set	24
   930  000B                     _INTCONbits	set	11
   931  0011                     _PIR1bits	set	17
   932  0099                     _OSCCONbits	set	153
   933  008C                     _TRISAbits	set	140
   934  008E                     _TRISCbits	set	142
   935  008D                     _TRISBbits	set	141
   936  0091                     _PIE1bits	set	145
   937  010E                     _LATCbits	set	270
   938  010C                     _LATAbits	set	268
   939  018E                     _ANSELC	set	398
   940  018D                     _ANSELB	set	397
   941  018C                     _ANSELA	set	396
   942  0215                     _SSPCON1bits	set	533
   943  0214                     _SSPSTATbits	set	532
   944  0216                     _SSP1CON2bits	set	534
   945  0214                     _SSPSTAT	set	532
   946  0216                     _SSPCON2	set	534
   947  0216                     _SSP1CON2	set	534
   948  0212                     _SSP1ADD	set	530
   949  0217                     _SSP1CON3	set	535
   950  0215                     _SSP1CON1	set	533
   951  0214                     _SSP1STAT	set	532
   952  0211                     _SSPBUF	set	529
   953                           
   954                           ; #config settings
   955  0000                     
   956                           	psect	cinit
   957  00C5                     start_initialization:	
   958  00C5                     __initialization:	
   959                           
   960                           ; Clear objects allocated to BANK0
   961  00C5  0020               	movlb	0	; select bank0
   962  00C6  01A0               	clrf	__pbssBANK0& (0+127)
   963  00C7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   964  00C8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   965  00C9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   966  00CA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   967  00CB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   968  00CC  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   969  00CD  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   970  00CE  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   971  00CF  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   972  00D0  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   973  00D1                     end_of_initialization:	
   974                           ;End of C runtime variable initialization code
   975                           
   976  00D1                     __end_of__initialization:	
   977  00D1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   978  00D2  0020               	movlb	0
   979  00D3  3182  2A41         	ljmp	_main	;jump to C main() function
   980                           
   981                           	psect	bssBANK0
   982  0020                     __pbssBANK0:	
   983  0020                     isr@F2937:	
   984  0020                     	ds	5
   985  0025                     _i:	
   986  0025                     	ds	2
   987  0027                     _TMR_CNT:	
   988  0027                     	ds	2
   989  0029                     _MUSHROOM_ON:	
   990  0029                     	ds	1
   991  002A                     _SW:	
   992  002A                     	ds	1
   993                           
   994                           	psect	cstackCOMMON
   995  0070                     __pcstackCOMMON:	
   996  0070                     ?_ConfigureOscillator:	
   997  0070                     ??_ConfigureOscillator:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_InitApp:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_I2C_Initialize:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ??_I2C_Initialize:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_i2c_Start:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ??_i2c_Start:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_i2c_Address:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?_i2c_Write:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ??_i2c_Write:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_i2c_Restart:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ??_i2c_Restart:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?_i2c_Read:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0070                     ??_i2c_Read:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     ?_i2c_Stop:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ??_i2c_Stop:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     ?_SPI_init:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0070                     ??_SPI_init:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0070                     ?_nRF_Setup:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0070                     ?_FlushTXRX:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0070                     ?_ConfigureOscillator_interrupt:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  0070                     ?_timer_setup_and_start_IE:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  0070                     ?_WriteCommand:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063  0070                     ?_SPI_transfer:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066  0070                     ??_SPI_transfer:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0070                     ?_isr:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0070                     ?_main:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0070                     ?_i2c_Wait:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ??_i2c_Wait:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     ?i1_ConfigureOscillator_interrupt:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084  0070                     ??i1_ConfigureOscillator_interrupt:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0070                     ?i1_InitApp:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090  0070                     ??i1_InitApp:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093  0070                     i2c_Write@data:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096  0070                     i2c_Address@mode:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099  0070                     SPI_transfer@data:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102                           
  1103                           ; 1 bytes @ 0x0
  1104  0070                     	ds	1
  1105  0071                     ??_i2c_Address:	
  1106  0071                     ?_WriteRegister:	
  1107                           ; 1 bytes @ 0x1
  1108                           
  1109  0071                     ?_WritePayload:	
  1110                           ; 1 bytes @ 0x1
  1111                           
  1112  0071                     ?_WriteAddress:	
  1113                           ; 1 bytes @ 0x1
  1114                           
  1115  0071                     ??_WriteCommand:	
  1116                           ; 1 bytes @ 0x1
  1117                           
  1118  0071                     i2c_Read@ack:	
  1119                           ; 1 bytes @ 0x1
  1120                           
  1121  0071                     WriteRegister@val:	
  1122                           ; 1 bytes @ 0x1
  1123                           
  1124  0071                     WriteAddress@num:	
  1125                           ; 1 bytes @ 0x1
  1126                           
  1127  0071                     WriteCommand@command:	
  1128                           ; 1 bytes @ 0x1
  1129                           
  1130  0071                     WritePayload@data:	
  1131                           ; 1 bytes @ 0x1
  1132                           
  1133                           
  1134                           ; 1 bytes @ 0x1
  1135  0071                     	ds	1
  1136  0072                     ??_WriteRegister:	
  1137  0072                     ??_WritePayload:	
  1138                           ; 1 bytes @ 0x2
  1139                           
  1140  0072                     i2c_Address@address:	
  1141                           ; 1 bytes @ 0x2
  1142                           
  1143  0072                     i2c_Read@i2cReadData:	
  1144                           ; 1 bytes @ 0x2
  1145                           
  1146  0072                     WriteRegister@reg:	
  1147                           ; 1 bytes @ 0x2
  1148                           
  1149  0072                     WriteAddress@addr:	
  1150                           ; 1 bytes @ 0x2
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0x2
  1154  0072                     	ds	1
  1155  0073                     ??_FlushTXRX:	
  1156  0073                     ??_WriteAddress:	
  1157                           ; 1 bytes @ 0x3
  1158                           
  1159  0073                     i2c_Address@l_address:	
  1160                           ; 1 bytes @ 0x3
  1161                           
  1162  0073                     WritePayload@num:	
  1163                           ; 1 bytes @ 0x3
  1164                           
  1165                           
  1166                           ; 1 bytes @ 0x3
  1167  0073                     	ds	1
  1168  0074                     WriteAddress@reg:	
  1169  0074                     WritePayload@i:	
  1170                           ; 1 bytes @ 0x4
  1171                           
  1172                           
  1173                           ; 1 bytes @ 0x4
  1174  0074                     	ds	1
  1175  0075                     WriteAddress@i:	
  1176                           
  1177                           ; 2 bytes @ 0x5
  1178  0075                     	ds	2
  1179  0077                     ??_nRF_Setup:	
  1180                           
  1181                           ; 1 bytes @ 0x7
  1182  0077                     	ds	2
  1183  0079                     nRF_Setup@RXTX_ADDR:	
  1184                           
  1185                           ; 5 bytes @ 0x9
  1186  0079                     	ds	5
  1187                           
  1188                           	psect	cstackBANK0
  1189  002B                     __pcstackBANK0:	
  1190  002B                     ??_isr:	
  1191                           
  1192                           ; 1 bytes @ 0x0
  1193  002B                     	ds	2
  1194  002D                     isr@data:	
  1195                           
  1196                           ; 5 bytes @ 0x2
  1197  002D                     	ds	5
  1198  0032                     isr@read_byte:	
  1199                           
  1200                           ; 2 bytes @ 0x7
  1201  0032                     	ds	2
  1202  0034                     ??_InitApp:	
  1203  0034                     ??_ConfigureOscillator_interrupt:	
  1204                           ; 1 bytes @ 0x9
  1205                           
  1206  0034                     ??_timer_setup_and_start_IE:	
  1207                           ; 1 bytes @ 0x9
  1208                           
  1209  0034                     ??_main:	
  1210                           ; 1 bytes @ 0x9
  1211                           
  1212                           
  1213                           	psect	maintext
  1214  0241                     __pmaintext:	
  1215                           ; 1 bytes @ 0x9
  1216 ;;
  1217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1218 ;;
  1219 ;; *************** function _main *****************
  1220 ;; Defined at:
  1221 ;;		line 127 in file "mainTemp.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : B1F/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels required when called:    5
  1241 ;; This function calls:
  1242 ;;		_ConfigureOscillator_interrupt
  1243 ;;		_InitApp
  1244 ;;		_timer_setup_and_start_IE
  1245 ;; This function is called by:
  1246 ;;		Startup code after reset
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _main
  1252  0241                     _main:	
  1253                           
  1254                           ;mainTemp.c: 129: ConfigureOscillator_interrupt();
  1255                           
  1256                           ;incstack = 0
  1257                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1258  0241  3182  224C  3182   	fcall	_ConfigureOscillator_interrupt
  1259                           
  1260                           ;mainTemp.c: 130: InitApp();
  1261  0244  3181  21C8  3182   	fcall	_InitApp
  1262                           
  1263                           ;mainTemp.c: 131: timer_setup_and_start_IE();
  1264  0247  3181  21B2  3182   	fcall	_timer_setup_and_start_IE
  1265  024A                     l70:	
  1266                           ;mainTemp.c: 134: while(1){
  1267                           
  1268  024A  0063               	sleep	;# 
  1269  024B  2A4A               	goto	l70
  1270  024C                     __end_of_main:	
  1271                           
  1272                           	psect	text1
  1273  01B2                     __ptext1:	
  1274 ;; *************** function _timer_setup_and_start_IE *****************
  1275 ;; Defined at:
  1276 ;;		line 49 in file "user.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    4
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _timer_setup_and_start_IE
  1306  01B2                     _timer_setup_and_start_IE:	
  1307                           
  1308                           ;user.c: 53: T1CONbits.TMR1ON = 0;
  1309                           
  1310                           ;incstack = 0
  1311                           ; Regs used in _timer_setup_and_start_IE: [wreg+status,2+status,0]
  1312  01B2  0020               	movlb	0	; select bank0
  1313  01B3  1018               	bcf	24,0	;volatile
  1314                           
  1315                           ;user.c: 54: T1CONbits.nT1SYNC = 1;
  1316  01B4  1518               	bsf	24,2	;volatile
  1317                           
  1318                           ;user.c: 55: T1CONbits.T1OSCEN = 0;
  1319  01B5  1198               	bcf	24,3	;volatile
  1320                           
  1321                           ;user.c: 56: T1CONbits.T1CKPS = 0b11;
  1322  01B6  3030               	movlw	48
  1323  01B7  0498               	iorwf	24,f	;volatile
  1324                           
  1325                           ;user.c: 57: T1CONbits.TMR1CS = 0b11;
  1326  01B8  30C0               	movlw	192
  1327  01B9  0498               	iorwf	24,f	;volatile
  1328                           
  1329                           ;user.c: 58: TMR1H = 0x5F;
  1330  01BA  305F               	movlw	95
  1331  01BB  0097               	movwf	23	;volatile
  1332                           
  1333                           ;user.c: 59: TMR1L = 0xE0;
  1334  01BC  30E0               	movlw	224
  1335  01BD  0096               	movwf	22	;volatile
  1336                           
  1337                           ;user.c: 60: TMR_CNT = 0;
  1338  01BE  01A7               	clrf	_TMR_CNT
  1339  01BF  01A8               	clrf	_TMR_CNT+1
  1340                           
  1341                           ;user.c: 61: T1CONbits.TMR1ON = 1;
  1342  01C0  1418               	bsf	24,0	;volatile
  1343                           
  1344                           ;user.c: 63: PIR1bits.TMR1IF = 0;
  1345  01C1  1011               	bcf	17,0	;volatile
  1346                           
  1347                           ;user.c: 65: INTCON = 0x00;
  1348  01C2  018B               	clrf	11	;volatile
  1349                           
  1350                           ;user.c: 66: INTCONbits.PEIE = 1;
  1351  01C3  170B               	bsf	11,6	;volatile
  1352                           
  1353                           ;user.c: 67: INTCONbits.GIE = 1;
  1354  01C4  178B               	bsf	11,7	;volatile
  1355                           
  1356                           ;user.c: 68: PIE1bits.TMR1IE = 1;
  1357  01C5  0021               	movlb	1	; select bank1
  1358  01C6  1411               	bsf	17,0	;volatile
  1359  01C7  0008               	return
  1360  01C8                     __end_of_timer_setup_and_start_IE:	
  1361                           
  1362                           	psect	text2
  1363  01C8                     __ptext2:	
  1364 ;; *************** function _InitApp *****************
  1365 ;; Defined at:
  1366 ;;		line 20 in file "user.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		status,2
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    4
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _InitApp
  1396  01C8                     _InitApp:	
  1397                           
  1398                           ;user.c: 23: ANSELA = 0x00;
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in _InitApp: [status,2]
  1402  01C8  0023               	movlb	3	; select bank3
  1403  01C9  018C               	clrf	12	;volatile
  1404                           
  1405                           ;user.c: 24: ANSELB = 0x00;
  1406  01CA  018D               	clrf	13	;volatile
  1407                           
  1408                           ;user.c: 25: ANSELC = 0x00;
  1409  01CB  018E               	clrf	14	;volatile
  1410                           
  1411                           ;user.c: 27: TRISCbits.TRISC0 = 0;
  1412  01CC  0021               	movlb	1	; select bank1
  1413  01CD  100E               	bcf	14,0	;volatile
  1414                           
  1415                           ;user.c: 28: TRISCbits.TRISC1 = 0;
  1416  01CE  108E               	bcf	14,1	;volatile
  1417                           
  1418                           ;user.c: 29: TRISCbits.TRISC2 = 0;
  1419  01CF  110E               	bcf	14,2	;volatile
  1420                           
  1421                           ;user.c: 30: TRISCbits.TRISC3 = 0;
  1422  01D0  118E               	bcf	14,3	;volatile
  1423                           
  1424                           ;user.c: 31: TRISCbits.TRISC4 = 0;
  1425  01D1  120E               	bcf	14,4	;volatile
  1426                           
  1427                           ;user.c: 32: TRISCbits.TRISC5 = 0;
  1428  01D2  128E               	bcf	14,5	;volatile
  1429                           
  1430                           ;user.c: 33: TRISCbits.TRISC6 = 0;
  1431  01D3  130E               	bcf	14,6	;volatile
  1432                           
  1433                           ;user.c: 34: TRISCbits.TRISC7 = 0;
  1434  01D4  138E               	bcf	14,7	;volatile
  1435                           
  1436                           ;user.c: 36: TRISAbits.TRISA5 = 0;
  1437  01D5  128C               	bcf	12,5	;volatile
  1438                           
  1439                           ;user.c: 37: TRISAbits.TRISA4 = 0;
  1440  01D6  120C               	bcf	12,4	;volatile
  1441                           
  1442                           ;user.c: 40: TRISBbits.TRISB4 = 0;
  1443  01D7  120D               	bcf	13,4	;volatile
  1444                           
  1445                           ;user.c: 41: TRISBbits.TRISB5 = 0;
  1446  01D8  128D               	bcf	13,5	;volatile
  1447                           
  1448                           ;user.c: 42: TRISBbits.TRISB6 = 0;
  1449  01D9  130D               	bcf	13,6	;volatile
  1450                           
  1451                           ;user.c: 43: TRISBbits.TRISB7 = 0;
  1452  01DA  138D               	bcf	13,7	;volatile
  1453  01DB  0008               	return
  1454  01DC                     __end_of_InitApp:	
  1455                           
  1456                           	psect	text3
  1457  024C                     __ptext3:	
  1458 ;; *************** function _ConfigureOscillator_interrupt *****************
  1459 ;; Defined at:
  1460 ;;		line 54 in file "system.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    4
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _ConfigureOscillator_interrupt
  1490  024C                     _ConfigureOscillator_interrupt:	
  1491                           
  1492                           ;system.c: 56: OSCCONbits.IRCF = 0b0000;
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _ConfigureOscillator_interrupt: [wreg+status,2+status,0]
  1496  024C  30C3               	movlw	-61
  1497  024D  0021               	movlb	1	; select bank1
  1498  024E  0599               	andwf	25,f	;volatile
  1499                           
  1500                           ;system.c: 72: OSCCONbits.SCS = 0b01;
  1501  024F  0819               	movf	25,w	;volatile
  1502  0250  39FC               	andlw	-4
  1503  0251  3801               	iorlw	1
  1504  0252  0099               	movwf	25	;volatile
  1505                           
  1506                           ;system.c: 77: OSCCONbits.SPLLMULT = 0b1;
  1507  0253  1719               	bsf	25,6	;volatile
  1508                           
  1509                           ;system.c: 81: OSCCONbits.SPLLEN = 0b0;
  1510  0254  1399               	bcf	25,7	;volatile
  1511  0255  0008               	return
  1512  0256                     __end_of_ConfigureOscillator_interrupt:	
  1513                           
  1514                           	psect	intentry
  1515  0004                     __pintentry:	
  1516 ;; *************** function _isr *****************
  1517 ;; Defined at:
  1518 ;;		line 31 in file "mainTemp.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  data            5    2[BANK0 ] unsigned char [5]
  1523 ;;  read_byte       2    7[BANK0 ] unsigned char [2]
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;Total ram usage:        9 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    3
  1540 ;; This function calls:
  1541 ;;		_ConfigureOscillator
  1542 ;;		_FlushTXRX
  1543 ;;		_I2C_Initialize
  1544 ;;		_SPI_init
  1545 ;;		_WritePayload
  1546 ;;		_WriteRegister
  1547 ;;		_i2c_Address
  1548 ;;		_i2c_Read
  1549 ;;		_i2c_Restart
  1550 ;;		_i2c_Start
  1551 ;;		_i2c_Stop
  1552 ;;		_i2c_Write
  1553 ;;		_nRF_Setup
  1554 ;;		i1_ConfigureOscillator_interrupt
  1555 ;;		i1_InitApp
  1556 ;; This function is called by:
  1557 ;;		Interrupt level 1
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561  0004                     _isr:	
  1562                           
  1563                           ;incstack = 0
  1564  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1565                           
  1566                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1567  0005  3180               	pagesel	$
  1568  0006  0020               	movlb	0	; select bank0
  1569  0007  087F               	movf	127,w
  1570  0008  00AC               	movwf	??_isr+1
  1571                           
  1572                           ;mainTemp.c: 37: ConfigureOscillator();
  1573  0009  3182  226A  3180   	fcall	_ConfigureOscillator
  1574                           
  1575                           ;mainTemp.c: 38: InitApp();
  1576  000C  3181  21DC  3180   	fcall	i1_InitApp
  1577                           
  1578                           ;mainTemp.c: 40: uint8_t read_byte[2];
  1579                           ;mainTemp.c: 42: if(PIR1bits.TMR1IF)
  1580  000F  0020               	movlb	0	; select bank0
  1581  0010  1C11               	btfss	17,0	;volatile
  1582  0011  28BE               	goto	i1l65
  1583                           
  1584                           ;mainTemp.c: 43: {
  1585                           ;mainTemp.c: 45: PIR1bits.TMR1IF = 0;
  1586  0012  1011               	bcf	17,0	;volatile
  1587                           
  1588                           ;mainTemp.c: 46: INTCONbits.GIE = 0;
  1589  0013  138B               	bcf	11,7	;volatile
  1590                           
  1591                           ;mainTemp.c: 47: T1CONbits.TMR1ON = 0;
  1592  0014  1018               	bcf	24,0	;volatile
  1593                           
  1594                           ;mainTemp.c: 48: PIE1bits.TMR1IE = 0;
  1595  0015  0021               	movlb	1	; select bank1
  1596  0016  1011               	bcf	17,0	;volatile
  1597                           
  1598                           ;mainTemp.c: 50: i++;
  1599  0017  3001               	movlw	1
  1600  0018  0020               	movlb	0	; select bank0
  1601  0019  07A5               	addwf	_i,f
  1602  001A  3000               	movlw	0
  1603  001B  3DA6               	addwfc	_i+1,f
  1604                           
  1605                           ;mainTemp.c: 52: if (i == 6){
  1606  001C  3006               	movlw	6
  1607  001D  0625               	xorwf	_i,w
  1608  001E  0426               	iorwf	_i+1,w
  1609  001F  1D03               	btfss	3,2
  1610  0020  28B2               	goto	i1l1374
  1611                           
  1612                           ;mainTemp.c: 58: LATAbits.LATA5 = 0;
  1613  0021  0022               	movlb	2	; select bank2
  1614  0022  128C               	bcf	12,5	;volatile
  1615                           
  1616                           ;mainTemp.c: 60: I2C_Initialize();
  1617  0023  3182  2234  3180   	fcall	_I2C_Initialize
  1618                           
  1619                           ;mainTemp.c: 61: _delay((unsigned long)((30)*(8000000L/4000.0)));
  1620  0026  304E               	movlw	78
  1621  0027  0020               	movlb	0	; select bank0
  1622  0028  00AB               	movwf	??_isr
  1623  0029  30EB               	movlw	235
  1624  002A                     u37_27:	
  1625  002A  0B89               	decfsz	9,f
  1626  002B  282A               	goto	u37_27
  1627  002C  0BAB               	decfsz	??_isr,f
  1628  002D  282A               	goto	u37_27
  1629                           
  1630                           ;mainTemp.c: 65: i2c_Start();
  1631  002E  3182  227D  3180   	fcall	_i2c_Start
  1632                           
  1633                           ;mainTemp.c: 66: i2c_Address(0b1001000, 0);
  1634  0031  01F0               	clrf	i2c_Address@mode
  1635  0032  3048               	movlw	72
  1636  0033  3182  2204  3180   	fcall	_i2c_Address
  1637                           
  1638                           ;mainTemp.c: 67: i2c_Write(0x0);
  1639  0036  3000               	movlw	0
  1640  0037  3182  2260  3180   	fcall	_i2c_Write
  1641                           
  1642                           ;mainTemp.c: 68: i2c_Restart();
  1643  003A  3182  2285  3180   	fcall	_i2c_Restart
  1644                           
  1645                           ;mainTemp.c: 69: i2c_Address(0b1001000, 1);
  1646  003D  01F0               	clrf	i2c_Address@mode
  1647  003E  0AF0               	incf	i2c_Address@mode,f
  1648  003F  3048               	movlw	72
  1649  0040  3182  2204  3180   	fcall	_i2c_Address
  1650                           
  1651                           ;mainTemp.c: 71: read_byte[0] = i2c_Read(1);
  1652  0043  3001               	movlw	1
  1653  0044  3181  21F0  3180   	fcall	_i2c_Read
  1654  0047  0020               	movlb	0	; select bank0
  1655  0048  00AB               	movwf	??_isr
  1656  0049  082B               	movf	??_isr,w
  1657  004A  00B2               	movwf	isr@read_byte
  1658                           
  1659                           ;mainTemp.c: 72: read_byte[1] = i2c_Read(0);
  1660  004B  3000               	movlw	0
  1661  004C  3181  21F0  3180   	fcall	_i2c_Read
  1662  004F  0020               	movlb	0	; select bank0
  1663  0050  00AB               	movwf	??_isr
  1664  0051  082B               	movf	??_isr,w
  1665  0052  00B3               	movwf	isr@read_byte+1
  1666                           
  1667                           ;mainTemp.c: 74: i2c_Stop();
  1668  0053  3182  229D  3180   	fcall	_i2c_Stop
  1669                           
  1670                           ;mainTemp.c: 76: LATAbits.LATA5 = 1;
  1671  0056  0022               	movlb	2	; select bank2
  1672  0057  168C               	bsf	12,5	;volatile
  1673                           
  1674                           ;mainTemp.c: 86: LATAbits.LATA4 = 0;
  1675  0058  120C               	bcf	12,4	;volatile
  1676                           
  1677                           ;mainTemp.c: 87: SPI_init();
  1678  0059  3181  219B  3180   	fcall	_SPI_init
  1679                           
  1680                           ;mainTemp.c: 88: nRF_Setup();
  1681  005C  3180  20D5  3180   	fcall	_nRF_Setup
  1682                           
  1683                           ;mainTemp.c: 89: FlushTXRX();
  1684  005F  3182  2216  3180   	fcall	_FlushTXRX
  1685                           
  1686                           ;mainTemp.c: 90: WriteRegister(0x07,0x70);
  1687  0062  3070               	movlw	112
  1688  0063  0020               	movlb	0	; select bank0
  1689  0064  00AB               	movwf	??_isr
  1690  0065  082B               	movf	??_isr,w
  1691  0066  00F1               	movwf	WriteRegister@val
  1692  0067  3007               	movlw	7
  1693  0068  3182  2226  3180   	fcall	_WriteRegister
  1694                           
  1695                           ;mainTemp.c: 91: _delay((unsigned long)((2)*(8000000L/4000.0)));
  1696  006B  3006               	movlw	6
  1697  006C  0020               	movlb	0	; select bank0
  1698  006D  00AB               	movwf	??_isr
  1699  006E  3030               	movlw	48
  1700  006F                     u38_27:	
  1701  006F  0B89               	decfsz	9,f
  1702  0070  286F               	goto	u38_27
  1703  0071  0BAB               	decfsz	??_isr,f
  1704  0072  286F               	goto	u38_27
  1705  0073  0000               	nop
  1706                           
  1707                           ;mainTemp.c: 92: LATAbits.LATA4 = 1;
  1708  0074  0022               	movlb	2	; select bank2
  1709  0075  160C               	bsf	12,4	;volatile
  1710                           
  1711                           ;mainTemp.c: 93: _delay((unsigned long)((150)*(8000000L/4000000.0)));
  1712  0076  3064               	movlw	100
  1713  0077                     u39_27:	
  1714  0077  0B89               	decfsz	9,f
  1715  0078  2877               	goto	u39_27
  1716                           
  1717                           ;mainTemp.c: 95: uint8_t data[5] = {0,0,0,0,0};
  1718  0079  3020               	movlw	low isr@F2937
  1719  007A  0086               	movwf	6
  1720  007B  3000               	movlw	high isr@F2937
  1721  007C  0087               	movwf	7
  1722  007D  302D               	movlw	low isr@data
  1723  007E  0084               	movwf	4
  1724  007F  3000               	movlw	high isr@data
  1725  0080  0085               	movwf	5
  1726  0081  3005               	movlw	5
  1727  0082  0020               	movlb	0	; select bank0
  1728  0083  00AB               	movwf	??_isr
  1729  0084                     u36_20:	
  1730  0084  0016               	moviw fsr1++
  1731  0085  001A               	movwi fsr0++
  1732  0086  0BAB               	decfsz	??_isr,f
  1733  0087  2884               	goto	u36_20
  1734                           
  1735                           ;mainTemp.c: 96: data[0] = 1;
  1736  0088  01AD               	clrf	isr@data
  1737  0089  0AAD               	incf	isr@data,f
  1738                           
  1739                           ;mainTemp.c: 97: data[1] = 5;
  1740  008A  3005               	movlw	5
  1741  008B  00AB               	movwf	??_isr
  1742  008C  082B               	movf	??_isr,w
  1743  008D  00AE               	movwf	isr@data+1
  1744                           
  1745                           ;mainTemp.c: 98: data[2] = read_byte[0];
  1746  008E  0832               	movf	isr@read_byte,w
  1747  008F  00AB               	movwf	??_isr
  1748  0090  082B               	movf	??_isr,w
  1749  0091  00AF               	movwf	isr@data+2
  1750                           
  1751                           ;mainTemp.c: 99: data[3] = read_byte[1];
  1752  0092  0833               	movf	isr@read_byte+1,w
  1753  0093  00AB               	movwf	??_isr
  1754  0094  082B               	movf	??_isr,w
  1755  0095  00B0               	movwf	isr@data+3
  1756                           
  1757                           ;mainTemp.c: 101: WritePayload(5, data);
  1758  0096  302D               	movlw	(low (isr@data| 0))& (0+255)
  1759  0097  00AB               	movwf	??_isr
  1760  0098  082B               	movf	??_isr,w
  1761  0099  00F1               	movwf	WritePayload@data
  1762  009A  3005               	movlw	5
  1763  009B  3181  2177  3180   	fcall	_WritePayload
  1764                           
  1765                           ;mainTemp.c: 103: _delay((unsigned long)((5)*(8000000L/4000.0)));
  1766  009E  300D               	movlw	13
  1767  009F  0020               	movlb	0	; select bank0
  1768  00A0  00AB               	movwf	??_isr
  1769  00A1  30FB               	movlw	251
  1770  00A2                     u40_27:	
  1771  00A2  0B89               	decfsz	9,f
  1772  00A3  28A2               	goto	u40_27
  1773  00A4  0BAB               	decfsz	??_isr,f
  1774  00A5  28A2               	goto	u40_27
  1775  00A6  3200               	nop2
  1776                           
  1777                           ;mainTemp.c: 105: FlushTXRX();
  1778  00A7  3182  2216  3180   	fcall	_FlushTXRX
  1779                           
  1780                           ;mainTemp.c: 107: WriteRegister(0x00, 0x00);
  1781  00AA  01F1               	clrf	WriteRegister@val
  1782  00AB  3000               	movlw	0
  1783  00AC  3182  2226  3180   	fcall	_WriteRegister
  1784                           
  1785                           ;mainTemp.c: 108: i = 0;
  1786  00AF  0020               	movlb	0	; select bank0
  1787  00B0  01A5               	clrf	_i
  1788  00B1  01A6               	clrf	_i+1
  1789  00B2                     i1l1374:	
  1790                           
  1791                           ;mainTemp.c: 110: }
  1792                           ;mainTemp.c: 112: T1CONbits.TMR1ON = 1;
  1793  00B2  1418               	bsf	24,0	;volatile
  1794                           
  1795                           ;mainTemp.c: 113: PIR1bits.TMR1IF = 0;
  1796  00B3  1011               	bcf	17,0	;volatile
  1797                           
  1798                           ;mainTemp.c: 114: PIE1bits.TMR1IE = 1;
  1799  00B4  0021               	movlb	1	; select bank1
  1800  00B5  1411               	bsf	17,0	;volatile
  1801                           
  1802                           ;mainTemp.c: 116: INTCONbits.GIE = 1;
  1803  00B6  178B               	bsf	11,7	;volatile
  1804                           
  1805                           ;mainTemp.c: 117: TMR1H = 0x5F;
  1806  00B7  305F               	movlw	95
  1807  00B8  0020               	movlb	0	; select bank0
  1808  00B9  0097               	movwf	23	;volatile
  1809                           
  1810                           ;mainTemp.c: 118: TMR1L = 0xE0;
  1811  00BA  30E0               	movlw	224
  1812  00BB  0096               	movwf	22	;volatile
  1813                           
  1814                           ;mainTemp.c: 121: ConfigureOscillator_interrupt();
  1815  00BC  3182  2256         	fcall	i1_ConfigureOscillator_interrupt
  1816  00BE                     i1l65:	
  1817  00BE  0020               	movlb	0	; select bank0
  1818  00BF  082C               	movf	??_isr+1,w
  1819  00C0  00FF               	movwf	127
  1820  00C1  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1821  00C2  0009               	retfie
  1822  00C3                     __end_of_isr:	
  1823                           
  1824                           	psect	text5
  1825  01DC                     __ptext5:	
  1826 ;; *************** function i1_InitApp *****************
  1827 ;; Defined at:
  1828 ;;		line 20 in file "user.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		status,2
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_isr
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function i1_InitApp
  1857  01DC                     i1_InitApp:	
  1858                           
  1859                           ;user.c: 23: ANSELA = 0x00;
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in i1_InitApp: [status,2]
  1863  01DC  0023               	movlb	3	; select bank3
  1864  01DD  018C               	clrf	12	;volatile
  1865                           
  1866                           ;user.c: 24: ANSELB = 0x00;
  1867  01DE  018D               	clrf	13	;volatile
  1868                           
  1869                           ;user.c: 25: ANSELC = 0x00;
  1870  01DF  018E               	clrf	14	;volatile
  1871                           
  1872                           ;user.c: 27: TRISCbits.TRISC0 = 0;
  1873  01E0  0021               	movlb	1	; select bank1
  1874  01E1  100E               	bcf	14,0	;volatile
  1875                           
  1876                           ;user.c: 28: TRISCbits.TRISC1 = 0;
  1877  01E2  108E               	bcf	14,1	;volatile
  1878                           
  1879                           ;user.c: 29: TRISCbits.TRISC2 = 0;
  1880  01E3  110E               	bcf	14,2	;volatile
  1881                           
  1882                           ;user.c: 30: TRISCbits.TRISC3 = 0;
  1883  01E4  118E               	bcf	14,3	;volatile
  1884                           
  1885                           ;user.c: 31: TRISCbits.TRISC4 = 0;
  1886  01E5  120E               	bcf	14,4	;volatile
  1887                           
  1888                           ;user.c: 32: TRISCbits.TRISC5 = 0;
  1889  01E6  128E               	bcf	14,5	;volatile
  1890                           
  1891                           ;user.c: 33: TRISCbits.TRISC6 = 0;
  1892  01E7  130E               	bcf	14,6	;volatile
  1893                           
  1894                           ;user.c: 34: TRISCbits.TRISC7 = 0;
  1895  01E8  138E               	bcf	14,7	;volatile
  1896                           
  1897                           ;user.c: 36: TRISAbits.TRISA5 = 0;
  1898  01E9  128C               	bcf	12,5	;volatile
  1899                           
  1900                           ;user.c: 37: TRISAbits.TRISA4 = 0;
  1901  01EA  120C               	bcf	12,4	;volatile
  1902                           
  1903                           ;user.c: 40: TRISBbits.TRISB4 = 0;
  1904  01EB  120D               	bcf	13,4	;volatile
  1905                           
  1906                           ;user.c: 41: TRISBbits.TRISB5 = 0;
  1907  01EC  128D               	bcf	13,5	;volatile
  1908                           
  1909                           ;user.c: 42: TRISBbits.TRISB6 = 0;
  1910  01ED  130D               	bcf	13,6	;volatile
  1911                           
  1912                           ;user.c: 43: TRISBbits.TRISB7 = 0;
  1913  01EE  138D               	bcf	13,7	;volatile
  1914  01EF  0008               	return
  1915  01F0                     __end_ofi1_InitApp:	
  1916                           
  1917                           	psect	text6
  1918  0256                     __ptext6:	
  1919 ;; *************** function i1_ConfigureOscillator_interrupt *****************
  1920 ;; Defined at:
  1921 ;;		line 54 in file "system.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_isr
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function i1_ConfigureOscillator_interrupt
  1950  0256                     i1_ConfigureOscillator_interrupt:	
  1951                           
  1952                           ;system.c: 56: OSCCONbits.IRCF = 0b0000;
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in i1_ConfigureOscillator_interrupt: [wreg+status,2+status,0]
  1956  0256  30C3               	movlw	-61
  1957  0257  0021               	movlb	1	; select bank1
  1958  0258  0599               	andwf	25,f	;volatile
  1959                           
  1960                           ;system.c: 72: OSCCONbits.SCS = 0b01;
  1961  0259  0819               	movf	25,w	;volatile
  1962  025A  39FC               	andlw	-4
  1963  025B  3801               	iorlw	1
  1964  025C  0099               	movwf	25	;volatile
  1965                           
  1966                           ;system.c: 77: OSCCONbits.SPLLMULT = 0b1;
  1967  025D  1719               	bsf	25,6	;volatile
  1968                           
  1969                           ;system.c: 81: OSCCONbits.SPLLEN = 0b0;
  1970  025E  1399               	bcf	25,7	;volatile
  1971  025F  0008               	return
  1972  0260                     __end_ofi1_ConfigureOscillator_interrupt:	
  1973                           
  1974                           	psect	text7
  1975  00D5                     __ptext7:	
  1976 ;; *************** function _nRF_Setup *****************
  1977 ;; Defined at:
  1978 ;;		line 15 in file "nRF24L01P.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  RXTX_ADDR       5    9[COMMON] unsigned char [5]
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1995 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;Total ram usage:        7 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		_WriteAddress
  2001 ;;		_WriteRegister
  2002 ;; This function is called by:
  2003 ;;		_isr
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function _nRF_Setup
  2009  00D5                     _nRF_Setup:	
  2010                           
  2011                           ;nRF24L01P.c: 18: uint8_t RXTX_ADDR[5];
  2012                           ;nRF24L01P.c: 19: RXTX_ADDR[4] = 0xAB;
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _nRF_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2016  00D5  30AB               	movlw	171
  2017  00D6  00F7               	movwf	??_nRF_Setup
  2018  00D7  0877               	movf	??_nRF_Setup,w
  2019  00D8  00FD               	movwf	nRF_Setup@RXTX_ADDR+4
  2020                           
  2021                           ;nRF24L01P.c: 20: RXTX_ADDR[3] = 0xAC;
  2022  00D9  30AC               	movlw	172
  2023  00DA  00F7               	movwf	??_nRF_Setup
  2024  00DB  0877               	movf	??_nRF_Setup,w
  2025  00DC  00FC               	movwf	nRF_Setup@RXTX_ADDR+3
  2026                           
  2027                           ;nRF24L01P.c: 21: RXTX_ADDR[2] = 0xAD;
  2028  00DD  30AD               	movlw	173
  2029  00DE  00F7               	movwf	??_nRF_Setup
  2030  00DF  0877               	movf	??_nRF_Setup,w
  2031  00E0  00FB               	movwf	nRF_Setup@RXTX_ADDR+2
  2032                           
  2033                           ;nRF24L01P.c: 22: RXTX_ADDR[1] = 0xAE;
  2034  00E1  30AE               	movlw	174
  2035  00E2  00F7               	movwf	??_nRF_Setup
  2036  00E3  0877               	movf	??_nRF_Setup,w
  2037  00E4  00FA               	movwf	nRF_Setup@RXTX_ADDR+1
  2038                           
  2039                           ;nRF24L01P.c: 23: RXTX_ADDR[0] = 0xAF;
  2040  00E5  30AF               	movlw	175
  2041  00E6  00F7               	movwf	??_nRF_Setup
  2042  00E7  0877               	movf	??_nRF_Setup,w
  2043  00E8  00F9               	movwf	nRF_Setup@RXTX_ADDR
  2044                           
  2045                           ;nRF24L01P.c: 25: LATAbits.LATA4 = 0;
  2046  00E9  0022               	movlb	2	; select bank2
  2047  00EA  120C               	bcf	12,4	;volatile
  2048                           
  2049                           ;nRF24L01P.c: 26: WriteAddress(0x10, 5, RXTX_ADDR);
  2050  00EB  3005               	movlw	5
  2051  00EC  00F7               	movwf	??_nRF_Setup
  2052  00ED  0877               	movf	??_nRF_Setup,w
  2053  00EE  00F1               	movwf	WriteAddress@num
  2054  00EF  3079               	movlw	(low (nRF_Setup@RXTX_ADDR| 0))& (0+255)
  2055  00F0  00F8               	movwf	??_nRF_Setup+1
  2056  00F1  0878               	movf	??_nRF_Setup+1,w
  2057  00F2  00F2               	movwf	WriteAddress@addr
  2058  00F3  3010               	movlw	16
  2059  00F4  3181  2150  3180   	fcall	_WriteAddress
  2060                           
  2061                           ;nRF24L01P.c: 27: WriteAddress(0x0A, 5, RXTX_ADDR);
  2062  00F7  3005               	movlw	5
  2063  00F8  00F7               	movwf	??_nRF_Setup
  2064  00F9  0877               	movf	??_nRF_Setup,w
  2065  00FA  00F1               	movwf	WriteAddress@num
  2066  00FB  3079               	movlw	(low (nRF_Setup@RXTX_ADDR| 0))& (0+255)
  2067  00FC  00F8               	movwf	??_nRF_Setup+1
  2068  00FD  0878               	movf	??_nRF_Setup+1,w
  2069  00FE  00F2               	movwf	WriteAddress@addr
  2070  00FF  300A               	movlw	10
  2071  0100  3181  2150  3180   	fcall	_WriteAddress
  2072                           
  2073                           ;nRF24L01P.c: 28: WriteRegister(0x01, 0x01);
  2074  0103  01F1               	clrf	WriteRegister@val
  2075  0104  0AF1               	incf	WriteRegister@val,f
  2076  0105  3001               	movlw	1
  2077  0106  3182  2226  3180   	fcall	_WriteRegister
  2078                           
  2079                           ;nRF24L01P.c: 29: WriteRegister(0x02, 0x01);
  2080  0109  01F1               	clrf	WriteRegister@val
  2081  010A  0AF1               	incf	WriteRegister@val,f
  2082  010B  3002               	movlw	2
  2083  010C  3182  2226  3180   	fcall	_WriteRegister
  2084                           
  2085                           ;nRF24L01P.c: 30: WriteRegister(0x03, 0x03);
  2086  010F  3003               	movlw	3
  2087  0110  00F7               	movwf	??_nRF_Setup
  2088  0111  0877               	movf	??_nRF_Setup,w
  2089  0112  00F1               	movwf	WriteRegister@val
  2090  0113  3003               	movlw	3
  2091  0114  3182  2226  3180   	fcall	_WriteRegister
  2092                           
  2093                           ;nRF24L01P.c: 31: WriteRegister(0x04, 0x2F);
  2094  0117  302F               	movlw	47
  2095  0118  00F7               	movwf	??_nRF_Setup
  2096  0119  0877               	movf	??_nRF_Setup,w
  2097  011A  00F1               	movwf	WriteRegister@val
  2098  011B  3004               	movlw	4
  2099  011C  3182  2226  3180   	fcall	_WriteRegister
  2100                           
  2101                           ;nRF24L01P.c: 32: WriteRegister(0x05, 0x2C);
  2102  011F  302C               	movlw	44
  2103  0120  00F7               	movwf	??_nRF_Setup
  2104  0121  0877               	movf	??_nRF_Setup,w
  2105  0122  00F1               	movwf	WriteRegister@val
  2106  0123  3005               	movlw	5
  2107  0124  3182  2226  3180   	fcall	_WriteRegister
  2108                           
  2109                           ;nRF24L01P.c: 34: WriteRegister(0x06, 0x06);
  2110  0127  3006               	movlw	6
  2111  0128  00F7               	movwf	??_nRF_Setup
  2112  0129  0877               	movf	??_nRF_Setup,w
  2113  012A  00F1               	movwf	WriteRegister@val
  2114  012B  3006               	movlw	6
  2115  012C  3182  2226  3180   	fcall	_WriteRegister
  2116                           
  2117                           ;nRF24L01P.c: 35: WriteRegister(0x07,0x70);
  2118  012F  3070               	movlw	112
  2119  0130  00F7               	movwf	??_nRF_Setup
  2120  0131  0877               	movf	??_nRF_Setup,w
  2121  0132  00F1               	movwf	WriteRegister@val
  2122  0133  3007               	movlw	7
  2123  0134  3182  2226  3180   	fcall	_WriteRegister
  2124                           
  2125                           ;nRF24L01P.c: 36: WriteRegister(0x11, 0x05);
  2126  0137  3005               	movlw	5
  2127  0138  00F7               	movwf	??_nRF_Setup
  2128  0139  0877               	movf	??_nRF_Setup,w
  2129  013A  00F1               	movwf	WriteRegister@val
  2130  013B  3011               	movlw	17
  2131  013C  3182  2226  3180   	fcall	_WriteRegister
  2132                           
  2133                           ;nRF24L01P.c: 37: WriteRegister(0x00,0x7A);
  2134  013F  307A               	movlw	122
  2135  0140  00F7               	movwf	??_nRF_Setup
  2136  0141  0877               	movf	??_nRF_Setup,w
  2137  0142  00F1               	movwf	WriteRegister@val
  2138  0143  3000               	movlw	0
  2139  0144  3182  2226  3180   	fcall	_WriteRegister
  2140                           
  2141                           ;nRF24L01P.c: 38: _delay((unsigned long)((2)*(8000000L/4000.0)));
  2142  0147  3006               	movlw	6
  2143  0148  00F7               	movwf	??_nRF_Setup
  2144  0149  3030               	movlw	48
  2145  014A                     u41_27:	
  2146  014A  0B89               	decfsz	9,f
  2147  014B  294A               	goto	u41_27
  2148  014C  0BF7               	decfsz	??_nRF_Setup,f
  2149  014D  294A               	goto	u41_27
  2150  014E  3200               	nop2
  2151  014F  0008               	return
  2152  0150                     __end_of_nRF_Setup:	
  2153                           
  2154                           	psect	text8
  2155  0150                     __ptext8:	
  2156 ;; *************** function _WriteAddress *****************
  2157 ;; Defined at:
  2158 ;;		line 62 in file "nRF24L01P.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  reg             1    wreg     unsigned char 
  2161 ;;  num             1    1[COMMON] unsigned char 
  2162 ;;  addr            1    2[COMMON] PTR unsigned char 
  2163 ;;		 -> nRF_Setup@RXTX_ADDR(5), 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  reg             1    4[COMMON] unsigned char 
  2166 ;;  i               2    5[COMMON] int 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;Total ram usage:        6 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    1
  2183 ;; This function calls:
  2184 ;;		_SPI_transfer
  2185 ;; This function is called by:
  2186 ;;		_nRF_Setup
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _WriteAddress
  2192  0150                     _WriteAddress:	
  2193                           
  2194                           ;incstack = 0
  2195                           ; Regs used in _WriteAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2196                           ;WriteAddress@reg stored from wreg
  2197  0150  00F4               	movwf	WriteAddress@reg
  2198                           
  2199                           ;nRF24L01P.c: 64: LATCbits.LATC6 = 0;
  2200  0151  0022               	movlb	2	; select bank2
  2201  0152  130E               	bcf	14,6	;volatile
  2202                           
  2203                           ;nRF24L01P.c: 65: SPI_transfer(0x20 | reg);
  2204  0153  0874               	movf	WriteAddress@reg,w
  2205  0154  3820               	iorlw	32
  2206  0155  3182  2295  3181   	fcall	_SPI_transfer
  2207                           
  2208                           ;nRF24L01P.c: 66: for (int i=0; i<num; i++)
  2209  0158  01F5               	clrf	WriteAddress@i
  2210  0159  01F6               	clrf	WriteAddress@i+1
  2211  015A                     i1l1074:	
  2212  015A  0876               	movf	WriteAddress@i+1,w
  2213  015B  3A80               	xorlw	128
  2214  015C  00F3               	movwf	??_WriteAddress
  2215  015D  3080               	movlw	128
  2216  015E  0273               	subwf	??_WriteAddress,w
  2217  015F  1D03               	skipz
  2218  0160  2963               	goto	u22_25
  2219  0161  0871               	movf	WriteAddress@num,w
  2220  0162  0275               	subwf	WriteAddress@i,w
  2221  0163                     u22_25:	
  2222  0163  1803               	btfsc	3,0
  2223  0164  2974               	goto	i1l194
  2224                           
  2225                           ;nRF24L01P.c: 67: SPI_transfer(addr[i]);
  2226  0165  0875               	movf	WriteAddress@i,w
  2227  0166  0772               	addwf	WriteAddress@addr,w
  2228  0167  00F3               	movwf	??_WriteAddress
  2229  0168  0873               	movf	??_WriteAddress,w
  2230  0169  0086               	movwf	6
  2231  016A  0187               	clrf	7
  2232  016B  0801               	movf	1,w
  2233  016C  3182  2295  3181   	fcall	_SPI_transfer
  2234  016F  3001               	movlw	1
  2235  0170  07F5               	addwf	WriteAddress@i,f
  2236  0171  3000               	movlw	0
  2237  0172  3DF6               	addwfc	WriteAddress@i+1,f
  2238  0173  295A               	goto	i1l1074
  2239  0174                     i1l194:	
  2240                           
  2241                           ;nRF24L01P.c: 68: LATCbits.LATC6 = 1;
  2242  0174  0022               	movlb	2	; select bank2
  2243  0175  170E               	bsf	14,6	;volatile
  2244  0176  0008               	return
  2245  0177                     __end_of_WriteAddress:	
  2246                           
  2247                           	psect	text9
  2248  0260                     __ptext9:	
  2249 ;; *************** function _i2c_Write *****************
  2250 ;; Defined at:
  2251 ;;		line 86 in file "i2c_temp.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  data            1    wreg     unsigned char 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  data            1    0[COMMON] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;Total ram usage:        1 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    1
  2272 ;; This function calls:
  2273 ;;		_i2c_Wait
  2274 ;; This function is called by:
  2275 ;;		_isr
  2276 ;;		_i2c_command
  2277 ;;		_i2c_temp_read
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _i2c_Write
  2283  0260                     _i2c_Write:	
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  2287                           ;i2c_Write@data stored from wreg
  2288  0260  00F0               	movwf	i2c_Write@data
  2289                           
  2290                           ;i2c_temp.c: 88: i2c_Wait();
  2291  0261  3182  228D  3182   	fcall	_i2c_Wait
  2292                           
  2293                           ;i2c_temp.c: 89: SSPBUF = data;
  2294  0264  0870               	movf	i2c_Write@data,w
  2295  0265  0024               	movlb	4	; select bank4
  2296  0266  0091               	movwf	17	;volatile
  2297  0267                     i1l125:	
  2298                           ;i2c_temp.c: 90: while(SSPSTATbits.BF);
  2299                           
  2300  0267  1C14               	btfss	20,0	;volatile
  2301  0268  0008               	return
  2302  0269  2A67               	goto	i1l125
  2303  026A                     __end_of_i2c_Write:	
  2304                           
  2305                           	psect	text10
  2306  029D                     __ptext10:	
  2307 ;; *************** function _i2c_Stop *****************
  2308 ;; Defined at:
  2309 ;;		line 76 in file "i2c_temp.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		None
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;Total ram usage:        0 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_isr
  2333 ;;		_i2c_command
  2334 ;;		_i2c_temp_read
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _i2c_Stop
  2340  029D                     _i2c_Stop:	
  2341                           
  2342                           ;i2c_temp.c: 80: SSP1CON2bits.PEN = 1;
  2343                           
  2344                           ;incstack = 0
  2345                           ; Regs used in _i2c_Stop: []
  2346  029D  0024               	movlb	4	; select bank4
  2347  029E  1516               	bsf	22,2	;volatile
  2348  029F                     i1l119:	
  2349                           ;i2c_temp.c: 81: while(SSP1CON2bits.PEN);
  2350                           
  2351  029F  1D16               	btfss	22,2	;volatile
  2352  02A0  0008               	return
  2353  02A1  2A9F               	goto	i1l119
  2354  02A2                     __end_of_i2c_Stop:	
  2355                           
  2356                           	psect	text11
  2357  027D                     __ptext11:	
  2358 ;; *************** function _i2c_Start *****************
  2359 ;; Defined at:
  2360 ;;		line 59 in file "i2c_temp.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    1
  2381 ;; This function calls:
  2382 ;;		_i2c_Wait
  2383 ;; This function is called by:
  2384 ;;		_isr
  2385 ;;		_i2c_command
  2386 ;;		_i2c_temp_read
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _i2c_Start
  2392  027D                     _i2c_Start:	
  2393                           
  2394                           ;i2c_temp.c: 61: i2c_Wait();
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  2398  027D  3182  228D  3182   	fcall	_i2c_Wait
  2399                           
  2400                           ;i2c_temp.c: 62: SSP1CON2bits.SEN = 1;
  2401  0280  0024               	movlb	4	; select bank4
  2402  0281  1416               	bsf	22,0	;volatile
  2403  0282                     i1l107:	
  2404                           ;i2c_temp.c: 63: while(SSP1CON2bits.SEN);
  2405                           
  2406  0282  1C16               	btfss	22,0	;volatile
  2407  0283  0008               	return
  2408  0284  2A82               	goto	i1l107
  2409  0285                     __end_of_i2c_Start:	
  2410                           
  2411                           	psect	text12
  2412  0285                     __ptext12:	
  2413 ;; *************** function _i2c_Restart *****************
  2414 ;; Defined at:
  2415 ;;		line 68 in file "i2c_temp.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    1
  2436 ;; This function calls:
  2437 ;;		_i2c_Wait
  2438 ;; This function is called by:
  2439 ;;		_isr
  2440 ;;		_i2c_temp_read
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           
  2445                           ;psect for function _i2c_Restart
  2446  0285                     _i2c_Restart:	
  2447                           
  2448                           ;i2c_temp.c: 69: i2c_Wait();
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  2452  0285  3182  228D  3182   	fcall	_i2c_Wait
  2453                           
  2454                           ;i2c_temp.c: 70: SSP1CON2bits.RSEN = 1;
  2455  0288  0024               	movlb	4	; select bank4
  2456  0289  1496               	bsf	22,1	;volatile
  2457  028A                     i1l113:	
  2458                           ;i2c_temp.c: 71: while(SSP1CON2bits.RSEN);
  2459                           
  2460  028A  1C96               	btfss	22,1	;volatile
  2461  028B  0008               	return
  2462  028C  2A8A               	goto	i1l113
  2463  028D                     __end_of_i2c_Restart:	
  2464                           
  2465                           	psect	text13
  2466  01F0                     __ptext13:	
  2467 ;; *************** function _i2c_Read *****************
  2468 ;; Defined at:
  2469 ;;		line 120 in file "i2c_temp.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  ack             1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  ack             1    1[COMMON] unsigned char 
  2474 ;;  i2cReadData     1    2[COMMON] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      unsigned char 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;Total ram usage:        3 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_isr
  2494 ;;		_i2c_temp_read
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _i2c_Read
  2500  01F0                     _i2c_Read:	
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _i2c_Read: [wreg+status,2+status,0]
  2504                           ;i2c_Read@ack stored from wreg
  2505  01F0  00F1               	movwf	i2c_Read@ack
  2506                           
  2507                           ;i2c_temp.c: 125: uint8_t i2cReadData;
  2508                           ;i2c_temp.c: 128: SSP1CON2bits.RCEN = 1;
  2509  01F1  0024               	movlb	4	; select bank4
  2510  01F2  1596               	bsf	22,3	;volatile
  2511  01F3                     i1l146:	
  2512                           ;i2c_temp.c: 129: while(SSP1CON2bits.RCEN);
  2513                           
  2514  01F3  1996               	btfsc	22,3	;volatile
  2515  01F4  29F3               	goto	i1l146
  2516                           
  2517                           ;i2c_temp.c: 130: i2cReadData = SSPBUF;
  2518  01F5  0811               	movf	17,w	;volatile
  2519  01F6  00F0               	movwf	??_i2c_Read
  2520  01F7  0870               	movf	??_i2c_Read,w
  2521  01F8  00F2               	movwf	i2c_Read@i2cReadData
  2522  01F9                     i1l149:	
  2523                           ;i2c_temp.c: 131: while(SSPSTATbits.BF);
  2524                           
  2525  01F9  1814               	btfsc	20,0	;volatile
  2526  01FA  29F9               	goto	i1l149
  2527                           
  2528                           ;i2c_temp.c: 135: if ( ack ) SSP1CON2bits.ACKDT =0;
  2529  01FB  0871               	movf	i2c_Read@ack,w
  2530  01FC  1903               	btfsc	3,2
  2531  01FD  2A00               	goto	i1l152
  2532  01FE  1296               	bcf	22,5	;volatile
  2533  01FF  2A01               	goto	i1l153
  2534  0200                     i1l152:	
  2535                           
  2536                           ;i2c_temp.c: 136: else SSP1CON2bits.ACKDT =1;
  2537  0200  1696               	bsf	22,5	;volatile
  2538  0201                     i1l153:	
  2539                           
  2540                           ;i2c_temp.c: 137: SSP1CON2bits.ACKEN =1;
  2541  0201  1616               	bsf	22,4	;volatile
  2542                           
  2543                           ;i2c_temp.c: 139: return( i2cReadData );
  2544  0202  0872               	movf	i2c_Read@i2cReadData,w
  2545  0203  0008               	return
  2546  0204                     __end_of_i2c_Read:	
  2547                           
  2548                           	psect	text14
  2549  0204                     __ptext14:	
  2550 ;; *************** function _i2c_Address *****************
  2551 ;; Defined at:
  2552 ;;		line 107 in file "i2c_temp.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  address         1    wreg     unsigned char 
  2555 ;;  mode            1    0[COMMON] unsigned char 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  address         1    2[COMMON] unsigned char 
  2558 ;;  l_address       1    3[COMMON] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, pclath, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2568 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;Total ram usage:        4 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    1
  2575 ;; This function calls:
  2576 ;;		_i2c_Wait
  2577 ;; This function is called by:
  2578 ;;		_isr
  2579 ;;		_i2c_command
  2580 ;;		_i2c_temp_read
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _i2c_Address
  2586  0204                     _i2c_Address:	
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  2590                           ;i2c_Address@address stored from wreg
  2591  0204  00F2               	movwf	i2c_Address@address
  2592                           
  2593                           ;i2c_temp.c: 109: unsigned char l_address;
  2594                           ;i2c_temp.c: 111: l_address=address<<1;
  2595  0205  3572               	lslf	i2c_Address@address,w
  2596  0206  00F1               	movwf	??_i2c_Address
  2597  0207  0871               	movf	??_i2c_Address,w
  2598  0208  00F3               	movwf	i2c_Address@l_address
  2599                           
  2600                           ;i2c_temp.c: 112: l_address+=mode;
  2601  0209  0870               	movf	i2c_Address@mode,w
  2602  020A  00F1               	movwf	??_i2c_Address
  2603  020B  0871               	movf	??_i2c_Address,w
  2604  020C  07F3               	addwf	i2c_Address@l_address,f
  2605                           
  2606                           ;i2c_temp.c: 113: i2c_Wait();
  2607  020D  3182  228D  3182   	fcall	_i2c_Wait
  2608                           
  2609                           ;i2c_temp.c: 114: SSPBUF = l_address;
  2610  0210  0873               	movf	i2c_Address@l_address,w
  2611  0211  0024               	movlb	4	; select bank4
  2612  0212  0091               	movwf	17	;volatile
  2613  0213                     i1l140:	
  2614                           ;i2c_temp.c: 115: while(SSPSTATbits.BF);
  2615                           
  2616  0213  1C14               	btfss	20,0	;volatile
  2617  0214  0008               	return
  2618  0215  2A13               	goto	i1l140
  2619  0216                     __end_of_i2c_Address:	
  2620                           
  2621                           	psect	text15
  2622  028D                     __ptext15:	
  2623 ;; *************** function _i2c_Wait *****************
  2624 ;; Defined at:
  2625 ;;		line 54 in file "i2c_temp.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2643 ;;Total ram usage:        0 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_i2c_Start
  2649 ;;		_i2c_Restart
  2650 ;;		_i2c_Write
  2651 ;;		_i2c_Address
  2652 ;;		_i2c_Write16
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function _i2c_Wait
  2658  028D                     _i2c_Wait:	
  2659  028D                     i1l1060:	
  2660                           ;i2c_temp.c: 55: while ( ( SSPCON2 & 0x1F ) || ( SSPSTAT & 0x04 ) );
  2661                           
  2662                           ;incstack = 0
  2663                           ; Regs used in _i2c_Wait: [wreg+status,2]
  2664                           
  2665  028D  0024               	movlb	4	; select bank4
  2666  028E  0816               	movf	22,w	;volatile
  2667  028F  391F               	andlw	31
  2668  0290  1D03               	btfss	3,2
  2669  0291  2A8D               	goto	i1l1060
  2670  0292  1D14               	btfss	20,2	;volatile
  2671  0293  0008               	return
  2672  0294  2A8D               	goto	i1l1060
  2673  0295                     __end_of_i2c_Wait:	
  2674                           
  2675                           	psect	text16
  2676  0177                     __ptext16:	
  2677 ;; *************** function _WritePayload *****************
  2678 ;; Defined at:
  2679 ;;		line 93 in file "nRF24L01P.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  num             1    wreg     unsigned char 
  2682 ;;  data            1    1[COMMON] PTR unsigned char 
  2683 ;;		 -> isr@data(5), 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  num             1    3[COMMON] unsigned char 
  2686 ;;  i               1    4[COMMON] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2696 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;Total ram usage:        4 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		_SPI_transfer
  2705 ;; This function is called by:
  2706 ;;		_isr
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _WritePayload
  2712  0177                     _WritePayload:	
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _WritePayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2716                           ;WritePayload@num stored from wreg
  2717  0177  00F3               	movwf	WritePayload@num
  2718                           
  2719                           ;nRF24L01P.c: 95: LATCbits.LATC6 = 0;
  2720  0178  0022               	movlb	2	; select bank2
  2721  0179  130E               	bcf	14,6	;volatile
  2722                           
  2723                           ;nRF24L01P.c: 96: SPI_transfer(0xA0);
  2724  017A  30A0               	movlw	160
  2725  017B  3182  2295  3181   	fcall	_SPI_transfer
  2726                           
  2727                           ;nRF24L01P.c: 97: for ( uint8_t i=0; i<num; i++)
  2728  017E  01F4               	clrf	WritePayload@i
  2729  017F                     i1l1226:	
  2730  017F  0873               	movf	WritePayload@num,w
  2731  0180  0274               	subwf	WritePayload@i,w
  2732  0181  1803               	btfsc	3,0
  2733  0182  2992               	goto	i1l206
  2734                           
  2735                           ;nRF24L01P.c: 98: SPI_transfer(data[i]);
  2736  0183  0874               	movf	WritePayload@i,w
  2737  0184  0771               	addwf	WritePayload@data,w
  2738  0185  00F2               	movwf	??_WritePayload
  2739  0186  0872               	movf	??_WritePayload,w
  2740  0187  0086               	movwf	6
  2741  0188  0187               	clrf	7
  2742  0189  0801               	movf	1,w
  2743  018A  3182  2295  3181   	fcall	_SPI_transfer
  2744  018D  3001               	movlw	1
  2745  018E  00F2               	movwf	??_WritePayload
  2746  018F  0872               	movf	??_WritePayload,w
  2747  0190  07F4               	addwf	WritePayload@i,f
  2748  0191  297F               	goto	i1l1226
  2749  0192                     i1l206:	
  2750                           
  2751                           ;nRF24L01P.c: 99: LATCbits.LATC6 = 1;
  2752  0192  0022               	movlb	2	; select bank2
  2753  0193  170E               	bsf	14,6	;volatile
  2754                           
  2755                           ;nRF24L01P.c: 101: LATAbits.LATA4 = 1;
  2756  0194  160C               	bsf	12,4	;volatile
  2757                           
  2758                           ;nRF24L01P.c: 102: _delay((unsigned long)((12)*(8000000L/4000000.0)));
  2759  0195  3008               	movlw	8
  2760  0196                     u42_27:	
  2761  0196  0B89               	decfsz	9,f
  2762  0197  2996               	goto	u42_27
  2763                           
  2764                           ;nRF24L01P.c: 103: LATAbits.LATA4 = 0;
  2765  0198  0022               	movlb	2	; select bank2
  2766  0199  120C               	bcf	12,4	;volatile
  2767  019A  0008               	return
  2768  019B                     __end_of_WritePayload:	
  2769                           
  2770                           	psect	text17
  2771  019B                     __ptext17:	
  2772 ;; *************** function _SPI_init *****************
  2773 ;; Defined at:
  2774 ;;		line 13 in file "spi.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_isr
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _SPI_init
  2803  019B                     _SPI_init:	
  2804                           
  2805                           ;spi.c: 15: SSPCON1bits.SSPEN = 1;
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
  2809  019B  0024               	movlb	4	; select bank4
  2810  019C  1695               	bsf	21,5	;volatile
  2811                           
  2812                           ;spi.c: 16: SSPBUF = 0;
  2813  019D  0191               	clrf	17	;volatile
  2814                           
  2815                           ;spi.c: 18: ANSELA = 0x00;
  2816  019E  0023               	movlb	3	; select bank3
  2817  019F  018C               	clrf	12	;volatile
  2818                           
  2819                           ;spi.c: 19: ANSELB = 0x00;
  2820  01A0  018D               	clrf	13	;volatile
  2821                           
  2822                           ;spi.c: 20: ANSELC = 0x00;
  2823  01A1  018E               	clrf	14	;volatile
  2824                           
  2825                           ;spi.c: 22: TRISBbits.TRISB6 = 0;
  2826  01A2  0021               	movlb	1	; select bank1
  2827  01A3  130D               	bcf	13,6	;volatile
  2828                           
  2829                           ;spi.c: 23: TRISBbits.TRISB4 = 1;
  2830  01A4  160D               	bsf	13,4	;volatile
  2831                           
  2832                           ;spi.c: 24: TRISCbits.TRISC7 = 0;
  2833  01A5  138E               	bcf	14,7	;volatile
  2834                           
  2835                           ;spi.c: 25: TRISCbits.TRISC6 = 0;
  2836  01A6  130E               	bcf	14,6	;volatile
  2837                           
  2838                           ;spi.c: 26: TRISAbits.TRISA4 = 0;
  2839  01A7  120C               	bcf	12,4	;volatile
  2840                           
  2841                           ;spi.c: 28: LATCbits.LATC6 = 1;
  2842  01A8  0022               	movlb	2	; select bank2
  2843  01A9  170E               	bsf	14,6	;volatile
  2844                           
  2845                           ;spi.c: 29: LATAbits.LATA4 = 0;
  2846  01AA  120C               	bcf	12,4	;volatile
  2847                           
  2848                           ;spi.c: 32: SSPSTATbits.CKE = 1;
  2849  01AB  0024               	movlb	4	; select bank4
  2850  01AC  1714               	bsf	20,6	;volatile
  2851                           
  2852                           ;spi.c: 34: SSPCON1bits.CKP = 0;
  2853  01AD  1215               	bcf	21,4	;volatile
  2854                           
  2855                           ;spi.c: 36: SSPSTATbits.SMP = 0;
  2856  01AE  1394               	bcf	20,7	;volatile
  2857                           
  2858                           ;spi.c: 42: SSPCON1bits.SSPM = 0b0000;
  2859  01AF  30F0               	movlw	-16
  2860  01B0  0595               	andwf	21,f	;volatile
  2861  01B1  0008               	return
  2862  01B2                     __end_of_SPI_init:	
  2863                           
  2864                           	psect	text18
  2865  0234                     __ptext18:	
  2866 ;; *************** function _I2C_Initialize *****************
  2867 ;; Defined at:
  2868 ;;		line 34 in file "i2c_temp.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_isr
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _I2C_Initialize
  2897  0234                     _I2C_Initialize:	
  2898                           
  2899                           ;i2c_temp.c: 36: TRISBbits.TRISB4 = 1;
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2903  0234  0021               	movlb	1	; select bank1
  2904  0235  160D               	bsf	13,4	;volatile
  2905                           
  2906                           ;i2c_temp.c: 37: TRISBbits.TRISB6 = 1;
  2907  0236  170D               	bsf	13,6	;volatile
  2908                           
  2909                           ;i2c_temp.c: 39: SSPBUF = 0;
  2910  0237  0024               	movlb	4	; select bank4
  2911  0238  0191               	clrf	17	;volatile
  2912                           
  2913                           ;i2c_temp.c: 42: SSP1STAT = 0x00;
  2914  0239  0194               	clrf	20	;volatile
  2915                           
  2916                           ;i2c_temp.c: 44: SSP1CON1 = 0x28;
  2917  023A  3028               	movlw	40
  2918  023B  0095               	movwf	21	;volatile
  2919                           
  2920                           ;i2c_temp.c: 46: SSP1CON3 = 0x00;
  2921  023C  0197               	clrf	23	;volatile
  2922                           
  2923                           ;i2c_temp.c: 48: SSP1ADD = 0x04;
  2924  023D  3004               	movlw	4
  2925  023E  0092               	movwf	18	;volatile
  2926                           
  2927                           ;i2c_temp.c: 49: SSP1CON2 = 0x00;
  2928  023F  0196               	clrf	22	;volatile
  2929  0240  0008               	return
  2930  0241                     __end_of_I2C_Initialize:	
  2931                           
  2932                           	psect	text19
  2933  0216                     __ptext19:	
  2934 ;; *************** function _FlushTXRX *****************
  2935 ;; Defined at:
  2936 ;;		line 44 in file "nRF24L01P.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;Total ram usage:        1 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    2
  2957 ;; This function calls:
  2958 ;;		_WriteCommand
  2959 ;;		_WriteRegister
  2960 ;; This function is called by:
  2961 ;;		_isr
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function _FlushTXRX
  2967  0216                     _FlushTXRX:	
  2968                           
  2969                           ;nRF24L01P.c: 46: WriteRegister(0x07, 0x70);
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _FlushTXRX: [wreg+status,2+status,0+pclath+cstack]
  2973  0216  3070               	movlw	112
  2974  0217  00F3               	movwf	??_FlushTXRX
  2975  0218  0873               	movf	??_FlushTXRX,w
  2976  0219  00F1               	movwf	WriteRegister@val
  2977  021A  3007               	movlw	7
  2978  021B  3182  2226  3182   	fcall	_WriteRegister
  2979                           
  2980                           ;nRF24L01P.c: 47: WriteCommand(0xE2);
  2981  021E  30E2               	movlw	226
  2982  021F  3182  2274  3182   	fcall	_WriteCommand
  2983                           
  2984                           ;nRF24L01P.c: 48: WriteCommand(0xE1);
  2985  0222  30E1               	movlw	225
  2986  0223  3182  2274         	fcall	_WriteCommand
  2987  0225  0008               	return
  2988  0226                     __end_of_FlushTXRX:	
  2989                           
  2990                           	psect	text20
  2991  0226                     __ptext20:	
  2992 ;; *************** function _WriteRegister *****************
  2993 ;; Defined at:
  2994 ;;		line 52 in file "nRF24L01P.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  reg             1    wreg     unsigned char 
  2997 ;;  val             1    1[COMMON] unsigned char 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  reg             1    2[COMMON] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3009 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;Total ram usage:        2 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    1
  3016 ;; This function calls:
  3017 ;;		_SPI_transfer
  3018 ;; This function is called by:
  3019 ;;		_isr
  3020 ;;		_nRF_Setup
  3021 ;;		_FlushTXRX
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _WriteRegister
  3027  0226                     _WriteRegister:	
  3028                           
  3029                           ;incstack = 0
  3030                           ; Regs used in _WriteRegister: [wreg+status,2+status,0+pclath+cstack]
  3031                           ;WriteRegister@reg stored from wreg
  3032  0226  00F2               	movwf	WriteRegister@reg
  3033                           
  3034                           ;nRF24L01P.c: 54: LATCbits.LATC6 = 0;
  3035  0227  0022               	movlb	2	; select bank2
  3036  0228  130E               	bcf	14,6	;volatile
  3037                           
  3038                           ;nRF24L01P.c: 56: SPI_transfer(0x20 | reg);
  3039  0229  0872               	movf	WriteRegister@reg,w
  3040  022A  3820               	iorlw	32
  3041  022B  3182  2295  3182   	fcall	_SPI_transfer
  3042                           
  3043                           ;nRF24L01P.c: 57: SPI_transfer(val);
  3044  022E  0871               	movf	WriteRegister@val,w
  3045  022F  3182  2295         	fcall	_SPI_transfer
  3046                           
  3047                           ;nRF24L01P.c: 58: LATCbits.LATC6 = 1;
  3048  0231  0022               	movlb	2	; select bank2
  3049  0232  170E               	bsf	14,6	;volatile
  3050  0233  0008               	return
  3051  0234                     __end_of_WriteRegister:	
  3052                           
  3053                           	psect	text21
  3054  0274                     __ptext21:	
  3055 ;; *************** function _WriteCommand *****************
  3056 ;; Defined at:
  3057 ;;		line 86 in file "nRF24L01P.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  command         1    wreg     unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  command         1    1[COMMON] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0, pclath, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;Total ram usage:        1 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    1
  3078 ;; This function calls:
  3079 ;;		_SPI_transfer
  3080 ;; This function is called by:
  3081 ;;		_FlushTXRX
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _WriteCommand
  3087  0274                     _WriteCommand:	
  3088                           
  3089                           ;incstack = 0
  3090                           ; Regs used in _WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  3091                           ;WriteCommand@command stored from wreg
  3092  0274  00F1               	movwf	WriteCommand@command
  3093                           
  3094                           ;nRF24L01P.c: 88: LATCbits.LATC6 = 0;
  3095  0275  0022               	movlb	2	; select bank2
  3096  0276  130E               	bcf	14,6	;volatile
  3097                           
  3098                           ;nRF24L01P.c: 89: SPI_transfer(command);
  3099  0277  0871               	movf	WriteCommand@command,w
  3100  0278  3182  2295         	fcall	_SPI_transfer
  3101                           
  3102                           ;nRF24L01P.c: 90: LATCbits.LATC6 = 1;
  3103  027A  0022               	movlb	2	; select bank2
  3104  027B  170E               	bsf	14,6	;volatile
  3105  027C  0008               	return
  3106  027D                     __end_of_WriteCommand:	
  3107                           
  3108                           	psect	text22
  3109  0295                     __ptext22:	
  3110 ;; *************** function _SPI_transfer *****************
  3111 ;; Defined at:
  3112 ;;		line 46 in file "spi.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  data            1    wreg     unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  data            1    0[COMMON] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      unsigned char 
  3119 ;; Registers used:
  3120 ;;		wreg
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;Total ram usage:        1 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_WriteRegister
  3136 ;;		_WriteAddress
  3137 ;;		_WriteCommand
  3138 ;;		_WritePayload
  3139 ;;		_ReadRegister
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _SPI_transfer
  3145  0295                     _SPI_transfer:	
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in _SPI_transfer: [wreg]
  3149                           ;SPI_transfer@data stored from wreg
  3150  0295  00F0               	movwf	SPI_transfer@data
  3151                           
  3152                           ;spi.c: 48: SSPBUF = data;
  3153  0296  0870               	movf	SPI_transfer@data,w
  3154  0297  0024               	movlb	4	; select bank4
  3155  0298  0091               	movwf	17	;volatile
  3156  0299                     i1l241:	
  3157                           ;spi.c: 49: while (!SSPSTATbits.BF);
  3158                           
  3159  0299  1C14               	btfss	20,0	;volatile
  3160  029A  2A99               	goto	i1l241
  3161                           
  3162                           ;spi.c: 50: return SSPBUF;
  3163  029B  0811               	movf	17,w	;volatile
  3164  029C  0008               	return
  3165  029D                     __end_of_SPI_transfer:	
  3166                           
  3167                           	psect	text23
  3168  026A                     __ptext23:	
  3169 ;; *************** function _ConfigureOscillator *****************
  3170 ;; Defined at:
  3171 ;;		line 18 in file "system.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_isr
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function _ConfigureOscillator
  3200  026A                     _ConfigureOscillator:	
  3201                           
  3202                           ;system.c: 20: OSCCONbits.IRCF = 0b1110;
  3203                           
  3204                           ;incstack = 0
  3205                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  3206  026A  0021               	movlb	1	; select bank1
  3207  026B  0819               	movf	25,w	;volatile
  3208  026C  39C3               	andlw	-61
  3209  026D  3838               	iorlw	56
  3210  026E  0099               	movwf	25	;volatile
  3211                           
  3212                           ;system.c: 36: OSCCONbits.SCS = 00;
  3213  026F  30FC               	movlw	-4
  3214  0270  0599               	andwf	25,f	;volatile
  3215                           
  3216                           ;system.c: 41: OSCCONbits.SPLLMULT = 0b1;
  3217  0271  1719               	bsf	25,6	;volatile
  3218                           
  3219                           ;system.c: 45: OSCCONbits.SPLLEN = 0b0;
  3220  0272  1399               	bcf	25,7	;volatile
  3221  0273  0008               	return
  3222  0274                     __end_of_ConfigureOscillator:	
  3223  007E                     btemp	set	126	;btemp
  3224  007E                     int$flags	set	126
  3225  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      20
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    WritePayload@data	PTR unsigned char  size(1) Largest target is 5
		 -> isr@data(BANK0[5]), 

    WriteAddress@addr	PTR unsigned char  size(1) Largest target is 5
		 -> nRF_Setup@RXTX_ADDR(COMMON[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_nRF_Setup
    _nRF_Setup->_WriteAddress
    _WriteAddress->_SPI_transfer
    _WritePayload->_SPI_transfer
    _FlushTXRX->_WriteRegister
    _WriteRegister->_SPI_transfer
    _WriteCommand->_SPI_transfer

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
      _ConfigureOscillator_interrupt
                            _InitApp
           _timer_setup_and_start_IE
 ---------------------------------------------------------------------------------
 (1) _timer_setup_and_start_IE                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator_interrupt                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  9     9      0    3370
                                              0 BANK0      9     9      0
                _ConfigureOscillator
                          _FlushTXRX
                     _I2C_Initialize
                           _SPI_init
                       _WritePayload
                      _WriteRegister
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
                          _nRF_Setup
    i1_ConfigureOscillator_interrupt
                          i1_InitApp
 ---------------------------------------------------------------------------------
 (3) i1_InitApp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) i1_ConfigureOscillator_interrupt                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nRF_Setup                                            7     7      0    1190
                                              7 COMMON     7     7      0
                       _WriteAddress
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (4) _WriteAddress                                         6     4      2     346
                                              1 COMMON     6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _i2c_Address                                          4     3      1     333
                                              0 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WritePayload                                         4     3      1     165
                                              1 COMMON     4     3      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FlushTXRX                                            1     1      0     746
                                              3 COMMON     1     1      0
                       _WriteCommand
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (4) _WriteRegister                                        2     1      1     702
                                              1 COMMON     2     1      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _WriteCommand                                         1     1      0      44
                                              1 COMMON     1     1      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _SPI_transfer                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator_interrupt
   _InitApp
   _timer_setup_and_start_IE

 _isr (ROOT)
   _ConfigureOscillator
   _FlushTXRX
     _WriteCommand
       _SPI_transfer
     _WriteRegister
       _SPI_transfer
   _I2C_Initialize
   _SPI_init
   _WritePayload
     _SPI_transfer
   _WriteRegister
     _SPI_transfer
   _i2c_Address
     _i2c_Wait
   _i2c_Read
   _i2c_Restart
     _i2c_Wait
   _i2c_Start
     _i2c_Wait
   _i2c_Stop
   _i2c_Write
     _i2c_Wait
   _nRF_Setup
     _WriteAddress
       _SPI_transfer
     _WriteRegister
       _SPI_transfer
   i1_ConfigureOscillator_interrupt
   i1_InitApp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      14       5       25.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      22      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      22      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 24 10:16:56 2018

                                       _i 0025                               __CFG_CP$OFF 0000  
                             _SSPSTATbits 0214                             ??_i2c_Address 0071  
                                      l70 024A                                        _SW 002A  
                             i2c_Read@ack 0071                                       _isr 0004  
                   __size_of_WriteAddress 0027                              __CFG_BORV$LO 0000  
                                     wreg 0009                             ??_i2c_Restart 0070  
                   __size_of_WriteCommand 0009                              __CFG_LVP$OFF 0000  
                   __size_of_SPI_transfer 0008                                      ?_isr 0070  
                                    i1l65 00BE                     __size_of_WritePayload 0024  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 0241                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 00C3  
                           __CFG_IESO$OFF 0000                       __CFG_PLLEN$DISABLED 0000  
                           __CFG_MCLRE$ON 0000                           __end_of_InitApp 01DC  
                                   ??_isr 002B                              _WriteAddress 0150  
                                   ?_main 0070                              _WriteCommand 0274  
                           __CFG_WDTE$OFF 0000                                     i1l113 028A  
                                   i1l107 0282                                     i1l140 0213  
                                   i1l125 0267                                     i1l206 0192  
                                   i1l119 029F                                     i1l152 0200  
                                   i1l241 0299                                     i1l153 0201  
                                   i1l146 01F3                                     i1l149 01F9  
                                   i1l194 0174                          SPI_transfer@data 0070  
                            _SPI_transfer 0295                                     u22_25 0163  
                                   u40_27 00A2                                     _TMR1H 0017  
                                   _TMR1L 0016                                     u41_27 014A  
                                   u42_27 0196                                     u36_20 0084  
                                   u37_27 002A                                     u38_27 006F  
                                   u39_27 0077                       _ConfigureOscillator 026A  
                  __size_of_WriteRegister 000E                       __end_of_i2c_Address 0216  
                            _WritePayload 0177                        __size_ofi1_InitApp 0014  
                          __CFG_BOREN$OFF 0000                          __end_of_SPI_init 01B2  
                     __end_of_i2c_Restart 028D                                     status 0003  
                                   wtemp0 007E                      ?_ConfigureOscillator 0070  
                         __initialization 00C5                              __end_of_main 024C  
                        __end_of_i2c_Read 0204                          __end_of_i2c_Wait 0295  
                        __end_of_i2c_Stop 02A2                            __CFG_LPBOR$OFF 0000  
                                  ??_main 0034                       __CFG_USBLSCLK$48MHz 0000  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                        __size_of_i2c_Start 0008  
                                  i1l1060 028D                                    i1l1226 017F  
                                  i1l1074 015A                                    i1l1374 00B2  
                      __size_of_i2c_Write 000A                                    _INTCON 000B  
                      __size_of_FlushTXRX 0010                                    _SSPBUF 0211  
                               ??_InitApp 0034                     ??_ConfigureOscillator 0070  
                           _WriteRegister 0226                            __CFG_PWRTE$OFF 0000  
                       __end_ofi1_InitApp 01F0                               _i2c_Address 0204  
                 __size_of_I2C_Initialize 000D                             i2c_Write@data 0070  
                             _i2c_Restart 0285                        __size_of_nRF_Setup 007B  
                _timer_setup_and_start_IE 01B2                   __end_of__initialization 00D1  
                        WritePayload@data 0071                            ?_WriteRegister 0071  
                        WriteRegister@reg 0072                          WriteRegister@val 0071  
                          __pcstackCOMMON 0070                         __end_of_i2c_Start 0285  
                       __end_of_i2c_Write 026A                         __end_of_FlushTXRX 0226  
                               ?_SPI_init 0070                                 ?_i2c_Read 0070  
                              __pbssBANK0 0020                                 ?_i2c_Wait 0070  
                               ?_i2c_Stop 0070                           WriteAddress@reg 0074  
                         WriteAddress@num 0071                                __pmaintext 0241  
                       __end_of_nRF_Setup 0150                           __CFG_PLLMULT$3x 0000  
                              __pintentry 0004                                ??_SPI_init 0070  
                      i2c_Address@address 0072                                   _SSP1ADD 0212  
                                 _SSPCON2 0216                                   _TMR_CNT 0027  
                                 _SSPSTAT 0214                                ??_i2c_Read 0070  
                              ??_i2c_Wait 0070                              isr@read_byte 0032  
                              ??_i2c_Stop 0070                           ??_WriteRegister 0072  
                                 _InitApp 01C8                           __CFG_STVREN$OFF 0000  
                          _I2C_Initialize 0234                                   __ptext1 01B2  
                                 __ptext2 01C8                                   __ptext3 024C  
                                 __ptext5 01DC                                   __ptext6 0256  
                                 __ptext7 00D5                                   __ptext8 0150  
                                 __ptext9 0260                                 _T1CONbits 0018  
                            __size_of_isr 00BF                      end_of_initialization 00D1  
                                 isr@data 002D                      i2c_Address@l_address 0073  
                  __end_of_I2C_Initialize 0241                              ?_i2c_Address 0070  
                               i1_InitApp 01DC                ??_timer_setup_and_start_IE 0034  
                        __CFG_FOSC$INTOSC 0000                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                            ?_i2c_Restart 0070               __end_of_ConfigureOscillator 0274  
                     WriteCommand@command 0071                           ?_I2C_Initialize 0070  
   __end_of_ConfigureOscillator_interrupt 0256    __size_of_ConfigureOscillator_interrupt 000A  
           _ConfigureOscillator_interrupt 024C                                ?i1_InitApp 0070  
                               _i2c_Start 027D                                 _i2c_Write 0260  
                     start_initialization 00C5                         __size_of_SPI_init 0017  
                               _FlushTXRX 0216                               __end_of_isr 00C3  
                           WriteAddress@i 0075                         __size_of_i2c_Read 0014  
                       __size_of_i2c_Wait 0008                         __size_of_i2c_Stop 0005  
                           ?_WriteAddress 0071                                 _nRF_Setup 00D5  
                           ?_WriteCommand 0070                             ?_SPI_transfer 0070  
                              ?_i2c_Start 0070                                ?_i2c_Write 0070  
                           ?_WritePayload 0071                           WritePayload@num 0073  
                              ?_FlushTXRX 0070                                 ___latbits 0002  
                           __pcstackBANK0 002B                          WriteAddress@addr 0072  
                           WritePayload@i 0074                                  ?_InitApp 0070  
                          ??_WriteAddress 0073                            ??_WriteCommand 0071  
                              ?_nRF_Setup 0070          __end_of_timer_setup_and_start_IE 01C8  
                          ??_SPI_transfer 0070                               ??i1_InitApp 0070  
                    __size_of_i2c_Address 0012                            ??_WritePayload 0072  
 __end_ofi1_ConfigureOscillator_interrupt 0260  __size_ofi1_ConfigureOscillator_interrupt 000A  
       ??i1_ConfigureOscillator_interrupt 0070          ?i1_ConfigureOscillator_interrupt 0070  
          ?_ConfigureOscillator_interrupt 0070           i1_ConfigureOscillator_interrupt 0256  
                    __size_of_i2c_Restart 0008                                  _LATAbits 010C  
                                _LATCbits 010E                     __end_of_WriteRegister 0234  
                                _PIE1bits 0091                                  _PIR1bits 0011  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _SSP1CON3 0217                                  _SSP1STAT 0214  
                                _SPI_init 019B                               ??_i2c_Start 0070  
                             ??_i2c_Write 0070                               ??_FlushTXRX 0073  
                      nRF_Setup@RXTX_ADDR 0079                                  _i2c_Read 01F0  
                                _i2c_Wait 028D                                  _i2c_Stop 029D  
                        ??_I2C_Initialize 0070                          __size_of_InitApp 0014  
                             ??_nRF_Setup 0077                                  __ptext10 029D  
                                __ptext11 027D                                  __ptext20 0226  
                                __ptext12 0285                                  __ptext21 0274  
                                __ptext13 01F0                                  __ptext22 0295  
                                __ptext14 0204                                  __ptext23 026A  
                                __ptext15 028D                                  __ptext16 0177  
                                __ptext17 019B                                  __ptext18 0234  
                                __ptext19 0216                              _SSP1CON2bits 0216  
                    __end_of_WriteAddress 0177                      __end_of_WriteCommand 027D  
       __size_of_timer_setup_and_start_IE 0016                             __size_of_main 000B  
               ?_timer_setup_and_start_IE 0070                      __end_of_SPI_transfer 029D  
                    __end_of_WritePayload 019B              __size_of_ConfigureOscillator 000A  
                                int$flags 007E                                  isr@F2937 0020  
                              _INTCONbits 000B                                  intlevel1 0000  
                             _MUSHROOM_ON 0029                           i2c_Address@mode 0070  
                       __CFG_CLKOUTEN$OFF 0000                                _OSCCONbits 0099  
                     __CFG_CPUDIV$CLKDIV6 0000                               _SSPCON1bits 0215  
                     i2c_Read@i2cReadData 0072           ??_ConfigureOscillator_interrupt 0034  
